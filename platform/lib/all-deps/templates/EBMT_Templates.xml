<?xml version="1.0" encoding="UTF-8"?>
<ebmtTemplates
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://ws.opencyc.org/xsd/EBMT http://ws.opencyc.org/xsd/EBMT.xml"
    xmlns="http://ws.opencyc.org/xsd/EBMT">
    <template>
        <nlPattern class="333276">$Event#0 [even|{}] [led|caused] $IntelligentAgent#1 to cancel a [planned|{}] meeting</nlPattern>
        <cyclPattern>
            (#$and (#$isa ?CANCEL #$Canceling-Declaring-Evaluating)
            (#$evaluee-Direct ?CANCEL ?PLAN)
            (#$isa ?PLAN (#$ScheduledFn #$Meeting-SocialGathering))
            (#$performedBy ?CANCEL $IntelligentAgent#1)
            (#$causes-SitSit $Event#0 ?CANCEL))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
    </template>
    <template>
        <nlPattern class="333277">the crisis at $Organization#0</nlPattern>
        <cyclPattern>
            (#$and (#$isa ?NEG #$IncurringDamage)
            (#$damages ?NEG $Organization#0))
        </cyclPattern>
        <type>#$IncurringDamage</type>
        <variable>?NEG</variable>
    </template>   
    
    <template>
        <nlPattern class="333278">economy minister $IntelligentAgent#1</nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?PERS $IntelligentAgent#1)
            (#$isa ?PERS #$MinisterOfTheEconomy))
        </cyclPattern>
        <type>#$IntelligentAgent</type>
        <variable>$IntelligentAgent#1</variable>
    </template>   
   
    <template>
        <nlPattern class="333337">$Organization#0 $Person#1</nlPattern>
        <cyclPattern>
           (#$equalSymbols ?X (#$SubcollectionOfWithRelationToFn 
            $Person#1
            #$employer     
            $Organization#0))
        </cyclPattern>
        <type>$Person#1</type>
        <variable>?X</variable>
    </template>    
    
    <template>
        <nlPattern class="333338">$GeographicalRegion#0 $Person#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X (#$SubcollectionOfWithRelationToFn 
            $Person#1
            #$residesInRegion $GeographicalRegion#0))
        </cyclPattern>
        <type>$Person#1</type>
        <variable>?X</variable>
    </template>
    
    <template>
        <nlPattern class="123010">$Organization#0 is a $Country#1 $Country#0 $Organization#3</nlPattern>
        <cyclPattern>(#$and (#$hasHeadquartersInRegion $Organization#0 $Country#0) (#$hasHeadquartersInRegion $Organization#0 $Country#1) (#$isa $Organization#0 $Organization#3))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="100">What date did $IntelligentAgent#3 open $HumanOccupationConstruct#5 ?</nlPattern>
        <cyclPattern>
            (#$thereExists ?OPENING
            (#$and
            (#$isa ?OPENING #$OpeningSomething) 
            (#$performedBy ?OPENING $IntelligentAgent#3) 
            (#$objectActedOn ?OPENING $HumanOccupationConstruct#5)
            (#$dateOfEvent ?OPENING ?WHEN)))
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="200">Who was $Person#2 's high school track coach ?</nlPattern>
        <cyclPattern>
            (#$thereExists ?HIGHSCHOOL 
            (#$thereExists ?TRACKTEAM 
            (#$and (#$isa ?HIGHSCHOOL #$HighSchool) 
            (#$isa ?TRACKTEAM #$TrackTeam) 
            (#$schoolSportsTeam ?HIGHSCHOOL ?TRACKTEAM) 
            (#$hasMembers ?TRACKTEAM $Person#2) 
            (#$hasCoach ?TRACKTEAM ?COACH))))
        </cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

     <!--template>
        <nlPattern class="201">
            [what|What|Which|which{}] 
            [is|are|{}] [the|a|{}] 
                [ingredients|ingredient|makings|fixings] 
            [in|that|on|of|{}] [a|an|{}]
                $EdibleStuff#0 
            [has|have|{}] 
            [got|put|{}]
            [inside|in it|in them|{}] ?</nlPattern>
        <cyclPattern>
         (#$relationAllExists 
           #$ingredients 
             $EdibleStuff#0 
          ?FILLING)
        </cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template-->
     <!--template>
        <nlPattern class="202">
            [What|what|which|Which|{}] [has|have|{}] [a|an|{}]
            $EdibleStuff#0 
              [has|have|{}] [got|put|{}]
             [as|for|{}] [the|a|{}] 
            [ingredients|ingredient|makings|fixings] 
            [in|inside|inside of|on|of|for|{}]
            [it|them|{}] ?</nlPattern>
        <cyclPattern>
          (#$relationAllExists 
           #$ingredients
           $EdibleStuff#0
          ?FILLING)
        </cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template-->
    <template>
        <nlPattern class="300">What is the shape of a $Animal#0 ['s|'|{}] $ExtrudedBodyPart#7 ?</nlPattern>
        <cyclPattern>
            (#$thereExists ?PORPOISE 
            (#$thereExists $ExtrudedBodyPart#7 
            (#$and 
            (#$isa ?PORPOISE $Animal#0) 
            (#$anatomicalParts ?PORPOISE $ExtrudedBodyPart#7) 
            (#$commonShape ?TOOTH ?SHAPE))))
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="400">What is the number of $Organism-Whole#5 thought to live in North America ?</nlPattern>
        <cyclPattern>(#$populationLevelOfTypeInEcosystem $Organism-Whole#5 #$ContinentOfNorthAmerica ?AMOUNT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="500">$GeographicalRegion#0 is a part of what European country ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?COUNTRY #$EuropeanCountry) (#$geographicalSubRegions ?COUNTRY $GeographicalRegion#0))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="600">What was the date of $Event#5 ?</nlPattern>
        <cyclPattern>(#$dateOfEvent $Event#5 ?WHEN)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="700">Who was $UnitedStatesPresident#2 's Secretary of State ?</nlPattern>
        <cyclPattern>
            (#$thereExists ?APPOINTMENT 
            (#$and 
            (#$positionOfPersonInOrganization ?WHO #$USStateDepartment #$USSecretaryOfState-Federal) 
            (#$isa ?APPOINTMENT #$AppointingSomeoneToAPosition) 
            (#$performedBy ?APPOINTMENT $UnitedStatesPresident#2) 
            (#$appointee ?APPOINTMENT ?WHO)))
        </cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="800">How long does it take to fly from $City#8 to $City#10 ?</nlPattern>
        <cyclPattern>
            (#$averageDurationForType-Mean 
            (#$SubcollectionOfWithRelationToFn 
            (#$SubcollectionOfWithRelationToFn #$CommercialPassengerFlight #$toLocation $City#10) 
            #$fromLocation $City#8) ?DURATION)
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="900">How many lives were lost in $TerroristAttack#6 ?</nlPattern>
        <cyclPattern>(#$deathToll $TerroristAttack#6 #$HomoSapiens ?AMOUNT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="1000">What is $GeographicalRegion#2 's population ?</nlPattern>
        <cyclPattern>(#$numberOfInhabitants $GeographicalRegion#2 ?AMOUNT)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="1100">What is the population of $GeographicalRegion#2 ?</nlPattern>
        <cyclPattern>(#$numberOfInhabitants $GeographicalRegion#2 ?AMOUNT)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="1200">What is $IndependentCountry#5 's population ?</nlPattern>
        <cyclPattern>(#$numberOfInhabitants $IndependentCountry#5 ?AMOUNT)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="1300">What is the population of $IndependentCountry#5 ?</nlPattern>
        <cyclPattern>(#$numberOfInhabitants $IndependentCountry#5 ?AMOUNT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="1400">What is $City#5 's population ?</nlPattern>
        <cyclPattern>(#$numberOfInhabitants $City#5 ?AMOUNT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="1500">What is the population of $City#5 ?</nlPattern>
        <cyclPattern>(#$numberOfInhabitants $City#5 ?AMOUNT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="1600">How long does it take to travel from $City#8 to $City#10 by car ?</nlPattern>
        <cyclPattern>(#$averageDurationForType-Mean (#$SubcollectionOfWithRelationToFn 
            (#$SubcollectionOfWithRelationToFn (#$TransportViaFn #$Car) #$toLocation $City#10) #$fromLocation $City#8) ?DURATION)
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="1700">Who created $DevisedPracticeOrWork#2 ?</nlPattern>
        <cyclPattern>(#$creatorOfCW ?WHO $DevisedPracticeOrWork#2)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="1900">What is $Person#2 's middle name ?</nlPattern>
        <cyclPattern>(#$middleName $Person#2 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2000">What is the capital of $GeopoliticalEntity#5 ?</nlPattern>
        <cyclPattern>(#$capitalCity $GeopoliticalEntity#5 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    
    <template>
        <nlPattern class="2100">What is the capital of $State-UnitedStates#5 ?</nlPattern>
        <cyclPattern>(#$capitalCity $State-UnitedStates#5 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2200">What is the capital of $IndependentCountry#5 ?</nlPattern>
        <cyclPattern>(#$capitalCity $IndependentCountry#5 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2300">How tall is $Monument#3 ?</nlPattern>
        <cyclPattern>(#$heightOfObject $Monument#3 ?HEIGHT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2400">What companies produce $ProductType#3 ?</nlPattern>
        <cyclPattern>(#$makesProductType ?COMPANY $ProductType#3)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2500">What is the date of the official opening of $FixedStructure#0 ?</nlPattern>
        <cyclPattern>
            (#$thereExists ?OPENING 
            (#$and 
            (#$isa ?OPENING #$OpeningAFacility) 
            (#$objectActedOn ?OPENING $FixedStructure#0) 
            (#$dateOfEvent ?OPENING ?WHEN)))
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2600">How tall is $Building#3 ? </nlPattern>
        <cyclPattern>(#$heightOfObject $Building#3 ?HEIGHT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2700">How far is $City#3 from $City#5 ?</nlPattern>
        <cyclPattern>(#$distanceBetween (#$TerritoryFn $City#3) (#$TerritoryFn $City#5) ?DISTANCE)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2800">What is the infant mortality rate of $IndependentCountry#6 ?</nlPattern>
        <cyclPattern>(#$infantMortalityRate $IndependentCountry#6 ?RATE)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="2900">What languages are spoken in $Country#5 ?</nlPattern>
        <cyclPattern>(#$languagesSpokenHere $Country#5 ?LANGUAGE)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3000">What monarchies exist in $Continent#4 ?</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?COUNTRY #$Monarchy) 
            (#$properGeographicalSubRegions $Continent#4 ?COUNTRY))
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3100">What countries in $InternationalOrganizationOfCountries#4 are monarchies ?</nlPattern>
        <cyclPattern>(#$and (#$internationalOrganizationMemberCountries $InternationalOrganizationOfCountries#4 ?COUNTRY) (#$isa ?COUNTRY #$Monarchy))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3200">In what year was $LegalCorporation#4 founded ?</nlPattern>
        <cyclPattern>(#$foundingDate $LegalCorporation#4 ?WHEN)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3300">What countries does $Country#3 border on ?</nlPattern>
        <cyclPattern>(#$bordersOn (#$TerritoryFn $Country#3) (#$TerritoryFn ?COUNTRY))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3400">What bands play $MusicalComposition-Rock#3 ?</nlPattern>
        <cyclPattern>(#$styleOfArtist ?BAND $MusicalComposition-Rock#3)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3500">Who is the president of $Country#5 ?</nlPattern>
        <cyclPattern>(#$president $Country#5 ?WHO)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3600">What is the highest point in $Country#6 ?</nlPattern>
        <cyclPattern>(#$highestPointInRegion (#$TerritoryFn $Country#6) ?HIGHEST)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3700">Who explored $Mountain#2 ?</nlPattern>
        <cyclPattern>(#$exploredBy $Mountain#2 ?WHO)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3800">What state is $USCity#3 in ?</nlPattern>
        <cyclPattern>(#$cityInState $USCity#3 ?STATE)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="3900">What country is $State-Geopolitical#3 in ?</nlPattern>
        <cyclPattern>(#$nationOfState ?NATION $State-Geopolitical#3)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4000">Where did $Person#2 die ?</nlPattern>
        <cyclPattern>(#$placeOfDeath $Person#2 ?WHERE)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4100">Where was $Person#2 born ?</nlPattern>
        <cyclPattern>(#$birthPlace $Person#2 ?WHERE)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4200">How high is $Mountain#3 ?</nlPattern>
        <cyclPattern>(#$altitudeOfHighestPointInRegion $Mountain#3 ?HEIGHT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4300">What $CommercialServiceOrganization#1 are located in which cities ?</nlPattern>
        <cyclPattern>(#$and (#$isa  ?ORG $CommercialServiceOrganization#1) (#$orgPresentInCity ?ORG ?CITY))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4400">What $ServiceEstablishment#1 are located in which cities ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?ORG $ServiceEstablishment#1) (#$orgPresentInCity ?ORG ?CITY))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4500">What $CommercialServiceOrganization#1 are located in $City#5 ?</nlPattern>
        <cyclPattern>(#$and (#$isa  ?ORG $CommercialServiceOrganization#1) (#$orgPresentInCity ?ORG $City#5))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4600">What $ServiceEstablishment#1 are located in $City#5 ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?ORG $ServiceEstablishment#1) (#$orgPresentInCity ?ORG $City#5))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4700">What $ServiceEstablishment#1 are located in $USCity#5 ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?ORG $ServiceEstablishment#1) (#$orgPresentInCity ?ORG $USCity#5))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4800">What $ServiceOrganization#1 are in $City#4 ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?ORG $ServiceOrganization#1) (#$orgPresentInCity ?ORG $City#4))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="4900">What $MediaOrganization#1 are in $City#4 ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?ORG $MediaOrganization#1) (#$orgPresentInCity ?ORG $City#4))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5000">What companies has $PubliclyHeldCorporation#3 acquired ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$Business)(#$cmuRTW-Acquired  $PubliclyHeldCorporation#3 ?X))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5100">What companies have been acquired by $PubliclyHeldCorporation#6</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$Business) (#$cmuRTW-Acquired  $PubliclyHeldCorporation#6 ?X))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5200">What team does $HumanAdult#3 play for ?</nlPattern>
        <cyclPattern>(#$sportsTeamPlayers ?TEAM $HumanAdult#3)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5300">Who does $HumanAdult#2 play for ?</nlPattern>
        <cyclPattern>(#$sportsTeamPlayers ?TEAM $HumanAdult#2)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5400">Whom does $HumanAdult#2 play for ?</nlPattern>
        <cyclPattern>(#$sportsTeamPlayers ?TEAM $HumanAdult#2)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5500">What team does $FamousHuman#3 play for ?</nlPattern>
        <cyclPattern>(#$sportsTeamPlayers ?TEAM $FamousHuman#3)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5600">Who does $FamousHuman#2 play for ?</nlPattern>
        <cyclPattern>(#$sportsTeamPlayers ?TEAM $FamousHuman#2)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5700">Whom does $FamousHuman#2 play for ?</nlPattern>
        <cyclPattern>(#$sportsTeamPlayers ?TEAM $FamousHuman#2)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5800">Who plays for $ProfessionalSportsTeam#3 ?</nlPattern>
        <cyclPattern>(#$sportsTeamPlayers $ProfessionalSportsTeam#3  ?PLAYER)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="5900">Where is the headquarters of $Organization#5 ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?PLACE #$City)(#$hasHeadquartersInRegion $Organization#5 ?PLACE))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="6000">Where are the headquarters of $Organization#5 ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?PLACE #$City)(#$hasHeadquartersInRegion $Organization#5 ?PLACE))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="6100">Where does $LegalCorporation#2 have offices ?</nlPattern>
        <cyclPattern>(#$orgPresentInCity $LegalCorporation#2 ?PLACE)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
 <!-- <template>
    <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
    <nlPattern class="6200">Can $SolidTangibleThing#1 fly ?</nlPattern>
    <cyclPattern>(sentenceTruth   (typeBehaviorCapable-PerformedBy  $SolidTangibleThing#1 Locomotion-Air) ?T)</cyclPattern>
    <inferenceMode type=":MINIMAL"/>
  </template> -->
    <template>
        <nlPattern class="6200">Can $TerrestrialOrganism#1 fly ?</nlPattern>
        <cyclPattern>(#$sentenceTruth   (#$typeBehaviorCapable-PerformedBy  $TerrestrialOrganism#1 #$Locomotion-Air) ?T)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="6400">Can a $Bird#2 fly ?</nlPattern>
        <cyclPattern>(#$sentenceTruth   (#$typeBehaviorCapable-PerformedBy  $Bird#2 #$Locomotion-Air) ?T)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="6500">Where is $City#2 ?</nlPattern>
        <cyclPattern> (#$and (#$or (#$isa  ?WHERE #$Country) (#$isa  ?WHERE #$State-Geopolitical)) (#$objectFoundInLocation $City#2 ?WHERE))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="6500">Where is $USCity#2 ?</nlPattern>
        <cyclPattern> (#$and (#$isa  ?WHERE #$State-Geopolitical) (#$objectFoundInLocation $USCity#2 ?WHERE))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="6700">Where is $Country#2 ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?WHERE #$LandMass) (#$objectFoundInLocation $Country#2 ?WHERE))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="6700">Where is $IndependentCountry#2 ?</nlPattern>
        <cyclPattern>(#$and (#$isa ?WHERE #$LandMass) (#$objectFoundInLocation $IndependentCountry#2 ?WHERE))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="6900">Where is $CelestialBody#2 ?</nlPattern>
        <cyclPattern>(#$objectFoundInLocation $CelestialBody#2 ?WHERE)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="7000">Who plays in $PopularMusicBand#3 ?</nlPattern>
        <cyclPattern>(#$hasMembers $PopularMusicBand#3 ?WHO) </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="7100">Who is in $PopularMusicBand#3 ?</nlPattern>
        <cyclPattern>(#$hasMembers $PopularMusicBand#3 ?WHO) </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="7200">Who was in $PopularMusicBand#3 ?</nlPattern>
        <cyclPattern>(#$hasMembers $PopularMusicBand#3 ?WHO) </cyclPattern>
        <microTheory>(#$MtSpace #$EnglishSpeakingCultureMt #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="7300">What kind of music does $PopularMusicBand#5 play ?</nlPattern>
        <cyclPattern>(#$styleOfArtist $PopularMusicBand#5 ?STYLE)</cyclPattern>
        <microTheory>(#$MtSpace #$EnglishSpeakingCultureMt #$AnytimePSC)</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="7400">What style of music does $PopularMusicBand#5 play ?</nlPattern>
        <cyclPattern>(#$styleOfArtist $PopularMusicBand#5 ?STYLE)</cyclPattern>
        <microTheory>(#$MtSpace #$EnglishSpeakingCultureMt #$AnytimePSC)</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="7500">What does $PopularMusicBand#2 play ?</nlPattern>
        <cyclPattern>(#$styleOfArtist $PopularMusicBand#2 ?STYLE)</cyclPattern>
        <microTheory>(#$MtSpace #$EnglishSpeakingCultureMt #$AnytimePSC)</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="7600">What band is $PopularMusicStar#3 in ?</nlPattern>
        <cyclPattern>(#$hasMembers ?BAND $PopularMusicStar#3) </cyclPattern>
        <microTheory>(#$MtSpace #$EnglishSpeakingCultureMt #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="7700">What band was $PopularMusicStar#3 in ?</nlPattern>
        <cyclPattern>(#$hasMembers ?BAND $PopularMusicStar#3) </cyclPattern>
        <microTheory>(#$MtSpace #$EnglishSpeakingCultureMt #$AnytimePSC)</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="7800">What band does $PopularMusicStar#3 play in ?</nlPattern>
        <cyclPattern>(#$hasMembers ?BAND $PopularMusicStar#3) </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="7900">What band did $PopularMusicStar#3 play in ?</nlPattern>
        <cyclPattern>(#$hasMembers ?BAND $PopularMusicStar#3) </cyclPattern>
        <microTheory>(#$MtSpace #$EnglishSpeakingCultureMt #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8000">What kind of music does $MusicalPerformer#5 play ?</nlPattern>
        <cyclPattern>(#$styleOfArtist $MusicalPerformer#5 ?STYLE)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8100">What is the molecular mass of $InanimateObject#6 ?</nlPattern>
        <cyclPattern>(#$molecularWeight $InanimateObject#6 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8200">What is the molecular weight of $InanimateObject#6 ?</nlPattern>
        <cyclPattern>(#$molecularWeight $InanimateObject#6 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8300">What is the atomic number of $InanimateObject#5 ?</nlPattern>
        <cyclPattern>(#$atomicNumber $InanimateObject#5 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8400">What is the atomic weight of $InanimateObject#6 ?</nlPattern>
        <cyclPattern>(#$atomicWeight $InanimateObject#6 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8500">What is the atomic mass of $InanimateObject#6 ?</nlPattern>
        <cyclPattern>(#$atomicWeight $InanimateObject#6 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8300">What is the atomic number of $NonMetal#5 ?</nlPattern>
        <cyclPattern>(#$atomicNumber $NonMetal#5 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8400">What is the atomic weight of $NonMetal#6 ?</nlPattern>
        <cyclPattern>(#$atomicWeight $NonMetal#6 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8500">What is the atomic mass of $NonMetal#6 ?</nlPattern>
        <cyclPattern>(#$atomicWeight $NonMetal#6 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8300">What is the atomic number of $UnalloyedMetal#5 ?</nlPattern>
        <cyclPattern>(#$atomicNumber $UnalloyedMetal#5 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8400">What is the atomic weight of $UnalloyedMetal#6 ?</nlPattern>
        <cyclPattern>(#$atomicWeight $UnalloyedMetal#6 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8500">What is the atomic mass of $UnalloyedMetal#6 ?</nlPattern>
        <cyclPattern>(#$atomicWeight $UnalloyedMetal#6 ?WHAT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="8500">The atomic weight of $UnalloyedMetal#0 is $PositiveNumber#12 .</nlPattern>
        <cyclPattern>(#$atomicWeight $UnalloyedMetal#0 (#$AtomicMassUnit $PositiveNumber#12))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
   
    <template>
        <examples>
            <example> What are the stages of the cell cycle?</example>
        </examples>
        <nlPattern class="9300">
            What are [the|{}] [steps|phases|stages|events] 
            [in|of|comprising|constituting|that comprise] 
            [the|a|an|{}] $BiologicalProcess-CellularLevel#5 
            [?|{}]
        </nlPattern>
        <cyclPattern>
            (#$thereExists ?STAGES (#$and 
               (#$coveringOfEventType $BiologicalProcess-CellularLevel#5 ?STAGES)
               (#$memberOfList ?STAGE ?STAGES)))
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
   
   
   <!-- Company Stuff -->
    <template>
        <nlPattern class="10400">[Who|Whom|who|whom] [has|have|did] $PubliclyHeldCorporation#2 [sued|sue] [recently|{}] [?|{}]</nlPattern>
        <cyclPattern>(#$thereExists ?X (#$and  (#$isa ?X #$Lawsuit) (#$plaintiffs ?X $PubliclyHeldCorporation#2) (#$defendants ?X ?DEF)))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
   
    <template>
        <nlPattern class="11200">[Who|who] is [the|{}] CEO [of|for|at|in] $LegalCorporation#5 [?|{}]</nlPattern>
        <cyclPattern>(#$companyHasCEO $LegalCorporation#5 ?WHO)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    
    <template>
        <nlPattern class="11500">[Who|who]  is [the|{}] CFO [of|for|at|in] $LegalCorporation#4 [?|{}]</nlPattern>
        <cyclPattern>(#$companyHasCFO $LegalCorporation#4 ?WHO)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="11600">[Who|who] is [the|{}] C0O [of|for|at|in] $LegalCorporation#5 [?|{}]</nlPattern>
        <cyclPattern>(#$companyHasCOO $LegalCorporation#5 ?WHO)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="11800">
            [What|what|which|Which] [product|products|goods|things|{}]
            does $LegalCorporation#2 [manufacture|make|produce] [?|{}]
        </nlPattern>
        <cyclPattern>(#$makesProductType $LegalCorporation#2 ?PRODUCT)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    
    
    <template>
        <nlPattern class="13000">What are the reported assets for $PubliclyHeldCorporation#6 for the last four quarters ?</nlPattern>
        <cyclPattern>(#$edgarValueForPeriodEnding $PubliclyHeldCorporation#6 #$FiscalQuarter ?DATE #$EDGARConcept-Assets ?REPORTEDASSETS)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="13100">What are the reported assets for $PubliclyHeldCorporation#6 , Inc. for the last four quarters ?</nlPattern>
        <cyclPattern>(#$edgarValueForPeriodEnding $PubliclyHeldCorporation#6 #$FiscalQuarter ?DATE #$EDGARConcept-Assets ?REPORTEDASSETS)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="13200">What was the net income for $PubliclyHeldCorporation#5 for the last four quarters ?</nlPattern>
        <cyclPattern>(#$edgarValueForPeriodEnding $PubliclyHeldCorporation#5 #$FiscalQuarter ?DATE #$EDGARConcept-NetIncome ?NETINCOME)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="13300">What is the net income for $PubliclyHeldCorporation#5 for the last four quarters ?</nlPattern>
        <cyclPattern>(#$edgarValueForPeriodEnding $PubliclyHeldCorporation#5 #$FiscalQuarter ?DATE #$EDGARConcept-NetIncom ?NETINCOME)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="13400">What was the net income for $PubliclyHeldCorporation#5 , Inc. for the last four quarters ?</nlPattern>
        <cyclPattern>(#$edgarValueForPeriodEnding $PubliclyHeldCorporation#5 #$FiscalQuarter ?DATE #$EDGARConcept-NetIncom ?NETINCOME)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="13500">What is the net income for $PubliclyHeldCorporation#5 , Inc. for the last four quarters ?</nlPattern>
        <cyclPattern>(#$edgarValueForPeriodEnding $PubliclyHeldCorporation#5 #$FiscalQuarter ?DATE #$EDGARConcept-NetIncom ?NETINCOME)</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="13600">What media organizations might reach $PubliclyHeldCorporation#5 executives ?</nlPattern>
        <cyclPattern>(#$implies (#$executives $PubliclyHeldCorporation#5 ?PERS)
            (#$candidateAudienceMemberForMediaOrganization ?MEDIA-ORG ?PERS))
        </cyclPattern>
        <microTheory>(#$MtSpace #$MachineReadingQueryMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MR_SKSI_QUERY_PARAMS_3"/>
    </template>
    <template>
        <nlPattern class="13600">What media organizations might reach $USFederalGovernmentAgency#5 executives ?</nlPattern>
        <cyclPattern>(#$implies (#$executives $USFederalGovernmentAgency#5 ?PERS)
            (#$candidateAudienceMemberForMediaOrganization ?MEDIA-ORG ?PERS))
        </cyclPattern>
        <microTheory>(#$MtSpace #$MachineReadingQueryMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MR_SKSI_QUERY_PARAMS_3"/>
    </template>
    <template>
        <nlPattern class="13600">What media organizations might reach $PublicSectorSpaceAgency#5 executives ?</nlPattern>
        <cyclPattern>(#$implies               (#$executives $PublicSectorSpaceAgency#5 ?PERS)
            (#$candidateAudienceMemberForMediaOrganization ?MEDIA-ORG ?PERS))
        </cyclPattern>
        <microTheory>(#$MtSpace #$MachineReadingQueryMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MR_SKSI_QUERY_PARAMS_3"/>
    </template>
    <template>
        <nlPattern class="13700">What media organizations might reach $PublicSectorSpaceAgency#5 executives ?</nlPattern>
        <cyclPattern>(#$implies (#$and (#$isa ?ORG $PublicSectorSpaceAgency#5) (#$executives ?ORG ?PERS))
            (#$candidateAudienceMemberForMediaOrganization ?MEDIA-ORG ?PERS))
        </cyclPattern>
        <microTheory>(#$MtSpace #$MachineReadingQueryMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MR_SKSI_QUERY_PARAMS_3"/>
    </template>
    
     
    <!--template>
        <examples>
            <example>
                What shot has skateboards in it?
            </example>
        </examples>
        <nlPattern class="8110011">
           [What|Which] 
                [video|videos|film|{}] 
                [clip|shot|recording|clips|shots|recordings|video|videos|film|films]
                [are|are there|is|is there|{}]
                [which|that|{}]
                [having|showing|show|have|shows|has|with] 
                [a|an|some|{}] $PartiallyTangible#0 
                [shown|appearing|appear|{}] 
                [in|on|{}] [them|it|{}]
               ?
               </nlPattern>
        <cyclPattern>
         (#$visuallyDepicts-Type-Precise
           ?SHOT $PartiallyTangible#0 
           )
        </cyclPattern>
        <microTheory>#$MultiMediaAnalysisQueryMt</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template-->

  <!-- general declarative examples -->
    <template>
        <nlPattern class="810000">$SolidTangibleThing#0 is [a|an] [kind|type|{}] [of|{}] $SolidTangibleThing#1</nlPattern>
        <cyclPattern>(#$genls $SolidTangibleThing#0 $SolidTangibleThing#1)</cyclPattern>
        <microTheory>(#$MtSpace #$BaseKB (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>  
    <template>
        <nlPattern class="810000">$SolidTangibleThing#0 is [a|an] $SolidTangibleThing#1</nlPattern>
        <cyclPattern>(#$isa $SolidTangibleThing#0 $SolidTangibleThing#1)</cyclPattern>
        <microTheory>(#$MtSpace #$BaseKB (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>    
   
    <template>
        <nlPattern class="810001">The $SolidTangibleThing#0 is [a|an] $SolidTangibleThing#1</nlPattern>
        <cyclPattern>(#$genls $SolidTangibleThing#0 $SolidTangibleThing#1)</cyclPattern>
        <microTheory>(#$MtSpace #$BaseKB (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="810000">$SolidTangibleThing#0 in $Place#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$SubcollectionOfWithRelationToFn $SolidTangibleThing#0 #$objectFoundInLocation $Place#1))</cyclPattern>
        <type>$SolidTangibleThing#0</type>
        <variable>?X</variable>
        <microTheory>(#$MtSpace #$BaseKB (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template> 
    <template>
        <nlPattern class="81100">$SolidTangibleThing#1 being developed by $Agent-Generic#1</nlPattern>
        <cyclPattern>
            (#$and
            (#$genls ?X $SolidTangibleThing#1)
            (#$forAll ?SPEC
            (#$and (#$genls ?SPEC ?X)
            (#$thereExists ?DEVEL
            (#$and
            (#$isa ?DEVEL #$DevelopingAProduct)
            (#$objectTypeDeveloped ?DEVEL ?SPEC)
            (#$doneBy ?DEVEL $Agent-Generic#1))))))
        </cyclPattern>
        <type>$SolidTangibleThing#1</type>
        <variable>?X</variable>
        <microTheory>(#$MtSpace #$BaseKB (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="110000">$AirlineCompany#0 which is $AirlineCompany#3 's largest rival</nlPattern>
        <cyclPattern>(#$competitors $AirlineCompany#0 $AirlineCompany#3)</cyclPattern>
        <microTheory>(#$MtSpace #$OrganizationDataMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110001">$AirlineCompany#0 , which is $AirlineCompany#4 's largest rival</nlPattern>
        <cyclPattern>(#$competitors $AirlineCompany#0 $AirlineCompany#4)</cyclPattern>
        <microTheory>(#$MtSpace #$OrganizationDataMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110010">$PubliclyHeldCorporation#0 competes with $PubliclyHeldCorporation#3</nlPattern>
        <cyclPattern>(#$competitors $PubliclyHeldCorporation#0 $PubliclyHeldCorporation#3)</cyclPattern>
        <microTheory>(#$MtSpace #$OrganizationDataMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110020">$USFederalGovernmentAgency#0 charges $PubliclyHeldCorporation#2 with fraud</nlPattern>
        <cyclPattern>(#$thereExists ?ACT (#$and (#$isa ?ACT #$MakingACriminalCharge)(#$accused ?ACT $PubliclyHeldCorporation#2) (#$senderOfInfo ?ACT $USFederalGovernmentAgency#0)(#$accusedOfPerformingActionType ?ACT #$Fraud)))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110020">$USFederalGovernmentAgency#0 charges $LegalCorporation#2 with fraud</nlPattern>
        <cyclPattern>(#$thereExists ?ACT (#$and (#$isa ?ACT #$Accusing)(#$accused ?ACT $LegalCorporation#2)(#$senderOfInfo ?ACT $USFederalGovernmentAgency#0)(#$accusedOfPerformingActionType ?ACT #$Fraud)))</cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="110030">$FamousHuman#0 is [a|an] $IntelligentAgent#1</nlPattern>
        <cyclPattern>(#$isa $FamousHuman#0 $IntelligentAgent#1)</cyclPattern>
        <microTheory>(#$MtSpace #$PeopleDataMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="110040">$FamousHuman#0 works [for|at|in] $LegalCorporation#3 , in $USCity#6</nlPattern>
        <cyclPattern>(#$and (#$employees $LegalCorporation#3 $FamousHuman#0) (#$thereExists ?PLACE (#$and (#$worksAtFacility $FamousHuman#0 ?PLACE)(#$operatesFacilities $LegalCorporation#3 ?PLACE)  (#$objectFoundInLocation ?PLACE $USCity#6))))</cyclPattern>
        <microTheory>(#$MtSpace #$PeopleDataMt (#$MtTimeDimFn #$Now))</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="110100">$GeopoliticalEntity#0 is a predominantly Catholic $GeopoliticalEntity#4</nlPattern>
        <cyclPattern>
            (#$and 
            (#$majorReligions $GeopoliticalEntity#0 #$Catholicism) 
            (#$isa $GeopoliticalEntity#0 $GeopoliticalEntity#4))
        </cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110200">$GeographicalRegion#0 is a national hub for $Event#5</nlPattern>
        <cyclPattern>(#$frequentEventTypeAtLocationType $GeographicalRegion#0 $Event#5)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110300">$PopularMusicBand#0 is an American $Band-MusicGroup#4</nlPattern>
        <cyclPattern>(#$isa $PopularMusicBand#0 $Band-MusicGroup#4)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110400">$HomoSapiens#0 is [a|an] $Person#3 $Entertainer#4</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $Person#3) (#$isa $HomoSapiens#0 $Entertainer#4))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110400">$HomoSapiens#0 is [a|an] $Person#3 $Artist#4</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $Person#3) (#$isa $HomoSapiens#0 $Artist#4))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110500">What does $GeopoliticalEntity#2 export ?</nlPattern>
        <cyclPattern>(#$exports $GeopoliticalEntity#2 ?EXPORT)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110500">What are the exports [of|from] $GeopoliticalEntity#5 ?</nlPattern>
        <cyclPattern>(#$exports $GeopoliticalEntity#5 ?EXPORT)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110600">$HomoSapiens#0 is [a|an] $PersonWithNationality#3 $Person#4</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $PersonWithNationality#3) (#$isa $HomoSapiens#0 $Person#4))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110600">$HomoSapiens#0 is [a|an] $Person#3 $Person#4</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $Person#2) (#$isa $HomoSapiens#0 $Person#3))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110500">$Person#0 served as $PublicOfficial#3 [of|for] $GeopoliticalEntity#5</nlPattern>
        <cyclPattern>(#$and (#$isa $Person#0 $PublicOfficial#3) ((#$orgPositionSlotFn $PublicOfficial#3) $Person#0 $GeopoliticalEntity#5))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110700">$HomoSapiens#0 [was|is] [a|an] $Person#3 $Person#4 and $Person#6</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $Person#3) (#$isa $HomoSapiens#0 $Person#4) (#$isa $HomoSapiens#0 $Person#6))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110700">$HomoSapiens#0 [was|is] [a|an] $PersonWithNationality#3 $Person#4 and $Person#6</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $PersonWithNationality#3) (#$isa $HomoSapiens#0 $Person#4) (#$isa $HomoSapiens#0 $Person#6))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110700">$HomoSapiens#0 [was|is] [a|an] $PersonWithNationality#3 $Person#4 and $Person#6</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $PersonWithNationality#3) (#$isa $HomoSapiens#0 $Person#4) (#$isa $HomoSapiens#0 $Person#6))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110700">$HomoSapiens#0 [was|is] [a|an] $PersonWithNationality#3 $Person#4 and $Person#6</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $PersonWithNationality#3) (#$isa $HomoSapiens#0 $Person#4) (#$isa $HomoSapiens#0 $Person#6))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110800">$HomoSapiens#0 [was|is] [a|an] $Person#3 $Person#4 , $Person#6 and $Person#8</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $Person#3) (#$isa $HomoSapiens#0 $Person#4) (#$isa $HomoSapiens#0 $Person#6) (#$isa $HomoSapiens#0 $Person#8))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110800">$HomoSapiens#0 [was|is] [a|an] $Person#3 $Person#4 , $Person#6</nlPattern>
        <cyclPattern>(#$and (#$isa $HomoSapiens#0 $Person#3) (#$isa $HomoSapiens#0 $Person#4) (#$isa $HomoSapiens#0 $Person#6))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110900">$Person#0 was born in $NonNegativeInteger#4</nlPattern>
        <cyclPattern>(#$birthDate $Person#0 (#$YearFn $NonNegativeInteger#4))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110900">$Person#0 was born [on|{}] $Date#12</nlPattern>
        <cyclPattern>(#$birthDate $Person#0 $Date#12)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110900">$FamousHuman#0 was born [on|{}] $Date#12</nlPattern>
        <cyclPattern>(#$birthDate $FamousHuman#0 $Date#12)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110900">$HomoSapiens#0 ( born $GregorianMonth#3 $NonNegativeInteger#4 , $NonNegativeInteger#6 )</nlPattern>
        <cyclPattern>(#$birthDate $HomoSapiens#0 (#$DayFn $NonNegativeInteger#4 (#$MonthFn $GregorianMonth#3 (#$YearFn $NonNegativeInteger#6))))</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110910">$IntelligentAgent#0 believes $Individual#1</nlPattern>
        <cyclPattern>(#$beliefs $IntelligentAgent#0 $Individual#1)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110910">$IntelligentAgent#0 thinks $CycLSentence-Assertible#1</nlPattern>
        <cyclPattern>(#$beliefs $IntelligentAgent#0 $CycLSentence-Assertible#1)</cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    
    <template>
        <nlPattern class="110921">$Person#0 's family</nlPattern>
        <cyclPattern>
                (#$equalSymbols ?FAM 
                  (#$SubcollectionOfWithRelationToFn #$Family-Nuclear #$familyHasMember $Person#0))
        </cyclPattern>
        <type>#$Family-Nuclear</type>
             <variable>?FAM</variable>
    </template>
    <template>
        <nlPattern class="110921">[his|His] family</nlPattern>
        <anaphoricReference>$MaleHuman#0</anaphoricReference>
        <cyclPattern>(#$and 
                       (#$isa ?X #$Family-Nuclear)
                       (#$familyHasMember ?X $MaleHuman#0))
        </cyclPattern>
        <type>#$Family-Nuclear</type>
        <variable>?X</variable>
    </template>
    <template>
        <nlPattern class="110921">[Her|her] family</nlPattern>
        <anaphoricReference>$FemaleHuman#0</anaphoricReference>
        <cyclPattern>(#$and 
                       (#$isa ?X #$Family-Nuclear)(#$familyHasMember ?X $FemaleHuman#0))
        </cyclPattern>
        <type>#$Family-Nuclear</type>
        <variable>?X</variable>
    </template>
    <template>
        <nlPattern class="110922">They [weren't|were not|were never|have never been] a $Group#1</nlPattern>
        <anaphoricReference>$Group#0</anaphoricReference>
        <cyclPattern>(#$not (#$genls $Group#0 $Group#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
      <template>
        <nlPattern class="110922">$Group#0 [weren't|were not|were never|have never been] a $Group#1</nlPattern>
        <cyclPattern>(#$not (#$genls $Group#0 $Group#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
      <template>
        <nlPattern class="110920">$Family-Human#0 [were|is|are|was] $ReligiousPerson#1</nlPattern>
        <cyclPattern>(#$implies (#$familyHasMember  $Family-Human#0 ?MEM)(#$isa ?MEM $ReligiousPerson#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110920">$Person#0 's family were $ReligiousPerson#1</nlPattern>
        <cyclPattern>(#$implies (#$nuclearFamilyMembers $Person#0 ?MEM)(#$isa ?MEM $ReligiousPerson#1))</cyclPattern>
       <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110920">$Person#0 's family were $PersonTypeByCulture#1</nlPattern>
        <cyclPattern>(#$implies (#$nuclearFamilyMembers $Person#0 ?MEM)(#$isa ?MEM $PersonTypeByCulture#1))</cyclPattern>
       <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110920">$Person#0 's family were $PersonTypeByEthnicity#1</nlPattern>
        <cyclPattern>(#$implies (#$nuclearFamilyMembers $Person#0 ?MEM)(#$ethnicity ?MEM $PersonTypeByEthnicity#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
       <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110920">$Person#0 's family were $BeliefSystem#1</nlPattern>
        <cyclPattern>(#$implies (#$nuclearFamilyMembers $Person#0 ?MEM)(#$hasBeliefSystems ?MEM $BeliefSystem#1))</cyclPattern>
         <type>#$CycLSentence-Assertible</type>
      <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110930">$Person#0 died on $Date#1</nlPattern>
        <cyclPattern>(#$dateOfDeath $Person#0 $Date#1)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110940">$Person#0 died in $Date#1</nlPattern>
        <cyclPattern>(#$dateOfDeath $Person#0 $Date#1)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110940">$Person#0 died in $Date#1 in $GeographicalRegion#2</nlPattern>
        <cyclPattern>(#$and (#$dateOfDeath $Person#0 $Date#1)(#$placeOfDeath $Person#0 $GeographicalRegion#2))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="110941">
            [a|an|A|An]
            [$PositiveInteger#1 year old $Animal#0|$Animal#0 aged $PositiveInteger#1]
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?WHO
            (#$SubcollectionOfWithRelationToFn 
            $Animal#0
            #$age (#$YearsDuration $PositiveInteger#1)))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?WHO</variable>
    </template>
 
    <template>
        <nlPattern class="112000">$CalendarMonth#0 $PositiveInteger#1 , $PositiveInteger#2</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$DayFn $PositiveInteger#1 (#$MonthFn $CalendarMonth#0 (#$YearFn $PositiveInteger#2))))</cyclPattern>
        <type>#$Date</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="112000">$PositiveInteger#1 $CalendarMonth#2  $PositiveInteger#3</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$DayFn $PositiveInteger#1 (#$MonthFn $CalendarMonth#2 (#$YearFn $PositiveInteger#3))))</cyclPattern>
        <type>#$Date</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="11253100">$PositiveInteger#1 $CalendarMonth#2  $PositiveInteger#3</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$DayFn $PositiveInteger#3 (#$MonthFn $CalendarMonth#2 (#$YearFn $PositiveInteger#1))))</cyclPattern>
        <type>#$Date</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="112000">$CalendarMonth#0 $PositiveInteger#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$DayFn $PositiveInteger#1 (#$MonthFn $CalendarMonth#0 #$TheYear-Indexical))) </cyclPattern>
        <type>#$Date</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="112000">$CalendarMonth#0 of $PositiveInteger#2</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$MonthFn $CalendarMonth#0 (#$YearFn $PositiveInteger#2)))</cyclPattern>
        <type>#$Date</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="112000">$CalendarMonth#0 $PositiveInteger#1 $PositiveInteger#2</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$DayFn $PositiveInteger#1 (#$MonthFn $CalendarMonth#0 (#$YearFn $PositiveInteger#2))))</cyclPattern>
        <type>#$Date</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template> 
    <template>
        <nlPattern class="113000">$GeopoliticalEntity#0 , in the west of $Country#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?REGION $GeopoliticalEntity#0)(#$objectFoundInLocation $GeopoliticalEntity#0 (#$WesternRegionFn $Country#1)))</cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113000">$GeopoliticalEntity#0 , in the north of $Country#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?REGION $GeopoliticalEntity#0)(#$objectFoundInLocation $GeopoliticalEntity#0 (#$NorthernRegionFn $Country#1)))</cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113000">$GeopoliticalEntity#0 , in the south of $Country#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?REGION $GeopoliticalEntity#0)(#$objectFoundInLocation $GeopoliticalEntity#0 (#$SouthernRegionFn $Country#1)))</cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113000">$GeopoliticalEntity#0 , in the east of $Country#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?REGION $GeopoliticalEntity#0)(#$objectFoundInLocation $GeopoliticalEntity#0 (#$EasternRegionFn $Country#1)))</cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113000">$GeographicalRegion#0 [,|{}] [with a population of|whose population is|population] [,|{}] $NonNegativeInteger#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?REGION $GeographicalRegion#0)(#$numberOfInhabitants $GeographicalRegion#0 $NonNegativeInteger#1))</cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113100">[the|{}] $GeographicalRegion#0 region of $GeographicalRegion#1</nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?REGION $GeographicalRegion#0)
            (#$properGeographicalSubRegions $GeographicalRegion#1 $GeographicalRegion#0)) 
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113110">$GeographicalRegion#0 $GeographicalRegion#1 of $GeographicalRegion#2</nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?REGION $GeographicalRegion#0)
            (#$isa ?REGION $GeographicalRegion#1)
            (#$properGeographicalSubRegions $GeographicalRegion#2 $GeographicalRegion#0)) 
        </cyclPattern>
        <type>$GeographicalRegion#1</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113101">northwestern [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$NorthWesternRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113101">central [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$CentralRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113102">[eastern|east] [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$EasternRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113103">northeastern [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$NorthEasternRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113104">[northern|north] [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$NorthernRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113105">southeastern [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$SouthEasternRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113106">southwestern [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$SouthWesternRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113107">[southern|south] [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$SouthernRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="113108">[western|west] [part of|region of|area of|{}] $GeographicalRegion#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REGION (#$WesternRegionFn $GeographicalRegion#0))
        </cyclPattern>
        <type>#$GeographicalRegion</type>
        <variable>?REGION</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    
    
    <template>
        <nlPattern class="114000">$Person#0 was born in $PositiveInteger#1 in $GeographicalRegion#2</nlPattern>
        <cyclPattern>(#$and (#$birthDate $Person#0 (#$YearFn $PositiveInteger#1))(#$birthPlace $Person#0 $GeographicalRegion#2))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="114000">$Person#0 was born on $Date#1 , in $GeographicalRegion#2</nlPattern>
        <cyclPattern>(#$and (#$birthDate $Person#0 $Date#1)(#$birthPlace $Person#0 $GeographicalRegion#2))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="114000">$Person#0 was born in $GeographicalRegion#1 on $Date#2</nlPattern>
        <cyclPattern>(#$and (#$birthDate $Person#0 $Date#2)(#$birthPlace $Person#0 $GeographicalRegion#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="114000">$Person#0 was born in $GeographicalRegion#1</nlPattern>
        <cyclPattern>(#$and (#$birthPlace $Person#0 $GeographicalRegion#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="114000">$Person#0 was born in $GeographicalRegion#1 , on $Date#2</nlPattern>
        <cyclPattern>(#$and (#$birthDate $Person#0 $Date#2)(#$birthPlace $Person#0 $GeographicalRegion#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="114000">$Person#0 was born on $Date#1 in $GeographicalRegion#2</nlPattern>
        <cyclPattern>(#$and (#$birthDate $Person#0 $Date#1)(#$birthPlace $Person#0 $GeographicalRegion#2))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
<!--  <template>
    <nlPattern class="121000">at least $PositiveInteger#0 $Person#1</nlPattern>
    <cyclPattern>(#$and (evaluate ?GROUP (#$NewThingFn)) (#$isa ?GROUP (#$GroupFn $Person#1))(#$groupCardinalityMin ?GROUP $PositiveInteger#0))</cyclPattern>
    <type>(#$GroupFn #$Person)</type>
    <variable>?GROUP</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template> -->
    <template>
        <nlPattern class="121100">$ModernMilitaryOrganization#0 recruitment center</nlPattern>
        <cyclPattern>(#$SubcollectionOfWithRelationFromTypeFn #$Building #$owns $ModernMilitaryOrganization#0)</cyclPattern>
        <type>#$Building</type>
<!--    <variable>?PLACE</variable> -->
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="121150">$Building#0 in $GeopoliticalEntity#0</nlPattern>
        <cyclPattern>(#$SubcollectionOfWithRelationToFn $Building#0 #$objectFoundInLocation $GeopoliticalEntity#0)</cyclPattern>
        <type>#$Building</type>
   <!-- <variable>?LOCATED-PLACE</variable> -->
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
 <!-- <template>
    <nlPattern class="122000">A $Weapon#1 killed at least $PositiveInteger#2 $Animal#3 at $Place-NonAgent#4</nlPattern>
    <cyclPattern>(#$thereExists ?KILLING (#$thereExistAtLeast $PositiveInteger#2 ?DEAD (#$and (#$isa ?DEAD $Animal#3) (#$isa ?KILLING (#$KillingByMeansOfFn $Weapon#1)) (#$eventOccursAt ?KILLING $Place-NonAgent#4) (#$organismKilled ?KILLING ?DEAD)))))</cyclPattern>
    <type>#$CycLSentence-Assertible</type>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template> -->
    <template>
        <nlPattern class="122000">A $Weapon#1 killed at least $PositiveInteger#2 $Animal#3 at an $Place-NonAgent#4</nlPattern>
        <cyclPattern>(#$thereExists ?PLACE (#$thereExists ?KILLING (#$thereExistAtLeast $PositiveInteger#2 ?DEAD (#$and (#$isa ?DEAD $Animal#3) (#$isa ?KILLING (#$KillingByMeansOfFn $Weapon#1)) (#$eventOccursAt ?KILLING ?PLACE) (#$isa ?PLACE $Place-NonAgent#4) (#$organismKilled ?KILLING ?DEAD)))))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="122000">$Person#0 was killed in $Place#2</nlPattern>
        <cyclPattern>(#$and (#$isa ?DEATH #$KillingByOrganism)
            (#$organismKilled ?DEATH $Person#0)
            (#$eventOccursAt ?DEATH $Place#2))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <variable>?DEATH</variable>
    </template>
    <template>
        <nlPattern class="122001">$Place#0 municipality</nlPattern>
        <cyclPattern>(#$isa $Place#0 #$Municipality)</cyclPattern>
        <type>#$Municipality</type>
        <variable>$Place#0</variable>
    </template>    
    <template>
        <nlPattern class="122010">$Weapon#1 killed at least $PositiveInteger#2 $Animal#3 in $GeographicalRegion#4</nlPattern>
        <cyclPattern>(#$thereExists ?KILLING (#$thereExistAtLeast $PositiveInteger#2 ?DEAD (#$and (#$isa ?DEAD $Animal#3) (#$isa ?KILLING (#$KillingByMeansOfFn $Weapon#1)) (#$eventOccursAt ?KILLING $GeographicalRegion#4) (#$organismKilled ?KILLING ?DEAD))))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="122010">The $Weapon#1 killed at least $PositiveInteger#2 $Animal#3 in $Place-NonAgent#4</nlPattern>
        <cyclPattern>(#$thereExists ?KILLING (#$thereExistAtLeast $PositiveInteger#2 ?DEAD (#$and (#$isa ?DEAD $Animal#3) (#$isa ?KILLING (#$KillingByMeansOfFn $Weapon#1)) (#$eventOccursAt ?KILLING $Place-NonAgent#4) (#$organismKilled ?KILLING ?DEAD))))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
 <!-- <template>
    <nlPattern class="122000">the bomb killed $Group#0 in $City#1</nlPattern>
    <cyclPattern>(#$and (#$evaluate ?BOMBING (#$NewThingFn)) (#$isa ?BOMBING #$Bombing)(#$isa $Group#0 #$Group)(#$eventOccursAt ?BOMBING $City#1))</cyclPattern>
    <type>#$CycLSentence-Assertible</type>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template> -->
    <template>
        <nlPattern class="123000">$Business#0 to be acquired by $Business#1</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$OrganizationMerger-CreationEvent) (#$mergedFromOrg ?X $Business#0) (#$mergedToOrg ?X $Business#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123000">$Business#0 Agrees to be Acquired by $Business#1</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$OrganizationMerger-CreationEvent) (#$mergedFromOrg ?X $Business#0) (#$mergedToOrg ?X $Business#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123000">$Business#0 was acquired by $Business#1</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$OrganizationMerger-CreationEvent) (#$mergedFromOrg ?X $Business#0) (#$mergedToOrg ?X $Business#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123000">$Business#0 acquired by $Business#1</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$OrganizationMerger-CreationEvent) (#$mergedFromOrg ?X $Business#0) (#$mergedToOrg ?X $Business#1))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123000">$Business#0 is acquiring $Business#1</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$OrganizationMerger-CreationEvent) (#$mergedFromOrg ?X $Business#1) (#$mergedToOrg ?X $Business#0))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123000">$Business#0 to acquire $Business#1</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$OrganizationMerger-CreationEvent) (#$mergedFromOrg ?X $Business#1) (#$mergedToOrg ?X $Business#0))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123000">$Business#0 to buy $Business#1</nlPattern>
        <cyclPattern>(#$and (#$isa ?X #$OrganizationMerger-CreationEvent) (#$mergedFromOrg ?X $Business#1) (#$mergedToOrg ?X $Business#0))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="123100">$Date#0 is before $Date#1</nlPattern>
        <cyclPattern>(#$laterThan $Date#1 $Date#0)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123100">$Date#0 is after $Date#1</nlPattern>
        <cyclPattern>(#$laterThan $Date#0 $Date#1)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="133100">At what point in the process of $BiologicalProcess#0 do the $OrganicMaterial#1 become $PartiallyTangible#2 ?</nlPattern>
        <cyclPattern>(#$thereExists ?EVENT-TYPE (#$and (#$genls ?STEP #$BiologicalProcess) (#$firstSubEventTypeOfType $BiologicalProcess#0 ?EVENT-TYPE ?STEP) (#$relationAllExists #$eventResults ?EVENT-TYPE $PartiallyTangible#2) (#$relationAllExists #$actors ?EVENT-TYPE $OrganicMaterial#1)))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CytologicalProcessesQueryMt</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>

    <template>
        <nlPattern class="123200">$Frequency#0 $PublicSpeaking#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?ST (#$AllInstancesOfTypeWithSerialFrequencyFn $PublicSpeaking#1 $Frequency#0))</cyclPattern>
        <type>#$PublicSpeaking</type>
        <variable>?ST</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="123200">annual $PublicSpeaking#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?ST (#$AllInstancesOfTypeWithSerialFrequencyFn $PublicSpeaking#1 #$Yearly))</cyclPattern>
        <type>#$PublicSpeaking</type>
        <variable>?ST</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="123800">[most|Most] $Person#0 are $Person#1</nlPattern>
        <cyclPattern>(#$most $Person#0 $Person#1)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>


  <!--family templates-->
    <template>
        <nlPattern class="123300">ordinary $Person#1 home</nlPattern>
        <cyclPattern>(#$equalSymbols ?ST (#$SubcollectionOfWithRelationToFn #$Family-Nuclear #$groupMemberType $Person#1))</cyclPattern>
        <type>#$Family-Nuclear</type>
        <variable>?ST</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <!--template>
    <nlPattern class="123310">poor $SocialBeing#1</nlPattern>
    <cyclPattern>(#$and (#$equalSymbols ?SB $SocialBeing#1) (#$personalWealthOwned $SocialBeing#1 (#$VeryLowAmountFn #$MonetaryValue)))</cyclPattern>
    <type>#$SocialBeing</type>
    <variable>?SB</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->
   
    <template>
        <nlPattern class="123301">$CycLSentence-Assertible#0 [,|{}] [and|but|however] $CycLSentence-Assertible#1</nlPattern>
        <cyclPattern>(#$and $CycLSentence-Assertible#0 $CycLSentence-Assertible#1)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123301">$CycLSentence-Assertible#0 ; $CycLSentence-Assertible#1</nlPattern>
        <cyclPattern>(#$and $CycLSentence-Assertible#0 $CycLSentence-Assertible#1)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123301">$CycLSentence-Assertible#0 , $CycLSentence-Assertible#1 [,|{}] and $CycLSentence-Assertible#2</nlPattern>
        <cyclPattern>(#$and $CycLSentence-Assertible#0 $CycLSentence-Assertible#1 $CycLSentence-Assertible#2)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="1233011">$CycLSentence-Assertible#0 [!|!!|!!!|;|.]</nlPattern>
        <cyclPattern>(#$and $CycLSentence-Assertible#0 )</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="123302">$Person#0 [came from|comes from|was born into|grew up in] [a|an|{}] [ordinary|conventional|ordinary|normal|{}] $Family-Human#1</nlPattern>
        <cyclPattern>(#$thereExists ?F (#$and (#$isa ?F  $Family-Human#1 )(#$familyHasMember ?F $Person#0)))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

  <!-- Medical Templates -->
    <template>
        <nlPattern class="141010">$PhysiologicalCondition#0 is an $PhysiologicalCondition#1 in which there is an abnormally low level of $TangibleStuffCompositionType#2 in the $AnimalBodyPart#3</nlPattern>
        <cyclPattern>
            (#$and
            (#$genls $PhysiologicalCondition#0 $PhysiologicalCondition#1)
            (#$conditionTypeAssociatedWithIn $PhysiologicalCondition#0 $TangibleStuffCompositionType#2 #$lowAmountOf $AnimalBodyPart#3)
            )
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="141010">$PhysiologicalCondition#0 is a $PhysiologicalCondition#1 in which there is an abnormally low level of $TangibleStuffCompositionType#2 in the $AnimalBodyPart#3</nlPattern>
        <cyclPattern>
            (#$and
            (#$genls $PhysiologicalCondition#0 $PhysiologicalCondition#1)
            (#$conditionTypeAssociatedWithIn $PhysiologicalCondition#0 $TangibleStuffCompositionType#2 #$lowAmountOf $AnimalBodyPart#3)
            )
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="141000">$Microorganism#0 $PhysiologicalCondition#1</nlPattern>
        <cyclPattern>(#$and (#$genls ?DIS $PhysiologicalCondition#1)(#$genls ?DIS (#$SubcollectionOfWithRelationFromFn #$InfectionType #$pathogenTypeCausesInfectionType $Microorganism#0)))</cyclPattern>
        <type>#$InfectionType</type>
        <variable>?DIS</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  <!--template>
    <nlPattern class="141002">cardiovascular death</nlPattern>
    <cyclPattern>(#$equalSymbols ?CD (#$DyingFromEventTypeFn #$HeartCondition))</cyclPattern>
    <type>#$Dying</type>
    <variable>?CD</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->

  <!--Genetic Templates -->
  <!--template>
    <nlPattern class="151002">fgf23</nlPattern>
    <cyclPattern>(#$equalSymbols ?F #$FGF23-GIS)</cyclPattern>
    <type>#$FGF23-GIS</type>
    <variable>?F</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->

  <!--Templates for describing companies -->
    <template>
        <nlPattern class="180000">$ManufacturingOrganization#0 , a maker of $ManufacturedGoods#1 ,</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?CO $ManufacturingOrganization#0) (#$makesProductType ?CO $ManufacturedGoods#1))</cyclPattern>
        <type>#$ManufacturingCompany</type>
        <variable>?CO</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  <!--Templates for describing people -->
  

    <template>
        <nlPattern class="140001">$PersonWithNationality#0 commander</nlPattern>
        <cyclPattern>(#$equalSymbols ?COMM (#$CollectionIntersectionFn (#$TheSet $PersonWithNationality#0 #$MilitaryPerson #$Leader)))</cyclPattern>
        <type>#$MilitaryPerson</type>
        <variable>?COMM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
 
  
    <template>
        <nlPattern class="140000">$Person#0 , $Country#1 's president ,</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?PRESIDENT $Person#0) (#$presidentOfCountry $Country#1 ?PRESIDENT))</cyclPattern>
        <type>#$President-HeadOfGovernmentOrHeadOfState</type>
        <variable>?PRESIDENT</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
   
    <template>
        <nlPattern class="140010">$Person#0 , $Country#1 's prime minister ,</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?PM $Person#0) (#$primeMinister $Country#1 ?PM))</cyclPattern>
        <type>#$PrimeMinister-HeadOfGovernment</type>
        <variable>?PM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140010">$Person#0 , $PrimeMinister-HeadOfGovernment#1  ,</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?PM $Person#0) (#$isa ?PM $PrimeMinister-HeadOfGovernment#1))</cyclPattern>
        <type>#$PrimeMinister-HeadOfGovernment</type>
        <variable>?PM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140011">former President $Person#0</nlPattern>
        <cyclPattern>
            (#$and
            (#$equalSymbols ?PM $Person#0)
            (#$isa ?PM (#$FormerFn #$President-HeadOfGovernmentOrHeadOfState)))
        </cyclPattern>
        <type>(#$CollectionIntersection2Fn (#$FormerFn #$President-HeadOfGovernmentOrHeadOfState) #$Person)</type>
        <variable>?PM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140011">$Person#0 [resigns from|resigned from|quit] $Organization#1</nlPattern>
        <cyclPattern> (#$and (#$isa ?X #$ResigningFromEmployment) (#$fromOrganization ?X $Organization#1)
            (#$performedBy ?X $Person#0))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140011">$PurposefulPhysicalAction#0 [permit|licence|license][s|{}]</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$PermitForSitTypeFn $PurposefulPhysicalAction#0))
        </cyclPattern>
        <type>#$Credential</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>  
    <template>
        <nlPattern class="140012">moratorium on [new|{}] $Credential#0</nlPattern>
        <cyclPattern>(#$and (#$genls ?X #$Moratorium) (#$relationAllInstance #$moratoriumDelaysActType ?X (#$IssuingCredentialTypeFn $Credential#0)))
        </cyclPattern>
        <type>#$Moratorium</type>
        <variable>?X</variable>
    </template>  
    <template>
        <nlPattern class="140013">six-month $Moratorium#0</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?X $Moratorium#0) (#$relationAllInstance #$moratoriumLength $Moratorium#0 (#$MonthsDuration 6)))
        </cyclPattern>
        <type>#$Moratorium</type>
        <variable>?X</variable>

    </template>  
     <!--template>
        <nlPattern class="1400111">six-month $Moratorium#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
              (#$SubcollectionOfWithRelationToFn $Moratorium#0 
                 #$moratoriumLength (#$MonthsDuration 6)))
        </cyclPattern>
        <type>#$Moratorium</type>
        <variable>?X</variable>
    </template-->  
    <template>
        <nlPattern class="140014">$LegalAgent#0 announces [a|an|{}] $Moratorium#1</nlPattern>
        <cyclPattern>(#$and (#$isa ?X $Moratorium#1) (#$moratoriumImposedBy ?X $LegalAgent#0))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>  

    <template>
        <nlPattern class="140030">wife of $Person#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?WIFE
            (#$SubcollectionOfWithRelationToFn #$wife $Person#1)
            )
        </cyclPattern>
        <type>#$AdultFemaleHuman</type>
        <variable>?WIFE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140030">husband of $Person#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?W
            (#$SubcollectionOfWithRelationToFn #$husband $Person#1)
            )
        </cyclPattern>
        <type>#$AdultMaleHuman</type>
        <variable>?W</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140020">$FemaleHuman#0 the wife of $Person#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?WIFE $FemaleHuman#0) (#$wife $Person#1 ?WIFE))</cyclPattern>
        <type>#$AdultFemaleHuman</type>
        <variable>?WIFE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140020">$FemaleHuman#0 , the wife of $Person#1 ,</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?WIFE $FemaleHuman#0) (#$wife $Person#1 ?WIFE))</cyclPattern>
        <type>#$AdultFemaleHuman</type>
        <variable>?WIFE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140020">$MaleHuman#0 , the husband of $Person#1 ,</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?WIFE $MaleHuman#0) (#$husband $Person#1 ?WIFE))</cyclPattern>
        <type>#$AdultMaleHuman</type>
        <variable>?WIFE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140030">$Animal#0 died $Date#1 in $GeographicalRegion#2</nlPattern>
        <cyclPattern>(#$and (#$dateOfDeath $Animal#0 $Date#1) (#$placeOfDeath $Animal#0 $GeographicalRegion#2))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140030">$Animal#0 died on $Date#1 in $GeographicalRegion#2</nlPattern>
        <cyclPattern>
            (#$and
            (#$dateOfDeath $Animal#0 $Date#1)
            (#$placeOfDeath $Animal#0 $GeographicalRegion#2))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140030">$Animal#0 died $Date#1</nlPattern>
        <cyclPattern>(#$and (#$dateOfDeath $Animal#0 $Date#1) )</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140030">$Animal#0 died on $Date#1</nlPattern>
        <cyclPattern>(#$and (#$dateOfDeath $Animal#0 $Date#1) )</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
<!-- AURA Type KB regression Queries : numbers are 333XXX where XXX is query #-->
    <template>
        <nlPattern class="333001">What are the parts of a $FixedFunctionalSystem#0 ?</nlPattern>
        <cyclPattern>
            (#$properPhysicalPartTypes $FixedFunctionalSystem#0 ?WHAT)
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CytologicalProcessesQueryMt</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>
    <template>
        <nlPattern class="333001">What are the $PhysicalPartOfObject#0 ?</nlPattern>
        <cyclPattern>(#$genls ?WHAT $PhysicalPartOfObject#0)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CytologicalProcessesQueryMt</microTheory>
        <inferenceMode type=":SHALLOW"/>
    </template>


  <!--Politics-->
    <template>
        <nlPattern class="334001">$Person#0 delivered his $PublicSpeaking#1 to $IntelligentAgent#2</nlPattern>
        <cyclPattern>        
            (#$and
            (#$isa $Person#0 #$MaleHuman)
            (#$isa ?SP $PublicSpeaking#1)
            (#$recipientOfInfo ?SP $IntelligentAgent#2)     
            (#$senderOfInfo ?SP $Person#0 ))
        </cyclPattern>
        <type>#$PublicSpeaking</type>
        <variable>?SP</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="334001">$Person#0 delivered her $PublicSpeaking#1 to $IntelligentAgent#2</nlPattern>
        <cyclPattern>
            (#$and
            (#$isa $Person#0 #$FemaleHuman)
            (#$isa ?SP $PublicSpeaking#1)
            (#$recipientOfInfo ?SP $IntelligentAgent#2)
            (#$senderOfInfo ?SP $Person#0 ))
        </cyclPattern>
        <type>#$PublicSpeaking</type>
        <variable>?SP</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="334001">$Person#0 gave his $PublicSpeaking#1 to $IntelligentAgent#2</nlPattern>
        <cyclPattern>        (#$and          (#$isa $Person#0 #$MaleHuman)  (#$isa ?SP $PublicSpeaking#1)          (#$recipientOfInfo ?SP $IntelligentAgent#2)          (#$senderOfInfo ?SP $Person#0 ))    </cyclPattern>
        <type>#$PublicSpeaking</type>
        <variable>?SP</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="334001">$Person#0 gave her $PublicSpeaking#1 to $IntelligentAgent#2</nlPattern>
        <cyclPattern>        (#$and          (#$isa $Person#0 #$FemaleHuman)  (#$isa ?SP $PublicSpeaking#1)          (#$recipientOfInfo ?SP $IntelligentAgent#2)          (#$senderOfInfo ?SP $Person#0 ))    </cyclPattern>
        <type>#$PublicSpeaking</type>
        <variable>?SP</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

  <!-- Research -->
    <template>
        <nlPattern class="900005">double-blind $ResearchStudy#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?D (#$CollectionIntersection2Fn $ResearchStudy#0 #$Double-blindResearchStudy))</cyclPattern>
        <type>#$Double-blindResearchStudy</type>
        <variable>?D</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="900006">randomised $ResearchStudy#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?D (#$CollectionIntersection2Fn $ResearchStudy#0 #$RandomisedResearchStudy))</cyclPattern>
        <type>#$RandomisedResearchStudy</type>
        <variable>?D</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="900006">randomized $ResearchStudy#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?D (#$CollectionIntersection2Fn $ResearchStudy#0 #$RandomisedResearchStudy))</cyclPattern>
        <type>#$RandomisedResearchStudy</type>
        <variable>?D</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="900007">controlled $ResearchStudy#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?D (#$CollectionIntersection2Fn $ResearchStudy#0 #$ControlledResearchStudy))</cyclPattern>
        <type>#$ControlledResearchStudy</type>
        <variable>?D</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  <!-- Templates for named Entities -->

   <!--template>
    <nlPattern class="140001">Afghan commander</nlPattern>
    <cyclPattern>(#$equalSymbols ?COMM (#$CollectionIntersectionFn (#$TheSet #$AfghanPerson #$MilitaryPerson #$Leader)))</cyclPattern>
    <type>#$MilitaryPerson</type>
    <variable>?COMM</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->
   <!--template>
    <nlPattern class="900000">Dmitry Medvedev</nlPattern>
    <cyclPattern>(#$equalSymbols ?MEDVEDEV #$DmitryMedvedev-NationalPresident)</cyclPattern>
    <type>#$President-HeadOfGovernmentOrHeadOfState</type>
    <variable>?MEDVEDEV</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->
  <!--template>
    <nlPattern class="900005">Gandhi</nlPattern>
    <cyclPattern>(#$equalSymbols ?GANDHI #$MahatmaGandhi)</cyclPattern>
    <type>#$MaleHuman</type>
    <variable>?GANDHI</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->
  <!--template>
    <nlPattern class="900005">Mohandes Karamchand Gandhi</nlPattern>
    <cyclPattern>(#$equalSymbols ?GANDHI #$MahatmaGandhi)</cyclPattern>
    <type>#$MaleHuman</type>
    <variable>?GANDHI</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template>


  <template>
    <nlPattern class="900002">Nelson Mandela</nlPattern>
    <cyclPattern>(#$equalSymbols ?MANDELA #$NelsonMandela)</cyclPattern>
    <type>(#$CollectionIntersection2Fn #$AdultMaleHuman #$President-HeadOfGovernmentOrHeadOfState)</type>
    <variable>?MANDELA</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->
  <!--template>
    <nlPattern class="900003">the Duma</nlPattern>
    <cyclPattern>(#$equalSymbols ?D (#$ParliamentFn #$Russia))</cyclPattern>
    <type>#$Parliament</type>
    <variable>?D</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->

<!-- restatements: Will benefit from coherence constraints later -->

    <template>
        <nlPattern class="801202">$MedicalTreatmentEvent#0 ( $MedicalTreatmentEvent#1 )</nlPattern>
        <cyclPattern>
            (#$and
            (#$equalSymbols ?TR $MedicalTreatmentEvent#0)
            (#$equalSymbols ?TR $MedicalTreatmentEvent#1)
            )
        </cyclPattern>
        <type>#$MedicalTreatmentEvent</type>
        <variable>?TR</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="801202">$PhysiologicalCondition#0 ( $PhysiologicalCondition#1 )</nlPattern>
        <cyclPattern>
            (#$and
            (#$equalSymbols ?TR $PhysiologicalCondition#0)
            (#$equalSymbols ?TR $PhysiologicalCondition#1)
            )
        </cyclPattern>
        <type>#$PhysiologicalCondition</type>
        <variable>?TR</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

<!-- Lexicon Overrides for non-named-Entities -->
  <!--template>
    <nlPattern class="910000">prime minister</nlPattern>
    <cyclPattern>(#$equalSymbols ?PM #$PrimeMinister-HeadOfGovernment)</cyclPattern>
    <type>#$PrimeMinister-HeadOfGovernment</type>
    <variable>?PM</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->

  <!--template>
    <nlPattern class="910001">state of the union speech</nlPattern>
    <cyclPattern>(#$equalSymbols ?PM #$StateOfTheNationAddress)</cyclPattern>
    <type>#$StateOfTheNationAddress</type>
    <variable>?PM</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template>
  <template>
    <nlPattern class="910001">state of the nation speech</nlPattern>
    <cyclPattern>(#$equalSymbols ?PM #$StateOfTheNationAddress)</cyclPattern>
    <type>#$StateOfTheNationAddress</type>
    <variable>?PM</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->


<!-- Move to Named Entity Section later, seems to create problems
     version with (#$PersonNamedFn "Evelyn Ntoko Mase") fails-->
  <!--template>
    <nlPattern class="900001">Evelyn Ntoko Mase</nlPattern>
    <cyclPattern>(#$equalSymbols ?EV #$EvelynNtokoMase-Woman)</cyclPattern>
    <type>#$FemaleHuman</type>
    <variable>?EV</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template>
  <template>
    <nlPattern class="900001">Evelyn Mandela</nlPattern>
    <cyclPattern>(#$equalSymbols ?EV #$EvelynNtokoMase-Woman)</cyclPattern>
    <type>#$FemaleHuman</type>
    <variable>?EV</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    <inferenceMode type=":MINIMAL"/>
  </template-->
  <!--template>
    Date
    <nlPattern class="666001">Princeton , New Jersey</nlPattern>
    <cyclPattern>(#$equalSymbols ?REGION (#$CityNamedFn "Princeton" #$NewJersey-State))</cyclPattern>
    <type>#$City</type>
    <variable>?REGION</variable>
    <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
      <inferenceMode type=":MINIMAL"/>
  </template-->
   <!--(#$bombTypeUsed ?BOMBING $Bomb#0) -->
  <!-- Francesca Schiavone (#$born 23 June 1980 in Milan)
  Francesca Schiavone (#$born 23 June 1980 in Milan) is a professional tennis player
  Francesca Schiavone (#$born 23 June 1980 in Milan) is a professional tennis player from Italy.
  Roger Federer (#$born 8 August 1981) is a Swiss professional tennis player.
  Kobe Bean Bryant (#$born August 23, 1978) is an American shooting guard who plays for the Los Angeles Lakers in the National Basketball Association (NBA)
-->

    <template>  
        <nlPattern class="666002">$City#0 [,|in|, a city in] $Country#1</nlPattern>
        <cyclPattern>(#$isa $City#0 (#$CityInCountryFn $Country#1))</cyclPattern>
        <type>#$City</type>
        <variable>$City#0</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="666003">$City#0 [,|in|, a city in] $State-Geopolitical#1</nlPattern>
        <cyclPattern>(#$cityInState $City#0 $State-Geopolitical#1)</cyclPattern>
        <type>#$City</type>
        <variable>$City#0</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>  
        <nlPattern class="666004">$City#0 [,|in|, a city in] $State-Geopolitical#1 [,|in] $Country#2</nlPattern>
        <cyclPattern>
            (#$and 
            (#$cityInState $City#0 $State-Geopolitical#1)
            (#$isa $State-Geopolitical#1 (#$StateInCountryFn $Country#2))
            (#$isa $City#0 (#$CityInCountryFn $Country#2))
            )
        </cyclPattern>
        <type>#$City</type>
        <variable>$City#0</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="140030">$SomethingExisting#0 $Event#1 $Frequency#2</nlPattern>
        <cyclPattern>(#$playsRoleInTypeWithFrequency $SomethingExisting#0 $Event#1 #$doneBy $Frequency#2)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$Event#0 occurs during $Event#1 $Frequency#2</nlPattern>
        <cyclPattern>(#$typePlaysRoleInTypeWithFrequency $Event#0 $Event#1 #$properSubEvents $Frequency#2)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$Event#0 occurs $Frequency#2 during $Event#1</nlPattern>
        <cyclPattern>(#$typePlaysRoleInTypeWithFrequency $Event#0 $Event#1 #$properSubEvents $Frequency#2)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$IntelligentAgent#0 and $IntelligentAgent#1 began $SocialOccurrence#2</nlPattern>
        <cyclPattern>(#$thereExists ?EVENT (#$and (#$isa ?EVENT (#$StartingOfSitTypeFn $SocialOccurrence#2)) (#$socialParticipants ?EVENT $IntelligentAgent#0) (#$socialParticipants ?EVENT $IntelligentAgent#1)))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$IntelligentAgent#0 and $IntelligentAgent#1 began $SocialOccurrence#2 in $GeographicalPlace#3</nlPattern>
        <cyclPattern>(#$thereExists ?EVENT (#$and (#$isa ?EVENT (#$StartingOfSitTypeFn  $SocialOccurrence#2)) (#$socialParticipants ?EVENT $IntelligentAgent#0) (#$socialParticipants ?EVENT $IntelligentAgent#1) (#$eventOccursAt ?EVENT $GeographicalPlace#3)))</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>



    <template>
        <nlPattern class="140030">$Gene-GIS#1 is associated with risk of $PhysiologicalCondition#2 in $Organism-Whole#3</nlPattern>
        <cyclPattern>(#$variationInGeneTypeAssociatedWithConditionTypeInPopulation $Gene-GIS#1 $PhysiologicalCondition#2 $Organism-Whole#3)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$Gene-GIS#1 is linked to risk of $PhysiologicalCondition#2 in $Organism-Whole#3</nlPattern>
        <cyclPattern>(#$variationInGeneTypeAssociatedWithConditionTypeInPopulation $Gene-GIS#1 $PhysiologicalCondition#2 $Organism-Whole#3)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$Gene-GIS#1 is associated with risk of $PhysiologicalCondition#2</nlPattern>
        <cyclPattern>(#$variationInGeneTypeAssociatedWithConditionType $Gene-GIS#1 $PhysiologicalCondition#2)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$Gene-GIS#1 is linked to risk of $PhysiologicalCondition#2</nlPattern>
        <cyclPattern>(#$variationInGeneTypeAssociatedWithConditionType $Gene-GIS#1 $PhysiologicalCondition#2)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$PhysiologicalCondition#0 is linked to $Gene-GIS#1</nlPattern>
        <cyclPattern>(#$variationInGeneTypeAssociatedWithConditionType $Gene-GIS#1 $PhysiologicalCondition#0)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">Certain variations of $Gene-GIS#0 are associated with $PhysiologicalCondition#0</nlPattern>
        <cyclPattern>(#$variationInGeneTypeAssociatedWithConditionType $Gene-GIS#0 $PhysiologicalCondition#0)</cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">$PublicOfficial#0 condemned the $Event#3 as ' $EventQualifyingFunction#7 and $EventQualifyingFunction#8 '</nlPattern>
        <cyclPattern>(#$thereExists ?COND
            (#$thereExists ?EVENT
            (#$and (#$isa ?COND #$Condemnation)
            (#$isa ?EVENT $Event#3)
            (#$communicatorOfInfo ?COND $PublicOfficial#0)
            (#$infoTransferred-Prop ?COND (#$and
            (#$isa ?EVENT
            ($EventQualifyingFunction#7 $Event#3))
            (#$isa ?EVENT
            ($EventQualifyingFunction#8 $Event#3)))))))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140030">The office of $PublicOfficial#0 condemned the $Event#3 as ' $EventQualifyingFunction#7 and $EventQualifyingFunction#8 '</nlPattern>
        <cyclPattern>(#$thereExists ?COND
            (#$thereExists ?EVENT
            (#$and (#$isa ?COND #$Condemnation)
            (#$isa ?EVENT $Event#3)
            (#$communicatorOfInfo ?COND (#$OfficeOfPublicOfficialFn $PublicOfficial#0))
            (#$infoTransferred-Prop ?COND (#$and
            (#$isa ?EVENT
            ($EventQualifyingFunction#7 $Event#3))
            (#$isa ?EVENT
            ($EventQualifyingFunction#8 $Event#3)))))))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140040">the $PopulatedPlace#0 of $PopulatedPlace#1</nlPattern>
        <cyclPattern>(#$and 
            (#$equalSymbols ?PLACE $PopulatedPlace#1)
            (#$isa $PopulatedPlace#1 $PopulatedPlace#0))
        </cyclPattern>
        <type>#$PopulatedPlace</type>
        <variable>?PLACE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140050">the main square in $GeographicalRegion#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?PLACE (#$MainOfTypeInRegionFn #$TownSquare $GeographicalRegion#0))
        </cyclPattern>
        <type>#$TownSquare</type>
        <variable>?PLACE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140050">the main $GeographicalThing#0 in $GeographicalRegion#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?PLACE (#$MainOfTypeInRegionFn $GeographicalThing#0 $GeographicalRegion#1))
        </cyclPattern>
        <type>#$GeographicalThing</type>
        <variable>?PLACE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140060">$AttackOnObject#0 in $Place#1 has killed $NonNegativeInteger#2 people and injured $NonNegativeInteger#3</nlPattern>
        <cyclPattern>(#$thereExists ?ATTACK 
            (#$and
            (#$isa ?ATTACK $AttackOnObject#0)
            (#$eventOccursAt ?ATTACK $Place#1)
            (#$relationInstanceExistsCount #$animalInjuredIn ?ATTACK #$Person $NonNegativeInteger#3)
            (#$relationInstanceExistsCount #$organismKilled ?ATTACK #$Person $NonNegativeInteger#2)
            )
            )
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140060">$AttackOnObject#0 has killed $NonNegativeInteger#2 people and injured $NonNegativeInteger#3</nlPattern>
        <cyclPattern>(#$thereExists ?ATTACK 
            (#$and
            (#$isa ?ATTACK $AttackOnObject#0)
            (#$relationInstanceExistsCount #$animalInjuredIn ?ATTACK #$Person $NonNegativeInteger#3)
            (#$relationInstanceExistsCount #$organismKilled ?ATTACK #$Person $NonNegativeInteger#2)
            )
            )
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140060">$AttackOnObject#0 has killed $NonNegativeInteger#2 people and injured $NonNegativeInteger#3</nlPattern>
        <cyclPattern>(#$thereExists ?ATTACK 
            (#$and
            (#$isa ?ATTACK $AttackOnObject#0)
            (#$relationInstanceExistsCount #$organismKilled ?ATTACK #$Person $NonNegativeInteger#2)
            (#$relationInstanceExistsCount #$animalInjuredIn ?ATTACK #$Person $NonNegativeInteger#3)
            )
            )
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140060">$AttackOnObject#0 has killed $NonNegativeInteger#2 people</nlPattern>
        <cyclPattern>(#$thereExists ?ATTACK 
            (#$and
            (#$isa ?ATTACK $AttackOnObject#0)
            (#$relationInstanceExistsCount #$organismKilled ?ATTACK #$Person $NonNegativeInteger#2)
            )
            )
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="140060">$AttackOnObject#0 , that left $NonNegativeInteger#2 dead and $NonNegativeInteger#3 others wounded ,</nlPattern>
        <cyclPattern>(#$thereExists ?ATTACKT 
            (#$and
            (#$genls ?ATTACKT $AttackOnObject#0)
            (#$forAll ?ATTACK 
            (#$implies 
            (#$isa ?ATTACK ?ATTACKT)
            (#$and
            (#$relationInstanceExistsCount #$animalWoundedIn ?ATTACK #$Person $NonNegativeInteger#3)
            (#$relationInstanceExistsCount #$organismKilled ?ATTACK #$Person $NonNegativeInteger#2)
            )         )    )))
        </cyclPattern>
        <type>#$AttackOnObject</type>
        <variable>?ATTACKT</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140060">$AttackOnObject#0 , that left $NonNegativeInteger#2 dead and $NonNegativeInteger#3 other wounded ,</nlPattern>
        <cyclPattern>(#$thereExists ?ATTACKT 
            (#$and
            (#$genls ?ATTACKT $AttackOnObject#0)
            (#$forAll ?ATTACK 
            (#$implies 
            (#$isa ?ATTACK ?ATTACKT)
            (#$and
            (#$relationInstanceExistsCount #$animalWoundedIn ?ATTACK #$Person $NonNegativeInteger#3)
            (#$relationInstanceExistsCount #$organismKilled ?ATTACK #$Person $NonNegativeInteger#2)
            )  )                    )))
        </cyclPattern>
        <type>#$AttackOnObject</type>
        <variable>?ATTACKT</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="140070">$Person#1 was buried $GeographicalThing#2</nlPattern>
        <cyclPattern>(#$thereExists ?BUR 
            (#$and
            (#$isa ?BUR #$BuryingSomething)
            (#$eventOccursAt ?BUR $GeographicalThing#2)
            (#$thereExists ?BODY
            (#$and 
            (#$deadPhysicalRemainsOf ?BODY $Person#1)
            (#$objectActedOn ?BUR ?BODY)))))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

    <template>
        <nlPattern class="140070">$AttackOnObject#0 [at|in] $Place#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?ATTACK  
            (#$SubcollectionOfWithRelationToFn  $AttackOnObject#0 #$eventOccursAt $Place#1  )
            )
        </cyclPattern>
        <type>$AttackOnObject#0</type>
        <variable>?ATTACK</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>

 <template>
        <nlPattern class="14007011">
            [the|some|{}] $LandStuff#0 [at|in|on|covering] [a|an|the|{}] 
            $GeographicalThing#1
            </nlPattern>
        <cyclPattern>(#$equalSymbols ?STUFF
            (#$SubcollectionOfWithRelationToTypeFn  $LandStuff#0 #$objectFoundInLocation $GeographicalThing#1  )
            )
        </cyclPattern>
        <type>$LandStuff#0</type>
        <variable>?STUFF</variable>
    </template>
 <template>
        <nlPattern class="14007011">[the|some|{}] $LandStuff#0 [at|in|on|covering] [a|an|the|{}] $NaturalFeatureType#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?STUFF  
            (#$SubcollectionOfWithRelationToTypeFn  $LandStuff#0 #$objectFoundInLocation $NaturalFeatureType#1))
        </cyclPattern>
        <type>$LandStuff#0</type>
        <variable>?STUFF</variable>
    </template>

    <template>
      <examples>
	<example>Flash mob in the city streets</example>
      </examples>
      <nlPattern class="1400701">[the|some|{}] [city $Facility-Generic#1|$Facility-Generic#1 of a city]</nlPattern>
      <cyclPattern>(#$equalSymbols ?FAC  
        (#$SubcollectionOfWithRelationToTypeFn  $Facility-Generic#1 #$objectFoundInLocation #$City )
        )
      </cyclPattern>
      <type>$Facility-Generic#1</type>
      <variable>?FAC</variable>
    </template>
    <template>
      <examples>
	<example>Flash mob in the New York streets</example>
      </examples>
      <nlPattern class="1400702">[the|some|{}] $City#0 $Facility-Generic#1</nlPattern>
      <cyclPattern>(#$equalSymbols ?FAC  
        (#$SubcollectionOfWithRelationToFn  $Facility-Generic#1 #$objectFoundInLocation $City#0 )
        )
      </cyclPattern>
      <type>$Facility-Generic#1</type>
      <variable>?FAC</variable>
    </template>
    <template>
      <examples>
	<example>Flash mob in the streets of New York</example>
      </examples>
      <nlPattern class="1400703">
           [the|some|{}] $Facility-Generic#0 [of|in|within|located in] $GeographicalPlace#1]
      </nlPattern>
      <cyclPattern>(#$equalSymbols ?FAC  
        (#$SubcollectionOfWithRelationToFn $Facility-Generic#0 #$objectFoundInLocation $GeographicalPlace#1 ))
      </cyclPattern>
      <type>$Facility-Generic#0</type>
      <variable>?FAC</variable>
    </template>

    <template>
        <nlPattern class="140071">$Place#0 $AttackOnObject#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?ATTACK  
            (#$SubcollectionOfWithRelationToFn  $AttackOnObject#1 #$eventOccursAt $Place#0  )
            )
        </cyclPattern>
        <type>$AttackOnObject#1</type>
        <variable>?ATTACK</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">$AttackOnObject#0 near $Place#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?ATTACK  
            (#$SubcollectionOfWithRelationToFn  $AttackOnObject#0 #$eventOccursNear $Place#1  )
            )
        </cyclPattern>
        <type>#$AttackOnObject</type>
        <variable>?ATTACK</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">$Place#0 in $Place#1 , a popular $Place#2</nlPattern>
        <cyclPattern>(#$and(#$equalSymbols ?PLACE  $Place#0)
            (#$objectFoundInLocation $Place#0 $Place#1)
            (#$isa $Place#0 $Place#2))
                      
        </cyclPattern>
        <type>#$Place</type>
        <variable>?PLACE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <!-- 
    <template>
        <nlPattern class="140070">in $Place#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?PLACE  $Place#1)                      
        </cyclPattern>
        <type>#$Place</type>
        <variable>?PLACE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
     -->
    <template>
        <nlPattern class="140069">$City#0 [is the|the|,] capital [city|{}] of $GeopoliticalEntity#1 [,|{}]</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?CITY $City#0)(#$capitalCity $GeopoliticalEntity#1 ?CITY))</cyclPattern>
        <type>$City#0</type>
        <variable>?CITY</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140068">$City#0 , capital of $GeopoliticalEntity#1 ,</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?CITY $City#0)(#$capitalCity $GeopoliticalEntity#1 ?CITY))</cyclPattern>
        <type>$City#0</type>
        <variable>?CITY</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140068">$City#0 in $GeographicalRegion#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?CITY (#$SubcollectionOfWithRelationFromFn $City#0 #$geographicalSubRegions $GeographicalRegion#1 ))</cyclPattern>
        <type>$City#0</type>
        <variable>?CITY</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140067">$City#0 is one of the largest $City#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?CITY $City#0)(#$isa $City#0 $City#1))</cyclPattern>
        <type>$City#0</type>
        <variable>?CITY</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140067">$GeographicalThing#0 [with|has|having] a population of $NonNegativeInteger#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?GEO $GeographicalThing#0)(#$numberOfInhabitants $GeographicalThing#0 $NonNegativeInteger#1))</cyclPattern>
        <type>$GeographicalThing#0</type>
        <variable>?GEO</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">$Place#1 , a popular $Place#2</nlPattern>
        <cyclPattern>(#$and(#$equalSymbols ?PLACE  $Place#1)
            (#$isa $Place#1 $Place#2))
        </cyclPattern>
        <type>#$Place</type>
        <variable>?PLACE</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">major $Event#0</nlPattern>
        <cyclPattern>(#$SignificantFn $Event#0)
        </cyclPattern>
        <type>#$Event</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">$PublicProtesting#0 against $Individual#1</nlPattern>
        <cyclPattern>(#$SubcollectionOfWithRelationToTypeFn $PublicProtesting#0 #$protestAgainst $Individual#1)
        </cyclPattern>
        <type>#$PublicProtesting</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">tide of $Event#0</nlPattern>
        <cyclPattern>(#$MassEventOfTypeFn $Event#0)
        </cyclPattern>
        <type>#$PluralityOfLikeSubevents</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">$Country#0 has seen two months of $Event#1 amid a $Event#2 across the region</nlPattern>
        <cyclPattern>(#$thereExists ?Z
            (#$thereExists ?Y
            (#$thereExists ?X
            (#$and
            (#$isa ?Y $Event#1)
            (#$isa ?X $Event#2)
            (#$temporallySubsumes ?X ?Y)
            (#$duration ?Y (#$MonthsDuration 2))
            (#$eventOccursAt ?Y $Country#0)
            (#$isa ?Z #$GeographicalRegion)
            (#$geographicallySubsumes ?Z $Country#0)
            (#$eventOccursAt ?X ?Z)))))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">$GovernmentOfCountry#0 spokesman</nlPattern>
        <cyclPattern>(#$SubcollectionOfWithRelationToTypeFn #$HomoSapiens #$spokesmanFor $GovernmentOfCountry#0)
        </cyclPattern>
        <type>#$Spokesman</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140080">the heart of $City#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?D (#$DowntownFn $City#0))
        </cyclPattern>
        <type>#$Downtown</type>
        <variable>?D</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140070">$AttackOnObject#0 on $Date#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?ATTACK  
            (#$SubcollectionOfWithRelationToFn  $AttackOnObject#0 #$dateOfEvent $Date#1  )
            )
        </cyclPattern>
        <type>#$AttackOnObject</type>
        <variable>?ATTACK</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140001">$MilitaryPerson#0 in $Country#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?COMM (#$SubcollectionOfWithRelationToFn $MilitaryPerson#0 #$basedInRegion $Country#1))</cyclPattern>
        <type>#$MilitaryPerson</type>
        <variable>?COMM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140001">$Person#0 who was part of $Organization#1</nlPattern>
        <cyclPattern>(#$equalSymbols ?COMM (#$SubcollectionOfWithRelationFromFn $Person#0 #$hasMembers $Organization#1))</cyclPattern>
        <type>#$Person</type>
        <variable>?COMM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140001">$Organization#0 - a group allied to $Organization#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?COMM $Organization#0)(#$allies $Organization#0 $Organization#1))</cyclPattern>
        <type>#$Organization</type>
        <variable>?COMM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140001">$Organization#0 - a group allied to $Organization#1 and $Organization#2</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?COMM $Organization#0)(#$allies $Organization#0 $Organization#1)(#$allies $Organization#0 $Organization#2))</cyclPattern>
        <type>#$Organization</type>
        <variable>?COMM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140001">$Organization#0 - a group allied with $Organization#1</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?COMM $Organization#0)(#$allies $Organization#0 $Organization#1))</cyclPattern>
        <type>#$Organization</type>
        <variable>?COMM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="140001">$Organization#0 - a group allied with $Organization#1 and $Organization#2</nlPattern>
        <cyclPattern>(#$and (#$equalSymbols ?COMM $Organization#0)(#$allies $Organization#0 $Organization#1)(#$allies $Organization#0 $Organization#2))</cyclPattern>
        <type>#$Organization</type>
        <variable>?COMM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="150101">$Person#0 , leader of [the|{}] $Organization#1 ,</nlPattern>
        <cyclPattern>
            (#$hasLeaders $Organization#1 $Person#0)  
        </cyclPattern>
        <type>#$Leader</type>
        <variable>$Person#0</variable>
    </template>
  
  <!-->Templates for Gigaword AFP_ENG_20030223.0174 MJW 2 June 2011</-->
  <!-->Training Data: 
     The leader of one of Ivory Coast's three rebel groups said on Sunday
     the rebels would return to war if they were not given the crucial
     defence and interior ministry posts in a new government of national
     unity.
<-->
  <!--template>
    <nlPattern class="150001">rebel groups</nlPattern>
    <cyclPattern>(#$equalSymbols ?X #$RevoltOrganization)</cyclPattern>
    <type>#$RevoltOrganization</type>
    <variable>?X</variable>
  </template>
  <template>
    <nlPattern class="150001">rebel group</nlPattern>
    <cyclPattern>(#$equalSymbols ?X #$RevoltOrganization)</cyclPattern>
    <type>#$RevoltOrganization</type>
    <variable>?X</variable>
  </template-->
    <template>
        <nlPattern class="150002">$Country#0 's $PositiveInteger#1 $PoliticalOrganization#2</nlPattern>
        <cyclPattern>
            (#$and
            (#$equalSymbols ?GRP 
            (#$SubcollectionOfWithRelationToFn $PoliticalOrganization#2 #$mainRegionOfOperation $Country#0))
            (#$cardinality ?GRP $PositiveInteger#1))  
        </cyclPattern>
        <!--type>(#$GoupFn #$PoliticalOrganization)</type-->
        <type>#$PoliticalOrganization</type>
        <variable>?GRP</variable>
    </template>
    <template>
        <nlPattern class="150003">the leader of one of $Organization#0</nlPattern>
        <cyclPattern>
            (#$thereExists ?GRP
            (#$and
            (#$equalSymbols ?LEADER 
            (#$InstanceWithRelationToFn #$HumanAdult #$isLeaderOf ?GRP))
            (#$isa ?GRP $Organization#0)))  
        </cyclPattern>
        <type>#$Leader</type>
        <variable>?LEADER</variable>
    </template>
    <template>
        <nlPattern class="150004">the leader of one of $Country#1 's $PositiveInteger#2 $PoliticalOrganization#3</nlPattern>
        <cyclPattern>
            (#$thereExists ?GRP
            (#$thereExists ?GRPS
            (#$and 
            (#$equalSymbols ?LEADER 
            (#$InstanceWithRelationToFn #$HumanAdult #$isLeaderOf  ?GRP))
            (#$isa ?GRP ?GRPS)
            (#$equalSymbols ?GRPS
            (#$SubcollectionOfWithRelationToFn $PoliticalOrganization#3 #$mainRegionOfOperation $Country#1))
            (#$cardinality ?GRPS $PositiveInteger#2))))
        </cyclPattern>
        <type>#$Leader</type>
        <variable>?LEADER</variable>
    </template>
    <template>
        <nlPattern class="150005">The $Explosion#0 ripped through $Place#1</nlPattern>
        <cyclPattern>
            (#$thereExists ?EXPLOS
            (#$and
            (#$isa ?EXPLOS $Explosion#0)
            (#$eventOccursAt ?EXPLOS $Place#1)))
        </cyclPattern>

    </template>
    <template>
        <nlPattern class="160001">group allied to $Organization#0 and $Organization#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ORGTYPE
            (#$SubcollectionOfWithRelationToFn 
            (#$SubcollectionOfWithRelationToFn #$Organization
            #$allies $Organization#0)
            #$allies $Organization#1))
        </cyclPattern>
        <type>#$Organization</type>
        <variable>?ORGTYPE</variable>
    </template>
    <template>
        <nlPattern class="160002">$Organization#0 , a $Organization#1</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?ORG $Organization#0)
            (#$isa $Organization#0 $Organization#1))
        </cyclPattern>
        <type>#$Organization</type>
        <variable>?ORG</variable>
    </template>
    <template>
        <nlPattern class="160002">$Organization#0 - a $Organization#1</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?ORG $Organization#0)
            (#$isa $Organization#0 $Organization#1))
        </cyclPattern>
        <type>#$Organization</type>
        <variable>?ORG</variable>
    </template> 
    <template>
        <nlPattern class="160002">$Organization#0 , an $Organization#1</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?ORG $Organization#0)
            (#$isa $Organization#0 $Organization#1))
        </cyclPattern>
        <type>#$Organization</type>
        <variable>?ORG</variable>
    </template> 
    <template>
        <nlPattern class="160002">$Organization#0 - an $Organization#1</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?ORG $Organization#0)
            (#$isa $Organization#0 $Organization#1))
        </cyclPattern>
        <type>#$Organization</type>
        <variable>?ORG</variable>
    </template>
  
    <template>
        <nlPattern class="160003">an $Country#0 inquiry</nlPattern>
        <cyclPattern>
            (#$isa ?INC 
            (#$SubcollectionOfWithRelationToFn #$Investigation
            #$investigatingAgent $Country#0) )
        </cyclPattern>
        <type>#$Investigation</type>
        <variable>?INC</variable>
    </template>
    <template>
        <nlPattern class="160003">a $Country#0 inquiry</nlPattern>
        <cyclPattern>
            (#$isa ?INC 
            (#$SubcollectionOfWithRelationToFn #$Investigation
            #$investigatingAgent $Country#0) )
        </cyclPattern>
        <type>#$Investigation</type>
        <variable>?INC</variable>
    </template>
    <template>
        <nlPattern class="160004">$Country#0 inquiry</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?INC 
            (#$SubcollectionOfWithRelationToFn #$Investigation
            #$investigatingAgent $Country#0) )
        </cyclPattern>
        <type>#$Investigation</type>
        <variable>?INC</variable>
    </template>
    <template>
        <nlPattern class="160004">$Country#0 investigation</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?INC 
            (#$SubcollectionOfWithRelationToFn #$Investigation
            #$investigatingAgent $Country#0) )
        </cyclPattern>
        <type>#$Investigation</type>
        <variable>?INC</variable>
    </template>
    <template>
    <!-->Blake, this is claiming that the result of the investigation is true
    but it should be the contents of an Mt that corresponds to the CW that is 
    the infoTransferred in ?INV ... it would be good if you could show how
    to deal with that 
    <-->
        <nlPattern class="160005">$Investigation#0 has said an $AttackOnObject#1 was ordered by an $Person#2</nlPattern>
        <cyclPattern>
            (#$thereExists ?INV
            (#$thereExists ?ATT
            (#$thereExists ?CONTENT
            (#$and
            (#$isa ?ATT $AttackOnObject#1)
            (#$isa ?INV $Investigation#0)
            (#$isa ?ATT #$Microtheory)
            (#$infoGatheredAbout ?INV ?ATT)
            (#$infoTransferred ?INV ?CONTENT)
            (#$ist ?CONTENT
            (#$thereExists ?PERP
            (#$and
            (#$isa ?PERP $Person#2)
            (#$directingAgent ?ATT ?PERP))))))))
        </cyclPattern>
    </template>
    <template>
    <!-->Blake, this is claiming that the result of the investigation is true
    but it should be the contents of an Mt that corresponds to the CW that is 
    the infoTransferred in ?INV ... it would be good if you could show how
    to deal with that 
    <-->
        <nlPattern class="160005">An $Investigation#0 has said an $AttackOnObject#1 was ordered by an $Person#2</nlPattern>
        <cyclPattern>
            (#$thereExists ?INV
            (#$thereExists ?ATT
            (#$thereExists ?CONTENT
            (#$and
            (#$isa ?ATT $AttackOnObject#1)
            (#$isa ?INV $Investigation#0)
            (#$isa ?ATT #$Microtheory)
            (#$infoGatheredAbout ?INV ?ATT)
            (#$infoTransferred ?INV ?CONTENT)
            (#$ist ?CONTENT
            (#$thereExists ?PERP
            (#$and
            (#$isa ?PERP $Person#2)
            (#$directingAgent ?ATT ?PERP))))))))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <variable>?INV</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    </template> 
    <template>
        <nlPattern class="160006">C $ $RealNumber#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?LOONIE (#$Dollar-Canada $RealNumber#0))
        </cyclPattern>
        <type>#$MonetaryValue</type>
        <variable>?LOONIE</variable>
    </template>
    <template>
        <nlPattern class="160009">$MonetaryValue#0 ( $MonetaryValue#1 )</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?MOOLAH $MonetaryValue#0 )
            (#$similarTo ?MOOLAH $MonetaryValue#1))
        </cyclPattern>
        <type>#$MonetaryValue</type>
        <variable>?MOOLAH</variable>
    </template>
  
    <template>
        <nlPattern class="160007">$ $RealNumber#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?GREENBACK (#$Dollar-UnitedStates $RealNumber#0))
        </cyclPattern>
        <type>#$MonetaryValue</type>
        <variable>?GREENBACK</variable>
    </template>
    <template>
        <nlPattern class="160020">$MonetaryValue#0 cash</nlPattern>
    <!-- maybe add something about liquidity -->
        <cyclPattern>
            (#$equalSymbols ?VAL $MonetaryValue#0)
        </cyclPattern>
        <type>#$MonetaryValue</type>
        <variable>?VAL</variable>
    </template>
    <template>
        <nlPattern class="160008">$Country#0 $PersonWithOccupation#1 $CommercialOrganization#2</nlPattern>
        <cyclPattern>
            (#$and
            (#$equalSymbols ?C $CommercialOrganization#2)
            (#$basedInRegion ?C $Country#0)
            (#$equals $PersonWithOccupation#1 $PersonWithOccupation#1)
        <!--(#$implies 
            (#$relationInstanceAll #$performsInstancesAsPartOfJob ?M $PersonWithOccupation#1)
            (#$focalActivityType ?C ?M))-->)
        </cyclPattern>
        <type>#$CommercialOrganization</type>
        <variable>?C</variable>
    </template>
    
    <template>
        <nlPattern class="170001">$Place#0 's biggest $PartiallyTangible#1 producer</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ORG 
            (#$MaximalWithRespectToPlaceFn 
            (#$QuantitySlotForArg2Fn $PartiallyTangible#1 #$annualProductionVolume) $Place#0))
        </cyclPattern>
        <type>#$Organization</type>
        <variable>?ORG</variable>
    </template>
  
    <template>
        <nlPattern class="170001">$Place#0 's biggest $PartiallyTangible#1 producer $Organization#2</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?ORG $Organization#2)
            (#$maximalWithRespectToPlace $Organization#2
            (#$QuantitySlotForArg2Fn $PartiallyTangible#1 #$annualProductionVolume) $Place#0))
        </cyclPattern>
        <type>#$Organization</type>
        <variable>?ORG</variable>
    </template>
  
    <template>
        <nlPattern class="170001">$Organization#0 's $MonetaryValue#1 bid for $Organization#2</nlPattern>
        <cyclPattern>
            (#$thereExists ?BID 
            (#$thereExists ?TO
            (#$and 
            (#$isa ?BID #$BiddingToMakeAPurchase)
            (#$isa ?TO (#$AttemptingFn #$Takeover))
            (#$properSubEvents ?TO ?BID)
            (#$prospectiveBuyer ?BID $Organization#0)
            ((#$ProspectiveRoleFn #$objectPaidFor) ?BID $Organization#2)
            (#$purchaseOfferValue ?BID $MonetaryValue#1)
            )
            )
            )  
        </cyclPattern>
        <type>#$BiddingToMakeAPurchase</type>
        <variable>?BID</variable>
    </template>
  
    <template>
        <nlPattern class="170002">billionaire $Person#0</nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?BILL $Person#0)(#$isa ?BILL #$Billionaire))
        </cyclPattern>
        <type>#$Billionaire</type>
        <variable>?BILL</variable>
    </template>
    <template>
        <nlPattern class="170003">millionaire $Person#0</nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?MILL $Person#0) (#$isa ?MILL #$Millionaire))
        </cyclPattern>
        <type>#$Millionaire</type>
        <variable>?MILL</variable>
    </template>
    <template>
        <nlPattern class="170001">$Millionaire#0 's  $CommercialOrganization#1</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?ORG $CommercialOrganization#1)
            (#$hasOwnershipIn $Millionaire#0 ?ORG))
        </cyclPattern>
        <type>#$CommercialOrganization</type>
        <variable>?ORG</variable>
    </template>
    <template>
        <nlPattern class="180000">Bone morphogenetic protein 4</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PROT 
            (#$SchemaObjectFn #$BigOWLCodeMapping "uniprot-protein:P12644"))
        </cyclPattern>
        <type>#$ProteinMolecule</type>
        <variable>?PROT</variable>
    </template>
    <template>
        <nlPattern class="180001">$ProteinMolecule#0 induces $PhysiologicalProcess#1</nlPattern>
        <cyclPattern>
            (#$substanceInBLOContributesToBioProcess-TypeLevel 
            $ProteinMolecule#0  #$Mammal $PhysiologicalProcess#1)
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    </template>
    <template>
        <nlPattern class="180001">$ProteinMolecule#0 induces $AnimalTissue#1 and $BiologicalProductionEvent#2</nlPattern>
        <cyclPattern>
            (#$and 
            (#$substanceInBLOContributesToBioProcess-TypeLevel 
            $ProteinMolecule#0  #$Mammal (#$TissueFormationFn $AnimalTissue#1))
            (#$substanceInBLOContributesToBioProcess-TypeLevel 
            $ProteinMolecule#0  #$Mammal $BiologicalProductionEvent#2))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    </template>
    <template>
        <nlPattern class="180001">$ProteinMolecule#0 induces $AnimalTissue#1 formation</nlPattern>
        <cyclPattern>
            (#$substanceInBLOContributesToBioProcess-TypeLevel 
            $ProteinMolecule#0  #$Mammal (#$TissueFormationFn $AnimalTissue#1))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    </template>
    <template>
        <nlPattern class="180001">$ProteinMolecule#0 induces $AnimalTissue#1 and $AnimalTissue#2 formation</nlPattern>
        <cyclPattern>
            (#$and 
            (#$substanceInBLOContributesToBioProcess-TypeLevel 
            $ProteinMolecule#0  #$Mammal (#$TissueFormationFn $AnimalTissue#1))
            (#$substanceInBLOContributesToBioProcess-TypeLevel 
            $ProteinMolecule#0  #$Mammal (#$TissueFormationFn $AnimalTissue#2)))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
    </template>
    <template>
        <nlPattern class="180072">$PortableObject#0 bowls</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$SubcollectionOfWithRelationFromTypeFn #$Bowl-Generic #$storagePlace $PortableObject#0))
        </cyclPattern>
        <type>#$Bowl-Generic</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="180080">$PortableObject#0 decorated the $FurniturePiece#1</nlPattern>
        <cyclPattern>
            (#$thereExists ?X 
            (#$thereExists ?Y
            (#$thereExists ?Z
            (#$and 
            (#$isa ?X #$Decorating)
            (#$isa  ?Y  $PortableObject#0)
            (#$isa  ?Z  $FurniturePiece#1)
            (#$onPhysicial ?Y ?Z)
            (#$objectActedOn ?X ?Z)))))         
        </cyclPattern>
        <type>#$Decorating</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="180080">$IntelligentAgent#0 decorated the $FurniturePiece#1</nlPattern>
        <cyclPattern>
            (#$thereExists ?X 
            (#$thereExists ?Y
            (#$thereExists ?Z
            (#$and 
            (#$isa ?X #$Decorating)
            (#$isa  ?Y  $IntelligentAgent#0)
            (#$isa  ?Z  $FurniturePiece#1)
            (#$performedBy ?X ?Y)
            (#$objectActedOn ?X ?Z)))))         
        </cyclPattern>
        <type>#$Decorating</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="180082">$IndependentCountry#0 ['s|{}] $MilitaryEquipment#1 program</nlPattern>
        <cyclPattern>
            (#$thereExists ?X 
            (#$and 
            (#$isa ?X (#$ProgramTypeByFocalProjectTypeFn 
            (#$ProjectTypeByGoalStateFn
            (#$ProductionOfFn $MilitaryEquipment#1))))
            (#$performedBy ?X (#$GovernmentFn $IndependentCountry#0))))
        </cyclPattern>
        <type>#$DevelopingATangibleProduct</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="180082">$IndependentCountry#0 ['s|{}] $MilitaryEquipment#1 project</nlPattern>
        <cyclPattern>
            (#$thereExists ?X 
            (#$and 
            (#$isa ?X (#$ProjectTypeByGoalStateFn
            (#$ProductionOfFn $MilitaryEquipment#1))) 
            (#$performedBy ?X (#$GovernmentFn $IndependentCountry#0))))
        </cyclPattern>
        <type>#$DevelopingATangibleProduct</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
   
    <template>
        <nlPattern class="180090">$IntelligentAgent#0 and $IntelligentAgent#1 to [put pressure on|pressure|coerce] $IntelligentAgent#2</nlPattern>
        <cyclPattern>
            (#$thereExists ?X 
            (#$and 
            (#$isa ?X #$CoercingAnAgent) 
            (#$performedBy ?X $IntelligentAgent#0)
            (#$performedBy ?X $IntelligentAgent#1)
            (#$agentCoerced ?X $IntelligentAgent#2) ) )
        </cyclPattern>
        <type>#$CoercingAnAgent</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="180091">$IntelligentAgent#0 to put [more|{}] pressure on $IntelligentAgent#2</nlPattern>
        <cyclPattern>
            (#$thereExists ?X 
            (#$and 
            (#$isa ?X #$CoercingAnAgent) 
            (#$performedBy ?X $IntelligentAgent#0)
            (#$agentCoerced ?X $IntelligentAgent#2)
            )
            )
        </cyclPattern>
        <type>#$CoercingAnAgent</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="180091">$IntelligentAgent#0 , under [pressure|coercion] from $IntelligentAgent#2 ,</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?VICTIM $IntelligentAgent#0)
            (#$thereExists ?X 
            (#$and 
            (#$isa ?X #$CoercingAnAgent) 
            (#$performedBy ?X $IntelligentAgent#2)
            (#$agentCoerced ?X ?VICTIM)
            )
            )
            )
        </cyclPattern>
        <type>$IntelligentAgent#0</type>
        <variable>?VICTIM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="180091">$IntelligentAgent#2 , [pressured|coerced] by $IntelligentAgent#0 ,</nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?VICTIM $IntelligentAgent#2)
            (#$thereExists ?X 
            (#$and 
            (#$isa ?X #$CoercingAnAgent) 
            (#$performedBy ?X $IntelligentAgent#0)
            (#$agentCoerced ?X ?VICTIM)
            )
            ))
        </cyclPattern>
        <type>$IntelligentAgent#2</type>
        <variable>?VICTIM</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
   
  
    <template>
        <nlPattern class="180100">funds flowing to $IntelligentAgent#0</nlPattern>
        <cyclPattern>
            (#$thereExists ?X 
            (#$and 
            (#$isa ?X #$MoneyTransfer) 
            (#$toPossessor ?X $IntelligentAgent#0)
            )
            )
        </cyclPattern>
        <type>#$MoneyTransfer</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="180100">funds to $IntelligentAgent#0</nlPattern>
        <cyclPattern>
            (#$thereExists ?X 
            (#$and 
            (#$isa ?X #$MoneyTransfer) 
            (#$toPossessor ?X $IntelligentAgent#0)
            )
            )
        </cyclPattern>
        <type>#$MoneyTransfer</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="180110">cut off $MoneyTransfer#0</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?X #$PreventingFromHappening) 
            (#$prevents-SitProp ?X (#$thereExists ?Y (#$equalSymbols ?Y $MoneyTransfer#0)))
            )     
        </cyclPattern>
        <type>#$PreventingFromHappening</type>
        <variable>?X</variable>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
  
    <template>
        <nlPattern class="190001">$RealNumber#0 miles</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DIST (#$Mile $RealNumber#0))
        </cyclPattern>
        <type>#$Distance-Absolute</type>
        <variable>?DIST</variable>
    </template>
    <template>
        <nlPattern class="190001">$RealNumber#0 kilometers</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DIST (#$Kilometer $RealNumber#0))
        </cyclPattern>
        <type>#$Distance-Absolute</type>
        <variable>?DIST</variable>
    </template>
    <template>
        <nlPattern class="190001">$RealNumber#0 km</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DIST (#$Kilometer $RealNumber#0))
        </cyclPattern>
        <type>#$Distance-Absolute</type>
        <variable>?DIST</variable>
    </template>
    <template>
        <nlPattern class="190002">$Distance-Absolute#0 ( $Distance-Absolute#1 )</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?DIST $Distance-Absolute#0 )
            (#$similarTo ?DIST $Distance-Absolute#1 ))
        </cyclPattern>
        <type>#$Distance-Absolute</type>
        <variable>?DIST</variable>
    </template>
  
  
    <template>
        <nlPattern class="190010">$ProjectileWeapon#0 , which has a [potential|{}] range of $Distance-Absolute#1 ,</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?WEAP $ProjectileWeapon#0 )
            (#$equalSymbols ?DIST $Distance-Absolute#1)
            (#$relationAllInstance #$weaponEffectiveRange-Max $ProjectileWeapon#0 ?DIST)
            )
        </cyclPattern>
        <type>$ProjectileWeapon#0</type>
        <variable>?WEAP</variable>
    </template>
    <template>
        <nlPattern class="190010">$ProjectileWeapon#0 , whose range is $Distance-Absolute#1 ,</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?WEAP $ProjectileWeapon#0 )
            (#$equalSymbols ?DIST $Distance-Absolute#1)
            (#$relationAllInstance #$weaponEffectiveRange-Max $ProjectileWeapon#0 ?DIST)
            )
        </cyclPattern>
        <type>$ProjectileWeapon#0</type>
        <variable>?WEAP</variable>
    </template>
    <template>
        <nlPattern class="190010">$ProjectileWeapon#0 , with a range of $Distance-Absolute#1 ,</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?WEAP $ProjectileWeapon#0 )
            (#$equalSymbols ?DIST $Distance-Absolute#1)
            (#$relationAllInstance #$weaponEffectiveRange-Max $ProjectileWeapon#0 ?DIST)
            )
        </cyclPattern>
        <type>$ProjectileWeapon#0</type>
        <variable>?WEAP</variable>
    </template>
    <template>
        <nlPattern class="190010">$ProjectileWeapon#0 , with [a|an] $Distance-Absolute#1 range ,</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?WEAP $ProjectileWeapon#0 )
            (#$equalSymbols ?DIST $Distance-Absolute#1)
            (#$relationAllInstance #$weaponEffectiveRange-Max $ProjectileWeapon#0 ?DIST)
            )
        </cyclPattern>
        <type>$ProjectileWeapon#0</type>
        <variable>?WEAP</variable>
    </template>
    <template>
        <nlPattern class="190011">$MilitaryEquipment#0 (  $MilitaryEquipment#1 )</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?WEAP $MilitaryEquipment#0 )
            (#$equals ?WEAP $MilitaryEquipment#1 )
            )
        </cyclPattern>
        <type>$MilitaryEquipment#0</type>
        <variable>?WEAP</variable>
    </template>
    <template>
        <nlPattern class="190023">[broken|busted|malfunctioning] $Artifact#1</nlPattern>
        <cyclPattern>
       (#$equalSymbols ?DEV  (#$CollectionIntersection2Fn #$NonFunctionalObject $Artifact#1))
        </cyclPattern>
        <type>$Artifact#1</type>
        <variable>?DEV</variable>
    </template>
    <template>
        <nlPattern class="190011">$Artifact#0 developed by $IntelligentAgent#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DEV (#$SubcollectionOfWithRelationToFn $Artifact#0 #$createdBy $IntelligentAgent#1))
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?DEV</variable>
    </template>
    <template>
        <nlPattern class="190012">$Artifact#0 [derived from|based on] $Artifact#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DEV (#$SubcollectionOfWithRelationToFn $Artifact#0 #$similarTo $Artifact#1))
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?DEV</variable>
    </template>
    <template>
        <nlPattern class="190011">$Artifact#0 developed by $IntelligentAgent#1 [and|,|{}] [derived from|based on] $Artifact#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DEV 
            (#$CollectionIntersection2Fn 
            (#$SubcollectionOfWithRelationToFn $Artifact#0 #$similarTo $Artifact#2)
            (#$SubcollectionOfWithRelationToFn $Artifact#0 #$createdBy $IntelligentAgent#1)))
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?DEV</variable>
    </template>
    <template>
        <nlPattern class="190020">the $Artifact#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DEV $Artifact#0)
        </cyclPattern>
        <type>#$Artifact</type>
        <variable>?DEV</variable>
    </template>
    
    
    <template>
        <nlPattern class="190021">$ManufacturingCompany#0 ['s|{}] $Artifact#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DEV  (#$SubcollectionOfWithRelationToFn $Artifact#1 #$madeBy $ManufacturingCompany#0))
        </cyclPattern>
        <type>$Artifact#1</type>
        <variable>?DEV</variable>
    </template>
    <template>
        <nlPattern class="190021">$Artifact#0 from $ManufacturingCompany#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DEV  (#$SubcollectionOfWithRelationToFn $Artifact#0 #$madeBy $ManufacturingCompany#1))
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?DEV</variable>
    </template>

    
    <template>
        <examples>
            <example>Billionaire Saudi Prince Alwaleed takes $300 million stake in Twitter</example>
            <example>Bill Gates acquires $10000 Netscape stake</example>
        </examples>
        <nlPattern class="6660001">
            $IntelligentAgent#0
            [invest|invests|take|buy|acquire|grab|grabs|gains|gain|takes|buys|acquires] [a|an|{}]
            $MonetaryValue#1 
            [stake|holding|shareholding|investment|{}] 
            [in|of|{}] $LegalCorporation#2 
            [stake|holding|shareholding|investment|{}] 
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?INVEST
            (#$SubcollectionOfWithRelationToFn
            (#$SubcollectionOfWithRelationToFn
            (#$SubcollectionOfWithRelationToTypeFn #$Investing
            #$objectPaidFor (#$StockInFn $LegalCorporation#2))
            #$buyer  $IntelligentAgent#0 )
            #$moneyTransferred $MonetaryValue#1 ))                    
        </cyclPattern>
        <type>#$Investing</type>
        <variable>?INVEST</variable>
    </template>
    
    <template>
        <examples>
            <example>Billionaire Saudi Prince Alwaleed</example>
        </examples>
        <nlPattern class="6660005">
            $Wealthy#0 $IntelligentAgent#1
        </nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?PERSON $IntelligentAgent#1)
            (#$isa ?PERSON $Wealthy#0))                            
        </cyclPattern>
        <type>$IntelligentAgent#1</type>
        <variable>?PERSON</variable>
    </template>
    
    <template>
        <examples>
            <example>Professor Marvin Minsky</example>
            <example>Marvin Minsky, Professor,</example>
        </examples>
        <nlPattern class="7770005">
            [$PersonWithOccupation#0 $IntelligentAgent#1|$IntelligentAgent#1 , $PersonWithOccupation#0 ,]
        </nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?PERSON $IntelligentAgent#1)
            (#$isa ?PERSON $PersonWithOccupation#0 ))                            
        </cyclPattern>
        <type>$IntelligentAgent#1</type>
        <variable>?PERSON</variable>
    </template>
    
    <template>
        <nlPattern class="190021">$IndependentCountry#0 [tested|test-fired] a $SelfPoweredProjectile#1 [reportedly|{}] [capable of reaching|able to reach|able to hit] $GeographicalRegion#2</nlPattern>
        <cyclPattern>
            (#$and
            (#$isa ?LAUNCH #$LaunchingASelfPoweredProjectile)
            (#$thereExists ?PROJ
            (#$thereExists ?PROJTYPE
            (#$and 
            (#$genls ?PROJTYPE $SelfPoweredProjectile#1)
            (#$isa ?PROJ ?PROJTYPE)
            (#$thereExists ?RANGE
            (#$and
            (#$relationAllInstance #$weaponEffectiveRange-Max ?PROJTYPE ?RANGE)
            (#$distanceBetween $IndependentCountry#0 $GeographicalRegion#2 ?DIST)
            (#$greaterThanOrEqualTo ?RANGE ?DIST) ))
            (#$providerOfMotiveForce ?LAUNCH ?PROJ))))
            (#$thereExists ?EVAL (#$and
            (#$isa ?EVAL #$Evaluating)
            (#$evaluee-Direct ?EVAL ?LAUNCH)
            (#$doneBy ?LAUNCH $IndependentCountry#0)
            (#$evaluator ?EVAL $IndependentCountry#0))))
        </cyclPattern>
        <type>#$LaunchingASelfPoweredProjectile</type>
        <variable>?LAUNCH</variable>
    </template>
    <template>
        <nlPattern class="190023">$SelfPoweredProjectile#1 [, which|, that,|{}] can [reach|fly to|hit] $GeographicalRegion#2 from $GeographicalRegion#3</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?PROJTYPE $SelfPoweredProjectile#1)
            (#$thereExists ?RANGE
            (#$and
            (#$relationAllInstance #$weaponEffectiveRange-Max ?PROJTYPE ?RANGE)
            (#$distanceBetween $GeographicalRegion#2 $GeographicalRegion#3 ?DIST)
            (#$greaterThanOrEqualTo ?RANGE ?DIST)
            )))
        </cyclPattern>
        <type>$SelfPoweredProjectile#1</type>
        <variable>?PROJTYPE</variable>
    </template>
    <template>
        <nlPattern class="190023">$SelfPoweredProjectile#1 [, which|, that,|{}] can [reach|fly to|hit] $GeographicalRegion#2 from $GeographicalRegion#3</nlPattern>
        <cyclPattern>
            (#$and 
            (#$equalSymbols ?PROJTYPE $SelfPoweredProjectile#1)
            (#$thereExists ?RANGE
            (#$and
            (#$relationAllInstance #$weaponEffectiveRange-Max ?PROJTYPE ?RANGE)
            (#$distanceBetween $GeographicalRegion#2 $GeographicalRegion#3 ?DIST)
            (#$greaterThanOrEqualTo ?RANGE ?DIST)
            )))
        </cyclPattern>
        <type>$SelfPoweredProjectile#1</type>
        <variable>?PROJTYPE</variable>
    </template>
    
    <template>
        <nlPattern class="190024">$Movie-CW#0 [where|in which] $Artist-Performer#1 acted</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?MOV $Movie-CW#0)
            (#$movieActors ?MOV $Artist-Performer#1)
            )
        </cyclPattern>
        <type>$Movie-CW#0</type>
        <variable>?MOV</variable>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="190024">[where|in which]  $Movie-CW#0 did $Artist-Performer#1 [act|appear|perform] in ?</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?MOV $Movie-CW#0)
            (#$movieActors ?MOV $Artist-Performer#1)
            )
        </cyclPattern>
        <type>$Movie-CW#0</type>
        <variable>?MOV</variable>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="190024">$Movie-CW#0 [where|in which] $Artist-Performer#1 acted</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?MOV $Movie-CW#0)
            (#$movieActors ?MOV $Artist-Performer#1)
            )
        </cyclPattern>
        <type>$Movie-CW#0</type>
        <variable>?MOV</variable>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
        
    <template>
        <nlPattern class="190025">$Movie-CW#0 [in which|where] [both|{}] $Artist-Performer#1 [, and|and] $Artist-Performer#2 [both|{}] acted [together|{}]</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?MOV $Movie-CW#0)
            (#$movieActors ?MOV $Artist-Performer#1)
            (#$movieActors ?MOV $Artist-Performer#2)
            )
        </cyclPattern>
        <type>$Movie-CW#0</type>
        <variable>?MOV</variable>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="190025">$Movie-CW#0 [where|in which] [both|{}] $Artist-Performer#1 [, and|and] $Artist-Performer#2 acted [together|{}]</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?MOV $Movie-CW#0)
            (#$movieActors ?MOV $Artist-Performer#1)
            (#$movieActors ?MOV $Artist-Performer#2)
            )
        </cyclPattern>
        <type>$Movie-CW#0</type>
        <variable>?MOV</variable>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="190025">$Movie-CW#0 [where|in which] [both|all of|all three of|{}] $Artist-Performer#1 , $Artist-Performer#2 [, and|and] $Artist-Performer#3 acted [together|{}]</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?MOV $Movie-CW#0)
            (#$movieActors ?MOV $Artist-Performer#1)
            (#$movieActors ?MOV $Artist-Performer#2)
            (#$movieActors ?MOV $Artist-Performer#3)
            )
        </cyclPattern>
        <type>$Movie-CW#0</type>
        <variable>?MOV</variable>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>  

    <template>
        <nlPattern class="190141">the $Artifact-Generic#0 $Artifact-Generic#1</nlPattern>
        <cyclPattern>
            (#$isa $Artifact-Generic#1 $Artifact-Generic#0)
        </cyclPattern>
        <type>$Artifact-Generic#0</type>
        <variable>$Artifact-Generic#1</variable>
    </template>
    <template>
        <nlPattern class="190140">the deadly attack in $NonNegativeInteger#0 against $Artifact-Generic#1</nlPattern>
        <cyclPattern>
            (#$and 
            (#$isa ?ATTACK #$AttackOnObject)
            (#$dateOfEvent ?ATTACK  (#$YearFn $NonNegativeInteger#0))
            (#$objectAttacked ?ATTACK $Artifact-Generic#1))
        </cyclPattern>
        <type>#$AttackOnObject</type>
        <variable>?ATTACK</variable>
    </template>
    <template>
        <nlPattern class="190141">$State-Geopolitical#0 $Landmark#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?LA
            (#$SubcollectionOfWithRelationToFn  $Landmark#1 #$objectFoundInLocation $State-Geopolitical#0)
            )
        </cyclPattern>
        <type>$Landmark#1</type>
        <variable>?LA</variable>
    </template>
    <template>
        <nlPattern class="190141">$Country#0 $Landmark#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?LA
            (#$SubcollectionOfWithRelationToFn  $Landmark#1 #$objectFoundInLocation $Country#0)
            )
        </cyclPattern>
        <type>$Landmark#1</type>
        <variable>?LA</variable>
    </template>
    <template>
        <nlPattern class="190142">$City#0 $Landmark#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?LA
            (#$SubcollectionOfWithRelationToFn  $Landmark#1 #$landmarksOfCity $City#0)
            )
        </cyclPattern>
        <type>$Landmark#1</type>
        <variable>?LA</variable>
    </template>
    <template>
        <nlPattern class="190143">$City#0 , $Country#1 ,</nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?LA $City#0)(#$countryOfCity $Country#1 $City#0))
        </cyclPattern>
        <type>#$City</type>
        <variable>?LA</variable>
    </template>
    <template>
        <nlPattern class="190142">[radical|extremist] $BeliefSystem#0 $Leader#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?LA
            (#$CollectionIntersection2Fn #$Extremist
            (#$SubcollectionOfWithRelationToFn  
            $Leader#1  #$hasBeliefSystems $BeliefSystem#0)
            ))
        </cyclPattern>
        <type>$Leader#1</type>
        <variable>?LA</variable>
    </template>
    <template>
        <nlPattern class="190142">[commandeered|captured] $Artifact#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?A
            (#$SubcollectionOfWithRelationFromTypeFn $Artifact#0 #$objectOfControlTransfer #$HostileSiezure)
            )
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?A</variable>
    </template>
    <template>
        <nlPattern class="190142">[use|make use of|using] [a|an|some|{}] $Artifact#0 to threaten $SomethingExisting#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?A
            (#$ThreateningToDoFn
            ( #$SubcollectionOfWithRelationFromTypeFn 
            (#$SubcollectionOfWithRelationFromTypeFn $Situation #$sitTypePosesThreatToType $SomethingExisting#1)
            #$instrument-Generic $Artifact#0)))
        </cyclPattern>
        <type>#$MakingAThreat</type>
        <variable>?A</variable>
    </template>
    <template>
        <nlPattern class="190142">$Organization#0 's $PublicOfficial#1 [,|{}] $Person#2 [,|{}]</nlPattern>
        <cyclPattern>
            (#$isa $Person#2 (#$SubcollectionOfWithRelationToFn $PublicOfficial#1 #$employees $Organization#0)
            )
        </cyclPattern>
        <type>$PublicOfficial#1</type>
        <variable>$Person#2</variable>
    </template>
    <template>
        <nlPattern class="190142">appointment of $Person#0 as $PublicOfficial#1</nlPattern>
        <cyclPattern>
            (#$thereExists ?ORG    (#$and
            (#$isa ?ORG #$GovernmentalOrganization)
            (#$isa ?AP #$AppointingSomeoneToAPosition)
            (#$appointee ?AP $Person#0)
            (#$positionAppointedToInOrg ?AP $Person#0 ?ORG $PublicOfficial#1)
            ))
        </cyclPattern>
        <type>#$AppointingSomeoneToAPosition</type>
        <variable>?AP</variable>
    </template>
    <template>
        <nlPattern class="190142">the $CalendarMonth#0 $Event#1</nlPattern>
        <cyclPattern>
            (#$dateOfEvent $Event#1 (#$MonthFn $CalendarMonth#0 #$TheYear-Indexical))
    
        </cyclPattern>
        <type>$Event#1</type>
        <variable>$Event#1</variable>
    </template>
    <template>
        <nlPattern class="190143">[up to|less than|{}] $NonNegativeInteger#0 years</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DUR (#$YearsDuration 0 $NonNegativeInteger#0))
    
        </cyclPattern>
        <type>#$Time-Quantity</type>
        <variable>?DUR</variable>
    </template>
    <template>
        <nlPattern class="190143">[up to|less than|{}] $NonNegativeInteger#0 weeks</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DUR (#$WeeksDuration 0 $NonNegativeInteger#0))
    
        </cyclPattern>
        <type>#$Time-Quantity</type>
        <variable>?DUR</variable>
    </template>
    <template>
        <nlPattern class="190143">[up to|less than|{}] $NonNegativeInteger#0 months</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DUR (#$MonthsDuration 0 $NonNegativeInteger#0))
    
        </cyclPattern>
        <type>#$Time-Quantity</type>
        <variable>?DUR</variable>
    </template>
    <template>
        <nlPattern class="190143">[up to|less than|{}] $NonNegativeInteger#0 days</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DUR (#$DaysDuration 0 $NonNegativeInteger#0))
    
        </cyclPattern>
        <type>T#$ime-Quantity</type>
        <variable>?DUR</variable>
    </template>
    
    <template>
        <nlPattern class="190143">[up to|less than|{}] $NonNegativeInteger#0 hours</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DUR (#$HoursDuration 0 $NonNegativeInteger#0))
        </cyclPattern>
        <type>T#$ime-Quantity</type>
        <variable>?DUR</variable>
    </template>
    <template>
        <nlPattern class="190145">[prison terms|imprisonment|sentences] [of|for|{}] $Time-Quantity#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SENT 
            (#$SubcollectionOfWithRelationToFn #$PrisonSentencePunishment #$duration $Time-Quantity#1)
            )
        </cyclPattern>
        <type>#$PrisonSentencePunishment</type>
        <variable>?SENT</variable>
    </template>
    <template>
        <nlPattern class="190146">$NaturalHazard#0 in $GeographicalRegion#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?HAZ 
            (#$SubcollectionOfWithRelationToFn $NaturalHazard#0 #$eventOccursAt $GeographicalRegion#1))  
        </cyclPattern>
        <type>$NaturalHazard#0</type>
        <variable>?HAZ</variable>
    </template>
    <template>
        <nlPattern class="190155">$Earthquake#0 [hits|shakes|rattles|felt in|strikes|strikes in|jolts|rocks|rocked|has hit|has struck] $Place#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?QUAKES
            (#$SubcollectionOfWithRelationToFn $Earthquake#0 #$eventOccursAt $Place#1))
        </cyclPattern>
        <type>$Earthquake#0</type>
        <variable>?QUAKES</variable>
    </template>
    <template>
        <nlPattern class="190156">$Earthquake#0 measuring up to $NonNegativeNumber#1 on the Richter scale</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?QUAKES
            (#$CollectionSubsetFn $Earthquake#0 
            (#$TheSetOf ?X 
            (#$thereExists ?Y 
            (#$and
            (#$isa ?Y #$NonNegativeNumber)
            (#$richterMagnitude ?X ?Y)
            (#$lessThan ?Y $NonNegativeNumber#1 ))))))
        </cyclPattern>
        <type>$Earthquake#0</type>
        <variable>?QUAKES</variable>
    </template>
    <template>
        <nlPattern class="190148">$City#0 of $EnduringThing-Localized#1</nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?CIT $EnduringThing-Localized#1) (#$isa ?CIT $City#0))
        </cyclPattern>
        <type>$City#0</type>
        <variable>?CIT</variable>
    </template>
    <template>
        <nlPattern class="200911">$EdibleStuff#0 pizza</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PIZZA
            (#$PizzaFn 
            (#$TheSet $EdibleStuff#0)
            ))
        </cyclPattern>
        <type>#$Pizza</type>
        <variable>?PIZZA</variable>
    </template>
    <template>
        <nlPattern class="200911">$EdibleStuff#1 and $EdibleStuff#0 pizza</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PIZZA
            (#$PizzaFn 
            (#$TheSet $EdibleStuff#0 $EdibleStuff#1)
            ))
        </cyclPattern>
        <type>#$Pizza</type>
        <variable>?PIZZA</variable>
    </template>
    <template>
        <nlPattern class="200911">$EdibleStuff#2 , $EdibleStuff#1 and $EdibleStuff#0 pizza</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PIZZA
            (#$PizzaFn 
            (#$TheSet $EdibleStuff#0 $EdibleStuff#1 $EdibleStuff#2)
            ))
        </cyclPattern>
        <type>#$Pizza</type>
        <variable>?PIZZA</variable>
    </template>
    <template>
        <nlPattern class="200911">$EdibleStuff#3 , $EdibleStuff#2 , $EdibleStuff#1 and $EdibleStuff#0 pizza</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PIZZA
            (#$PizzaFn 
            (#$TheSet $EdibleStuff#0 $EdibleStuff#1 $EdibleStuff#2 $EdibleStuff#3)
            ))
        </cyclPattern>
        <type>#$Pizza</type>
        <variable>?PIZZA</variable>
    </template>
    <template>
        <nlPattern class="200911">$EdibleStuff#4 , $EdibleStuff#3 , $EdibleStuff#2 , $EdibleStuff#1 and $EdibleStuff#0 pizza</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PIZZA
            (#$PizzaFn 
            (#$TheSet $EdibleStuff#0 $EdibleStuff#1 $EdibleStuff#2 $EdibleStuff#3  $EdibleStuff#4)
            ))
        </cyclPattern>
        <type>#$Pizza</type>
        <variable>?PIZZA</variable>
    </template>
    
    
    <!--Ice cream-->
    <template>
        <nlPattern class="203400">$EdibleStuff#0 [ice cream|icecream|ice-cream]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ICE
            (#$SubcollectionOfWithRelationToTypeFn #$IceCream
            #$tasteOfObject (#$TasteFn $EdibleStuff#0))
            )
        </cyclPattern>
        <type>#$IceCream</type>
        <variable>?ICE</variable>
    </template>
    
      <template>
        <nlPattern class="2034001">$EdibleStuff#0 [,|and|, and|{}] $IceCream#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ICE
            (#$SubcollectionOfWithRelationToTypeFn $IceCream#1
            #$tasteOfObject (#$TasteFn $EdibleStuff#0))
            )
        </cyclPattern>
        <type>#$IceCream</type>
        <variable>?ICE</variable>
    </template>
    
      <template>
        <nlPattern class="2034001">$EdibleStuff#0 [-|and|{}] $EdibleStuff#1 $IceCream#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ICE
            (#$SubcollectionOfWithRelationToTypeFn (#$SubcollectionOfWithRelationToTypeFn $IceCream#2
            #$tasteOfObject (#$TasteFn $EdibleStuff#0)) 
            #$tasteOfObject (#$TasteFn $EdibleStuff#1))
            )
        </cyclPattern>
        <type>#$IceCream</type>
        <variable>?ICE</variable>
    </template>
    
    <!--sandwich-->
    
    <template>
        <nlPattern class="20000">$EdibleStuff#0 [,|and|, and|{}] $Sandwich#3</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SAND
            (#$SubcollectionOfWithRelationToTypeFn $Sandwich#3
            #$sandwichFillings $EdibleStuff#0)
            )
        </cyclPattern>
        <type>#$Sandwich</type>
        <variable>?SAND</variable>
    </template>
    
    
    <template>
        <nlPattern class="20000">$Sandwich#3 [,|and|, and] $EdibleStuff#0 [as fillings|{}]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SAND
            (#$SubcollectionOfWithRelationToTypeFn $Sandwich#3
            #$sandwichFillings $EdibleStuff#0)
            )
        </cyclPattern>
        <type>#$Sandwich</type>
        <variable>?SAND</variable>
    </template>
    <template>
        <nlPattern class="20000">$EdibleStuff#0 sandwich</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SAND
            (#$SubcollectionOfWithRelationToTypeFn #$Sandwich
            #$sandwichFillings $EdibleStuff#0)
            )
        </cyclPattern>
        <type>#$Sandwich</type>
        <variable>?SAND</variable>
    </template>
    <template>
        <nlPattern class="20000">sandwich [with|of|using|containing|filled with|from] $EdibleStuff#0 [as fillings|{}]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SAND
            (#$SubcollectionOfWithRelationToTypeFn #$Sandwich
            #$sandwichFillings $EdibleStuff#0)
            )
        </cyclPattern>
        <type>#$Sandwich</type>
        <variable>?SAND</variable>
    </template>
    <template>
        <nlPattern class="200000">$EdibleStuff#1 [,|and|, and|{}] $EdibleStuff#2 $Sandwich#3</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SAND
            (#$SubcollectionOfWithRelationToTypeFn
            (#$SubcollectionOfWithRelationToTypeFn $Sandwich#3
            #$sandwichFillings $EdibleStuff#1)
            #$sandwichFillings $EdibleStuff#2))
        </cyclPattern>
        <type>#$Sandwich</type>
        <variable>?SAND</variable>
    </template>
    <template>
        <nlPattern class="200000">$Sandwich#3 with $EdibleStuff#1 and $EdibleStuff#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SAND
            (#$SubcollectionOfWithRelationToTypeFn
            (#$SubcollectionOfWithRelationToTypeFn $Sandwich#3
            #$sandwichFillings $EdibleStuff#1)
            #$sandwichFillings $EdibleStuff#2))
        </cyclPattern>
        <type>#$Sandwich</type>
        <variable>?SAND</variable>
    </template>
    <template>
        <nlPattern class="200001">[is|was|has|{}] [preparing|prepare|prepared|make|makes|made|making|assembles|assemble|assembling] [a|an|some|{}] $EdibleStuff#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SAND 
            (#$PreparingFoodItemFn $EdibleStuff#1))
        </cyclPattern>
        <type>#$PreparingFoodItem</type>
        <variable>?SAND</variable>
    </template>
    <template>
        <nlPattern class="200002">[a|an||one|some|a few|{}] $IntelligentAgent#0 [is|are|{}] $PreparingFoodItem#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $PreparingFoodItem#1 #$performedBy $IntelligentAgent#0))
        </cyclPattern>
        <type>#$PreparingFoodItem</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000029">[a|an|One|one|A|An|some|Some|{}] $IntelligentAgent#0 [is|are|{}] [go|goes|going|doing|performing|has|have|do|does|perform|performs|{}] [a|an|some|{}] $DevisedStructuredActivity#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn 
            (#$ExecutionOfManeuverTypeFn $DevisedStructuredActivity#1) 
            #$performedBy $IntelligentAgent#0))
        </cyclPattern>
        <type>#$DevisedStructuredActivity</type>
        <variable>?ACT</variable>
    </template>
    
    <template>
        <nlPattern class="2000022">$Person#0 [is|are|{}] [make|prepare|prepares|makes|making|preparing] $EdibleStuff#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn (#$PreparingFoodItemFn $EdibleStuff#1) #$performedBy $Person#0))
        </cyclPattern>
        <type>#$PreparingFoodItem</type>
        <variable>?ACT</variable>
    </template>
 <template>
        <nlPattern class="2000023">$PreparingFoodItem#0 for $Animal#1 [to eat|to enjoy|{}]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $PreparingFoodItem#0 #$intendedBeneficiary $Animal#1))
        </cyclPattern>
        <type>#$PreparingFoodItem</type>
        <variable>?ACT</variable>
    </template>

    <template>
        <nlPattern class="20000221">
            $Person#0 
            [is|are|{}] [making|preparing|make|prepare|prepares|makes] 
            $EdibleStuff#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToFn (#$PreparingFoodItemFn $EdibleStuff#1) #$performedBy $Person#0))
        </cyclPattern>
        <type>#$PreparingFoodItem</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000023">
            $IntelligentAgent#0
            [is|are|{}] [making|preparing|make|prepare|prepares|makes] 
            $EdibleStuff#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn (#$PreparingFoodItemFn $EdibleStuff#1) #$performedBy $IntelligentAgent#0))
        </cyclPattern>
        <type>#$PreparingFoodItem</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200003">$IntelligentAgent#0 $Song-Sung#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $Song-Sung#1 #$performedBy $IntelligentAgent#0))
        </cyclPattern>
        <type>#$Song-Sung</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200003">people $Song-Sung#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $Song-Sung#1 
            #$performedBy (#$GroupFn #$IntelligentAgent)))
        </cyclPattern>
        <type>#$Song-Sung</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200004">$IntelligentAgent#0 [sing|singing] $MusicalComposition#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToFn 
            (#$SubcollectionOfWithRelationToTypeFn #$Song-Sung #$performedBy $IntelligentAgent#0)
            #$cWInstantiated $MusicalComposition#1))
        </cyclPattern>
        <type>#$Song-Sung</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200005">$IntelligentAgent#0 $Song-Sung#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $Song-Sung#1 #$performedBy $IntelligentAgent#0))
        </cyclPattern>
        <type>#$Song-Sung</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200006">$IntelligentAgent#0 $Commemoration#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $Commemoration#1 #$eventHonors $IntelligentAgent#0))
        </cyclPattern>
        <type>$Commemoration#1</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200007">$IntelligentAgent#0 $Commemoration#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToFn $Commemoration#1 #$eventHonors $IntelligentAgent#0))
        </cyclPattern>
        <type>$Commemoration#1</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000071">$IntelligentAgent#0 's $Commemoration#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToFn $Commemoration#1 #$eventHonors $IntelligentAgent#0))
        </cyclPattern>
        <type>$Commemoration#1</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000072">$IntelligentAgent#0 's $Commemoration#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $Commemoration#1 #$eventHonors $IntelligentAgent#0))
        </cyclPattern>
        <type>$Commemoration#1</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="20000721">$IntelligentAgent#0 's [birthday|birthday party]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn #$BirthdayParty #$eventHonors $IntelligentAgent#0))
        </cyclPattern>
        <type>#$BirthdayParty</type> 
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="20000721">$IntelligentAgent#0 's [birthday|birthday party]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToFn #$BirthdayParty #$eventHonors $IntelligentAgent#0))
        </cyclPattern>
        <type>#$BirthdayParty</type>
        <variable>?ACT</variable> 
    </template>
    <template>
        <nlPattern class="2000073">birthday for a $IntelligentAgent#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn #$BirthdayParty #$eventHonors $IntelligentAgent#0))
        </cyclPattern>
        <type>#$BirthdayParty</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000074">birthday party for a $IntelligentAgent#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn #$BirthdayParty #$eventHonors $IntelligentAgent#0))
        </cyclPattern>
        <type>#$BirthdayParty</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000075">$IntelligentAgent#0 [is|are|{}] [celebrating|celebrates|celebrate|throw|throws|throwing|hold|holds|holding] [a|an|{}] $Commemoration#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $Commemoration#1 #$doneBy $IntelligentAgent#0))
        </cyclPattern>
        <type>#$Commemoration</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200008">[A|an|{}] [group of|several|few|bunch of|bunch of|some] $Animal#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$GroupFn $Animal#0))
        </cyclPattern>
        <type>#$IntelligentAgent</type>
        <variable>?ANIMAL</variable>
    </template>
    <template>
        <nlPattern class="200009">[pickled|tipsy|smashed|drunk|drunken|plastered|inebriated] $Animal#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$CollectionIntersection2Fn $Animal#0 #$Drunk))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    <template>
        <nlPattern class="200009">[buzzed|stoned|fuddled|intoxicated] $Animal#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$CollectionIntersection2Fn $Animal#0 #$Intoxicated))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    <template>
        <nlPattern class="200009">[pickled|tipsy|smashed|drunk|drunken|plastered|inebriated] $Person#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$CollectionIntersection2Fn $Person#0 #$Drunk))
        </cyclPattern>
        <type>#$Person</type>
        <variable>?ANIMAL</variable>
    </template>
    <template>
        <nlPattern class="200009">[buzzed|stoned|fuddled|intoxicated] $Person#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$CollectionIntersection2Fn $Person#0 #$Intoxicated))
        </cyclPattern>
        <type>#$Person</type>
        <variable>?ANIMAL</variable>
    </template>
    <template>
        <nlPattern class="200009">[happy|delighted|joyous] $Animal#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$CollectionIntersection2Fn $Animal#0 #$Happy))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    <template>
        <nlPattern class="200010">[hungry|peckish] $Animal#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$CollectionIntersection2Fn $Animal#0 #$Hungry))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    
    <template>
        <nlPattern class="2000111">[play|playing] [a game of|a round of|some|{}] $Game#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$PlayingFn $Game#0))
        </cyclPattern>
        <type>#$PlayingAGame</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000112">[a game of|a round of|some] $Game#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$PlayingFn $Game#0))
        </cyclPattern>
        <type>#$PlayingAGame</type>
        <variable>?ACT</variable>
    </template>
    
    <template>
        <nlPattern class="200012">
            $Person#0
            [at|going to|goes to|go|to|attend|attends|attending|participating in]
            [a|an|{}] $SocialOccurrence#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$SubcollectionOfWithRelationFromTypeFn $Person#0 #$socialParticipants $SocialOccurrence#1))
        </cyclPattern>
        <type>$Person#0</type>
        <variable>?ANIMAL</variable>
    </template>
    
    
    <template>
        <nlPattern class="200013">[a|an|some|{}] $Person#0 $PlayingAGame#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn 
            $PlayingAGame#1 #$doneBy $Person#0))
        </cyclPattern>
        <type>#$PlayingAGame</type>
        <variable>?ACT</variable>
    </template>
    
    <template>
        <nlPattern class="2000131">
            [a|an|one|some|{}] $Person#0 [is|are|{}]
            [go|goes|perform|performing|carry out|carries out|do|does|doing|having|have|has] 
            [a|an|some|{}] $PurposefulAction#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT 
            (#$SubcollectionOfWithRelationToTypeFn 
            $PurposefulAction#1 #$doneBy $Person#0))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000132">
            [a|an|one|some|{}] $IntelligentAgent#0 [is|are|{}]
            [go|goes|perform|performing|carry out|carries out|do|does|doing|having|have|has] 
            [a|an|some|{}] $PurposefulAction#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT 
            (#$SubcollectionOfWithRelationToTypeFn 
            $PurposefulAction#1 #$doneBy $IntelligentAgent#0))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000133">
            [a|an|some|one|{}] $Person#0 [is|are|{}] $SkilledActivityType#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT 
            (#$SubcollectionOfWithRelationToTypeFn 
            $SkilledActivityType#1 #$doneBy $Person#0))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200014">$Person#0 [is|are|{}] [play|playing] [some|at|{}] $Game#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn (#$PlayingFn $Game#1) #$doneBy $Person#0))
        </cyclPattern>
        <type>#$PlayingAGame</type>
        <variable>?ACT</variable>
    </template>
    
    <template>
        <nlPattern class="2000145">
            [A|An|One|one|an|a|some|several|a few|a bunch of|{}]
            $IntelligentAgent#0
            [is|are|{}] 
            [does|do|have|has|have|having|doing|performs|perform|performing|{}]
            $IntelligentAgentActivity#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn 
            $IntelligentAgentActivity#1 #$doneBy $IntelligentAgent#0))
        </cyclPattern>
        <type>$IntelligentAgentActivity#1</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000146">
            [A|An|an|one|One|a|some|several|a few|a bunch of|{}]
            $IntelligentAgent#0 
            [is|are|do|does|has|performs|perform|performing|have|{}] 
            [doing|having|performing|{}]
            $Action#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToFn $Action#1 #$doneBy $IntelligentAgent#0))
        </cyclPattern>
        <type>$Action#1</type>
        <variable>?ACT</variable>
    </template>    
    <template>
        <nlPattern class="2000141">
            [A|An|One|one|an|a|some|several|a few|a bunch of|{}] $Animal#0
            [is|are|{}] [do|does|doing|performs|perform|performing|{}]
            $AnimalActivity#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn 
            $AnimalActivity#1 #$doneBy $Animal#0))
        </cyclPattern>
        <type>$AnimalActivity#1</type>
        <variable>?ACT</variable>
    </template>
    
    
    <template>
        <nlPattern class="2000147">[A|An|an|a|some|several|a few|a bunch of|{}] $IntelligentAgent#0 $Action#1 and $Action#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToFn 
            (#$CollectionUnionFn (#$TheSet $Action#1 $Action#2)) #$doneBy $IntelligentAgent#0))
        </cyclPattern>
        <type>#$Action</type>
        <variable>?ACT</variable>
    </template>    
     
    <template>
        <nlPattern class="2000142">I [would like to|wouldn't mind|want to|wish to|wish I could] $IntelligentAgentActivity#0</nlPattern>
        <cyclPattern>
            (#$desires  #$TheUser
            (#$thereExists ?X 
            (#$and (#$after ?X #$Now) 
            (#$isa ?X
            (#$SubcollectionOfWithRelationToFn $IntelligentAgentActivity#0 #$doneBy #$TheUser)))))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>  
    </template>
    
    <template>
        <nlPattern class="2000131">[would you like|do you want|want] to $IntelligentAgentActivity#0 [?|{}]</nlPattern>
        <cyclPattern>
            (#$desires  #$Cyc 
            (#$thereExists ?X 
            (#$and (#$after ?X #$Now) 
            (#$isa ?X
            (#$SubcollectionOfWithRelationToFn $IntelligentAgentActivity#0 #$doneBy #$Cyc)))))
        </cyclPattern>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    
    
    <template>
        <nlPattern class="2000143">I [would like to|wouldn't mind|want to|wish to|wish I could] $IntelligentAgentActivity#0 [with you|with Cyc|together] [!|{}]</nlPattern>
        <cyclPattern>
            (#$desires  #$TheUser
            (#$thereExists ?X 
            (#$and (#$after ?X #$Now) 
            (#$isa ?X
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToFn $IntelligentAgentActivity#0 #$doneBy #$TheUser)
            (#$SubcollectionOfWithRelationToFn $IntelligentAgentActivity#0 #$doneBy #$Cyc)
            )))))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>  
    </template>

    <template>
        <nlPattern class="2000144">how about [we|you and I|you and me|{}] $IntelligentAgentActivity#0 [together|you and I|{}] [!|?|{}]</nlPattern>
        <cyclPattern>
            (#$desires  #$TheUser
            (#$thereExists ?X 
            (#$and (#$after ?X #$Now) 
            (#$isa ?X
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToFn $IntelligentAgentActivity#0 #$doneBy #$TheUser)
            (#$SubcollectionOfWithRelationToFn $IntelligentAgentActivity#0 #$doneBy #$Cyc)
            )))))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>  
    </template>
    
    <template>
        <nlPattern class="200018">$ConflictEvent#0 [with|in which|during which|in the course of which|where] [$PhysicalDevice#1 are used by both sides|both sides use $PhysicalDevice#1]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?WARS
            (#$CollectionSubsetFn $ConflictEvent#0
            (#$TheSetOf ?FIGHT 
            (#$thereExists ?COMB1
            (#$thereExists ?COMB2 
            (#$thereExists ?ATTACK1
            (#$thereExists ?WEAP1
            (#$thereExists ?ATTACK2
            (#$thereExists ?WEAP2
            (#$and 
            (#$deviceUsedAsWeapon ?ATTACK1 ?WEAP1)
            (#$perpetrator ?ATTACK1 ?COMB1)
            (#$isa ?WEAP1 $PhysicalDevice#1)
            (#$deviceUsedAsWeapon ?ATTACK2 ?WEAP2)
            (#$perpetrator ?ATTACK2 ?COMB2)
            (#$isa ?WEAP2 $PhysicalDevice#1)
            (#$opponentsInConflict ?COMB1 ?COMB2 ?FIGHT)
            (#$properSubEvents ?FIGHT ?ATTACK1)
            (#$properSubEvents ?FIGHT ?ATTACK2)
            ))))))))))
        </cyclPattern>
        <type>$ConflictEvent#0</type>
        <variable>?WARS</variable>
    </template>
    <template>
        <nlPattern class="200019">$ConflictEvent#0 [involving|with|using|in which|during which|in the course of which|where|with use of] $PhysicalDevice#1 [are|is|{}] [used|{}]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?WARS
            (#$CollectionSubsetFn $ConflictEvent#0
            (#$TheSetOf ?FIGHT 
            (#$thereExists ?ATTACK1
            (#$thereExists ?WEAP1
            (#$and 
            (#$deviceUsedAsWeapon ?ATTACK1 ?WEAP1)                  
            (#$isa ?WEAP1 $PhysicalDevice#1)
            (#$properSubEvents ?FIGHT ?ATTACK1)    
            ))))))
        </cyclPattern>
        <type>$ConflictEvent#0</type>
        <variable>?WARS</variable>
    </template>
    <template>
        <nlPattern class="200019">$PhysicalDevice#0 [fight|battle]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?WARS
            (#$CollectionSubsetFn #$ConflictEvent
            (#$TheSetOf ?FIGHT          
            (#$thereExists ?WEAP1
            (#$and 
            (#$deviceUsedAsWeapon ?FIGHT ?WEAP1)                  
            (#$isa ?WEAP1 $PhysicalDevice#0)   
            )))))
        </cyclPattern>
        <type>#$ConflictEvent</type>
        <variable>?WARS</variable>
    </template>
    <template>
        <nlPattern class="200020">the [last|most recent|latest] $Event#0 was in [$Date#1 in $Place#2|in $Place#2 in $Date#1]</nlPattern>
        <cyclPattern>
            (#$thereExists ?EVT
            (#$and
            (#$isa ?EVT $Event#0)
            (#$dateOfEvent ?EVT $Date#1)
            (#$eventOccursAt ?EVT $Place#2)
            (#$not (#thereExists ?EVT2
            (#$and  (#$isa ?EVT2 $Event#0)
            (#$after ?EVT2 ?EVT))))
            ))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>  
    </template>
    <template>
        <nlPattern class="200020">the [last|most recent|latest] $Event#0 was in [$NonNegativeInteger#1 in $Place#2|in $Place#2 in $NonNegativeInteger#1]</nlPattern>
        <cyclPattern>
            (#$thereExists ?EVT
            (#$and
            (#$isa ?EVT $Event#0)
            (#$dateOfEvent ?EVT (#$YearFn $NonNegativeInteger#1))
            (#$eventOccursAt ?EVT $Place#2)
            (#$not (#thereExists ?EVT2
            (#$and  (#$isa ?EVT2 $Event#0)
            (#$after ?EVT2 ?EVT))))
            ))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>  
    </template>
    <template>
        <nlPattern class="200030">$IntelligentAgent#0 's first $AnimateActivity#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $AnimateActivity#1
            (#$TheSetOf ?EVENT          
            (#$thereExists ?AGT (#$and 
            (#$isa ?AGT $IntelligentAgent#0)
            (#$isa ?EVENT $AnimateActivity#1)
            (#$performedBy ?EVENT ?AGT)
            (#$not (#$thereExists ?OTHEREVT (#$and
            (#$performedBy ?OTHEREVT ?AGT)
            (#$isa ?OTHEREVT $AnimateActivity#1)
            (#$startsAfterEndingOf ?EVENT ?OTHEREVT)))))))))    
        </cyclPattern>
        <type>$AnimateActivity#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200031">$IntelligentAgent#0 's first $AnimateActivity#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $AnimateActivity#1
            (#$TheSetOf ?EVENT          
            (#$and 
            (#$isa ?EVENT $AnimateActivity#1)
            (#$performedBy ?EVENT $IntelligentAgent#0)
            (#$not (#$thereExists ?OTHEREVT (#$and
            (#$performedBy ?OTHEREVT $IntelligentAgent#0)
            (#$isa ?OTHEREVT $AnimateActivity#1)
            (#$startsAfterEndingOf ?EVENT ?OTHEREVT))))))))   
        </cyclPattern>
        <type>$AnimateActivity#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="2000311">$IntelligentAgent#0 's first $SocialGathering#1 with $IntelligentAgent#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $SocialGathering#1
            (#$TheSetOf ?EVENT          
            (#$and 
            (#$deliberateSocialParticipants ?EVENT $IntelligentAgent#0)
            (#$not (#$thereExists ?OTHEREVT (#$and
            (#$deliberateSocialParticipants ?OTHEREVT $IntelligentAgent#0)
            (#$deliberateSocialParticipants ?OTHEREVT $IntelligentAgent#2)
            (#$isa ?OTHEREVT $SocialGathering#1)
            (#$startsAfterEndingOf ?EVENT ?OTHEREVT))))))))   
        </cyclPattern>
        <type>$SocialGathering#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200032">$SocialGathering#1 with $IntelligentAgent#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $SocialGathering#1
            (#$TheSetOf ?EVENT           
            (#$relationInstanceExists #$deliberateSocialParticipants ?EVENT $IntelligentAgent#0))))                     
        </cyclPattern>
        <type>$SocialGathering#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200034">$SocialGathering#1 with $IntelligentAgent#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $SocialGathering#1
            (#$TheSetOf ?EVENT           
            (#$deliberateSocialParticipants ?EVENT $IntelligentAgent#0))))                     
        </cyclPattern>
        <type>$SocialGathering#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200033">$IntelligentAgent#0 's $SocialGathering#1 with $IntelligentAgent#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $SocialGathering#1
            (#$TheSetOf ?EVENT      (#$and     
            (#$relationInstanceExists #$deliberateSocialParticipants ?EVENT $IntelligentAgent#0)
            (#$relationInstanceExists #$deliberateSocialParticipants ?EVENT $IntelligentAgent#2)))))                     
        </cyclPattern>
        <type>$SocialGathering#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200036">$IntelligentAgent#0 's $SocialGathering#1 with $IntelligentAgent#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $SocialGathering#1
            (#$TheSetOf ?EVENT      (#$and     
            (#$deliberateSocialParticipants ?EVENT $IntelligentAgent#0)
            (#$deliberateSocialParticipants ?EVENT $IntelligentAgent#2)))))                     
        </cyclPattern>
        <type>$SocialGathering#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200037">$IntelligentAgent#0 's $SocialGathering#1 with $IntelligentAgent#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $SocialGathering#1
            (#$TheSetOf ?EVENT      (#$and     
            (#$relationInstanceExists #$deliberateSocialParticipants ?EVENT $IntelligentAgent#0)
            (#$deliberateSocialParticipants ?EVENT $IntelligentAgent#2)))))                     
        </cyclPattern>
        <type>$SocialGathering#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200038">$IntelligentAgent#0 's $SocialGathering#1 with $IntelligentAgent#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn $SocialGathering#1
            (#$TheSetOf ?EVENT      (#$and     
            (#$deliberateSocialParticipants ?EVENT $IntelligentAgent#0)
            (#$relationInstanceExists #$deliberateSocialParticipants ?EVENT $IntelligentAgent#2)))))                     
        </cyclPattern>
        <type>$SocialGathering#1</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200033">[a|an|{}] $IntelligentAgent#0 [feeds|feeding|gives] [a|an|some|{}] $Animal#1 [a|an|some|{}] $EdibleStuff#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn #$FeedingEvent
            (#$TheSetOf ?EVENT      
            (#$thereExists ?FEEDER (#$thereExists ?FED (#$thereExists ?FOOD 
            (#$and     
            (#$isa ?FOOD $EdibleStuff#2)
            (#$consumedObject ?EVENT ?FOOD)
            (#$isa ?FED $Animal#1)
            (#$recipientOfService ?EVENT ?FED)
            (#$isa ?FEEDER $IntelligentAgent#0)
            (#$providerOfService ?EVENT ?FEEDER))))))))                    
        </cyclPattern>
        <type>#$FeedingEvent</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200033">[a|an|{}] $IntelligentAgent#0 [feeds|feeding|gives] [a|an|some|{}] $OrganicMaterial#2 to [a|an|some|{}] $NonHumanAnimal#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn #$FeedingEvent
            (#$TheSetOf ?EVENT      
            (#$thereExists ?FEEDER (#$thereExists ?FED (#$thereExists ?FOOD 
            (#$and     
            (#$isa ?FOOD $OrganicMaterial#2)
            (#$consumedObject ?EVENT ?FOOD)
            (#$isa ?FED $NonHumanAnimal#1)
            (#$recipientOfService ?EVENT ?FED)
            (#$isa ?FEEDER $IntelligentAgent#0)
            (#$providerOfService ?EVENT ?FEEDER))))))))                    
        </cyclPattern>
        <type>#$FeedingEvent</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200033">[a|an|some|{}] $Animal#1 is [fed|given] [a|an|some|{}] $EdibleStuff#2 by [a|an|{}] $IntelligentAgent#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn #$FeedingEvent
            (#$TheSetOf ?EVENT      
            (#$thereExists ?FEEDER (#$thereExists ?FED (#$thereExists ?FOOD 
            (#$and     
            (#$isa ?FOOD $EdibleStuff#2)
            (#$consumedObject ?EVENT ?FOOD)
            (#$isa ?FED $Animal#1)
            (#$recipientOfService ?EVENT ?FED)
            (#$isa ?FEEDER $IntelligentAgent#0)
            (#$providerOfService ?EVENT ?FEEDER))))))))                    
        </cyclPattern>
        <type>#$FeedingEvent</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200033">[a|an|{}] $IntelligentAgent#0 [feed|feeds|feeding|gives] [a|an|some|{}] $Animal#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn #$FeedingEvent
            (#$TheSetOf ?EVENT      
            (#$thereExists ?FEEDER (#$thereExists ?FED (#$thereExists ?FOOD
            (#$and     
            (#$isa ?FOOD #$EdibleStuff)
            (#$consumedObject ?EVENT ?FOOD)
            (#$isa ?FED $Animal#1)
            (#$recipientOfService ?EVENT ?FED)
            (#$isa ?FEEDER $IntelligentAgent#0)
            (#$providerOfService ?EVENT ?FEEDER))))))))                    
        </cyclPattern>
        <type>#$FeedingEvent</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <nlPattern class="200033">[a|an|some|{}] $Animal#1 is [fed|given] by [a|an|{}] $IntelligentAgent#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionSubsetFn #$FeedingEvent
            (#$TheSetOf ?EVENT      
            (#$thereExists ?FEEDER (#$thereExists ?FED (#$thereExists ?FOOD 
            (#$and     
            (#$isa ?FOOD #$EdibleStuff)
            (#$consumedObject ?EVENT ?FOOD)
            (#$isa ?FED $Animal#1)
            (#$recipientOfService ?EVENT ?FED)
            (#$isa ?FEEDER $IntelligentAgent#0)
            (#$providerOfService ?EVENT ?FEEDER))))))))                    
        </cyclPattern>
        <type>#$FeedingEvent</type>
        <variable>?EVT</variable>
    </template>
    
    
    
    
    
    <template>
        <nlPattern class="200035">[who was|who were|{}] [the|one of the|among the|{}] [father|fathers] of $PartiallyIntangibleIndividual#1 and $PartiallyIntangibleIndividual#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PEOPLE
            (#$CollectionSubsetFn #$AdultMaleHuman
            (#$TheSetOf ?PERSON     
            (#$and     
            (#$createdBy $PartiallyIntangibleIndividual#1 ?PERSON)
            (#$createdBy $PartiallyIntangibleIndividual#2 ?PERSON)
            ))))
        </cyclPattern>
        <type>#$AdultMaleHuman</type>
        <variable>?PEOPLE</variable>
    </template>
    <template>
        <nlPattern class="200036">[who was|who were|{}] [the|one of the|among the|{}] [mothers|mother] of $PartiallyIntangibleIndividual#1 and $PartiallyIntangibleIndividual#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PEOPLE
            (#$CollectionSubsetFn #$AdultFemaleHuman
            (#$TheSetOf ?PERSON     
            (#$and     
            (#$createdBy $PartiallyIntangibleIndividual#1 ?PERSON)
            (#$createdBy $PartiallyIntangibleIndividual#2 ?PERSON)
            ))))
        </cyclPattern>
        <type>#$AdultFemaleHuman</type>
        <variable>?PEOPLE</variable>
    </template>
    <template>
        <nlPattern class="200040">[who was|known as|who were|{}] [the|one of the|among the|{}] [creators|creator|developer|developers|inventors|inventor] of $PartiallyIntangibleIndividual#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PEOPLE
            (#$CollectionSubsetFn #$HumanAdult
            (#$TheSetOf ?PERSON     
            (#$and     
            (#$createdBy $PartiallyIntangibleIndividual#1 ?PERSON)              
            ))))
        </cyclPattern>
        <type>#$HumanAdult</type>
        <variable>?PEOPLE</variable>
    </template>
    <template>
        <nlPattern class="200040">[who was|known as|who were|{}] [the|one of the|among the|{}] [creators|creator|developer|developers|inventors|inventor] of $PartiallyIntangibleIndividual#1 and $PartiallyIntangibleIndividual#2</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PEOPLE
            (#$CollectionSubsetFn #$HumanAdult
            (#$TheSetOf ?PERSON     
            (#$and     
            (#$createdBy $PartiallyIntangibleIndividual#1 ?PERSON) 
            (#$createdBy $PartiallyIntangibleIndividual#2 ?PERSON)
            ))))
        </cyclPattern>
        <type>#$HumanAdult</type>
        <variable>?PEOPLE</variable>
    </template>
    <template>
        <nlPattern class="200035">[who was|known as|who were|{}] [the|one of the|among the|{}] [father|fathers] of $PartiallyIntangibleIndividual#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PEOPLE
            (#$CollectionSubsetFn #$AdultMaleHuman
            (#$TheSetOf ?PERSON     
            (#$and     
            (#$createdBy $PartiallyIntangibleIndividual#1 ?PERSON)              
            ))))
        </cyclPattern>
        <type>#$AdultMaleHuman</type>
        <variable>?PEOPLE</variable>
    </template>
    <template>
        <nlPattern class="200036">[who was|known as|who were|{}] [the|one of the|among the|{}] [mothers|mother] of $PartiallyIntangibleIndividual#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PEOPLE
            (#$CollectionSubsetFn #$AdultFemaleHuman
            (#$TheSetOf ?PERSON     
            (#$and     
            (#$createdBy $PartiallyIntangibleIndividual#1 ?PERSON)              
            ))))
        </cyclPattern>
        <type>#$AdultFemaleHuman</type>
        <variable>?PEOPLE</variable>
    </template>
    
    
    <template>
        <nlPattern class="200040">$Person#0 [,|-] $Person#1 [,|-|{}]</nlPattern>
        <cyclPattern>
            (#$isa $Person#0 $Person#1)
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>  
    </template>
    
    
     <template>
         <examples>
             <example>Douglas Lenat, 60, of Austin, Tx.,</example>
             </examples>
        <nlPattern class="200040">$Person#0 [,|-] $NonNegativeInteger#1 [,|-|{}] [of|from|resident of|a resident of] $City#2 [,|-|{}]</nlPattern>
        <cyclPattern>
            (#$and 
               (#$equalSymbols ?PER $Person#0)
               (#$age ?PER (#$YearsDuration $NonNegativeInteger#1))
               (#$residesInRegion ?PER $City#2))
        </cyclPattern>
        <type>#$Person</type>
        <variable>?PER</variable>
    </template>
    
    <template>
         <examples>
             <example>Douglas Lenat, 60,</example>
             </examples>
        <nlPattern class="200040">$Person#0 [,|-] $NonNegativeInteger#1 [,|-|{}]</nlPattern>
        <cyclPattern>
            (#$and 
               (#$equalSymbols ?PER $Person#0)
               (#$age ?PER (#$YearsDuration $NonNegativeInteger#1)))
        </cyclPattern>
        <type>#$Person</type>
        <variable>?PER</variable>
    </template>
    
     <template>
         <examples>
             <example>60 year old Douglas Lenat,</example>
                     <example>33 year old Courteny Love</example>
             </examples>
        <nlPattern class="200040">$NonNegativeInteger#1 year old $Person#0 [,|-|{}]</nlPattern>
        <cyclPattern>
            (#$and 
               (#$equalSymbols ?PER $Person#0)
               (#$age ?PER (#$YearsDuration $NonNegativeInteger#1)))
        </cyclPattern>
        <type>#$Person</type>
        <variable>?PER</variable>
    </template>
    
    <template>
         <examples>
             <example>60 year old Douglas Lenat,from Philadelphia,</example>
                     <example>33 year old Courteny Love, from France</example>
             </examples>
        <nlPattern class="200040">$NonNegativeInteger#1 year old $Person#0 [,|-|{}] [who comes from|of|from|resident of|a resident of] $City#2 [,|-|{}]</nlPattern>
        <cyclPattern>
            (#$and 
               (#$equalSymbols ?PER $Person#0)
               (#$age ?PER (#$YearsDuration $NonNegativeInteger#1))
               (#$residesInRegion ?PER $City#2))
        </cyclPattern>
        <type>#$Person</type>
        <variable>?PER</variable>
    </template>
    
     <template>
         <examples>
             <example>Douglas Lenat, of Austin, Tx.,</example>
             </examples>
        <nlPattern class="200040">$Person#0 [,|-|{}] [of|from|who comes from|resident of|a resident of] $City#2 [,|-|{}]</nlPattern>
        <cyclPattern>
            (#$and 
               (#$equalSymbols ?PER $Person#0)
               (#$residesInRegion ?PER $City#2))
        </cyclPattern>
        <type>#$Person</type>
        <variable>?PER</variable>
    </template>
    
    <template>
        <nlPattern class="200040">$Person#0 [,|-|{}] $Person#1 [,|-|{}] [has|is|{}] [died|dies|dead|passed|passed away|passes|passes away] [today|{}] [.|;|,|{}] [was|he was|she was|at|{}] [aged|the age of|{}] $PositiveInteger#2</nlPattern>
        <cyclPattern>
            (#$and (#$isa $Person#0 $Person#1)
            (#$ageInYearsAtDeathEvent $Person#0 $PositiveInteger#2))
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>  
    </template>
    
    <template>
        <nlPattern class="200041">$Person#0 [has died|died|dies|dead|is dead|passed|passed away|passes|passes away] [today|{}] [,|.|;|{}] [was|he was|she was|at|{}] [aged|the age of|{}] $PositiveInteger#2</nlPattern>
        <cyclPattern>
            (#$ageInYearsAtDeathEvent $Person#0 $PositiveInteger#2)
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>  
    </template>
    
    <template>
        <nlPattern class="200051">[vintage|very old|really old] $Artifact#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ART (#$VintageFn $Artifact#0))
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?ART</variable>
    </template>
    <template>
        <nlPattern class="200052">[$PositiveInteger#0 vintage|vintage $PositiveInteger#0] $Artifact#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ART
            (#$VintageFn $Artifact#1
            (#$YearFn $PositiveInteger#0)))            
        </cyclPattern>
        <type>$Artifact#1</type>
        <variable>?ART</variable>
    </template>
    <template>
        <nlPattern class="200060">[is|are|{}] [makes|making|make|{}] [repairs|repairing|fixes|fix|repair] [fixing|to|of|{}] [a|an|some|various|{}] $Artifact#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?REPAIR
            (#$RepairingFn $Artifact#0))             
        </cyclPattern>
        <type>#$SimpleRepairing</type>
        <variable>?REPAIR</variable>
    </template>
    
    <!-- Videos -->

    
    <!-- MED11 Event 7 Changing a tire--> 
    <!--flat tire--> 
    <template>
        <nlPattern class="200062">flat $Tire#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ART
            (#$CollectionIntersection2Fn 
            (#$WholeTypeForPartTypeFn $Tire#0 #$Wheel-WheelAndTireComposite) 
            #$FlatTire) )          
        </cyclPattern>
        <type>#$FlatTire</type>
        <variable>?ART</variable>
    </template>
    <template>
        <nlPattern class="200063">[change|changing|changes|replacing|replace|replaces] [a|an|the|its|{}] $PhysicalPartOfObject#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ART
            (#$ReplacingFn $PhysicalPartOfObject#0))          
        </cyclPattern>
        <type>#$ReplacingAnObject</type>
        <variable>?ART</variable>
    </template>
    <template>
        <nlPattern class="200064">[change|changing|changes|replacing|replace|replaces] [a|an|the|its|{}] $Tire#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ART
            (#$ReplacingFn (#$WholeTypeForPartTypeFn $Tire#0 #$Wheel-WheelAndTireComposite))
            )  
        </cyclPattern>
        <type>#$ReplacingAnObject</type>
        <variable>?ART</variable>
    </template>
    <template>
        <examples>
            <example>A man changes a car's tire</example>
        </examples>
        <nlPattern class="2000641">
            $PhysicalDevice#0 's $PhysicalPartOfObject#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PART 
              (#$SubcollectionOfWithRelationToTypeFn $PhysicalPartOfObject#1 #$physicalParts $PhysicalDevice#0))
        </cyclPattern>
        <type>
            $PhysicalPartOfObject#1
        </type>  
             <variable>?PART</variable>
    </template>
    <!--MED 11 Event 1 Performing a board trick-->
    <template>
        <nlPattern class="200070">[perform|performing|performs|executing|executes|execute|do|does|{}] [a|an|his|her|its|some|a bunch of|several|{}] $RecreationalBoardRidingActivity#0 [trick|tricks]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?TRICK
            (#$CollectionSubsetFn $RecreationalBoardRidingActivity#0
            (#$TheSet ?X 
            (#$thereExists ?TRANS (#$and
            (#$relationAllExists #$transporter $RecreationalBoardRidingActivity#0 ?TRANS)
            (#$isa ?X  
            (#$SubcollectionOfWithRelationFromTypeFn (#$ExecutionOfManeuverTypeFn #$BoardTrick) #$performancesOfWorkAre
            (#$SubcollectionOfWithRelationToFn #$BoardTrick #$structuredActivityFocalDeviceType ?TRANS)
            )))))))        
        </cyclPattern>
        <type>#$RecreationalBoardRidingActivity</type>
        <variable>?TRICK</variable>
    </template>
    
    <template>
        <examples>
            <example>Segway tricks</example>
            <example>moped trick</example>
        </examples>    
        <nlPattern class="200075">$MountableTransporter#0 [trick|tricks|stunt|stunts]</nlPattern>
        <cyclPattern>(#$equals ?X (#$ExecutionOfManeuverTypeFn (#$TransporterStuntFn $MountableTransporter#0)))
        </cyclPattern>
        <type>#$PurposefulPhysicalAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>boys perform tricks on skateboards</example>
            <example>young women do moped tricks</example>
        </examples>    
        <nlPattern class="200075">[do|doing|does|make|making|{}] [a|an|{}] [trick|tricks|stunt|stunts] [on|with|using] [a|an|{}] $MountableTransporter#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$ExecutionOfManeuverTypeFn (#$TransporterStuntFn $MountableTransporter#0)))
        </cyclPattern>
        <type>#$PurposefulPhysicalAction</type>
        <variable>?X</variable>
    </template>
    
    <template>
        <examples>
            <example>Segway tricks in a half pipe</example>
            <example>moped trick on a ramp</example>
            <example>skateboart stunt in a parking lot</example>
        </examples>    
        <nlPattern class="200076">
            $PurposefulPhysicalAction#0 
            [carried out|performed|happening|taking place|that take place|{}] 
            [in|on|inside|within|at|around] [a|an|{}] $Person-SupportingObject#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToTypeFn $PurposefulPhysicalAction#0 
            #$eventFocalLocation  $Person-SupportingObject#1))
        </cyclPattern>
        <type>#$PurposefulPhysicalAction</type>
        <variable>?X</variable>
    </template>
    
    <template>   
        <nlPattern class="200076">
            $DevisedStructuredActivity#0 
            [carried out|performed|happening|taking place|that take place|{}] 
            [in|on|inside|within|at|around] [a|an|{}] $Person-SupportingObject#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToTypeFn $DevisedStructuredActivity#0 
            #$eventFocalLocation  $Person-SupportingObject#1))
        </cyclPattern>
        <type>#$DevisedStructuredActivity</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>Man performs a Kickflip on a skateboard</example>
            <example>ollie on a longbaord</example>
        </examples>    
        <nlPattern class="200077">
            $DevisedStructuredActivityWithFocalDevice#0 
            [carried out|performed|happening|taking place|that take place|{}] 
            [with|making use of|using|on|at] [a|an|{}] $PhysicalDevice#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToFn 
            $DevisedStructuredActivityWithFocalDevice#0  
            #$structuredActivityFocalDeviceType  $PhysicalDevice#1))
        </cyclPattern>
        <type>$DevisedStructuredActivityWithFocalDevice#0</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>sewing on a sewing machine</example>
            <example>programming on a computer</example>
        </examples>    
        <nlPattern class="200077">
            $UsingADevice#0 
            [carried out|performed|happening|taking place|that take place|{}] 
            [making use of|using|on|at|with] [a|an|{}] $PhysicalDevice#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToTypeFn 
            $UsingADevice#0  
            #$deviceUsed $PhysicalDevice#1))
        </cyclPattern>
        <type>$UsingADevice#0</type>
        <variable>?X</variable>
    </template>
    
    <template>
        <examples>
            <example>Segway tricks in front of a bank</example>
            <example>skateboard tricks in front of a bank</example>
        </examples>    
        <nlPattern class="200076">
            $PurposefulPhysicalAction#0 
            [carried out|performed|happening|taking place|that take place|{}] 
            [in front of|at the front of] [a|an|{}] $HumanOccupationConstruct#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToTypeFn $PurposefulPhysicalAction#0 
            #$inFrontOf-Generally  $HumanOccupationConstruct#1))
        </cyclPattern>
        <type>#$PurposefulPhysicalAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>Segway tricks behind a bank</example>
            <example>skateboard tricks behind a bank</example>
        </examples>    
        <nlPattern class="200076">
            $PurposefulPhysicalAction#0 
            [carried out|performed|happening|taking place|that take place|{}] 
            [behind|at the back of|back of|at the rear of] [a|an|{}] $HumanOccupationConstruct#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToTypeFn $PurposefulPhysicalAction#0 
            #$behind-Generally  $HumanOccupationConstruct#1))
        </cyclPattern>
        <type>#$PurposefulPhysicalAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>Segway tricks next to a bank</example>
            <example>skateboard tricks at the side of a bank</example>
        </examples>    
        <nlPattern class="200076">
            $PurposefulAction#0 
            [carried out|performed|happening|taking place|that take place|{}] 
            [adjacent to|next to|beside|at the side of|to the side of|near the side of] 
            [a|an|{}] $HumanOccupationConstruct#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols?X 
            (#$SubcollectionOfWithRelationToTypeFn $PurposefulAction#0 
            #$adjacentTo  $HumanOccupationConstruct#1))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>Parkour in Perth by the sea</example>
            <example>picnic next to Town Lake</example>
        </examples>    
        <nlPattern class="2000768">
            $PurposefulAction#0 [,|{}] [which|that|{}] [is|being|{}]
            [done|carried out|performed|happening|happens|taking place|takes place|take place|{}] 
            [by|adjacent to|next to|beside|at the side of|to the side of|near the side of] 
            $Place#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToFn $PurposefulAction#0 
            #$adjacentTo  $Place#1))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>Parkour in Perth by the sea</example>
            <example>picnic next to Town Lake</example>
        </examples>    
        <nlPattern class="2000769">
            $PurposefulAction#0 [,|{}] [which|that|{}] [is|being|{}]
            [done|carried out|performed|happening|happens|taking place|takes place|take place|{}] 
            [by|adjacent to|next to|beside|at the side of|to the side of|near the side of] 
            [a|an|some] $Place#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToTypeFn $PurposefulAction#0 
            #$adjacentTo  $Place#1))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>Segway tricks near to a bank</example>
            <example>skateboard tricks a the side of a bank</example>
        </examples>    
        <nlPattern class="2000770">
            $PurposefulAction#0 
            [carried out|performed|happening|taking place|that take place|{}] 
            [near|by|near to|close to|near by|close by|around|around about] 
            [a|an|{}] $HumanOccupationConstruct#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols?X 
            (#$SubcollectionOfWithRelationToTypeFn $PurposefulAction#0 
            #$near  $HumanOccupationConstruct#1))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>Parkour in Perth near the sea</example>
            <example>picnic around Town Lake</example>
        </examples>    
        <nlPattern class="2000771">
            $PurposefulAction#0 [,|{}] [which|that|{}] [is|being|{}]
            [done|carried out|performed|happening|happens|taking place|takes place|take place|{}] 
            [near|by|near to|close to|close by|near by|around|around about] 
            $Place#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToFn $PurposefulAction#0 
            #$adjacentTo  $Place#1))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>Parkour in Perth near the sea</example>
            <example>picnic near to Town Lake</example>
        </examples>    
        <nlPattern class="2000772">
            $PurposefulAction#0 [,|{}] [which|that|{}] [is|being|{}]
            [done|carried out|performed|happening|happens|taking place|takes place|take place|{}] 
            [near|by|near to|close to|near by|close by|around|around about] 
            [a|an|some] $Place#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToTypeFn $PurposefulAction#0 
            #$adjacentTo  $Place#1))
        </cyclPattern>
        <type>#$PurposefulAction</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>go on a boat ride</example>
        </examples>    
        <nlPattern class="2000761">
            [mess about in|mess around in|mess around on|going on|go for|going for|go on|goes on|take|{}] 
            [a|an|{}] $TransportationDevice#0 
            [ride|trip|jaunt]
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X (#$RecreationalFn 
            (#$TransportViaFn $TransportationDevice#0 )))
        </cyclPattern>
        <type>#$RecreationalActivity</type>
        <variable>?X</variable>
    </template>
    <template>
        <examples>
            <example>go surfing</example>
            <example>go dancing</example>
        </examples>    
        <nlPattern class="2000761">
            [go|going|goes] $Action#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X $Action#0)
        </cyclPattern>
        <type>$Action#0</type>
        <variable>?X</variable>
    </template>
    <template>
        <nlPattern class="2000791">
            $IntelligentAgentActivity#0 [outside|in the open|outdoors]
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  
            (#$CollectionIntersection2Fn $IntelligentAgentActivity#0 #$Outdoors-ExposedToWeather
            ))
        </cyclPattern>
        <type>$IntelligentAgentActivity#0</type>
        <variable>?USE</variable>
    </template>
    <template>
        <nlPattern class="2000794">
            [a run|push|effort|have a go|has a go|attempts|tries|essays|attempt|try|takes a run|makes a effort|make an effort] 
            [to|at|for|{}] [a|an|some|the|{}] $Action#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  (#$AttemptingFn $Action#0))
        </cyclPattern>
        <type>#$Attempting</type>
        <variable>?USE</variable>
    </template>
    <template>
        <nlPattern class="2000794">
            [gives|give] [a|an|some|the|{}] $Action#0 [a go|the old college try]
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  (#$AttemptingFn $Action#0))
        </cyclPattern>
        <type>#$Attempting</type>
        <variable>?USE</variable>
    </template>
    
    <template>
        <nlPattern class="2000792">
            $IntelligentAgentActivity#0 [indoors|inside]
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT  
            (#$SubcollectionOfWithRelationToFn $IntelligentAgentActivity#0  #$eventOccursAtLocationType #$Indoors-IsolatedFromOutside))
        </cyclPattern>
        <type>$IntelligentAgentActivity#0</type>
        <variable>?EVT</variable>
    </template>
      <!--MED 11 Event 7 Fishing-->
    <template>
        <nlPattern class="200083">[prepares|preparing|prepare|getting ready|get ready|gets ready|readies|ready themselves|readies himself|readies herself|readies itself|readying] [to|for|{}] [do|going|going|performing|{}] $AnimalActivity#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PREP
            (#$PreparingForSitTypeFn $AnimalActivity#0))
        </cyclPattern>
        <type>#$PreparingForSituation</type>
        <variable>?PREP</variable>
    </template>
    <template>
        <nlPattern class="200090">[a|an|some|{}] $Action#0 [done|performed|carried out|{}] [while|whilst|when|{}] [he is|she is|it is|they are|{}] [standing|located|{}] [at|on|in|inside|within] [a|an|some|the] $Place#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $Action#0 #$eventOccursAt $Place#1))
        </cyclPattern>
        <type>$Action#0</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200091">[a|an|some|{}] $DevisedStructuredActivity#0 [done|performed|carried out|{}] [while|whilst|when|{}] [he is|she is|it is|they are|{}] [standing|located|{}] [at|on|in|inside|within] [a|an|some|the] $Place#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $DevisedStructuredActivity#0
            #$eventOccursAt $Place#1))
        </cyclPattern>
        <type>$DevisedStructuredActivity#0</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200095">[a|an|some|{}] $PartiallyTangible#0 [is|has|{}] [pulls|tugs|pulling|tugging|pull|tug|pulled|tugged] $PartiallyTangible#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn
            (#$SubcollectionOfWithRelationToTypeFn #$PullingAnObject #$puller $PartiallyTangible#0)
            #$pullee $PartiallyTangible#1))
        </cyclPattern>
        <type>#$PullingAnObject</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="200096">$PullingAnObject#0 [from|out of|away from] $Place#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn $PullingAnObject#0 #$fromLocation $Place#1))
        </cyclPattern>
        <type>#$PullingAnObject</type>
        <variable>?ACT</variable>
    </template>
    
        <!-- MED 11 Event ??? getting a vehicle unstuck -->
    <template> <!--generalise me-->
        <examples>
            <example>pulling a jeep out of the mud</example>
        </examples>
        <nlPattern class="2000961">[pulling|pull|pulls] [a|an|{}] $TransportationDevice-Vehicle#0 [out of|from|stuck in] [the|some|{}] mud</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn 
            #$FreeingAVehicleStuckInMud 
            #$objectFreed $TransportationDevice-Vehicle#0))
        </cyclPattern>
        <type>#$FreeingAVehicleStuckInMud</type>
        <variable>?ACT</variable>
    </template>
   
 <template> 
        <examples>
            <example>a car stuck in sand at the beach</example>
        </examples>
        <nlPattern class="2000962">
            [a|an|{}] $TransportationDevice-Vehicle#0 
            [trapped|stuck] [in|by] 
            [the|some|{}] $LandStuff#0
        </nlPattern>
        <cyclPattern>
          (#$equalSymbols ?CAR
            (#$SubcollectionOfWithRelationFromTypeFn 
                $TransportationDevice-Vehicle#0 #$objectAttached
               (#$SubcollectionOfWithRelationToTypeFn 
                   #$StuckVehicleSituation #$objectAdheredTo $LandStuff#0)))
        </cyclPattern>
        <type>$TransportationDevice-Vehicle#0</type>
        <variable>?CAR</variable>
    </template>
    

     <!-- MED 11 Event ??? Flash mob-->
    <template> 
        <examples>
            <example>Justin Bieber flash mob</example>
        </examples>
        <nlPattern class="200096">$Songwriter#0 $CoordinatedGroupActivity#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$CollectionIntersection2Fn 
            #$Dancing-GroupActivity 
            (#$SubcollectionOfWithRelationToTypeFn 
            $CoordinatedGroupActivity#1
            #$movementCoordinatedWith (#$MusicOfFn $Songwriter#0))))
        </cyclPattern>
        <type>$CoordinatedGroupActivity#1</type>
        <variable>?ACT</variable>
    </template>
    
    <template> 
        <examples>
            <example>Hip hop flash mob in a clothing store</example>
            <example>Nuns rock and roll dancing in a Serbian restaurant</example>
        </examples>
        <nlPattern class="200097">[$Music#0 $CoordinatedGroupActivity#1|$CoordinatedGroupActivity#1 to $Music#0]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$CollectionIntersection2Fn 
            #$Dancing-GroupActivity 
            (#$SubcollectionOfWithRelationToTypeFn 
            $CoordinatedGroupActivity#1
            #$movementCoordinatedWith $Music#0)))
        </cyclPattern>
        <type>$CoordinatedGroupActivity#1</type>
        <variable>?ACT</variable>
    </template>
    
    <template> 
        <examples>
            <example>boy trance dancing in a thai restaurant</example>
        </examples>
        <nlPattern class="200099">[$Music#0 $RhythmicMovement#1|$RhythmicMovement#1 to $Music#0]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn 
            $RhythmicMovement#1
            #$movementCoordinatedWith $Music#0))
        </cyclPattern>
        <type>$RhythmicMovement#1</type>
        <variable>?ACT</variable>
    </template>
    <!-- MED 11 Event ??? feeding an animal-->
    <template>
        <nlPattern class="230000">$Person#0 sitting on a $PhysicalDevice#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationFromTypeFn $Person#0 #$seated
            (#$SubcollectionOfWithRelationToTypeFn #$SittingOnSomething #$seat $PhysicalDevice#1 )              
            ))
        </cyclPattern>
        <type>$Person#0</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="230001">[baby|young|juvenile] $Animal#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?BABY (#$JuvenileFn $Animal#0))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?BABY</variable>
    </template>
    <!-- MED 11 Event ??? Sewing-->
    <template>
        <nlPattern class="210000">[is|{}] [making|makes|make] [a|an|some|{}] $PhysicalDevice#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            
            (#$MakingFn $PhysicalDevice#0)
            )
        </cyclPattern>
        <type>#$MakingSomething</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2000291">
            [A|An|a|an|Some|some|{}] $Person#0 $MakingSomething#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  
            (#$SubcollectionOfWithRelationToTypeFn $MakingSomething#1 #$doneBy $Person#0))
        </cyclPattern>
        <type>#$MakingSomething</type>
        <variable>?USE</variable>
    </template>
    <template>
        <nlPattern class="2000291">
            [A|An|a|an|Some|some|The|the|{}] $Person#0 $Attempting#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  
            (#$SubcollectionOfWithRelationToTypeFn $Attempting#1 #$doneBy $Person#0))
        </cyclPattern>
        <type>#$Attempting</type>
        <variable>?USE</variable>
    </template>
    <template>
        <nlPattern class="200019">
            [with|on|using]  [a|an|{}]  $PhysicalDevice#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  (#$UsingAFn $PhysicalDevice#0 ))
        </cyclPattern>
        <type>#$UsingADevice</type>
        <variable>?USE</variable>
    </template>
    
    <template>
        <nlPattern class="2000193">
            $MakingSomething#1  [with|on|using]  [a|an|{}]  $PhysicalDevice#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  (#$UsingAForFn $PhysicalDevice#0 $MakingSomething#1 #$deviceUsed))
        </cyclPattern>
        <type>#$MakingSomething</type>
        <variable>?USE</variable>
    </template>
    
    <template>
        <nlPattern class="2000194">
            [using|making use of|use of]  [a|an|{}] $PhysicalDevice#0 [for|in|while|whilst|to|{}]  $MakingSomething#1 
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  (#$UsingAForFn $PhysicalDevice#0 $MakingSomething#1 #$deviceUsed))
        </cyclPattern>
        <type>#$MakingSomething</type>
        <variable>?USE</variable>
    </template>
    
    <template>
        <nlPattern class="2000191">
            $MakingSomething#0 $UsingADevice#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  
            (#$CollectionIntersection2Fn $MakingSomething#0 $UsingADevice#1))
        </cyclPattern>
        <type>#$MakingSomething</type>
        <variable>?USE</variable>
    </template>
    
    <template>
        <nlPattern class="2000192">
            $UsingADevice#1 [to|for|while|in order to] $MakingSomething#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?USE  
            (#$CollectionIntersection2Fn $MakingSomething#0 $UsingADevice#1))
        </cyclPattern>
        <type>#$MakingSomething</type>
        <variable>?USE</variable>
    </template>
    <template>
        <nlPattern class="210001">[is|{}] [demonstrate|demonstrates|demonstrating|shows|show|showing] [on|about|of|{}] [how to|the way to|how one|how one can|the method for|ways to|methods for|{}] $PurposefulPhysicalAction#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$DemonstrationTypeOfActivityTypeFn $PurposefulPhysicalAction#0))
        </cyclPattern>
        <type>#$Teaching</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2100011">[is|{}] [demonstrate|demonstrates|demonstrating|shows|show|showing|teach|teaches|teaching] [on|about|of|{}] [how to|the way to|how one|how one can|the method for|ways to|methods for|{}] $TransporterStunt#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$DemonstrationTypeOfActivityTypeFn 
            (#$ExecutionOfManeuverTypeFn $TransporterStunt#0)))
        </cyclPattern>
        <type>#$Teaching</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2100011">[is|{}] [demonstrate|demonstrates|demonstrating|shows|show|showing|teach|teaches|teaching] [on|about|of|{}] [how|the way|how one can|the method for|ways to|methods for|{}] [use|using|{}] [a|an|{}] $PhysicalDevice#0 [works|operates|is operated|is used|can be used|{}]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$DemonstrationTypeOfActivityTypeFn 
               (#$SubcollectionOfWithRelationToTypeFn
                #$UsingADevice #$deviceUsed $PhysicalDevice#0)))
        </cyclPattern>
        <type>#$Teaching</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="2100012">[a|an|{}] $Organism-Whole#0 ['s|{}] $OrganismPart#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PART
            (#$SubcollectionOfWithRelationFromTypeFn 
            $OrganismPart#1 #$anatomicalParts $Organism-Whole#0))
        </cyclPattern>
        <type>$OrganismPart#1</type>
        <variable>?PART</variable>
    </template>
    <template>
        <nlPattern class="2100012">[a|an|{}] $OrganismPart#1 of [a|an|{}] $Organism-Whole#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PART
            (#$SubcollectionOfWithRelationFromTypeFn 
            $OrganismPart#1 #$anatomicalParts $Organism-Whole#0))
        </cyclPattern>
        <type>$OrganismPart#1</type>
        <variable>?PART</variable>
    </template>
    <template>
        <nlPattern class="210002">[is|{}] [use|uses|using] [a|an|some|{}] $PhysicalDevice#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$CollectionIntersection2Fn #$SkilledActivityType 
            (#$UsingAFn $PhysicalDevice#0)))
        </cyclPattern>
        <type>#$UsingADevice</type>
        <variable>?ACT</variable>
    </template>
    <template>
        <nlPattern class="210003">[is|{}] [sew|sews|sewing] [a|an|some|{}] $PhysicalDevice#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$SubcollectionOfWithRelationToTypeFn #$Sewing #$objectActedOn $PhysicalDevice#0))
        </cyclPattern>
        <type>#$Sewing</type>
        <variable>?ACT</variable>
    </template>
    
    <template>
        <examples>
            <example>
                A pair of hands do a sewing project using a sewing machine.
            </example>
        </examples>
        <nlPattern class="210004">$CraftActivity#1 [project|projects]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$CollectionIntersection2Fn #$Project $CraftActivity#1))
        </cyclPattern>
        <type>$CraftActivity#1</type>
        <variable>?ACT</variable>
    </template>
      
    <!-- Code Analysis CWE and function declaration -->
    <template>
        <nlPattern class="300001">
            $CodingFunction#0
            [that|which] 
            [is able to|can]
            [return|result] 
            [with|in|{}] 
            [a|an|{}]
            $ComputerCodeExpression#1 
            [if|when|on|in] [it|the function|the method|{}]
            [fails|failing|fail|failure|error|error condition]
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?FN
            (#$SubcollectionOfWithRelationToFn 
            $CodingFunction#0  
            #$returnedExpressionOfTypeDenotesFailure  
            $ComputerCodeExpression#1 ))
        </cyclPattern>
        <type>$CodingFunction#0</type>
        <variable>?FN</variable>
    </template>
    
    <template>
        <nlPattern class="300002">
            [is|has|does|{}] 
            [a|an|{}]
            [call|calls|involes|invoke|calling|executing|using|applying]  [a|an|{}]  $CodingFunction#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?CALL
            (#$SubcollectionOfWithRelationToTypeFn  
            #$ComputerFunctionInvocation-Executable 
            #$codingFunctionInvoked
            $CodingFunction#0     ))
        </cyclPattern>
        <type>#$ComputerFunctionInvocation-Executable</type>
        <variable>?CALL</variable>
    </template>
    
    <template>
        <nlPattern class="300003">
            [does|has|will|{}] [no|not|without|lacks|lacking] 
            [check for an error|error check|checking for an error|testing for an error|error test] 
            [in|on|for|{}] $ComputerCodeExpression#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?UNCHECK
            (#$SubcollectionOfWithRelationFromTypeFn #$ComputerFunctionInvocation-Executable #$inputMayBeUnsafechecked
            $ComputerCodeExpression#0))
        </cyclPattern>
        <type>#$ComputerFunctionInvocation-Executable</type>
        <variable>?UNCHECK</variable>
    </template>
     
    <template>
        <nlPattern class="300004">
            [the|a|an|{}]
            [result|return|resulting|output|{}] 
            [value|variable|{}]
            [for|of|on|after|when|while|whenever it|if it] 
            $ComputerFunctionInvocation-Executable#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?RES
            (#$SubcollectionOfWithRelationFromTypeFn #$ComputerCodeExpression #$methodCallReturn 
            $ComputerFunctionInvocation-Executable#0))
        </cyclPattern>
        <type>#$ComputerCodeExpression</type>
        <variable>?RES</variable>
    </template>
    
    <template>
        <nlPattern class="300005">
            [the|a|an|{}]
            $ComputerCodeExpression#0
            [result|return|returned|resulting|output|{}] 
            [value|variable|{}]
            [for|of|on|after|when|while|whenever it|if it] 
            $ComputerFunctionInvocation-Executable#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?RES
            (#$SubcollectionOfWithRelationFromTypeFn  $ComputerCodeExpression#0 #$methodCallReturn 
            $ComputerFunctionInvocation-Executable#0))
        </cyclPattern>
        <type>$ComputerCodeExpression#0</type>
        <variable>?RES</variable>
    </template>
    
    <template>
        <nlPattern class="300006">
            [can|must|only|is able to|{}]
            [returns|return|come back|comes back|result in|results in]
            [with|giving|{}]
            [the|a|an|{}]
            $ComputerCodeExpression#0   
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?RES $ComputerCodeExpression#0)
        </cyclPattern>
        <type>$ComputerCodeExpression#0</type>
        <variable>?RES</variable>
    </template>
    
    <template>
        <nlPattern class="300013">
            [What|Which|what|which|{}]
            [product|program|code|section|{}]
            $ComputerFunctionInvocation-Executable#0 [?|{}]
        </nlPattern>
        <cyclPattern>
            (#$isa ?CODE  $ComputerFunctionInvocation-Executable#0)
        </cyclPattern>
        <microTheory>(#$MtSpace (#$ContentMtFn #$Eyrie-V2-KS) #$Now)</microTheory>
        <inferenceMode type=":EXTENDED"/>
    </template>
    
    
    <template>
        <nlPattern class="300008">[MITRE|{}] CWE [-|{}] $NonNegativeInteger#0</nlPattern>  
        <cyclPattern>
            (#$equalSymbols ?WEAK 
            ((#$FunctionToArg #$mitreCWEID 1) $NonNegativeInteger#0))
        </cyclPattern>
        <type>#$ComputerCodeTypeByDeficiency</type>
        <variable>?WEAK</variable>
    </template>
    
    
    
    
    
    
    <!-- Hacks to get around vocab that needs to be written-->  
    <template>
        <nlPattern class="666001">quickly $IntelligentAgentActivity#0</nlPattern>
     
        <cyclPattern>(#$equalSymbols ?ACT $IntelligentAgentActivity#0)</cyclPattern>
        <type>$IntelligentAgentActivity#0</type>
        <variable>?ACT</variable>
    </template>
    
    <template>
        <nlPattern class="180000">Bone morphogenetic protein 4</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PROT 
            (#$SchemaObjectFn #$BigOWLCodeMapping "uniprot-protein:P12644"))
        </cyclPattern>
        <type>#$ProteinMolecule</type>
        <variable>?PROT</variable>
    </template>

    
    <!-- end of Hacks-->
    <template>
        <nlPattern class="190000">$Event#0 [.|;|!]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT $Event#0)
        </cyclPattern>
        <type>#$Event</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example>Bill Clinton sold his car.</example>
        </examples>
        <nlPattern class="190010">$Person#0 [sold|sell|sells|selling] $SomethingExisting#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT 
            (#$SubcollectionOfWithRelationToTypeFn  
            (#$SubcollectionOfWithRelationToFn #$MonetaryExchangeOfUserRights
            #$seller $Person#0)
            #$objectPaidFor $SomethingExisting#1))
        </cyclPattern>
        <type>#$MonetaryExchangeOfUserRights</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <examples>
            <example>A politician sold his car.</example>
        </examples>
        <nlPattern class="190010">[a|A|an|An|{}] $Person#0 [sold|sell|sells|selling] $SomethingExisting#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT 
            (#$SubcollectionOfWithRelationToTypeFn  
            (#$SubcollectionOfWithRelationToTypeFn #$MonetaryExchangeOfUserRights
            #$seller $Person#0)
            #$objectPaidFor $SomethingExisting#1))
        </cyclPattern>
        <type>#$MonetaryExchangeOfUserRights</type>
        <variable>?EVT</variable>
    </template>
    
    
    <template>
        <examples>
            <example>his car</example>
            <example>Bill Clinton parked his car.</example>
            <example>Bill Clinton sold his car.</example>
        </examples>
        <nlPattern class="200000">his $Artifact#0</nlPattern>
        <anaphoricReference>$MaleHuman#1</anaphoricReference>
        <cyclPattern>
            (#$equalSymbols ?ART 
            (#$SubcollectionOfWithRelationFromFn $Artifact#0 #$owns $MaleHuman#1))
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?ART</variable>
        <!--referents>
            <referent>
                <type>#$Person</type>
                <variable>?PERSON</variable>
            </referent>
            <referent>
                <type>#$MalePerson</type>
                <variable>?PERSON</variable>
            </referent>
        </referents-->
    </template>
    <template>
        <examples>
            <example>her car</example>
            <example>Hillary Clinton sold her car.</example>
        </examples>
        <nlPattern class="200000">her $Artifact#0</nlPattern>
        <anaphoricReference>$FemaleHuman#1</anaphoricReference>
        <cyclPattern>
            (#$equalSymbols ?ART 
            (#$SubcollectionOfWithRelationFromFn $Artifact#0 #$owns $FemaleHuman#1))
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?ART</variable>
        <!--referents>
            <referent>
                <type>#$Person</type>
                <variable>?PERSON</variable>
            </referent>
            <referent>
                <type>#$MalePerson</type>
                <variable>?PERSON</variable>
            </referent>
        </referents-->
    </template>
    <template>
        <examples>
            <example>Boys perform tricks on their skateboards</example>
            <example>their surfboards</example>
            <example>footage of a child performing tricks on his/her skateboard in a driveway</example>
        </examples>
        <nlPattern class="2000020">[their|his FORWARDSLASH her] $Artifact#0</nlPattern>
        <anaphoricReference>$Person#1</anaphoricReference>
        <cyclPattern>
            (#$equalSymbols ?ART 
            (#$SubcollectionOfWithRelationFromFn $Artifact#0 #$owns $Person#1))
        </cyclPattern>
        <type>$Artifact#0</type>
        <variable>?ART</variable>
    </template>
    
    <template>
        <nlPattern class="2000021">
            $Event#0 [in|at|around] $GeographicalThing#1
        </nlPattern>
        <cyclPattern> 
            (#$equalSymbols ?EVT 
            (#$SubcollectionOfWithRelationToFn $Event#0 
            #$eventOccursAt $GeographicalThing#1))
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <nlPattern class="2000701">
            $GeopoliticalEntityOrRegion#0 [food|cuisine|eats|nosh|grub]
        </nlPattern>
        <cyclPattern> 
            (#$equalSymbols ?FOOD 
            (#$SubcollectionOfWithRelationToFn #$Food
            #$culturalRegionOfOrigin $GeopoliticalEntityOrRegion#0))
        </cyclPattern>
        <type>#$Food</type>
        <variable>?FOOD</variable>
    </template>
    
    <template>
        <nlPattern class="2000701">
            $GeopoliticalEntityOrRegion#0 
            [food|cuisine|eats|nosh|grub|{}]
            $RestaurantSpace#1
        </nlPattern>
        <cyclPattern> 
            (#$equalSymbols ?REST 
            (#$SubcollectionOfWithRelationFromTypeFn
            $RestaurantSpace#1 
            #$orgFacilities
            (#$RestaurantSpecializingInCuisineFn
            (#$SubcollectionOfWithRelationToFn #$Food
            #$culturalRegionOfOrigin $GeopoliticalEntityOrRegion#0))))
        </cyclPattern>
        <type>$RestaurantSpace#1</type>
        <variable>?REST</variable>
    </template>
    
    <template>
        <nlPattern class="2000705">
            $GeopoliticalEntityOrRegion#0 
            [food|cuisine|eats|nosh|grub|{}]
            $Restaurant-Organization#1
        </nlPattern>
        <cyclPattern> 
            (#$equalSymbols ?REST
            (#$CollectionIntersection2Fn $Restaurant-Organization#1
            (#$RestaurantSpecializingInCuisineFn
            (#$SubcollectionOfWithRelationToFn #$Food
            #$culturalRegionOfOrigin $GeopoliticalEntityOrRegion#0))))
        </cyclPattern>
        <type>$Restaurant-Organization#1</type>
        <variable>?REST</variable>
    </template>
    
    <template>
        <examples>
            <example>eating a vegemite sandwich</example>
        </examples>
        <nlPattern class="20007820">
            [is|are|{}] 
            [eat|eating|eats|wolfing down|gobbling|gobbles|munch|feed on|feeds on|feeding on] 
            [up|{}] [a|an|some|{}]
            $EdibleStuff#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ART 
            (#$SubcollectionOfWithRelationToTypeFn 
            #$EatingEvent #$consumedObject $EdibleStuff#0))
        </cyclPattern>
        <type>#$EatingEvent</type>
        <variable>?ART</variable>
    </template>
    
    <template>
        <examples>
            <example>drinking a mimosa</example>
        </examples>
        <nlPattern class="20007821">
            [is|are|{}] 
            [has|have|having|taking|takes|take|drinks|drink|drinking|swallow|swallows|swallow|gulp|gulps|gulping]
            [down|{}] [a|an|some|{}] [glass of|cup of|mug of|bowl of|{}]
            $LiquidTangibleThing#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ART 
            (#$SubcollectionOfWithRelationToTypeFn 
            #$DrinkingEvent #$inputsDestroyed $LiquidTangibleThing#0))
        </cyclPattern>
        <type>#$DrinkingEvent</type>
        <variable>?ART</variable>
    </template>
    <!--template>  REPLACED BELOW
        <nlPattern class="2000021">[a|an] $EdibleStuff#1</nlPattern>
        <cyclPattern>
            (#$isa ?ACT $EdibleStuff#1)
        </cyclPattern>
        <type>$EdibleStuff#1</type>
        <variable>?ACT</variable>
    </template-->
    <template>
        <examples>
            <example>an egg sandwich</example>
            <example>a mimosa</example>
            <example>an icecream</example>
        </examples>
        <nlPattern class="20007822">
            [a|an] [serving of|plate of|glass of|cup of|mug of|bowl of|{}]
            $EdibleStuff#0
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SERVING 
            (#$FoodServingFn $EdibleStuff#0))
        </cyclPattern>
        <type>#$Food-ReadyToEat</type>
        <variable>?SERVING</variable>
    </template>
    
    <template>
        <examples>
            <example>demonstration of a turning tool.</example>
        </examples>
        <nlPattern class="2000022"> demonstration of a $Event#0 tool </nlPattern>
        <cyclPattern>  
            (#$equalSymbols ?EVT 
            (#$CollectionSubsetFn #$Presentation 
            (#$TheSetOf ?EVENT
            (#$thereExists ?DEVICE
            (#$and 
            (#$topicOfInfoTransfer ?EVENT ?DEVICE)
            (#$behaviorCapable ?DEVICE $Event#0 #$deviceUsed))))))
        </cyclPattern>
        <type>#$Presentation</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example>kitten plays with dog. </example>
        </examples>
        <nlPattern class="2000023">$Animal#0 [plays|playing] with $Animal#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ACT
            (#$CollectionIntersection2Fn 
            (#$SubcollectionOfWithRelationToTypeFn 
            #$Playing
            #$participatingPlayers $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn 
            #$Playing
            #$participatingPlayers $Animal#1))) 
        </cyclPattern>
        <type>#$Playing</type>
        <variable>?ACT</variable>
    </template>
    
    <template>
        <examples>
            <example>kitten by a pool. </example>
        </examples>
        <nlPattern class="2000024">$Animal#0 [by|next to|beside] [a|an|the|{}] $Place-NonAgent#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn #$Situation #$situationConstituents $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn #$Situation #$situationLocation $Place-NonAgent#1)))                          
        </cyclPattern>
        <type>#$Situation</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example>A dog wrestling with a person. </example>
        </examples>
        <nlPattern class="2000025"> [A|a|an|An|{}] $Animal#0 $SportsEvent#0 with a $Animal#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $SportsEvent#0  #$competingAgents $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $SportsEvent#0  #$competingAgents $Animal#1)))                          
        </cyclPattern>
        <type>#$SportsEvent</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example>A man walking a dog. </example>
        </examples>
        <nlPattern class="2000026"> [A|a|an|An|{}] $Person#0 walking [a|{}] $NonHumanAnimal#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn #$WalkingAPet  #$performedBy $Person#0)
            (#$SubcollectionOfWithRelationToTypeFn #$WalkingAPet  #$beneficiary $NonHumanAnimal#1)))                          
        </cyclPattern>
        <type>#$WalkingAPet</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example>A dog lying on his back. </example>
        </examples>
        <nlPattern class="2000027"> [A|a|An|an|{}] $Animal#0 lying on [his|her|its|{}] $AnimalBodyPart#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn #$RecliningPosture  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn #$RecliningPosture  #$bodyPartsUsed $AnimalBodyPart#1)))                          
        </cyclPattern>
        <type>#$RecliningPosture</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example>A goat in a pen.</example>
        </examples>
        <nlPattern class="20001022"> 
            [A|a|An|an|{}] $Animal#0 
            [in|inside|shut in] 
            [a|an|its|his|her|{}] $Place#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT        
            (#$SubcollectionOfWithRelationToTypeFn 
            $Animal#0  #$objectFoundInLocation $Place#1))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example>People celebrate a wedding in Trinidad and Tobago. </example>
        </examples>
        <nlPattern class="2000028"> 
            [is|are|{}] 
            [do|does|have|has|having|{}] 
            [celebrate|celebration of|celebrating|celebrates] 
            [a|an|some|some kind of|{}]
            $SocialOccurrence#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            #$Celebration $SocialOccurrence#1))                         
        </cyclPattern>
        <type>#$Celebration</type>
        <variable>?SIT</variable>
    </template>
     <!--template>
        <examples>
            <example>He read books</example>
            <example>Bill Clinton learnt quickly; he read books</example>
        </examples>
        <nlPattern class="2000030">[He|he]</nlPattern>
        <anaphoricReference>$MaleHuman#1</anaphoricReference>
        <cyclPattern>
           (#$equalSymbols ?ART $MaleHuman#1)
        </cyclPattern>
        <type>#$MaleHuman</type>
        <variable>?ART</variable>
    </template-->
    
    <template>
        <examples>
            <example>A dog plays with a baby toy. </example>
        </examples>
        <nlPattern class="2000029"> [A|a|An|an|{}] $Animal#0 $Event#1 with [his|her|its|a|an|{}] $Person#2 $Artifact#3 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$deviceUsed
            (#$CollectionIntersection2Fn $Artifact#3
            (#$SubcollectionOfWithRelationToTypeFn $Artifact#3  #$intendedForUseBy $Person#2)))))                             
                          
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example>cat lashing tail. </example>
        </examples>
        <nlPattern class="2000030"> [A|a|An|an|{}] $Animal#0 $Event#1 $AnimalBodyPart#2  </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$bodyPartsUsed $AnimalBodyPart#2)))                          
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example>kittens running around floor. </example>
        </examples>
        <nlPattern class="2000030"> [A|a|An|an|{}] $Animal#0 $Event#1 around $Artifact#2  </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$eventOccursAt (#$AroundAreaFn $Artifact#2))))                          
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example> someone plays with two guinea pigs in a cage. </example>
        </examples>
        <nlPattern class="2000031"> [someone|Somebody] $Event#0 with [one|two|a|an|the|{}] $Animal#1 in [a|an|the|{}] $EnduringThing-Localized#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#0  #$performedBy #$Agent-Generic)
            (#$CollectionIntersection2Fn 
            (#$SubcollectionOfWithRelationToTypeFn $Event#0  #$performedBy $Animal#1)
            (#$SubcollectionOfWithRelationToTypeFn $Event#0  #$eventOccursAt $EnduringThing-Localized#2)
            )))
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example> a woman feeds a kitten milk from a bottle. </example>
        </examples>
        <nlPattern class="2000032"> $FluidTangibleThing#0 from [one|two|a|an|the|{}] $FluidReservoir#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn #$FluidFlow-Translation  #$objectMoving $FluidTangibleThing#0)
            (#$SubcollectionOfWithRelationToTypeFn #$FluidFlow-Translation #$fromLocation $FluidReservoir#1))) 
        </cyclPattern>
        <type>#$FluidFlow-Translation</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example> kitten in the grass. </example>
        </examples>
        <nlPattern class="2000033"> $Animal#0 in [one|two|a|an|the|{}] $SurfaceRegion-Tangible#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn #$LyingInACertainRelativeLocation  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn #$LyingInACertainRelativeLocation #$on-Physical $SurfaceRegion-Tangible#1))) 
        </cyclPattern>
        <type>#$LyingInACertainRelativeLocation</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example> baby rabbit. </example>
        </examples>
        <nlPattern class="2000034"> baby $Animal#0 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X
            (#$JuvenileFn $Animal#0))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?X</variable>
    </template>
   
    <template>
        <examples>
            <example> A man is feeding baby rabbit. </example>
        </examples>
        <nlPattern class="2000035"> [A|An|The|{}] $Animal#0 is $Event#1 $Animal#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$affectedAgent $Animal#2))) 
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?SIT</variable>
    </template>
   
    <template>
        <examples>
            <example> kittens cuddling and nursing. </example>
        </examples>
        <nlPattern class="2000036"> [A|An|The|{}] $Animal#0 $Event#1 and $Event#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#2 #$performedBy $Animal#0))) 
        </cyclPattern>
        <type>#$Event</type>
        <variable>?SIT</variable>
    </template>
   
    <template>
        <examples>
            <example> a cat with kittens. </example>
        </examples>
        <nlPattern class="2000037"> [a|an|A|An|The|{}] $Animal#0 with $Animal#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?GROUP
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn (#$GroupFn #$Animal)  #$groupMembers $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn (#$GroupFn #$Animal)  #$groupMembers $Animal#1))) 
        </cyclPattern>
        <type>(#$GroupFn #$Animal)</type>
        <variable>?GROUP</variable>
    </template>
    
    <template>
        <examples>
            <example>a man feeds his dogs.</example>
        </examples>
        <nlPattern class="2000038"> [his|her] $NonPersonAnimal#0</nlPattern>
        <anaphoricReference>$Person#1</anaphoricReference>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL 
            (#$SubcollectionOfWithRelationFromFn $NonPersonAnimal#0 #$owns $Person#1))
        </cyclPattern>
        <type>$NonPersonAnimal#0</type>
        <variable>?ANIMAL</variable>
    </template>
        
    <template>
        <examples>
            <example>kitten on the patio.</example>
        </examples>
        <nlPattern class="2000039"> [a|an|A|An|the|The|{}] $Animal#0 on [a|an|the|{}] $FlatRegion#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL 
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0 #$on-Physical $FlatRegion#1))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
     
    <template>
        <examples>
            <example>a baby penguin with kids.</example>
        </examples>
        <nlPattern class="2000040"> [a|an|the|A|An|The|{}] $Animal#0 with [a|an|the|their|{}] kids </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?GROUP
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn (#$GroupFn #$Animal)  #$groupMembers $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn (#$GroupFn #$Animal)  #$children $Animal#0))) 
        </cyclPattern>
        <type>(#$GroupFn #$Animal0)</type>
        <variable>?GROUP</variable>
    </template>
        
    <template>
        <examples>
            <example>a dog eats rib bone.</example>
        </examples>
        <nlPattern class="2000041"> [a|an|the|A|An|The|{}] $Animal#0 eats [a|an|the|their|{}] $PartiallyTangible#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn #$EatingEvent  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn #$EatingEvent  #$consumedObject $PartiallyTangible#1))) 
        </cyclPattern>
        <type>#$EatingEvent</type>
        <variable>?EVT</variable>
    </template>
        
    <template>
        <examples>
            <example>a dog on the couch.</example>
        </examples>
        <nlPattern class="2000042"> [a|an|A|An|the|The|{}] $Animal#0 on [a|an|the|{}] $SeatingDevice#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL 
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0 #$on-Physical $SeatingDevice#1))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    
    <template>
        <examples>
            <example>a man vacuums a kitten.</example>
            <example>a man washes a horse's head</example>
        </examples>
        <nlPattern class="2030002"> $Cleaning#0 [a|an|A|An|the|The|{}] $PartiallyTangible#1</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?CLEAN
            (#$CollectionIntersection2Fn $Cleaning#0 (#$CleaningFn $PartiallyTangible#1)))
        </cyclPattern>
        <type>$Cleaning#0</type>
        <variable>?CLEAN</variable>
    </template>
     <template>
        <examples>
            <example> feeding a ray fish</example>
        </examples>
        <nlPattern class="20000431">[Feeding|feeding] [a|an|{}] $Animal#0</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EV
            (#$SubcollectionOfWithRelationToTypeFn #$FeedingAnAnimal  #$recipientOfService $Animal#0)
       )  
        </cyclPattern>
        <type>#$FeedingAnAnimal</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <examples>
            <example> feeding dogs chicken.</example>
        </examples>
        <nlPattern class="2000043">[Feeding|feeding] [a|an|{}] $Animal#0 $EdibleStuff#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn #$FeedingAnAnimal  #$recipientOfService $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn #$FeedingAnAnimal  #$consumedObject $EdibleStuff#1)))   
        </cyclPattern>
        <type>#$FeedingAnAnimal</type>
        <variable>?EVT</variable>
    </template>
   
    <template>
        <examples>
            <example> kittens prowl.</example>
        </examples>
        <nlPattern class="2000044"> [a|An|an|A|the|The|{}] $Animal#0 $PurposefulAction#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $PurposefulAction#1  #$doneBy $Animal#0))
        </cyclPattern>
        <type>$PurposefulAction#1</type>
        <variable>?EVT</variable>
    </template>
   
    <template>
        <examples>
            <example> One man and one lady are training a dog. </example>
        </examples>
        <nlPattern class="2000045"> [a|an|A|An|the|The|one|One|two|Two|{}] $Animal#0 and [a|A|An|an|the|The|one|One|two|Two|{}] $Animal#1 are $AnimalActivity#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $AnimalActivity#2  #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $AnimalActivity#2 #$doneBy $Animal#1)))
        </cyclPattern>
        <type>$AnimalActivity#2</type>
        <variable>?EVT</variable>
    </template>
        
    <template>
        <examples>
            <example> One man and one lady are training a dog. </example>
        </examples>
        <nlPattern class="2000046"> $HelpingAnAgent#0 [a|an|the|{}] $Animal#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $HelpingAnAgent#0  #$beneficiary $Animal#1))    
        </cyclPattern>
        <type>$HelpingAnAgent#0</type>
        <variable>?EVT</variable>
    </template>
        
    <template>
        <examples>
            <example> a dog in the house on the floor. </example>
        </examples>
        <nlPattern class="2000047"> $Animal#0 in [a|an|the|{}] $HumanlyOccupiedSpatialObject#1 on [the|a|an|{}] $Person-SupportingObject#2  </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0  #$on-Physical $Person-SupportingObject#2)
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0 #$objectFoundInLocation $HumanlyOccupiedSpatialObject#1)))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
   
    <template>
        <examples>
            <example> cat plays with a mouse toy. </example>
        </examples>
        <nlPattern class="2000048"> [a|an|A|An|the|The|{}] $Animal#0 toy  </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?TOY
            (#$SubcollectionOfWithRelationToTypeFn #$Toy  #$objectShapeType (#$CommonShapeFn $Animal#0)))
        </cyclPattern>
        <type>#$Toy</type>
        <variable>?TOY</variable>
    </template>
        
    <template>
        <examples>
            <example>A cat plays with a mouse toy. </example>
        </examples>
        <nlPattern class="2000049"> [A|a|An|an|the|The|{}] $Animal#0 $Event#1 with [his|her|its|a|an|{}] $Artifact-NonAgentive#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?SIT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$performedBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1  #$deviceUsed $Artifact-NonAgentive#2)))                             
                          
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?SIT</variable>
    </template>
    
    <template>
        <examples>
            <example>Bill Clinton sees the Eiffel Tower. </example>
        </examples>
        <nlPattern class="2000051"> $Animal#0 [sees|saw|has seen|will see] $PartiallyTangible#0 </nlPattern>
        <cyclPattern>
            (#$and (#$isa ?EVT #$VisualPerception)
            (#$perceivedThings ?EVT $PartiallyTangible#0)
            (#$performedBy ?EVT $Animal#0))
        </cyclPattern>
        <type>#$VisualPerception</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <examples>
            <example>Bill Clinton likes the Eiffel Tower. </example>
        </examples>
        <nlPattern class="2000048"> $Animal#0 [likes|enjoys|liked|enjoyed] $PartiallyTangible#0 </nlPattern>
        <cyclPattern>
            (#$likesObject $Animal#0 $PartiallyTangible#0)
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
    </template>    
  
    <template>
        <examples>
            <example>A cow without spots. </example>
        </examples>
        <nlPattern class="2000050"> [A|a|An|an|the|The|{}] $Animal#0 without [his|her|its|a|an|{}] $VisualPattern#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$CollectionDifferenceFn $Animal#0
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0  #$hasVisibleSurfacePattern $VisualPattern#1)))                           
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
   
    <template>
        <examples>
            <example> kittens on a bed. </example>
        </examples>
        <nlPattern class="2000052"> $Animal#0 on [a|an|the|{}] $FurniturePiece#1   </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0  #$on-Physical $FurniturePiece#1)) 
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    
    <template>
        <examples>
            <example> brown frog. </example>
        </examples>
        <nlPattern class="2000053"> $Color#0 $Animal#1   </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$SubcollectionOfWithRelationToTypeFn $Animal#1  #$mainColorOfObject $Color#0)) 
        </cyclPattern>
        <type>$Animal#1</type>
        <variable>?ANIMAL</variable>
    </template>
    
    <template>
        <examples>
            <example> little boy feeds the cat. </example><!--Bad example????-->
        </examples>
        <nlPattern class="2000054"> $Animal#0 $Siding-SelectingSomething#1 [a|an|the|{}] $Animal#2   </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVENT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Siding-SelectingSomething#1   #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Siding-SelectingSomething#1   #$beneficiary $Animal#2))) 
        </cyclPattern>
        <type>$Siding-SelectingSomething#1</type>
        <variable>?EVENT</variable>
    </template>
    
    <!--template>  Needs to do something with the number
        <examples>
            <example> A person feeds two dogs with a spoon. </example>
        </examples>
        <nlPattern class="2000055">
            [A|An|The|a|an|the|{}] $Animal#0 $Event#1 $NonNegativeInteger#2 $Animal#3 
            with [a|an|the|{}] $Artifact-NonAgentive#4 </nlPattern>
        <cyclPattern>
         (#$equalSymbols ?EVENT
           (#$CollectionIntersection2Fn
           (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1   #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1   #$objectActedOn (#$GroupFn $Animal#3)))
            (#$SubcollectionOfWithRelationToTypeFn $Event#1   #$deviceUsed $Artifact-NonAgentive#4))) 
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?EVENT</variable>
    </template-->
    
    <template>
        <examples>
            <example> A puppy and a goat in a bed playing. </example>
        </examples>
        <nlPattern class="2000056"> [A|An|The|{}] $Animal#0 and [a|an|the|{}] $Animal#1 in a $SurfaceRegion-Tangible#2 $Event#3 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVENT
            (#$CollectionIntersection2Fn $Event#3
            (#$CollectionIntersection2Fn
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn #$LyingInACertainRelativeLocation #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn #$LyingInACertainRelativeLocation #$doneBy $Animal#1))
            (#$SubcollectionOfWithRelationToTypeFn #$LyingInACertainRelativeLocation #$on-Physical $SurfaceRegion-Tangible#2)))) 
        </cyclPattern>
        <type>#$Event</type>
        <variable>?EVENT</variable>
    </template>
   
    <template>
        <examples>
            <example> cat and kitten play </example>
        </examples>
        <nlPattern class="2000057"> [A|An|The|{}] $Animal#0 and [a|an|the|{}] $Animal#1 $Event#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVENT          
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#2 #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#2 #$doneBy $Animal#1)))             
        </cyclPattern>
        <type>$Event#2</type>
        <variable>?EVENT</variable>
    </template>
    
    <template>
        <examples>
            <example> kittens in basket </example>
        </examples>
        <nlPattern class="2000058"> [A|An|The|{}] $Animal#0 in [a|an|the|{}] $Container#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL          
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0 #$objectFoundInLocation $Container#1))           
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    
    <template>
        <examples>
            <example> kittens playing in hall </example>
        </examples>
        <nlPattern class="2000059"> [A|An|The|{}] $Animal#0 $Event#1 in [a|an|the|{}] $Container#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$objectFoundInLocation $Container#2)))           
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example> A man pats a goat. </example>
        </examples>
        <nlPattern class="2000060"> [A|An|The|{}] $Animal#0 $Event#1 [a|an|the|{}] $Animal#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$objectActedOn $Animal#2)))           
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example> some hens and a pig. </example>
        </examples>
        <nlPattern class="2000061"> $Group#0 and [a|an|the|{}] $Animal#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?GROUP
            (#$CollectionIntersection2Fn $Group#0 
            (#$SubcollectionOfWithRelationToTypeFn #$Group #$groupMembers $Animal#1)))                       
        </cyclPattern>
        <type>#$Group</type>
        <variable>?GROUP</variable>
    </template>
    
    <template>
        <examples>
            <example> Young man is feeding some hens and a pig. </example>
        </examples>
        <nlPattern class="2000062"> $Event#0 $Group#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $Event#0 #$objectActedOn $Group#1))                       
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?EVT</variable>
        
    </template>
    
    <template>
        <examples>
            <example>kittens on floor.</example>
        </examples>
        <nlPattern class="2000063"> [a|an|A|An|the|The|{}] $Animal#0 on [a|an|the|{}] $Person-SupportingObject#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL 
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0 #$on-Physical $Person-SupportingObject#1))
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    
    <template>
        <examples>
            <example> farm animal.</example>
        </examples>
        <nlPattern class="2000064"> [a|an|A|An|the|The|{}] $Organization#0 $NonHumanAnimal#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL 
            (#$SubcollectionOfWithRelationFromTypeFn $NonHumanAnimal#1 #$owns $Organization#0))
        </cyclPattern>
        <type>$NonHumanAnimal#1</type>
        <variable>?ANIMAL</variable>
    </template>
    
    <template>
        <examples>
            <example> toddlers play with kittens.</example>
        </examples>
        <nlPattern class="2000065"> [a|an|A|An|the|The|{}] $Animal#0 $Event#1 with [a|an|the|his|her|its|their|my|{}] $Animal#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$objectActedOn $Animal#2)))
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example> People throw bread crumbs. </example>
        </examples>
        <nlPattern class="2000066"> [a|an|A|An|the|The|{}] $Animal#0 $Event#1 [a|an|the|{}] $Artifact-NonAgentive#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$objectActedOn $Artifact-NonAgentive#2)))
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example> People throw bread crumbs to geese. </example>
        </examples>
        <nlPattern class="2000067"> $Event#0 to $Agent-Generic#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $Event#0 #$toAgent $Agent-Generic#1))
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example> feeding goats from a cup. </example>
        </examples>
        <nlPattern class="2000068"> $Event#0 from [a|an|the|its|{}] $Thing#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $Event#0 #$from-Generic $Thing#1))
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?EVT</variable>
    </template>
    
    <!--template>  Dangerously general 
        <examples>
            <example> feeding goats </example>
        </examples>
        <nlPattern class="2000069"> $Event#0 [a|an|the|{}] $Animal#1 </nlPattern>
        <cyclPattern>
           (#$equalSymbols ?EVT
              (#$SubcollectionOfWithRelationToTypeFn $Event#0 #$objectActedOn $Animal#1))
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?EVT</variable>
    </template-->
    
    <template>
        <examples>
            <example> a person feeds a cat with chopsticks.</example>
        </examples>
        <nlPattern class="2000070"> $Event#0 [with|using] [a|an|the|{}] $Artifact-NonAgentive#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $Event#0 #$deviceUsed $Artifact-NonAgentive#1))              
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example> A dog and a turtle eat cereal off the floor. </example>
        </examples>
        <nlPattern class="2000071"> $Event#0 off [a|an|the|{}] $SurfaceRegion-Tangible#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $Event#0 #$from-Generic $SurfaceRegion-Tangible#1))              
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example> bag of snacks </example>
        </examples>
        <nlPattern class="2000072"> [a|A|an|An|the|The|my|My|his|His|her|Her|their|{}] $Container#0 [of|with|containing] [a|an|the|{}] $Thing#1 [inside|in it|{}]</nlPattern>
        <cyclPattern>
            (#$equalSymbols ?CONTAINER
            (#$SubcollectionOfWithRelationToTypeFn $Thing#1 #$objectFoundInLocation $Container#0))              
        </cyclPattern>
        <type>$Container#0</type>
        <variable>?CONTAINER</variable>
    </template>
    
    <template>
        <examples>
            <example> A sick bunny. </example>
        </examples>
        <nlPattern class="2000073"> [a|A|An|an|the|The|His|Her|his|her|their|{}] $PhysicalQualityOfTangibleOnly#0 $Animal#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$SubcollectionOfWithRelationToTypeFn $Animal#1 #$hasPhysiologicalFeature $PhysicalQualityOfTangibleOnly#0))              
        </cyclPattern>
        <type>$Animal#1</type>
        <variable>?ANIMAL</variable>
    </template>
    
     <!--template>
        <examples>
            <example> A laughing baby. </example>
        </examples>
        <nlPattern class="2000074"> [a|A|An|an|the|The|His|Her|his|her|their|{}] $Event#0 $Animal#1 </nlPattern>
        <cyclPattern>
           (#$equalSymbols ?ANIMAL
              (#$SubcollectionOfWithRelationFromTypeFn $Animal#1 #$doneBy $Event#0))              
        </cyclPattern>
        <type>$Animal#1</type>
        <variable>?ANIMAL</variable>
    </template-->
    
    <template>
        <examples>
            <example> kittens outside </example>
        </examples>
        <nlPattern class="2000075"> [a|A|An|an|the|The|His|Her|his|her|their|{}] $Animal#0 $Place#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?ANIMAL
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0 #$objectFoundInLocation $Place#1))              
        </cyclPattern>
        <type>$Animal#0</type>
        <variable>?ANIMAL</variable>
    </template>
    
    <template>
        <examples>
            <example> A hippo goes in a pond. </example>
        </examples>
        <nlPattern class="2000076"> $GeneralizedTransfer#0 [in|into] [a|an|the|{}] $Place#1 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $GeneralizedTransfer#0 #$to-Generic $Place#1))              
        </cyclPattern>
        <type>$GeneralizedTransfer#0</type>
        <variable>?EVT</variable>
    </template>
    
   
    <!--template WRONG template>
        <examples>
            <example> A dog eats its food. </example>
        </examples>
        <nlPattern class="2000078"> [A|An|a|an|the|The|{}] $Animal#0 $EatingEvent#1 its $Thing#2 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Animal#0 #$owns $Thing#2)))
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?EVT</variable>
    </template-->
    
    <!-- OVERLY BROAD template>
        <examples>
            <example> A person feeds seeds to a monkey. </example>
        </examples>
        <nlPattern class="2000079"> [A|An|the|The|a|an|{}] $Animal#0 $Event#1 $Thing#2 to [a|an|the|{}] $Animal#3 </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$CollectionIntersection2Fn
            (#$CollectionIntersection2Fn
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$doneBy $Animal#0)
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$objectActedOn $Thing#2))
            (#$SubcollectionOfWithRelationToTypeFn $Event#1 #$to-Generic $Animal#3)))                
        </cyclPattern>
        <type>$Event#1</type>
        <variable>?EVT</variable>
    </template--> 
    
    <template>
        <examples>
            <example> various animals </example>
        </examples>
        <nlPattern class="2000080"> various $Thing#0  </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?X (#$GroupFn $Thing#0))                             
        </cyclPattern>
        <type>(#$GroupFn $Thing#0)</type>
        <variable>?X</variable>
    </template> 
    
    <template>
        <examples>
            <example> A man catches fish with a fishing pole. </example>
        </examples>
        <nlPattern class="2000081"> $Event#0 with [a|an|the|{}] $PhysicalDevice#1  </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn $Event#0 #$deviceUsed $PhysicalDevice#1))               
        </cyclPattern>
        <type>$Event#0</type>
        <variable>?EVT</variable>
    </template> 
    
    <template>
        <examples>
            <example> A guy teaches how to fish for flounder </example>
        </examples>
        <nlPattern class="20000811"> $Fishing#0 [for|to catch|{}] [some|a|an|the|{}] $Fish#1  </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn (#$AttemptingFn $Fishing#0) #$objectSought $Fish#1))               
        </cyclPattern>
        <type>$Fishing#0</type>
        <variable>?EVT</variable>
    </template> 
       <template>
        <examples>
            <example> Elmer Fudd is hunting for rabbits </example>
        </examples>
        <nlPattern class="20000812"> $Hunting#0 [for|to catch|{}] [some|a|an|the|{}] $Animal#1  </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToTypeFn  (#$AttemptingFn $Hunting#0) #$objectSought $Animal#1))               
        </cyclPattern>
        <type>$Fishing#0</type>
        <variable>?EVT</variable>
    </template> 
    
    
    <template>
        <examples>
            <example> retired Qatari sprinter </example>
            <example> retired American sprinter </example>
        </examples>
        <nlPattern class="2000082">
            [a|{}] [retired|former] $Person#0 $PersonTypeByOccupation#1
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PERSON
            (#$SubcollectionOfWithRelationToFn $Person#0 #$retiredFromField $PersonTypeByOccupation#1))               
        </cyclPattern>
        <type>#$Person</type>
        <variable>?PERSON</variable>
    </template> 
    
    
    <template>
        <examples>
            <example> four men inspired by al-Queda have admitted robbing </example>
        </examples>
        <nlPattern class="2000083">
            $IntelligentAgent#0 inspired by $IntelligentAgent#1 have admitted $IntelligentAgentActivity#2
        </nlPattern>
        <cyclPattern>
            (#$providesMotiveFor $IntelligentAgent#1 $IntelligentAgent#0 $IntelligentAgentActivity#2 #$perpetrator)
        </cyclPattern>
        <type>#$CycLSentence-Assertible</type>
        <variable>?PERSON</variable>
    </template>
    
    <template>
        <examples>
            <example>detonate a bomb at the London Stock Exchange </example>
        </examples>
        <nlPattern class="2000084">
            $DestructionEvent#0 [a|{}] $Weapon#1 at [the|{}] $Organization#2
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToFn
            (#$SubcollectionOfWithRelationToTypeFn $DestructionEvent#0 #$deviceUsed $Weapon#1)
            #$eventOccursAt ((#$FunctionToArg 2 #$physicalQuarters) $Organization#2)))
        </cyclPattern>
        <type>$DestructionEvent#0</type>
        <variable>?EVT</variable>
    </template>
    <template>
        <examples>
            <example>detonate a bomb at the London Stock Exchange </example>
        </examples>
        <nlPattern class="20000841">
            $DestructionEvent#0 [a|{}] $Weapon#1 at [the|{}] $Organization#2
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToFn
            (#$SubcollectionOfWithRelationToTypeFn $DestructionEvent#0 #$deviceUsed $Weapon#1)
            #$eventOccursAt  $Organization#2) )              
 
        </cyclPattern>
        <type>$DestructionEvent#0</type>
        <variable>?EVT</variable>
    </template>
        <template>
        <examples>
            <example>London Stock Exchange bomb</example>
        </examples>
        <nlPattern class="2000085">
            $Organization#2  $Weapon#1 
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToFn
            (#$SubcollectionOfWithRelationToTypeFn #$DestructionEvent #$deviceUsed $Weapon#1)
            #$eventOccursAt ((#$FunctionToArg 2 #$physicalQuarters) $Organization#2)))
        </cyclPattern>
        <type>#$DestructionEvent</type>
        <variable>?EVT</variable>
    </template>
    
      <template>
        <examples>
            <example>London Stock Exchange bombing</example>
        </examples>
        <nlPattern class="2000085">
            $Organization#2  $DestructionEvent#1 
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
            (#$SubcollectionOfWithRelationToFn $DestructionEvent#1
            #$eventOccursAt ((#$FunctionToArg 2 #$physicalQuarters) $Organization#2)))
        </cyclPattern>
        <type>$DestructionEvent#1</type>
        <variable>?EVT</variable>
    </template>
    
      <template>
        <examples>
            <example>London Stock Exchange bomb plot</example>
        </examples>
        <nlPattern class="2000086">
            $DestructionEvent#1 [plot|plan|scheme|conspiracy]
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
               (#$SubcollectionOfWithRelationToFn 
                 #$Plotting #$topicRole $DestructionEvent#1))
        </cyclPattern>
        <type>#$Plotting</type>
        <variable>?EVT</variable>
    </template>
    
     <template>
        <examples>
            <example>planning to detonate a bomb</example>
        </examples>
        <nlPattern class="2000086">
           [a plot|a plan|a scheme|planning|plotting|scheming|conspiring] [to|a] $DestructionEvent#1 
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
               (#$SubcollectionOfWithRelationToFn 
                 #$Plotting #$topicRole $DestructionEvent#1))
        </cyclPattern>
        <type>#$Plotting</type>
        <variable>?EVT</variable>
    </template>
        
      <template>
        <examples>
            <example>London Stock Exchange bomb plot admitted by four men</example>
        </examples>
        <nlPattern class="2000087">
            $Plotting#1 [admitted|admission] [to|{}] by $IntelligentAgent#2
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
              (#$SubcollectionOfWithRelationToTypeFn    
               (#$SubcollectionOfWithRelationToFn 
                 #$ClaimingResponsibility #$topicRole $Plotting#1) 
                 #$doneBy
               $IntelligentAgent#2))
        </cyclPattern>
        <type>#$ClaimingResponsibility</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example>Four men have admitted planning to detonate a bomb</example>
        </examples>
        <nlPattern class="2000096">
            $IntelligentAgent#2 [have|has|{}] [admit|admitted|admission] [to|{}] $Plotting#1 
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
              (#$SubcollectionOfWithRelationToTypeFn    
               (#$SubcollectionOfWithRelationToFn 
                 #$ClaimingResponsibility #$topicRole $Plotting#1) 
               #$doneBy $IntelligentAgent#2))
        </cyclPattern>
        <type>#$ClaimingResponsibility</type>
        <variable>?EVT</variable>
    </template>
    
     <template>
        <examples>
            <example>London Stock Exchange bomb plot admitted by four men</example>
        </examples>
        <nlPattern class="2000087">
            $Plotting#1 [admitted|admission] [to|{}] by $IntelligentAgent#2
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
              (#$SubcollectionOfWithRelationToFn    
               (#$SubcollectionOfWithRelationToFn 
                 #$ClaimingResponsibility #$topicRole $Plotting#1) 
                 #$doneBy
               $IntelligentAgent#2))
        </cyclPattern>
        <type>#$ClaimingResponsibility</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example>Four men have admitted planning to detonate a bomb</example>
        </examples>
        <nlPattern class="2000096">
            $IntelligentAgent#2 [have|has|{}] [admit|admitted|admission] [to|{}] $Plotting#1 
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
              (#$SubcollectionOfWithRelationToFn    
               (#$SubcollectionOfWithRelationToFn 
                 #$ClaimingResponsibility #$topicRole $Plotting#1) 
               #$doneBy $IntelligentAgent#2))
        </cyclPattern>
        <type>#$ClaimingResponsibility</type>
        <variable>?EVT</variable>
    </template>
    
    <template>
        <examples>
            <example>the May 2, 2011 death of Osama bin Laden</example>
             <example>the Feb 11th, 2012 death of Whitney Houston</example>
        </examples>
        <nlPattern class="2000103">
            [the|{}] $Date#0 $Dying#1 of $Person#2 
        </nlPattern>
        <cyclPattern>
            (#$and (#$equalSymbols ?EVT (#$DeathFn $Person#2))
            (#$isa ?EVT $Dying#1) 
                   (#$dateOfEvent ?EVT $Date#0))
        </cyclPattern>
        <type>$Dying#1</type>
        <variable>?EVT</variable>
    </template>
    
       <template>
        <examples>
            <example>four men</example>
            <example>two people</example>
        </examples>
        <nlPattern class="2000087">
            $NonNegativeInteger#1  $IntelligentAgent#2
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?EVT
               (#$SubcollectionOfWithRelationToFn 
                 (#$GroupFn $IntelligentAgent#2) 
                 #$groupCardinality 
                 $NonNegativeInteger#1))
        </cyclPattern>
        <type>#$IntelligentAgent</type>
        <variable>?EVT</variable>
    </template>
     <template>
        <examples>
            <example>33 year old woman</example>
        </examples>
        <nlPattern class="2000087">
            $NonNegativeInteger#1 year old $Person#2
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PERSON
               (#$SubcollectionOfWithRelationToFn 
                 $Person#2
                 #$age 
                 (#$YearsDuration $NonNegativeInteger#1)))
        </cyclPattern>
        <type>$Person#2</type>
        <variable>?PERSON</variable>
     </template>
    
        
    
    <template>
        <examples>
            <example>18 month old baby</example>
        </examples>
        <nlPattern class="2000087">
            $NonNegativeInteger#1 month old $Person#2
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PERSON
            (#$CollectionIntersection2Fn #$HumanInfant
               (#$SubcollectionOfWithRelationToFn 
                 $Person#2
                 #$age 
                 (#$MonthsDuration $NonNegativeInteger#1))))
        </cyclPattern>
        <type>$Person#2</type>
        <variable>?PERSON</variable>
    </template>
    
    <template>
        <examples>
            <example>33 year old</example>
        </examples>
        <nlPattern class="2000087">
            $NonNegativeInteger#1 year old
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PERSON
               (#$SubcollectionOfWithRelationToFn 
                 #$Person
                 #$age 
                 (#$YearsDuration $NonNegativeInteger#1)))
        </cyclPattern>
        <type>#$Person</type>
        <variable>?PERSON</variable>
    </template>
    
    <template>
        <examples>
            <example>18 month old</example>
        </examples>
        <nlPattern class="2000087">
            $NonNegativeInteger#1 month old
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?PERSON
               (#$SubcollectionOfWithRelationToFn 
                #$HumanInfant
                 #$age 
                 (#$MonthsDuration $NonNegativeInteger#1)))
        </cyclPattern>
        <type>#$HumanInfant</type>
        <variable>?PERSON</variable>
    </template>
    
    <template>
        <!-- this is not the best way to swallow commas leaking from the tagger-->
        <examples>
            <example>May 24, 2010,</example>
        </examples>
        <nlPattern class="2000088">
            $Date#1 ,
        </nlPattern>
        <cyclPattern>
            (#$equalSymbols ?DATE $Date#1)
         </cyclPattern>
        <type>#$Date</type>
        <variable>?DATE</variable>
    </template>
    
    <template>
        <examples>
            <example>Lee Harvey Oswald is accused in the November 22, 1963 death of John F. Kennedy</example>
        </examples>
        <nlPattern class="20000174">
            $IntelligentAgent#1 [is|has been|was|,] accused [of|in] [carrying out|committing|{}] $Dying#0
        </nlPattern>
        <cyclPattern>
            (#$thereExists ?ACC (#$and 
                 (#$isa ?ACC #$Accusing)
                 (#$accusedOfRoleInEvent ?ACC #$killers $Dying#1)
                 (#$accused ?ACC $IntelligentAgent#1)))               
         </cyclPattern>
         <type>#$Accusing</type>
      <variable>?ACC</variable>
    </template>
    <!-- Shopping -->
     <template>
        <nlPattern class="808001">
            [How much|What|how much|what] does 
            $EdibleStuff#0 [cost|go for|get sold for] 
            [at|in|from] $Facility-Generic#1 [?|{}]
            </nlPattern>
        <cyclPattern>
            (#$priceChargedFor $Facility-Generic#1 $EdibleStuff#0 ?PRICE)
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
   
    <template>
        <nlPattern class="808002">
            [How much|What|how much|what] [is|'s] [the price|the cost|{}] 
        [for|of|to buy|to get|{}] $EdibleStuff#0 
        [from|at|in] $Facility-Generic#1 [?|{}]
        </nlPattern>
        <cyclPattern>
            (#$priceChargedFor $Facility-Generic#1 $EdibleStuff#0 ?PRICE)
        </cyclPattern>
        <microTheory>(#$MtSpace #$CurrentWorldDataCollectorMt-NonHomocentric #$AnytimePSC)</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
     <template>
        <nlPattern class="808003">
            [What|which] [kinds of|types of|{}] $SpecifiedFoodDishType#0 
            [does|do|will|is on the menu at|are on the menu at] 
            $FoodAndBeverageOrganization#1 [serve|{}] [?|{}]
        </nlPattern>
        <cyclPattern>
            (#$and (#$isa ?FOOD $SpecifiedFoodDishType#0)
            (#$restaurantHasMenuItem $FoodAndBeverageOrganization#1 ?FOOD))
        </cyclPattern>
        <microTheory>#$InferencePSC</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <template>
        <nlPattern class="808004">
            [What|which] [restaurants|places|joints] [serve|have|have got|{}] $EdibleStuff#0 
            [available|for sale|on the menu|{}] 
            [?|{}]
        </nlPattern>
        <cyclPattern>
            (#$thereExists ?FOOD
            (#$and (#$genls ?FOOD $EdibleStuff#0)
            (#$restaurantHasMenuItem ?REST ?FOOD)))
        </cyclPattern>
        <microTheory>#$InferencePSC</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>
    <!-- scary template -->
      <template>
        <nlPattern class="110920">$CycLSentence-Assertible#0 [, and|and|;|.|{}] $CycLSentence-Assertible#1</nlPattern>
        <cyclPattern>
            (#$and $CycLSentence-Assertible#0 $CycLSentence-Assertible#1)
       </cyclPattern>
       <type>#$CycLSentence-Assertible</type>
        <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
        <inferenceMode type=":MINIMAL"/>
    </template>


   <!-- Urban -->
   <template>
        <examples>
          <example>
             Group of people, all carrying green umbrellas, 
                assemble in a large urban plaza and dance in unison before dispersing.     
          </example>
          <example>
            a large urban plaza    
          </example>
          <example>
            a large town square    
          </example>
        </examples>
        <nlPattern class="120001">
            [a|an|the|{}] $GeographicalRegion#0 $GeographicalThing#1
        </nlPattern>
        <cyclPattern>
         (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToFn $GeographicalThing#1 #$objectFoundInLocation $GeographicalRegion#0))
       </cyclPattern>
       <type>$GeographicalThing#1</type>
        <variable>?X</variable>
  </template>

 <!--Attributes -->
   <template>
        <examples>
          <example>
             Group of people, all carrying green umbrellas, 
                assemble in a large urban plaza and dance in unison before dispersing.     
          </example>
          <example>
	    a yellow banana
          </example>
          <example>
            the pink panther    
          </example>
        </examples>
        <nlPattern class="120002">
            [a|an|the|{}] $Color#0 $PartiallyTangible#1
        </nlPattern>
        <cyclPattern>
         (#$equalSymbols ?X 
            (#$SubcollectionOfWithRelationToFn  $PartiallyTangible#1 #$mainColorOfObject $Color#0))
       </cyclPattern>
       <type>$PartiallyTangible#1</type>
        <variable>?X</variable>
  </template>

    <template>
        <nlPattern class="180070">[small|tiny|petit|modest|minor] $SpatialThing#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$SmallFn $SpatialThing#0))</cyclPattern>
        <type>$SpatialThing#0</type>
        <variable>?X</variable>
    </template>
    <template>
        <nlPattern class="180071">[large|huge|massive|enormous|major|substantial|extensive] $SpatialThing#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$LargeFn $SpatialThing#0))
        </cyclPattern>
        <type>$SpatialThing#0</type>
        <variable>?X</variable>
    </template>
    <template>
        <nlPattern class="180071">[medium-sized|medium] $SpatialThing#0</nlPattern>
        <cyclPattern>(#$equalSymbols ?X (#$MediumSizedFn $SpatialThing#0))
        </cyclPattern>
        <type>$SpatialThing#0</type>
        <variable>?X</variable>
    </template>
    <template>
        <nlPattern class="180081">[large|huge|massive|enormous|major|substantial|extensive] $GeographicalThing#0</nlPattern>
        <cyclPattern>
           (#$equalSymbols ?X (#$LargeFn $GeographicalThing#0))
        </cyclPattern>
        <type>#$GeographicalThing</type>
        <variable>?X</variable>
    </template>



   <template>
        <examples>
          <example>
           a man changes a Volkswagen tire
          </example>
        </examples>
        <nlPattern class="180101">
	  [a|an|the|{}] $PhysicalDevice#0 $PhysicalPartOfObject#1
        </nlPattern>
        <cyclPattern>
	  (#$equalSymbols ?PART 
	     (#$SubcollectionOfWithRelationFromFn $PhysicalPartOfObject#1 #$properParts $PhysicalDevice#0))
       </cyclPattern>
       <type>$PhysicalPartOfObject#1</type>
        <variable>?PART</variable>
  </template>
   <template>
        <examples>
          <example>
           a man changes the tire on a Volkswagen
          </example>
        </examples>
        <nlPattern class="180101">
	  [a|an|the|{}] $PhysicalPartOfObject#1 [for|on|of] [a|an|the|{}]  $PhysicalDevice#0 
        </nlPattern>
        <cyclPattern>
	  (#$equalSymbols ?PART 
	     (#$SubcollectionOfWithRelationFromFn $PhysicalPartOfObject#1 #$properParts $PhysicalDevice#0))
       </cyclPattern>
       <type>$PhysicalPartOfObject#1</type>
        <variable>?PART</variable>
  </template>

   <!-- TEMPLATE TEMPLATE

   <template>
        <examples>
          <example>
          </example>
        </examples>
        <nlPattern class="XXX">
        </nlPattern>
        <cyclPattern>
       </cyclPattern>
       <type></type>
       <variable></variable>
  </template>


   <template>
        <examples>
          <example>
          </example>
        </examples>
        <nlPattern class="XXX">
        </nlPattern>
        <cyclPattern>
       </cyclPattern>
       <type></type>
       <microTheory>#$CurrentWorldDataCollectorMt-NonHomocentric</microTheory>
       <inferenceMode type=":MINIMAL"/>
    </template>
    -->
</ebmtTemplates>
