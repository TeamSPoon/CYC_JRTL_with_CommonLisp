head	1.4;
access;
symbols
	PRE_1_0:1.4;
locks; strict;
comment	@# @;


1.4
date	2002.12.11.16.31.26;	author yepster;	state dead;
branches;
next	1.3;

1.3
date	2002.07.12.14.17.39;	author yepster;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.15.23.50;	author yepster;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.05.17.54.20;	author yepster;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Removed old 0.6 files; files for 0.7 will be in a tgz.
@
text
@--------------------------------------------------------------- 
-- Package: CYC
-- 
-- Interface to java stored procedures that interface with Cyc.
-- 
-- @@author Yeb Havinga
-- 
-- Please note: Oracle is case insensitive.
----------------------------------------------------------------
CREATE OR REPLACE TYPE cyclist_type
AS TABLE OF VARCHAR2(4000);
/
----------------------------------------------------------------
-- Create the package specification.
-- Please see the package body and the java stored procedure source for more info.
----------------------------------------------------------------
CREATE OR REPLACE PACKAGE CYC
IS
PROCEDURE makeConnection;

PROCEDURE endConnection;

PROCEDURE makeCycConstant( constant_in IN VARCHAR2 );

PROCEDURE assertgaf( gaf_in IN VARCHAR2, mt_in IN VARCHAR2 );

PROCEDURE createMicrotheory(
    mtname_in IN VARCHAR2,
    comment_in IN VARCHAR2,
    isamt_in IN VARCHAR2,
    genlmts_in IN cyclist_type  );

FUNCTION assertgaf( gaf_in IN VARCHAR2, mt_in IN VARCHAR2 )
RETURN VARCHAR2;

FUNCTION isQueryTrue( query_in IN VARCHAR2, mt_in IN VARCHAR2 )
RETURN NUMBER;

FUNCTION askWithVariable( query_in IN VARCHAR2, variable_in IN VARCHAR2, mt_in VARCHAR2 )
RETURN cyclist_type;

FUNCTION getBackChainRules( predicate_in IN VARCHAR2 )
RETURN cyclist_type;

FUNCTION converseList( command_in IN VARCHAR2 )
RETURN cyclist_type;

PROCEDURE converseVoid( command_in IN VARCHAR2 );

FUNCTION converseVoid( command_in IN VARCHAR2 )
RETURN cyclist_type;


END cyc;
/
QUIT
/
@


1.3
log
@Some new methods + pdf doc ooi.pdf
@
text
@@


1.2
log
@Changed creation of cyclist type.
@
text
@d11 1
a11 1
AS TABLE OF VARCHAR2(200);
d27 6
d43 10
a52 1
RETURN VARCHAR2;
@


1.1
log
@
The first version of the Oracle->OpenCyc interface.
Not much methods yet, but it's a good demonstration that the idea works.
@
text
@d10 2
a11 2
DROP TYPE cyclist_type;
CREATE TYPE cyclist_type AS TABLE OF VARCHAR2(200);
@

