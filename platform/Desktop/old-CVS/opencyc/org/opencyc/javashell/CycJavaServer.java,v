head	1.6;
access;
symbols
	PRE_1_0:1.5;
locks; strict;
comment	@# @;


1.6
date	2006.10.21.16.49.18;	author dmiles;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.29.20.56.09;	author dmiles;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.29.06.31.23;	author dmiles;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.28.09.49.00;	author dmiles;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.28.02.07.39;	author dmiles;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.27.22.50.04;	author dmiles;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Post OpenCyc 1.0 Cyc Java API - This includes the adding back of many exprmental packages
@
text
@package org.opencyc.javashell;

/**
 * Description TODO
 *
 * @@version $Id: CycJavaServer.java,v 1.5 2002/10/29 20:56:09 dmiles Exp $
 * @@author Douglas R. Miles
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;
import java.lang.Thread;
import org.opencyc.api.CycAccess;
import org.opencyc.api.CycConnection;


public class CycJavaServer extends Thread {
    private ServerSocket serverSocket = null;
    private HashMap allShells = new HashMap();
    @@SuppressWarnings("unchecked")
	public CycJavaServer(CycJavaShell jshell, int port) throws IOException {
	allShells.put("localhost",jshell);
	serverSocket = new ServerSocket(port);
    }
    @@SuppressWarnings("unchecked")
	public void run() {
	while( !Thread.interrupted() ) {
	    try {
		Socket clientSock = serverSocket.accept();
		String clientKey = clientSock.getInetAddress().getHostAddress();
		CycJavaShell clientJshell = (CycJavaShell)allShells.get(clientKey);
		if(clientJshell==null) {
		    clientJshell = new CycJavaShell();
		    CycAccess cycAccess = new CycAccess(clientKey,CycConnection.DEFAULT_BASE_PORT,CycConnection.DEFAULT_COMMUNICATION_MODE,CycAccess.DEFAULT_CONNECTION);
		    clientJshell.ensureClientSupportsShell(cycAccess,
							   cycAccess.makeCycConstant("JavaDataMt"),
							   cycAccess.makeCycConstant("JavaVocabularyMt"),
							   cycAccess.makeCycConstant("JavaMappingMt"),
							   cycAccess.makeCycConstant("JavaTheoryMt"));
		    allShells.put(clientKey,clientJshell);
		}
		CycJavaClient client = new CycJavaClient(clientSock,clientJshell);
		client.start();
	    } catch( Exception e ) {
		e.printStackTrace();
	    }
	}

    }

}

@


1.5
log
@Removed WFF erros now
@
text
@d6 1
a6 1
 * @@version $Id: CycJavaServer.java,v 1.4 2002/10/29 06:31:23 dmiles Exp $
d40 2
a41 1
    public CycJavaServer(CycJavaShell jshell, int port) throws IOException {
d45 3
a47 2
    public void run() {
	while( !this.interrupted() ) {
@


1.4
log
@Full code working version adding examples next
@
text
@d6 1
a6 1
 * @@version $Id: CycJavaServer.java,v 1.3 2002/10/28 09:49:00 dmiles Exp $
d54 4
a57 4
							   cycAccess.makeCycConstant("#$JavaDataMt"),
							   cycAccess.makeCycConstant("#$JavaVocabularyMt"),
							   cycAccess.makeCycConstant("#$JavaMappingMt"),
							   cycAccess.makeCycConstant("#$JavaTheoryMt"));
@


1.3
log
@Fixed that it was breaking build .. Still work was left on CycJavaShell
@
text
@d6 1
a6 1
 * @@version $Id: CycJavaServer.java,v 1.2 2002/10/28 02:07:39 dmiles Exp $
d52 6
a57 2
		    clientJshell.ensureClientSupportsShell(new CycAccess(clientKey,
					      CycConnection.DEFAULT_BASE_PORT,CycConnection.DEFAULT_COMMUNICATION_MODE,CycAccess.DEFAULT_CONNECTION));
@


1.2
log
@Added host concurrency so multiple cyc clients can be used
@
text
@d6 1
a6 1
 * @@version $Id: CycJavaServer.java,v 1.1 2002/10/27 22:50:04 dmiles Exp $
d33 2
d41 1
a41 2
	this.jshell = jshell;
	allShells.add("localhost",jshell);
d47 3
a49 3
		Socket clientSock = new CycJavaClient(serverSocket.accept();
		String clientKey = clientSock.getInetAddress();
		CycJavaShell clientJshell = allShells.get(clientKey);
a50 2
		    cycAccess = new CycAccess(client.getInetAddress().getHostAddress(),
					      CycConnection.DEFAULT_BASE_PORT,CycConnection.DEFAULT_COMMUNICATION_MODE,CycAccess.DEFAULT_CONNECTION);                   
d52 2
a53 1
		    clientJshell.ensureClientSupportsShell(cycAccess);
d56 1
a56 1
		CycJavaClient client = CycJavaClient(clientSock,clientJshell);
@


1.1
log
@Adding in files for the Java peer proxy to OpenCyc
@
text
@d6 1
a6 1
 * @@version $Id: CycJavaClient.java,v 1.1 2002/10/27 22:47:22 dmiles Exp $
d29 1
d31 2
d36 2
a37 2
    private static CycJavaShell jshell = null;
    private Socket serverSocket = null;
d40 1
d45 16
a60 2
	    CycJavaClient client = new CycJavaClient(serverSocket.accept(),jshell);
	    client.start();
@

