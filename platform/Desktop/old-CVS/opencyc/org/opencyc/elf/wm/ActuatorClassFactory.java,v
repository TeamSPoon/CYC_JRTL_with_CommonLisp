head	1.4;
access;
symbols
	PRE_1_0:1.4;
locks; strict;
comment	@# @;


1.4
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.14.13.58.04;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.05.21.15.21;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.05.20.00.43;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.4
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@package org.opencyc.elf.wm;

//// Internal Imports

//// External Imports

/** ActuatorClassFactory creates the java classes for actuators.  There
 * is a singleton instance.
 *
 * @@version $Id: ActuatorClassFactory.java,v 1.3 2003/09/14 13:58:04 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class ActuatorClassFactory {
  
  //// Constructors
  
  /** Creates a new instance of ActuatorClassFactory and stores it in the singleton instance. */
  public ActuatorClassFactory() {
    actuatorClassFactory = this;
  }
  
  //// Public Area
  
  /** Gets the actuator class factory singleton instance.
   *
   * @@return the actuator class factory singleton instance
   */
  public ActuatorClassFactory getInstance() {
    return actuatorClassFactory;
  }
  
  /** Generates the actuator classes. */
  public void generate () {
    //TODO
  }
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the actuator class factory singleton instance */
  protected static ActuatorClassFactory actuatorClassFactory;
  
  //// Main
  
}
@


1.3
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d7 1
a7 2
/**
 * ActuatorClassFactory creates the java classes for actuators.  There
d10 1
a10 1
 * @@version $Id: ActuatorClassFactory.java,v 1.2 2003/09/05 21:15:21 stephenreed Exp $
d41 1
a41 2
  /**
   * Gets the actuator class factory singleton instance.
@


1.2
log
@/home/reed/opencyc/org/opencyc/elf/wm
better handling of the singleton instance
@
text
@d11 1
a11 1
 * @@version $Id: ActuatorClassFactory.java,v 1.1 2003/09/05 20:00:43 stephenreed Exp $
d51 1
a51 3
  /**
   * Generates the actuator classes.
   */
@


1.1
log
@initial check in
@
text
@d11 1
a11 1
 * @@version $Id: ActuatorClassFactory.java,v 1.1 2003/09/05 19:58:31 stephenreed Exp $
d35 1
a35 1
  /** Creates a new instance of ActuatorClassFactory. */
d37 1
@

