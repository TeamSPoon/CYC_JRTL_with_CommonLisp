head	1.5;
access;
symbols
	PRE_1_0:1.5;
locks; strict;
comment	@# @;


1.5
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.14.13.58.04;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.05.22.25.01;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.05.21.15.21;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.05.19.58.31;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.5
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@package org.opencyc.elf.wm;

//// Internal Imports
import org.opencyc.elf.bg.predicate.NotNull;

//// External Imports

/**
 * PredicateClassFactory creates the java classes for predicates.  There
 * is a singleton instance.
 *
 * @@version $Id: PredicateClassFactory.java,v 1.4 2003/09/14 13:58:04 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class PredicateClassFactory {
  
  //// Constructors
  
  /** Creates a new instance of PredicateClassFactory and stores it in the singleton instance. */
  public PredicateClassFactory() {
    predicateClassFactory = this;
  }
  
  //// Public Area
  
  /** Gets the predicate class factory singleton instance.
   *
   * @@return the predicate class factory singleton instance
   */
  public PredicateClassFactory getInstance() {
    return predicateClassFactory;
  }
  
  /** Generates the predicate classes. */
  public void generate () {
    new NotNull();
    //TODO
  }
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the predicate class factory singleton instance */
  protected static PredicateClassFactory predicateClassFactory;
  
  //// Main
  
}
@


1.4
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d12 1
a12 1
 * @@version $Id: PredicateClassFactory.java,v 1.3 2003/09/05 22:25:01 stephenreed Exp $
d43 1
a43 2
  /**
   * Gets the predicate class factory singleton instance.
@


1.3
log
@initialize the NotNull predicate
@
text
@d12 1
a12 1
 * @@version $Id: PredicateClassFactory.java,v 1.2 2003/09/05 21:15:21 stephenreed Exp $
d52 1
a52 3
  /**
   * Generates the predicate classes.
   */
@


1.2
log
@/home/reed/opencyc/org/opencyc/elf/wm
better handling of the singleton instance
@
text
@d4 1
d12 1
a12 1
 * @@version $Id: PredicateClassFactory.java,v 1.1 2003/09/05 19:58:31 stephenreed Exp $
d56 1
@


1.1
log
@initial check in
@
text
@d11 1
a11 1
 * @@version $Id: Actuator.java,v 1.9 2003/09/05 18:16:07 stephenreed Exp $
d35 1
a35 1
  /** Creates a new instance of PredicateClassFactory. */
d37 1
@

