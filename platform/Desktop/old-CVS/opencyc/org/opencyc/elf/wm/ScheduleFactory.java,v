head	1.9;
access;
symbols
	PRE_1_0:1.9;
locks; strict;
comment	@# @;


1.9
date	2003.10.20.21.55.20;	author stephenreed;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.06.05.15.22;	author stephenreed;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.02.14.17.52;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.01.22.58.14;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.22.22.56.37;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.22.02.30.03;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.20.02.33.17;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.20.02.27.52;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.19.22.23.38;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.9
log
@/home/reed/opencyc/org/opencyc/elf
replaced command with commandName in job
@
text
@package org.opencyc.elf.wm;

//// Internal Imports
import org.opencyc.elf.a.DirectActuator;
import org.opencyc.elf.bg.planner.Schedule;
import org.opencyc.elf.bg.predicate.*;
import org.opencyc.elf.bg.predicate.True;
import org.opencyc.elf.bg.taskframe.*;
import org.opencyc.elf.goal.Goal;
import org.opencyc.elf.s.DirectSensor;

//// External Imports
import java.util.ArrayList;
import java.util.List;

/** ScheduleFactory populates the schedule libary.  There is a singleton instance.
 *
 * <P>Copyright (c) 2003 Cycorp, Inc.  All rights reserved.
 * <BR>This software is the proprietary information of Cycorp, Inc.
 * <P>Use is subject to license terms.
 *
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * @@version $Id: ScheduleFactory.java,v 1.8 2003/10/06 05:15:22 stephenreed Exp $
 */
public class ScheduleFactory {
  
  //// Constructors
  
  /** Creates a new instance of ScheduleFactory. */
  public ScheduleFactory() {
    scheduleFactory = this;
  }
  
  //// Public Area
  
  /** Gets the schedule factory singleton instance.
   *
   * @@return the schedule factory singleton instance
   */
  public static ScheduleFactory getInstance() {
    return scheduleFactory;
  }
  
  /** Populates the schedule library. */
  public void populateScheduleLibrary () {
    // converse with user
    PredicateExpression predicateExpression = new PredicateExpression(new True()); 
    List plannedCommands = new ArrayList();
    // perform ConsolePromptedInput using ">"
    Action action = ActionLibrary.getInstance().getAction(Action.CONSOLE_PROMPTED_INPUT);
    List inputParameterValues = new ArrayList();
    inputParameterValues.add(">");
    action.setInputParameterValues(inputParameterValues);
    // achieve GetUserInput using 
    plannedCommands.add(action);
    plannedCommands.add(GoalLibrary.getInstance().getGoal(Goal.PERCEIVE_SENSATION));
    List plannedTimeMilliseconds = new ArrayList();
    plannedTimeMilliseconds.add(new Integer(100));
    plannedTimeMilliseconds.add(new Integer(300000));
    Schedule schedule = new Schedule(predicateExpression, 
                                     plannedCommands, 
                                     plannedTimeMilliseconds, 
                                     DirectActuator.CONSOLE_OUTPUT, 
                                     DirectSensor.CONSOLE_INPUT);
    List scheduleSet = new ArrayList();
    scheduleSet.add(schedule);
    ScheduleLibrary.getInstance().addScheduleSet(Action.CONVERSE_WITH_USER, scheduleSet);
  }
    
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the schedule factory singleton instance */
  protected static ScheduleFactory scheduleFactory;
  
  //// Main
  
}
@


1.8
log
@refactored Action and Goal to include Parameter
@
text
@d40 1
a40 1
 * @@version $Id: ScheduleFactory.java,v 1.7 2003/10/02 14:17:52 stephenreed Exp $
d68 3
@


1.7
log
@fix schedule set name
@
text
@a4 1

d6 1
a6 2

import org.opencyc.elf.bg.predicate.PredicateExpression;
d8 1
a8 4

import org.opencyc.elf.bg.taskframe.Action;
import org.opencyc.elf.bg.taskframe.Command;

a9 1

d40 1
a40 1
 * @@version $Id: ScheduleFactory.java,v 1.6 2003/10/01 22:58:14 stephenreed Exp $
d66 5
a70 2
    plannedCommands.add(ActionLibrary.getInstance().getAction(Action.CONSOLE_PROMPTED_INPUT));
    plannedCommands.add(GoalLibrary.getInstance().getGoal(Goal.GET_USER_INPUT));
@


1.6
log
@fixed setting the singleton instance in the constructor
@
text
@d46 1
a46 1
 * @@version $Id: ScheduleFactory.java,v 1.5 2003/09/22 22:56:37 stephenreed Exp $
d84 1
a84 1
    ScheduleLibrary.getInstance().addScheduleSet(Action.CONSOLE_PROMPTED_INPUT, scheduleSet);
@


1.5
log
@used schedule sets
@
text
@d46 1
a46 1
 * @@version $Id: ScheduleFactory.java,v 1.4 2003/09/22 02:30:03 stephenreed Exp $
d54 1
@


1.4
log
@fixed compilation errors resulting from messages construct signature change
@
text
@d46 1
a46 1
 * @@version $Id: ScheduleFactory.java,v 1.3 2003/09/20 02:33:17 stephenreed Exp $
d81 3
a83 1
    ScheduleLibrary.getInstance().addSchedule(Action.CONSOLE_PROMPTED_INPUT, schedule);
@


1.3
log
@refined populateScheduleLibrary() method
@
text
@d14 2
d46 1
a46 1
 * @@version $Id: ScheduleFactory.java,v 1.2 2003/09/20 02:27:52 stephenreed Exp $
d72 1
d74 1
@


1.2
log
@adding code to ScheduleLibrary
@
text
@d9 1
d44 1
a44 1
 * @@version $Id: ScheduleFactory.java,v 1.8 2003/09/18 21:22:57 stephenreed Exp $
d67 1
a67 1
    PredicateExpression predicateExpression; 
d69 1
d71 1
@


1.1
log
@initial check in
@
text
@a0 7
/* $Id$
 *
 * Copyright (c) 2003 Cycorp, Inc.  All rights reserved.
 * This software is the proprietary information of Cycorp, Inc.
 * Use is subject to license terms.
 */

d4 10
d16 2
d19 1
a19 2
/**
 * <P>ScheduleFactory is designed to...
d25 19
a43 3
 * @@author reed
 * @@date September 19, 2003, 3:50 PM
 * @@version $Id$
d55 22
d82 3
@

