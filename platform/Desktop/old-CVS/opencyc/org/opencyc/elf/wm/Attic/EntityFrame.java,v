head	1.8;
access;
symbols
	PRE_1_0:1.8;
locks; strict;
comment	@# @;


1.8
date	2003.10.06.05.15.22;	author stephenreed;	state dead;
branches;
next	1.7;

1.7
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.17.16.53.51;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.14.13.58.04;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.05.16.01.37;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.28.20.50.38;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.11.21.24.17;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.08.13.22.25;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.8
log
@refactored Action and Goal to include Parameter
@
text
@package org.opencyc.elf.wm;

//// Internal Imports
import org.opencyc.elf.wm.state.State;

//// External Imports

/** EntityFrame is describes an entity with a list of stateVariable/values.
 * 
 * @@version $Id: EntityFrame.java,v 1.7 2003/09/18 21:22:57 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class EntityFrame {
  
  //// Constructors
  
  /** Creates a new instance of EntityFrame. */
  public EntityFrame() {
    state = new State();
  }

  /** Creates a new instance of EntityFrame given an existing entityFrame.
   * 
   * @@param entityFrame the given entityFrame
   */
  public EntityFrame(EntityFrame entityFrame) {
    state = (State) entityFrame.state.clone();
  }

  //// Public Area

  /** Returns a string representation of this object.
   * 
   * @@return string representation of this object
   */
  public String toString() {
    StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append("[EntityFrame:\n");
    stringBuffer.append(state.toString());
    stringBuffer.append("]");

    return stringBuffer.toString();
  }

  /** Return the entityFrame state.
   * 
   * @@return the entityFrame state
   */
  public State getState() {
    return state;
  }

  /** the entity state */
  protected State state;

  //// Main
}@


1.7
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@d10 1
a10 1
 * @@version $Id: EntityFrame.java,v 1.6 2003/09/17 16:53:51 stephenreed Exp $
@


1.6
log
@moved from org.opencyc.elf.bg.state to org.opencyc.elf.wm.state
@
text
@d8 1
a8 2
/**
 * EntityFrame is describes an entity with a list of stateVariable/values.
d10 1
a10 1
 * @@version $Id: EntityFrame.java,v 1.5 2003/09/14 13:58:04 stephenreed Exp $
d31 4
a34 3
  /**
   * Creates a new instance of EntityFrame.
   */
d39 1
a39 2
  /**
   * Creates a new instance of EntityFrame given an existing entityFrame.
d49 1
a49 18
  /**
   * Returns true if the given object equals this entityFrame.
   * 
   * @@param obj the given object
   * 
   * @@return true if the given object equals this entityFrame
   */
  public boolean equals(Object obj) {
    if (obj instanceof EntityFrame) {
      return state.equals(((EntityFrame) obj).getState());
    }
    else {
      return false;
    }
  }

  /**
   * Returns a string representation of this object.
d62 1
a62 2
  /**
   * Return the entityFrame state.
@


1.5
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d4 1
a4 1
import org.opencyc.elf.bg.state.State;
d11 1
a11 1
 * @@version $Id: EntityFrame.java,v 1.4 2003/09/05 16:01:37 stephenreed Exp $
@


1.4
log
@cleaned up imports and added a comment for state
@
text
@a8 1
 * <P>
a9 1
 * </p>
d11 1
a11 1
 * @@version $Id: EntityFrame.java,v 1.3 2003/08/28 20:50:38 stephenreed Exp $
@


1.3
log
@fixed cvs $Id:
@
text
@a2 3
//// External Imports
import java.util.Iterator;

d6 1
d13 1
a13 1
 * @@version $Id: BehaviorGeneration.java,v 1.3 2002/11/19 02:42:53 stephenreed Exp $
d91 1
a91 1
  /** DOCUMENT ME! */
@


1.2
log
@Reinserted the LGPL license clause that was wrongly removed by the Jalopy
indentation tool.
@
text
@d15 1
a15 2
 * @@version $Id: BehaviorGeneration.java,v 1.3 2002/11/19 02:42:53 stephenreed
 *          Exp $
@


1.1
log
@synchronized with work in progress.
@
text
@d17 18
a34 1
 * @@author Stephen L. Reed <p><p><p><p><p>
@

