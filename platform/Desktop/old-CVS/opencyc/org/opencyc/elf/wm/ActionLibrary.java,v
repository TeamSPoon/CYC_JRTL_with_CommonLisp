head	1.4;
access;
symbols
	PRE_1_0:1.4;
locks; strict;
comment	@# @;


1.4
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.14.13.58.04;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.08.19.06.08;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.08.18.46.46;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.4
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@package org.opencyc.elf.wm;

//// Internal Imports
import org.opencyc.elf.bg.taskframe.Action;

//// External Imports
import java.util.HashMap;

/** ActionLibrary provides a store in which partially instantiated actions can be retrieved
 * by name.  It is initially populated by the action factory.  There is a singleton instance
 * of action libary.
 *
 * @@version $Id: ActionLibrary.java,v 1.3 2003/09/14 13:58:04 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class ActionLibrary {
  
  //// Constructors
  
  /** Creates a new instance of ActionLibrary and stores it in the singleton instance. */
  public ActionLibrary() {
    actionLibrary = this;
  }
  
  //// Public Area
  
  /** Gets the action library singleton instance.
   *
   * @@return the action library singleton instance
   */
  public static ActionLibrary getInstance () {
    return actionLibrary;
  }
  
  /** Gets the action associated with the given action name.
   *
   * @@param name the given action name
   * @@return the cloned action associated with the given action name
   */
  public Action getAction (String name) {
    Action action = (Action)  actionDictionary.get(name);
    return (Action) action.clone();
  }

  /** Sets the action associated with the given action name.
   *
   * @@param name the given action name
   * @@param action the given action
   */
  public void setAction (String name, Action action) {
    actionDictionary.put(name, action);
  }
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the action library singleton instance */
  protected static ActionLibrary actionLibrary;
  
  /** the dictionary that associates a given action name with the action object */
  protected HashMap actionDictionary = new HashMap();
  
  //// Main
  
}
@


1.3
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d9 1
a9 2
/**
 * ActionLibrary provides a store in which partially instantiated actions can be retrieved
d13 1
a13 1
 * @@version $Id: ActionLibrary.java,v 1.2 2003/09/08 19:06:08 stephenreed Exp $
d44 1
a44 2
  /**
   * Gets the action library singleton instance.
d52 1
a52 2
  /**
   * Gets the action associated with the given action name.
d62 1
a62 2
  /**
   * Sets the action associated with the given action name.
@


1.2
log
@returned a clone in getAction(...) method
@
text
@d10 1
a10 1
 * <P>ActionLibrary provides a store in which partially instantiated actions can be retrieved
d14 1
a14 1
 * @@version $Id: ActionLibrary.java,v 1.1 2003/09/08 18:46:46 stephenreed Exp $
d84 1
a84 3
  /**
   * the dictionary that associates a given action name with the action object
   */
@


1.1
log
@initial check in
@
text
@d14 1
a14 1
 * @@version $Id: GoalLibrary.java,v 1.1 2003/09/08 17:25:35 stephenreed Exp $
d58 1
a58 1
   * @@return the action associated with the given action name
d61 2
a62 1
    return (Action) actionDictionary.get(name);
@

