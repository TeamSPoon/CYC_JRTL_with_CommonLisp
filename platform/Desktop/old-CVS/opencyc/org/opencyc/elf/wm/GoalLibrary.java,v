head	1.3;
access;
symbols
	PRE_1_0:1.3;
locks; strict;
comment	@# @;


1.3
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.14.13.58.04;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.08.17.25.35;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.3
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@package org.opencyc.elf.wm;

//// Internal Imports
import org.opencyc.elf.goal.Goal;

//// External Imports
import java.util.HashMap;

/** GoalLibrary contains the goal dictionary.  There is a singleton instance
 * of the goal library.
 * @@version $Id: GoalLibrary.java,v 1.2 2003/09/14 13:58:04 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class GoalLibrary {
  
  //// Constructors
  
  /** Creates a new instance of GoalLibrary and stores it in the singleton instance. */
  public GoalLibrary() {
    goalLibrary = this;
  }
  
  //// Public Area
  
  /** Gets the goal library singleton instance.
   *
   * @@return the goal library singleton instance
   */
  public static GoalLibrary getInstance () {
    return goalLibrary;
  }
  
  /** Gets the goal associated with the given goal name.
   *
   * @@param name the given goal name
   * @@return the goal associated with the given goal name
   */
  public Goal getGoal (String name) {
    return (Goal) goalDictionary.get(name);
  }

  /** Sets the goal associated with the given goal name.
   *
   * @@param name the given goal name
   * @@param goal the given goal
   */
  public void setGoal (String name, Goal goal) {
    goalDictionary.put(name, goal);
  }
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the goal library singleton instance */
  protected static GoalLibrary goalLibrary;
  
  /** the dictionary that associates a given goal name with the goal object */
  protected HashMap goalDictionary = new HashMap();
  
  //// Main
  
}
@


1.2
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d9 1
a9 2
/**
 * GoalLibrary contains the goal dictionary.  There is a singleton instance
d11 1
a11 1
 * @@version $Id: GoalLibrary.java,v 1.1 2003/09/08 17:25:35 stephenreed Exp $
d42 1
a42 2
  /**
   * Gets the goal library singleton instance.
d50 1
a50 2
  /**
   * Gets the goal associated with the given goal name.
d59 1
a59 2
  /**
   * Sets the goal associated with the given goal name.
@


1.1
log
@initial check in
@
text
@d12 1
a12 1
 * @@version $Id: GoalLibrary.java,v 1.1 2003/09/08 17:09:01 stephenreed Exp $
d81 1
a81 3
  /**
   * the dictionary that associates a given goal name with the goal object
   */
@

