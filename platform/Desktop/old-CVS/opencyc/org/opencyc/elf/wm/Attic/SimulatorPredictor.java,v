head	1.8;
access;
symbols
	PRE_1_0:1.8;
locks; strict;
comment	@# @;


1.8
date	2003.08.19.12.39.43;	author stephenreed;	state dead;
branches;
next	1.7;

1.7
date	2003.08.15.22.45.16;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.14.23.36.39;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.13.21.36.59;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.13.13.58.03;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.11.21.24.17;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.08.13.22.25;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.17.03.08.17;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.8
log
@renamed to PlanSimulator.java
@
text
@package org.opencyc.elf.wm;

//// Internal Imports
import org.opencyc.elf.NodeComponent;

import org.opencyc.elf.bg.planner.Schedule;
import org.opencyc.elf.bg.taskframe.TaskCommand;

//// External Imports
import java.util.ArrayList;

/**
 * Provides the simulator-predictor for the ELF WorldModel.<br>
 * 
 * @@version $Id: SimulatorPredictor.java,v 1.1 2002/11/17 03:08:17 stephenreed
 *          Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class SimulatorPredictor extends NodeComponent {
  
  //// Constructors
  
  /**
   * Constructs a new SimulatorPredictor object.
   */
  public SimulatorPredictor() {
  }

  //// Public Area
  
  /**
   * Gets the world model which owns this simulator-predictor
   * 
   * @@return the world model which owns this simulator-predictor
   */
  public WorldModel getWorldModel() {
    return worldModel;
  }

  /**
   * Sets the world model which owns this simulator-predictor
   * 
   * @@param worldModel the world model which owns this simulator-predictor
   */
  public void setWorldModel(WorldModel worldModel) {
    this.worldModel = worldModel;
  }
  
  //// Protected Area
  
  /**
   * Sends the request evaluate schedule message to the world model, which forwards it
   * to value judgement.
   */
  protected void requestEvaluateSchedule () {
    //TODO
    // send via channel to world model
    // ArrayList controlledResources
    // TaskCommand taskCommand
    // Schedule schedule
    // send forwardRequestEvaluateSchedule(controlledResources, taskCommand, schedule)
    // to worldModel
  }
  
  /**
   * Receives the simulate schedule message from the world model.
   */
  protected void receiveSimulateSchedule () {
    //TODO
    // receive via channel from world model
    // ArrayList controlledResources
    // TaskCommand taskCommand
    // Schedule schedule
  }
  
  /**
   * Sends the simulation failure notification message to the world model.
   */
  protected void sendSimulationFailureNotification () {
    //TODO
    // send via channel to the world model
    // ArrayList controlledResources
    // TaskCommand taskCommand
    // Schedule schedule
    // send forwardSimulationFailureNotification(controlledResources, taskCommand, schedule)
    // to worldModel
  }
  
  /**
   * Sends the predicted input message to ?.
   */
  protected void sendPredictedInput () {
    //TODO
    // send via channel to ?
    // Object obj
  }
  
  public void run() {
  }  
  
  
  
  
  //// Private Area
  
  //// Internal Rep
  
  /** the world model which owns this simulator-predictor */
  protected WorldModel worldModel;

  //// Main
}@


1.7
log
@/home/reed/opencyc/org/opencyc/elf
Added methods to KnowledgeBase
@
text
@@


1.6
log
@Added TODO comments
@
text
@d115 2
@


1.5
log
@Added function signatures.
@
text
@d69 2
a70 1
   * Sends the request evaluate schedule message to ?.
d74 1
a74 1
    // send via channel to ?
d78 2
d83 1
a83 1
   * Receives the simulate schedule message from ?.
d87 1
a87 1
    // receive via channel from ?
d94 1
a94 1
   * Sends the simulation failure notification message to ?.
d98 1
a98 1
    // send via channel to ?
d102 2
@


1.4
log
@Extended NodeComponent.
@
text
@d3 1
d6 6
d37 3
a39 3
  /** the world model which owns this simulator-predictor */
  protected WorldModel worldModel;

d46 2
d65 57
@


1.3
log
@Reinserted the LGPL license clause that was wrongly removed by the Jalopy
indentation tool.
@
text
@d3 2
d29 1
a29 1
public class SimulatorPredictor {
@


1.2
log
@synchronized with work in progress.
@
text
@d8 18
a25 1
 * @@author Stephen L. Reed <p><p><p><p><p>
@


1.1
log
@Initial check in
@
text
@a2 1
import org.opencyc.elf.*;
d5 4
a8 21
 *
 * @@version $Id: Actuator.java,v 1.3 2002/11/16 04:01:10 stephenreed Exp $
 * @@author Stephen L. Reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
a9 1

d11 2
d14 5
a18 10
    /**
     * the world model which owns this simulator-predictor
     */
    protected WorldModel worldModel;

    /**
     * Constructs a new SimulatorPredictor object.
     */
    public SimulatorPredictor() {
    }
d20 8
a27 8
    /**
     * Gets the world model which owns this simulator-predictor
     *
     * @@return the world model which owns this simulator-predictor
     */
    public WorldModel getWorldModel () {
        return worldModel;
    }
d29 9
a37 8
    /**
     * Sets the world model which owns this simulator-predictor
     *
     * @@param worldModel the world model which owns this simulator-predictor
     */
    public void setWorldModel (WorldModel worldModel) {
        this.worldModel = worldModel;
    }}@

