head	1.6;
access;
symbols
	PRE_1_0:1.6;
locks; strict;
comment	@# @;


1.6
date	2003.09.19.21.18.49;	author stephenreed;	state dead;
branches;
next	1.5;

1.5
date	2003.09.19.14.01.27;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.14.13.58.04;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.08.22.37.38;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.05.22.09.52;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.6
log
@renamed JobAssignmentFactory to JobFactory
@
text
@package org.opencyc.elf.wm;

//// Internal Imports
import org.opencyc.elf.bg.planner.JobAssignment;
import org.opencyc.elf.bg.planner.Resource;

import org.opencyc.elf.bg.taskframe.Action;

import org.opencyc.elf.wm.ActionFactory;

//// External Imports
import java.util.ArrayList;
import java.util.List;

/** JobAssignmentFactory populates the job assignment library.  There is a singleton instance.
 *
 * @@version $Id: JobAssignmentFactory.java,v 1.5 2003/09/19 14:01:27 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class JobAssignmentFactory {
  
  //// Constructors
  
  /** Creates a new instance of JobAssignmentFactory and stores it in the singleton instance. */
  public JobAssignmentFactory() {
    jobAssignmentFactory = this;
  }
  
  //// Public Area
  
  /** Gets the job assignment factory singleton instance.
   *
   * @@return the job assignment factory singleton instance
   */
  public JobAssignmentFactory getInstance () {
    return jobAssignmentFactory;
  }
  
  /** Poplulates the job assignment library. */
  public void populateJobAssignmentLibrary () {
    // converse with user
    JobAssignment jobAssignment = new JobAssignment();
    jobAssignment.setActionName(Action.CONVERSE_WITH_USER);
    List requiredResources = new ArrayList();
    requiredResources.add(ResourcePool.getInstance().getResource(Resource.CONSOLE));
    jobAssignment.setRequiredResources(requiredResources);
    ActionFactory actionFactory = new ActionFactory();
    Action action = ActionLibrary.getInstance().getAction(Action.CONSOLE_PROMPTED_INPUT);
    jobAssignment.setActionForScheduling(action);
    JobAssignmentLibrary.getInstance().addJobAssignment(Action.CONVERSE_WITH_USER, jobAssignment);
    
    //TODO
    
  }
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the job assignment factory singleton instance */
  protected static JobAssignmentFactory jobAssignmentFactory;
  
  //// Main
  
}
@


1.5
log
@refactoring between job assignment, schedule and task frame
@
text
@d17 1
a17 1
 * @@version $Id: JobAssignmentFactory.java,v 1.4 2003/09/18 21:22:57 stephenreed Exp $
@


1.4
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@d17 1
a17 1
 * @@version $Id: JobAssignmentFactory.java,v 1.3 2003/09/14 13:58:04 stephenreed Exp $
d67 1
a67 1
    JobAssignmentLibrary.getInstance().setJobAssignment(Action.CONVERSE_WITH_USER, jobAssignment);
@


1.3
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d15 1
a15 2
/**
 * JobAssignmentFactory populates the job assignment library.  There is a singleton instance.
d17 1
a17 1
 * @@version $Id: JobAssignmentFactory.java,v 1.2 2003/09/08 22:37:38 stephenreed Exp $
d48 1
a48 2
  /**
   * Gets the job assignment factory singleton instance.
d56 1
a56 3
  /**
   * Poplulates the job assignment library.
   */
@


1.2
log
@use action library instead of action factory
@
text
@d13 1
d18 1
a18 1
 * @@version $Id: JobAssignmentFactory.java,v 1.1 2003/09/05 22:09:52 stephenreed Exp $
d65 1
a65 1
    ArrayList requiredResources = new ArrayList();
@


1.1
log
@initial check in
@
text
@d17 1
a17 1
 * @@version $Id: TaskFrameFactory.java,v 1.2 2003/09/05 21:37:10 stephenreed Exp $
d68 1
a68 1
    Action action = actionFactory.makeConsolePromptedInput();
@

