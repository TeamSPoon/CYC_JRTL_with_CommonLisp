head	1.8;
access;
symbols
	PRE_1_0:1.8;
locks; strict;
comment	@# @;


1.8
date	2003.09.05.17.35.54;	author stephenreed;	state dead;
branches;
next	1.7;

1.7
date	2003.09.04.19.39.52;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.04.19.38.27;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.03.13.15.18;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.25.18.16.52;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.11.21.24.08;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.08.13.22.24;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.15.22.52.06;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.8
log
@not really a useful abstraction
@
text
@package org.opencyc.elf;

//// Internal Imports

//// External Imports

/**
 * Provides common behavior and attributes for all named Elementary Loop Functioning
 * (ELF) objects.<br>
 * 
 * @@version $Id: ELFObject.java,v 1.7 2003/09/04 19:39:52 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public abstract class ELFObject {
  
  //// Constructors
  
  /**
   * Constructs a new ELFObject object.
   */
  public ELFObject() {
  }

  //// Public Area
  
  /**
   * Gets the unique name of this ELF object
   * 
   * @@return the unique name of this ELF object
   */
  public String getName() {
    return name;
  }

  /**
   * Sets the unique name of this ELF object
   * 
   * @@param name the unique name of this ELF object
   */
  public void setName(String name) {
    this.name = name;
  }
  
  /**
   * Returns a string representation of this object.
   * 
   * @@return a string representation of this object
   */
  public abstract String toString();

  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
    
  /** the unique name of this ELF object */
  protected String name;

  //// Main
  
}@


1.7
log
@rearranged methods
@
text
@d11 1
a11 1
 * @@version $Id: ELFObject.java,v 1.6 2003/09/04 19:38:27 stephenreed Exp $
@


1.6
log
@rearranged according to section header
@
text
@d11 1
a11 1
 * @@version $Id: ELFObject.java,v 1.5 2003/09/03 13:15:18 stephenreed Exp $
a52 7
   * Returns a string representation of this object.
   * 
   * @@return a string representation of this object
   */
  public abstract String toString();

  /**
d61 7
@


1.5
log
@added section comments
@
text
@d8 1
a8 1
 * Provides common behavior and attributes for all Elementary Loop Functioning
d11 1
a11 1
 * @@version $Id: ELFObject.java,v 1.4 2003/08/25 18:16:52 stephenreed Exp $
d32 3
a34 3
  /** the unique name of this ELF object */
  protected String name;

d74 3
@


1.4
log
@Now an explicit abstract class, and the toString() method must be implemented
@
text
@d3 4
d11 1
a11 1
 * @@version $Id: ELFObject.java,v 1.3 2003/08/11 21:24:08 stephenreed Exp $
d41 2
d67 9
@


1.3
log
@Reinserted the LGPL license clause that was wrongly removed by the Jalopy
indentation tool.
@
text
@d7 1
a7 1
 * @@version $Id: ELFObject.java,v 1.2 2003/08/08 13:22:24 stephenreed Exp $
d27 1
a27 1
public class ELFObject {
d51 1
a51 3
  public String toString() {
    return name;
  }
@


1.2
log
@synchronized with work in progress.
@
text
@d7 19
a25 2
 * @@version $Id: ELFObject.java,v 1.1 2002/11/15 22:52:06 stephenreed Exp $
 * @@author Stephen L. Reed <p><p><p><p><p>
@


1.1
log
@Initial check in.
@
text
@d4 5
a8 24
 * Provides common behavior and attributes for all Elementary Loop
 * Functioning (ELF) objects.<br>
 *
 *
 * @@version $Id: Actuator.java,v 1.1 2002/10/25 23:23:57 stephenreed Exp $
 * @@author Stephen L. Reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
a9 1

d11 2
d14 32
a45 37
    /**
     * the unique name of this ELF object
     */
    protected String name;

    /**
     * Constructs a new ELFObject object.
     */
    public ELFObject() {
    }

    /**
     * Gets the unique name of this ELF object
     *
     * @@return the unique name of this ELF object
     */
    public String getName () {
        return name;
    }

    /**
     * Returns a string representation of this object.
     *
     * @@return a string representation of this object
     */
    public String toString() {
        return name;
    }

    /**
     * Sets the unique name of this ELF object
     *
     * @@param name the unique name of this ELF object
     */
    public void setName (String name) {
        this.name = name;
    }
@

