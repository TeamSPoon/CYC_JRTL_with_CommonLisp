head	1.5;
access;
symbols
	PRE_1_0:1.5;
locks; strict;
comment	@# @;


1.5
date	2002.11.18.17.50.56;	author stephenreed;	state dead;
branches;
next	1.4;

1.4
date	2002.11.17.03.08.17;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.16.04.01.10;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.15.22.52.05;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.25.23.23.57;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Removing files moved elsewhere.
@
text
@package org.opencyc.elf;

import org.opencyc.uml.core.*;
import org.opencyc.uml.interpreter.*;

/**
 * Provides Actuators for the Elementary Loop Functioning (ELF).<br>
 *
 * @@version $Id: Actuator.java,v 1.4 2002/11/17 03:08:17 stephenreed Exp $
 * @@author Stephen L. Reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

public class Actuator extends NodeComponent {

    /**
     * the commanded action
     */
    protected Procedure commandedAction;

    /**
     * the procedure interpreter
     */
    protected ProcedureInterpreter procedureInterpreter;

   /**
     * Constructs a new Actuator object.
     */
    public Actuator() {
    }

    /**
     * Returns a string representation of this object.
     *
     * @@return a string representation of this object
     */
    public String toString() {
        return "Actuator for " + node.name;
    }

    /**
     * Gets the commanded action
     *
     * @@return the commanded action
     */
    public Procedure getCommandedAction () {
        return commandedAction;
    }

    /**
     * Sets the commanded action
     *
     * @@param commandedAction the commanded action
     */
    public void setCommandedAction (Procedure commandedAction) {
        this.commandedAction = commandedAction;
    }

    /**
     * Gets the procedure interpreter
     *
     * @@return the procedure interpreter
     */
    public ProcedureInterpreter getProcedureInterpreter () {
        return procedureInterpreter;
    }

    /**
     * Sets the procedure interpreter
     *
     * @@param procedureInterpreter the procedure interpreter
     */
    public void setProcedureInterpreter (ProcedureInterpreter procedureInterpreter) {
        this.procedureInterpreter = procedureInterpreter;
    }
}@


1.4
log
@Initial check in
@
text
@d9 1
a9 1
 * @@version $Id: Actuator.java,v 1.3 2002/11/16 04:01:10 stephenreed Exp $
@


1.3
log
@Initial check in of LowestLevelNode
@
text
@d9 1
a9 2
 *
 * @@version $Id: Actuator.java,v 1.2 2002/11/15 22:52:05 stephenreed Exp $
@


1.2
log
@Initial check in.
@
text
@d3 3
d10 1
a10 1
 * @@version $Id: Actuator.java,v 1.1 2002/10/25 23:23:57 stephenreed Exp $
d34 10
d59 35
@


1.1
log
@Adding UML StateMachine support
Adding NIST Reference Architecture support
@
text
@d7 1
a7 1
 * @@version $Id: CycObjectFactory.java,v 1.17 2002/09/08 02:43:02 stephenreed Exp $
d29 1
a29 1
public class Actuator {
d31 1
a31 6
    /**
     * Reference to the ELF Node which contains this object.
     */
    protected Node node;

    /**
@

