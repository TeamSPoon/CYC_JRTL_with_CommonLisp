head	1.14;
access;
symbols
	PRE_1_0:1.14;
locks; strict;
comment	@# @;


1.14
date	2003.09.25.13.18.23;	author stephenreed;	state Exp;
branches;
next	1.13;

1.13
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.12;

1.12
date	2003.09.14.13.58.03;	author stephenreed;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.05.18.16.10;	author stephenreed;	state Exp;
branches;
next	1.10;

1.10
date	2003.08.28.20.49.29;	author stephenreed;	state Exp;
branches;
next	1.9;

1.9
date	2003.08.25.21.41.39;	author stephenreed;	state Exp;
branches;
next	1.8;

1.8
date	2003.08.25.18.08.23;	author stephenreed;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.15.22.45.16;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.14.23.36.39;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.14.16.26.07;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.13.22.50.48;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.11.21.24.17;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.08.13.22.25;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.18.17.45.42;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.14
log
@removed name and purpose from Node
@
text
@package org.opencyc.elf.vj;

//// Internal Imports
import org.opencyc.elf.NodeComponent;

import org.opencyc.elf.Result;

import org.opencyc.elf.Status;

import org.opencyc.elf.bg.planner.Schedule;
import org.opencyc.elf.bg.taskframe.TaskCommand;

//// External Imports

/** Provides Value Judgement for the Elementary Loop Functioning (ELF).
 * 
 * @@version $Id: ValueJudgement.java,v 1.13 2003/09/18 21:22:57 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class ValueJudgement extends NodeComponent {
  
  //// Constructors
  
  /** Constructs a new ValueJudgement object. */
  public ValueJudgement() {
  }

  //// Public Area
  
  /** Returns a string representation of this object.
   * 
   * @@return a string representation of this object
   */
  public String toString() {
    return "ValueJudgement for " + node.toString();
  }

  /** Gets the plan evaluator
   *
   * @@return the plan evaluator
   */
  public PlanEvaluator getPlanEvaluator () {
    return planEvaluator;
  }

  /** Sets the plan evaluator
   *
   * @@param planEvaluator the plan evaluator
   */
  public void setPlanEvaluator (PlanEvaluator planEvaluator) {
    this.planEvaluator = planEvaluator;
  }

  /** Gets the entity evaluator
   *
   * @@return the entity evaluator
   */
  public EntityEvaluator getEntityEvaluator () {
    return entityEvaluator;
  }

  /** Sets the entity evaluator
   *
   * @@param entityEvaluator the entity evaluator
   */
  public void setEntityEvaluator (EntityEvaluator entityEvaluator) {
    this.entityEvaluator = entityEvaluator;
  }
  
  //// Protected Area
    
  //// Private Area
  
  //// Internal Rep
  
  /** the plan evaluator */
  protected PlanEvaluator planEvaluator;
  
  /** the entity evaluator */
  protected EntityEvaluator entityEvaluator;
  
  //// Main
}@


1.13
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@d17 1
a17 1
 * @@version $Id: ValueJudgement.java,v 1.12 2003/09/14 13:58:03 stephenreed Exp $
d52 1
a52 1
    return "ValueJudgement for " + node.getName();
@


1.12
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d15 1
a15 2
/**
 * Provides Value Judgement for the Elementary Loop Functioning (ELF).
d17 1
a17 1
 * @@version $Id: ValueJudgement.java,v 1.11 2003/09/05 18:16:10 stephenreed Exp $
d41 1
a41 3
   /**
   * Constructs a new ValueJudgement object.
   */
d47 1
a47 2
  /**
   * Returns a string representation of this object.
d55 1
a55 2
  /**
   * Gets the plan evaluator
d63 1
a63 2
  /**
   * Sets the plan evaluator
d71 1
a71 2
  /**
   * Gets the entity evaluator
d79 1
a79 2
  /**
   * Sets the entity evaluator
d93 1
a93 3
  /**
   * the plan evaluator
   */
d96 1
a96 3
  /**
   * the entity evaluator
   */
@


1.11
log
@/home/reed/opencyc/org/opencyc/elf
fixed javadoc errors
@
text
@a13 2
import java.util.ArrayList;

d18 1
a18 1
 * @@version $Id: ValueJudgement.java,v 1.10 2003/08/28 20:49:29 stephenreed Exp $
@


1.10
log
@fixed cvs $Id:
@
text
@d18 1
a18 1
 * Provides Value Judgement for the Elementary Loop Functioning (ELF).<br>
d20 1
a20 1
 * @@version $Id: ValueJudgement.java,v 1.1 2002/11/18 17:45:42 stephenreed Exp $
@


1.9
log
@added instance variables for the value judgement sub components: plan evaluator and entity evaluator
@
text
@d20 1
a20 2
 * @@version $Id: ValueJudgement.java,v 1.1 2002/11/18 17:45:42 stephenreed Exp
 *          $
@


1.8
log
@Removed messaging method placeholders
@
text
@d61 36
d103 10
@


1.7
log
@/home/reed/opencyc/org/opencyc/elf
Added methods to KnowledgeBase
@
text
@a50 1
  
d63 1
a63 64
  
  /**
   * Receives the evaluate schedule message forwarded from world model.
   */
  protected void receiveEvaluateSchedule () {
    //TODO
    // receive via channel from world model
    // ArrayList controlledResources
    // TaskCommand taskCommand
    // Schedule schedule
    // may call sendScheduleEvaluation();
  }
  
  /**
   * Sends the schedule evaluation message to behavior generation.
   */
  protected void sendScheduleEvaluation () {
    //TODO
    // send via channel to behavior generation
    // ArrayList controlledResources
    // TaskCommand taskCommand
    // Schedule schedule
    // Result result
    // send receiveScheduleEvaluation(controlledResources, taskCommand, schedule, result)
    // to behaviorGeneration
  }
  
  /**
   * Receives the predicted input message from ?.
   */
  protected void receivePredictedInput () {
    //TODO
    // receive via channel from ?
    // Object obj
  }
  
  /**
   * Receives the update message from sensory perception.
   */
  protected void receiveUpdate () {
    //TODO
    // receive via channel from sensory perception
    // Object obj
    // Object data
  }
  
  /**
   * Sends the value Judgement status message to behavior generation.
   */
  protected void sendValueJudgementStatus () {
    //TODO
    // send via channel to behavior generation
    // ArrayList controlledResources
    // TaskCommand taskCommand
    // Schedule schedule
    // Status status
    // send receiveValueJudgementStatus(controlledResources, taskCommand, schedule, status)
    // to behaviorGeneration
  }
  
  public void run() {
  }  
  
  
@


1.6
log
@Added TODO comments
@
text
@d124 2
@


1.5
log
@/home/reed/opencyc/org/opencyc/elf
Adding TODO comments
@
text
@d74 1
@


1.4
log
@Added method signatures
@
text
@d66 1
a66 1
   * Receives the evaluate schedule message from ?.
d70 1
a70 1
    // receive via channel from ?
d77 1
a77 1
   * Sends the schedule evaluation message to ?.
d81 1
a81 1
    // send via channel to ?
d86 2
d100 1
a100 1
   * Receives the update message from ?.
d104 1
a104 1
    // receive via channel from ?
d110 1
a110 1
   * Sends the value Judgement status message to ?.
d114 1
a114 1
    // send via channel to ?
d119 2
@


1.3
log
@Reinserted the LGPL license clause that was wrongly removed by the Jalopy
indentation tool.
@
text
@d3 1
d6 10
d42 4
a45 1
  /**
d51 3
d62 64
@


1.2
log
@synchronized with work in progress.
@
text
@d11 18
a28 1
 * @@author Stephen L. Reed <p><p><p><p><p>
@


1.1
log
@Inital check in
@
text
@d3 2
a4 1
import org.opencyc.elf.*;
d8 4
a11 22
 *
 *
 * @@version $Id: ValueJudgement.java,v 1.2 2002/11/15 22:52:06 stephenreed Exp $
 * @@author Stephen L. Reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
a12 1

d14 5
d20 8
a27 14
    /**
     * Constructs a new ValueJudgement object.
     */
    public ValueJudgement() {
    }

    /**
     * Returns a string representation of this object.
     *
     * @@return a string representation of this object
     */
    public String toString() {
        return "ValueJudgement for " + node.getName();
    }
@

