head	1.5;
access;
symbols
	PRE_1_0:1.5;
locks; strict;
comment	@# @;


1.5
date	2003.09.20.23.42.54;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.14.13.58.03;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.31.11.56.36;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.15.22.47.23;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.5
log
@removed setter methods, put all variables into the constructor, coded the toString() method
@
text
@package org.opencyc.elf.message;

//// Internal Imports
import org.opencyc.elf.NodeComponent;


//// External Imports
import EDU.oswego.cs.dl.util.concurrent.Puttable;

/** Provides generic message attributes and behavior that is extended by subclasses
 * for specific message types.
 * 
 * @@version $Id: GenericMsg.java,v 1.4 2003/09/18 21:22:57 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

abstract public class GenericMsg {
  
  //// Constructors
  
  /** Creates a new instance of GenericMsg. */
  public GenericMsg() {
  }
  
  //// Public Area
  
  /** Gets the sender of the message
   *
   * @@return the sender of the message
   */
  public NodeComponent getSender () {
    return sender;
  }

  /** Sets the sender of the message
   *
   * @@param sender the sender of the message
   */
  public void setSender (NodeComponent sender) {
    this.sender = sender;
  }

  /** Gets the in-reply-to message, or null if this message is unsolicited
   *
   * @@return the in-reply-to message, or null if this message is unsolicited
   */
  public GenericMsg getInReplyToMsg () {
    return inReplyToMsg;
  }

  /** Sets the in-reply-to message, or null if this message is unsolicited
   *
   * @@param inReplyToMsg the in-reply-to message, or null if this message is unsolicited
   */
  public void setInReplyToMsg (GenericMsg inReplyToMsg) {
    this.inReplyToMsg = inReplyToMsg;
  }

  /** Gets the reply-to channel, or null if no response is required
   *
   * @@return the reply-to channel, or null if no response is required
   */
  public Puttable getReplyToChannel () {
    return replyToChannel;
  }

  /** Sets the reply-to channel, or null if no response is required
   *
   * @@param replyToChannel the reply-to channel, or null if no response is required
   */
  public void setReplyToChannel (Puttable replyToChannel) {
    this.replyToChannel = replyToChannel;
  }

  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the sender of the message */
  protected NodeComponent sender;
  
  /** the in-reply-to message, or null if this message is unsolicited */
  protected GenericMsg inReplyToMsg;
  
  /** the reply-to channel, or null if no response is required */
  protected Puttable replyToChannel;

  //// Main
  
}
@


1.4
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@d13 1
a13 1
 * @@version $Id: GenericMsg.java,v 1.3 2003/09/14 13:58:03 stephenreed Exp $
a43 12
  /** Returns a string representation of this object.
   *
   * @@return a string representation of this object
   */
  public String toString() {
    StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append("[");
    stringBuffer.append(this.getClass().getName());
    stringBuffer.append("]");
    return stringBuffer.toString();
  }

@


1.3
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d10 1
a10 2
/**
 * Provides generic message attributes and behavior that is extended by subclasses
d13 1
a13 1
 * @@version $Id: GenericMsg.java,v 1.2 2003/08/31 11:56:36 stephenreed Exp $
d44 1
a44 2
  /**
   * Returns a string representation of this object.
d56 1
a56 2
  /**
   * Gets the sender of the message
d64 1
a64 2
  /**
   * Sets the sender of the message
d72 1
a72 2
  /**
   * Gets the in-reply-to message, or null if this message is unsolicited
d80 1
a80 2
  /**
   * Sets the in-reply-to message, or null if this message is unsolicited
d88 1
a88 2
  /**
   * Gets the reply-to channel, or null if no response is required
d96 1
a96 2
  /**
   * Sets the reply-to channel, or null if no response is required
@


1.2
log
@added toString() method
@
text
@d14 1
a14 1
 * @@version $Id: GenericMsg.java,v 1.1 2003/08/15 22:47:23 stephenreed Exp $
d118 1
a118 3
  /**
   * the sender of the message
   */
d121 1
a121 3
  /**
   * the in-reply-to message, or null if this message is unsolicited
   */
d124 1
a124 3
  /**
   * the reply-to channel, or null if no response is required
   */
@


1.1
log
@/home/reed/opencyc/org/opencyc/elf/message
Added message types
@
text
@d14 1
a14 1
 * @@version $Id: NodeComponent.java,v 1.5 2003/08/11 21:24:08 stephenreed Exp $
d45 12
@

