head	1.8;
access;
symbols
	PRE_1_0:1.8;
locks; strict;
comment	@# @;


1.8
date	2003.09.20.23.42.54;	author stephenreed;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.19.22.21.42;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.19.13.57.35;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.18.22.02.58;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.18.13.47.49;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.17.23.11.35;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.14.13.58.03;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.19.19.19.20;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.8
log
@removed setter methods, put all variables into the constructor, coded the toString() method
@
text
@package org.opencyc.elf.message;

//// Internal Imports
import org.opencyc.elf.NodeComponent;

import org.opencyc.elf.bg.planner.Job;

//// External Imports

/** Provides the container for the schedule job message, that is sent from the job assigner to
 * the scheduler.  
 * 
 * @@version $Id: ScheduleJobMsg.java,v 1.7 2003/09/19 22:21:42 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class ScheduleJobMsg extends GenericMsg {
  
  //// Constructors
  
  /** Creates a new instance of ScheduleJobMsg. 
   *
   * @@param sender the sender of the message
   * @@param job the assigned job
   */
  public ScheduleJobMsg(NodeComponent sender, Job job) {
    this.sender = sender;
    this.job = job;
  }
  
  //// Public Area
  
  /** Returns a string representation of this object.
   * 
   * @@return a string representation of this object
   */
  public String toString() {
    StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append("[ScheduleJobMsg ");
    stringBuffer.append(job.toString());
    stringBuffer.append("]");
    return stringBuffer.toString();
  }

  /** Gets the assigned job
   * @@return the assigned job
   */
  public Job getJob () {
    return job;
  }

  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the assigned job */
  protected Job job;
  
  //// Main
    
}
@


1.7
log
@/home/reed/opencyc/org/opencyc/elf
refactored job and schedule
@
text
@d4 2
d13 1
a13 1
 * @@version $Id: ScheduleJobMsg.java,v 1.6 2003/09/19 13:57:35 stephenreed Exp $
d37 8
a44 2
  /** Creates a new instance of ScheduleJobMsg. */
  public ScheduleJobMsg() {
a65 8
  }

  /** Sets the assigned job
   *
   * @@param job the assigned job
   */
  public void setJob (Job job) {
    this.job = job;
@


1.6
log
@replaced task comand and schedule with the job assignment
@
text
@d4 1
a4 1
import org.opencyc.elf.bg.planner.JobAssignment;
d11 1
a11 1
 * @@version $Id: ScheduleJobMsg.java,v 1.5 2003/09/18 22:02:58 stephenreed Exp $
d48 1
a48 1
    stringBuffer.append(jobAssignment.toString());
d53 2
a54 3
  /** Gets the job assignment
   *
   * @@return the job assignment
d56 2
a57 2
  public JobAssignment getJobAssignment () {
    return jobAssignment;
d60 1
a60 1
  /** Sets the job assignment
d62 1
a62 1
   * @@param jobAssignment the job assignment
d64 2
a65 2
  public void setJobAssignment (JobAssignment jobAssignment) {
    this.jobAssignment = jobAssignment;
a67 1

d74 2
a75 2
  /** the job assignment */
  protected JobAssignment jobAssignment;
@


1.5
log
@/home/reed/opencyc/org/opencyc/elf
renamed scheduler.actuatorName to scheduler.directActuatorName and renamed scheduler.sensorName to scheduler.directSensorName
@
text
@d4 1
a4 3
import org.opencyc.elf.bg.planner.Schedule;

import org.opencyc.elf.bg.taskframe.TaskCommand;
d9 1
a9 2
 * the scheduler.  If the schedule is not included, then the scheduler must determine its
 * own schedule using the task command.
d11 1
a11 1
 * @@version $Id: ScheduleJobMsg.java,v 1.4 2003/09/18 13:47:49 stephenreed Exp $
d48 1
a48 4
    if (taskCommand != null)
      stringBuffer.append(taskCommand.toString());
    if (schedule != null)
      stringBuffer.append(schedule.toString());
d53 1
a53 1
  /** Gets the commanded task for scheduling in case the schedule is not explicitly given
d55 1
a55 1
   * @@return the commanded task for scheduling in case the schedule is not explicitly given
d57 2
a58 2
  public TaskCommand getTaskCommand () {
    return taskCommand;
d61 1
a61 1
  /** Sets the commanded task for scheduling in case the schedule is not explicitly given
d63 1
a63 1
   * @@param taskCommand the commanded task for scheduling in case the schedule is not explicitly given
d65 2
a66 2
  public void setTaskCommand (TaskCommand taskCommand) {
    this.taskCommand = taskCommand;
a68 15
  /** Gets the schedule
   *
   * @@return the schedule
   */
  public Schedule getSchedule () {
    return schedule;
  }

  /** Sets the schedule
   *
   * @@param schedule the schedule
   */
  public void setSchedule (Schedule schedule) {
    this.schedule = schedule;
  }
d76 2
a77 5
  /** the schedule */
  protected Schedule schedule;
  
  /** the commanded task for scheduling in case the schedule is not explicitly given */
  protected TaskCommand taskCommand;
d80 1
a80 2
  
  
@


1.4
log
@added schedule instance variable
@
text
@d14 1
a14 1
 * @@version $Id: ScheduleJobMsg.java,v 1.3 2003/09/17 23:11:35 stephenreed Exp $
d44 15
@


1.3
log
@comment reformatting
@
text
@d4 1
d11 2
a12 1
 * the scheduler.
d14 1
a14 1
 * @@version $Id: ScheduleJobMsg.java,v 1.2 2003/09/14 13:58:03 stephenreed Exp $
d44 1
a44 1
  /** Gets the commanded task for scheduling
d46 1
a46 1
   * @@return the commanded task for scheduling
d52 1
a52 1
  /** Sets the commanded task for scheduling
d54 1
a54 1
   * @@param taskCommand the commanded task for scheduling
d60 16
d82 4
a85 1
  /** the commanded task for scheduling */
@


1.2
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d9 1
a9 2
/**
 * Provides the container for the schedule job message, that is sent from the job assigner to
d12 1
a12 1
 * @@version $Id: ScheduleJobMsg.java,v 1.1 2003/08/19 19:19:20 stephenreed Exp $
d42 1
a42 2
  /**
   * Gets the commanded task for scheduling
d50 1
a50 2
  /**
   * Sets the commanded task for scheduling
@


1.1
log
@initial check in
@
text
@d13 1
a13 1
 * @@version $Id: DoTaskMsg.java,v 1.1 2003/08/19 18:16:32 stephenreed Exp $
d67 1
a67 3
  /**
   * the commanded task for scheduling
   */
@

