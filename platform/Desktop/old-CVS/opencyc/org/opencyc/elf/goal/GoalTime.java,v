head	1.8;
access;
symbols
	PRE_1_0:1.8;
locks; strict;
comment	@# @;


1.8
date	2003.10.06.05.15.22;	author stephenreed;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.19.22.21.42;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.14.13.58.03;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.05.18.16.10;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.04.17.33.22;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.03.21.14.55;	author stephenreed;	state dead;
branches;
next	1.1;

1.1
date	2003.08.11.22.01.48;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.8
log
@refactored Action and Goal to include Parameter
@
text
@package org.opencyc.elf.goal;

//// Internal Imports

//// External Imports

/** GoalTime contains the goal achievement time and tolerance.
 *
 * @@version $Id: GoalTime.java,v 1.7 2003/09/19 22:21:42 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class GoalTime {
  
  //// Constructors
  
  /** Creates a new instance of GoalTime given the goal achievment time and tolerance.
   *
   * @@param goalTimeMilliseconds the goal achievement time in milliseconds
   * @@param goalToleranceMilliseconds the goal achievement tolerance in milliseconds
   */
  public GoalTime(long goalTimeMilliseconds, long goalToleranceMilliseconds) {
    this.goalTimeMilliseconds = goalTimeMilliseconds;
    this.goalToleranceMilliseconds = goalToleranceMilliseconds;
  }
  
  //// Public Area
  
  /** Creates and returns a copy of this object. */
  public Object clone() {
    return new GoalTime(goalTimeMilliseconds, goalToleranceMilliseconds);
  }
  
  /** Gets the goal achievement time in milliseconds
   *
   * @@return the goal achievement time in milliseconds
   */
  public long getGoalTimeMilliseconds () {
    return goalTimeMilliseconds;
  }

  /** Gets the goal achievement tolerance in milliseconds
   *
   * @@return the goal achievement tolerance in milliseconds
   */
  public long getGoalToleranceMilliseconds () {
    return goalToleranceMilliseconds;
  }

  /** Returns a string representation of this object.
   * 
   * @@return a string representation of this object
   */
  public String toString() {
    StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(String.valueOf(goalTimeMilliseconds));
    if (goalToleranceMilliseconds != 0) {
      stringBuffer.append(" +/- ");
      stringBuffer.append(String.valueOf(goalToleranceMilliseconds));
    }
    return stringBuffer.toString();
  }
  
  /** ten minutes measured in milliseconds */
  public static final long TEN_MINUTES = 10 * 3600;
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the goal achievement time in milliseconds */
  protected final long goalTimeMilliseconds;  
  
  /** the goal achievement tolerance in milliseconds */
  protected final long goalToleranceMilliseconds;
    
  //// Main
  
}
@


1.7
log
@/home/reed/opencyc/org/opencyc/elf
refactored job and schedule
@
text
@d9 1
a9 1
 * @@version $Id: GoalTime.java,v 1.6 2003/09/18 21:22:57 stephenreed Exp $
a32 4
  /** Creates a new instance of GoalTime. */
  public GoalTime() {
  }
  
a57 8
  /** Sets the goal achievement time in milliseconds
   *
   * @@param goalTimeMilliseconds the goal achievement time in milliseconds
   */
  public void setGoalTimeMilliseconds (long goalTimeMilliseconds) {
    this.goalTimeMilliseconds = goalTimeMilliseconds;
  }

a65 8
  /** Sets the goal achievement tolerance in milliseconds
   *
   * @@param goalToleranceMilliseconds the goal achievement tolerance in milliseconds
   */
  public void setGoalToleranceMilliseconds (long goalToleranceMilliseconds) {
    this.goalToleranceMilliseconds = goalToleranceMilliseconds;
  }

d80 3
d90 1
a90 1
  protected long goalTimeMilliseconds;  
d93 1
a93 1
  protected long goalToleranceMilliseconds = 0;
@


1.6
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@d9 1
a9 1
 * @@version $Id: GoalTime.java,v 1.5 2003/09/14 13:58:03 stephenreed Exp $
d48 5
@


1.5
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d7 1
a7 2
/**
 * GoalTime contains the goal achievement time and tolerance.
d9 1
a9 1
 * @@version $Id: GoalTime.java,v 1.4 2003/09/05 18:16:10 stephenreed Exp $
d37 1
a37 2
  /** 
   * Creates a new instance of GoalTime given the goal achievment time and tolerance.
d49 1
a49 2
  /**
   * Gets the goal achievement time in milliseconds
d57 1
a57 2
  /**
   * Sets the goal achievement time in milliseconds
d65 1
a65 2
  /**
   * Gets the goal achievement tolerance in milliseconds
d73 1
a73 2
  /**
   * Sets the goal achievement tolerance in milliseconds
d81 1
a81 2
  /**
   * Returns a string representation of this object.
@


1.4
log
@/home/reed/opencyc/org/opencyc/elf
fixed javadoc errors
@
text
@d10 1
a10 1
 * @@version $Id: GoalTime.java,v 1.3 2003/09/04 17:33:22 stephenreed Exp $
d108 1
a108 3
  /**
   * the goal achievement time in milliseconds
   */
d111 1
a111 3
  /**
   * the goal achievement tolerance in milliseconds
   */
@


1.3
log
@checking back in
@
text
@d8 1
a8 1
 * <P>GoalTime contains the goal achievement time and tolerance.
d10 1
a10 1
 * @@version $Id: TaskCommand.java,v 1.6 2003/08/31 11:55:57 stephenreed Exp $
d30 1
a30 1
public class GoalTime extends org.opencyc.elf.ELFObject {
d81 1
a81 1
   * @@param xxx the goal achievement tolerance in milliseconds
@


1.2
log
@removed and move goal times to the containing goal and schedule objects
@
text
@a4 2
import org.opencyc.elf.bg.state.State;

d8 1
a8 1
 * <P>GoalTime contains the timing constraint on achieving the goal plus modifiers such as tolerance
d10 2
a28 4
 *
 * @@author reed
 * @@date August 11, 2003, 3:52 PM
 * @@version $Id: GoalTime.java,v 1.1 2003/08/11 22:01:48 stephenreed Exp $
d30 1
a30 1
public class GoalTime {
d38 11
d52 10
a61 1
   * Gets the goal time constaint in milliseconds
d63 1
a63 1
   * @@return the goal time constaint in milliseconds
d65 2
a66 2
  public long getTimeMillis () {
    return ((Long) state.getStateValue("goalTimeConstaintMillis")).longValue();
d70 1
a70 1
   * Sets the goal time constaint in milliseconds
d72 1
a72 1
   * @@param timeMillis the goal time constaint in milliseconds
d74 2
a75 2
  public void setTimeMillis (long timeMillis) {
    state.setStateValue("goalTimeConstaintMillis", new Long(timeMillis));
d77 10
a86 3
  
  //// Protected Area
  
d88 3
a90 1
   * the state of the goal time constraint
d92 9
a100 1
  protected State state;
d102 1
d108 10
@


1.1
log
@Initial check in
@
text
@d32 1
a32 1
 * @@version $Id$
@

