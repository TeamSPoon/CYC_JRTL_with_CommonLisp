head	1.7;
access;
symbols
	PRE_1_0:1.7;
locks; strict;
comment	@# @;


1.7
date	2003.09.05.19.07.12;	author stephenreed;	state dead;
branches;
next	1.6;

1.6
date	2003.09.05.18.16.10;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.04.20.00.29;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.04.00.11.32;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.03.18.30.56;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.03.12.50.16;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.03.12.47.48;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.7
log
@moved from planner to wm package
@
text
@package org.opencyc.elf.bg.planner;

//// Internal Imports
import org.opencyc.elf.bg.taskframe.Action;
import org.opencyc.elf.bg.taskframe.ActionFactory;

//// External Imports
import java.util.ArrayList;
import java.util.HashMap;

/**
 * ScheduleLibrary provides the timing specification for a plan given the job to
 * perform.  There is a singleton instance.
 * 
 * @@version $Id: ScheduleLibrary.java,v 1.6 2003/09/05 18:16:10 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class ScheduleLibrary {
  
  //// Constructors
  
  /** Creates a new instance of ScheduleLibrary. */
  public ScheduleLibrary() {
    scheduleLibrary = this;
  }
  
  //// Public Area
  
  /**
   * Gets the singleton schedule library instance.
   *
   * @@return the singleton schedule library instance
   */
  public static ScheduleLibrary getInstance () {
    return scheduleLibrary;
  }
  
  /**
   * Initializes the schedule library.
   */
  public void initialize() {
    // 
    Schedule schedule = new Schedule();
    ActionFactory actionFactory = new ActionFactory();
    
    // convserse with user --> console prompted input
    ArrayList plannedActions = new ArrayList();
    plannedActions.add(actionFactory.makeConsolePromptedInput());
    schedule.setPlannedActions(plannedActions);
    ArrayList plannedGoals = new ArrayList();
    addSchedule(Action.CONVERSE_WITH_USER, schedule);
  }
  
  /**
   * Gets the list of schedules that accomplish the given action name.
   *
   * @@param actionName the given action name
   * @@return the list of schedules that accomplish the given action name
   */
  public ArrayList getSchedules (String actionName) {
    ArrayList schedules = (ArrayList) scheduleDictionary.get(actionName);
    if (schedules == null)
      return new ArrayList();
    else
      return schedules;
  }
  
  //// Protected Area
   
  /**
   * Sets the list of schedules that accomplish the given action name.
   *
   * @@param actionName the given action name
   * @@param schedules the list of schedules that accomplish the given action name
   */
  protected void setSchedules (String actionName, ArrayList schedules) {
    scheduleDictionary.put(actionName, schedules);
  }

  /**
   * Adds a schedule to the list of schedules that accomplish the given action name.
   *
   * @@param actionName the given action name
   * @@param schedule the schedule that accomplishes the given action name
   */
  protected void addSchedule (String actionName, Schedule schedule) {
    ArrayList schedules = (ArrayList) scheduleDictionary.get(actionName);
    if (schedules == null)
      schedules = new ArrayList();
    schedules.add(schedule);
    scheduleDictionary.put(actionName, schedules);
  }

  //// Private Area
  
  //// Internal Rep
  
  /**
   * the dictionary that associates a given action name with the list of schedules that
   * accomplish it
   */
  protected HashMap scheduleDictionary = new HashMap();
  
  /**
   * the singleton schedule library instance
   */
  protected static ScheduleLibrary scheduleLibrary;
  
  //// Main
  
}
@


1.6
log
@/home/reed/opencyc/org/opencyc/elf
fixed javadoc errors
@
text
@d15 1
a15 1
 * @@version $Id: ScheduleLibrary.java,v 1.5 2003/09/04 20:00:29 stephenreed Exp $
@


1.5
log
@put schedule into the dictionary when initializing
@
text
@a11 1
 * <P>
a13 1
 * </p>
d15 1
a15 1
 * @@version $Id: ScheduleLibrary.java,v 1.4 2003/09/04 00:11:32 stephenreed Exp $
d74 1
a74 1
   * @@param action the given action name
d90 1
a90 1
   * @@param action the given action name
d100 1
a100 1
   * @@param action the given action name
@


1.4
log
@added action factory
@
text
@d4 1
d17 1
a17 1
 * @@version $Id: ScheduleLibrary.java,v 1.3 2003/09/03 18:30:56 stephenreed Exp $
d64 2
a65 1
    // console prompted input
d70 1
@


1.3
log
@added addSchedule method
@
text
@d4 1
d16 1
a16 1
 * @@version $Id: ScheduleLibrary.java,v 1.2 2003/09/03 12:50:16 stephenreed Exp $
d62 6
d84 2
d92 1
a92 1
  public void setSchedules (String actionName, ArrayList schedules) {
d102 1
a102 1
  public void addSchedule (String actionName, Schedule schedule) {
a109 2
  //// Protected Area
   
@


1.2
log
@provided singleton instance
@
text
@d15 1
a15 1
 * @@version $Id: ScheduleLibrary.java,v 1.1 2003/09/03 12:47:48 stephenreed Exp $
d59 2
a60 1
    //TODO
d70 5
a74 1
    return (ArrayList) scheduleDictionary.get(actionName);
d77 24
@


1.1
log
@renamed from ScheduleLibary
@
text
@d15 1
a15 1
 * @@version $Id: ScheduleLibary.java,v 1.2 2003/09/02 23:47:14 stephenreed Exp $
d41 1
d45 9
@

