head	1.4;
access;
symbols
	PRE_1_0:1.4;
locks; strict;
comment	@# @;


1.4
date	2003.08.25.19.36.06;	author stephenreed;	state dead;
branches;
next	1.3;

1.3
date	2003.08.15.22.45.16;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.11.21.24.17;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.08.13.22.24;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Removed.  BehaviorGeneration will contain the planner components
@
text
@package org.opencyc.elf.bg.planner;

//// Internal Imports
import org.opencyc.elf.NodeComponent;
import org.opencyc.elf.bg.BehaviorGeneration;
import org.opencyc.elf.bg.executor.Executor;
import org.opencyc.elf.bg.procedure.Procedure;
import org.opencyc.elf.goal.Goal;


//// External Imports

/**
 * Provides the Planner for ELF BehaviorGeneration.<br>
 * 
 * @@version $Id: Planner.java,v 1.3 2003/08/15 22:45:16 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public abstract class Planner extends NodeComponent {
  //// Constructors

  /**
   * Constructs a new Planner object.
   */
  public Planner() {
  }

  //// Public Area

  /**
   * Returns true if the given object equals this object.
   * 
   * @@param obj the given object
   * 
   * @@return true if the given object equals this object
   */
  public boolean equals(Object obj) {
    if (!(obj instanceof Planner)) {
      return false;
    }

    //TODO
    return true;
  }

  /**
   * Returns a string representation of this object.
   * 
   * @@return a string representation of this object
   */
  public String toString() {
    //TODO
    return "";
  }

  /**
   * Gets the goal for generated behavior to achieve
   * 
   * @@return the goal for generated behavior to achieve
   */
  public Goal getCommandedGoal() {
    return commandedGoal;
  }

  /**
   * Sets the goal for generated behavior to achieve
   * 
   * @@param commandedGoal the goal for generated behavior to achieve
   */
  public void setCommandedGoal(Goal commandedGoal) {
    this.commandedGoal = commandedGoal;
  }

  /**
   * Gets the behavior generation instance
   * 
   * @@return the behavior generation instance
   */
  public BehaviorGeneration getBehaviorGeneration() {
    return behaviorGeneration;
  }

  /**
   * Sets the behavior generation instance
   * 
   * @@param behaviorGeneration the behavior generation instance
   */
  public void setBehaviorGeneration(BehaviorGeneration behaviorGeneration) {
    this.behaviorGeneration = behaviorGeneration;
  }

  /**
   * Gets the executor for this planner
   * 
   * @@return the executor for this planner
   */
  public Executor getExecutor() {
    return executor;
  }

  /**
   * Sets the executor for this planner
   * 
   * @@param executor the executor for this planner
   */
  public void setExecutor(Executor executor) {
    this.executor = executor;
  }

  /**
   * Gets the generated plan to execute
   * 
   * @@return the generated plan to execute
   */
  public Procedure getProcedure() {
    return procedureToExecute;
  }

  /**
   * Sets the generated plan to execute
   * 
   * @@param procedureToExecute the generated plan to execute
   */
  public void setProcedure(Procedure procedureToExecute) {
    this.procedureToExecute = procedureToExecute;
  }

  public void run() {
  }
  
  //// Protected Area

  /** the commanded goal for generated behavior to achieve */
  protected Goal commandedGoal;

  /** the behavior generation instance owning this planner */
  protected BehaviorGeneration behaviorGeneration;

  /** the executor for this planner */
  protected Executor executor;

  /** the generated plan to execute */
  protected Procedure procedureToExecute;

  //// Private Area
  //// Internal Rep
}@


1.3
log
@/home/reed/opencyc/org/opencyc/elf
Added methods to KnowledgeBase
@
text
@d16 1
a16 1
 * @@version $Id: Planner.java,v 1.2 2003/08/11 21:24:17 stephenreed Exp $
@


1.2
log
@Reinserted the LGPL license clause that was wrongly removed by the Jalopy
indentation tool.
@
text
@d16 1
a16 1
 * @@version $Id: Planner.java,v 1.1 2003/08/08 13:22:24 stephenreed Exp $
d145 3
@


1.1
log
@synchronized with work in progress.
@
text
@d16 19
a34 2
 * @@version $Id: Planner.java,v 1.2 2002/11/19 02:42:53 stephenreed Exp $
 * @@author Stephen L. Reed <p><p><p><p><p>
@

