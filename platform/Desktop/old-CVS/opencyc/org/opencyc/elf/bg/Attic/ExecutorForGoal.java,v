head	1.2;
access;
symbols
	PRE_1_0:1.2;
locks; strict;
comment	@# @;


1.2
date	2002.11.18.18.30.13;	author stephenreed;	state dead;
branches;
next	1.1;

1.1
date	2002.11.17.03.08.17;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Removing files after refactoring
@
text
@package org.opencyc.elf.bg;

import org.opencyc.elf.goal.*;

/**
 * Provides an ELF Executor for sub goals developed by the planner.<br>
 *
 * @@version $Id: ExecutorForGoal.java,v 1.1 2002/11/17 03:08:17 stephenreed Exp $
 * @@author Stephen L. Reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

public class ExecutorForGoal {

    /**
     * the goal to given to a child node as a commanded goal
     */
    protected Goal goal;

    /**
     * Constructs a new ExecutorForGoal object.
     */
    public ExecutorForGoal() {
    }

    /**
     * Gets the goal to given to a child node as a commanded goal
     *
     * @@return the goal to given to a child node as a commanded goal
     */
    public Goal getGoal () {
        return goal;
    }

    /**
     * Sets the goal to given to a child node as a commanded goal
     *
     * @@param goal the goal to given to a child node as a commanded goal
     */
    public void setGoal (Goal goal) {
        this.goal = goal;
    }

}@


1.1
log
@Initial check in
@
text
@d8 1
a8 1
 * @@version $Id: Actuator.java,v 1.3 2002/11/16 04:01:10 stephenreed Exp $
@

