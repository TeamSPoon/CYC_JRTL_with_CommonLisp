head	1.7;
access;
symbols
	PRE_1_0:1.7;
locks; strict;
comment	@# @;


1.7
date	2003.09.30.16.45.43;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.29.23.03.31;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.18.21.22.56;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.17.16.53.51;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.17.13.31.46;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.16.23.19.50;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.16.21.17.38;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.7
log
@/home/reed/opencyc/org/opencyc/elf/bg/predicate
Predicate is now an interface
@
text
@package org.opencyc.elf.bg.predicate;

//// Internal Imports
import org.opencyc.elf.bg.expression.Operator;

import org.opencyc.elf.wm.state.State;

//// External Imports
import java.util.List;

/** True is a predicate of arity zero that always returns true.
 *
 * @@version $Id: True.java,v 1.6 2003/09/29 23:03:31 stephenreed Exp $
 * @@author  reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class True extends Operator implements Predicate {
  
  //// Constructors
  
  /** Creates a new instance of True. */
  public True() {
    super();
  }
  
  //// Public Area
    
  /** Evaluates the given arguments and returns the result.  The semantics
   * of the predicate are defined by each implementing class.
   *
   * @@param arguments the given arguments to evaluate
   * @@param state the given state
   * @@return always true
   */
  public Object evaluate(List arguments, State state) {
    return Boolean.TRUE;
  }
  
  /** Returns a string representation of this predicate given
   * the arguments.
   *
   * @@param arguments the given arguments to evaluate
   * @@return a string representation of this object
   */
  public String toString(List arguments) {
    return "TRUE";
  }
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  //// Main
  
}
@


1.6
log
@/home/reed/opencyc/org/opencyc/elf/bg/predicate
changed evaluate method to return a Boolean object
@
text
@d4 2
d13 1
a13 1
 * @@version $Id: True.java,v 1.5 2003/09/18 21:22:56 stephenreed Exp $
d34 1
a34 1
public class True extends Predicate {
d52 1
a52 1
  public Boolean evaluate(List arguments, State state) {
@


1.5
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@d11 1
a11 1
 * @@version $Id: True.java,v 1.4 2003/09/17 16:53:51 stephenreed Exp $
d50 2
a51 2
  public boolean evaluate(List arguments, State state) {
    return true;
@


1.4
log
@moved from org.opencyc.elf.bg.state to org.opencyc.elf.wm.state
@
text
@d9 1
a9 2
/**
 * True is a predicate of arity zero that always returns true.
d11 1
a11 1
 * @@version $Id: True.java,v 1.3 2003/09/17 13:31:46 stephenreed Exp $
d43 1
a43 2
  /**
   * Evaluates the given arguments and returns the result.  The semantics
d54 1
a54 2
  /**
   * Returns a string representation of this predicate given
a61 10
  }
  
 /**
   * Returns true if the given object equals this object.
   *
   * @@param obj the given object
   * @@return true if the given object equals this object
   */
  public boolean equals(Object obj) {
    return obj instanceof True;
@


1.3
log
@added state parameter to the evaluate(...) method
@
text
@d4 1
a4 1
import org.opencyc.elf.bg.state.State;
d12 1
a12 1
 * @@version $Id: True.java,v 1.2 2003/09/16 23:19:50 stephenreed Exp $
@


1.2
log
@refined the class comment
@
text
@d4 1
d7 1
d12 1
a12 1
 * @@version $Id: NotNull.java,v 1.3 2003/09/14 13:58:03 stephenreed Exp $
d49 2
d52 1
a52 1
  public boolean evaluate(java.util.List arguments) {
d63 1
a63 1
  public String toString(java.util.List arguments) {
@


1.1
log
@initial check in
@
text
@a0 7
/* $Id$
 *
 * Copyright (c) 2003 Cycorp, Inc.  All rights reserved.
 * This software is the proprietary information of Cycorp, Inc.
 * Use is subject to license terms.
 */

d8 1
a8 1
 * <P>True is designed to...
d10 2
a11 3
 * <P>Copyright (c) 2003 Cycorp, Inc.  All rights reserved.
 * <BR>This software is the proprietary information of Cycorp, Inc.
 * <P>Use is subject to license terms.
d13 17
a29 3
 * @@author reed
 * @@date September 16, 2003, 3:13 PM
 * @@version $Id$
@

