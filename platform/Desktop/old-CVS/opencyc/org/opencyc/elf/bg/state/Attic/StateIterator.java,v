head	1.5;
access;
symbols
	PRE_1_0:1.5;
locks; strict;
comment	@# @;


1.5
date	2003.09.17.16.46.32;	author stephenreed;	state dead;
branches;
next	1.4;

1.4
date	2003.09.14.13.58.03;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.28.20.38.55;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.11.21.24.17;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.08.13.22.24;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.5
log
@moved from org.opencyc.elf.bg.state to org.opencyc.elf.wm.state
@
text
@package org.opencyc.elf.bg.state;

//// Internal Imports

//// External Imports
import java.util.Iterator;

/**
 * StateIterator provides an iterator over the stateVariable/values.
 * 
 * @@version $Id: StateIterator.java,v 1.4 2003/09/14 13:58:03 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class StateIterator implements Iterator {
  //// Constructors

  /**
   * Creates a new instance of StateIterator
   * @@param state DOCUMENT ME!
   */
  public StateIterator(State state) {
    this.state = state;
    iterator = state.stateVariableDictionary.keySet().iterator();
  }

  //// Public Area

  /**
   * Returns <tt>true</tt> if the iteration has more elements. (In other words,
   * returns <tt>true</tt> if <tt>next</tt> would return an element rather
   * than throwing an exception.)
   * 
   * @@return <tt>true</tt> if the iterator has more elements.
   */
  public boolean hasNext() {
    return iterator.hasNext();
  }

  /**
   * Returns the next element in the iteration.
   * 
   * @@return the next element in the iteration.
   * 
   */
  public Object next() {
    return iterator.next();
  }

  /**
   * Removes from the underlying collection the last element returned by the
   * iterator (optional operation).  This method can be called only once per
   * call to <tt>next</tt>.  The behavior of an iterator is unspecified if the
   * underlying collection is modified while the iteration is in progress in
   * any way other than by calling this method.
   * 
   * @@exception UnsupportedOperationException if the <tt>remove</tt> operation
   *            is not supported by this Iterator.
   * @@exception IllegalStateException if the <tt>next</tt> method has not yet
   *            been called, or the <tt>remove</tt> method has already been
   *            called after the last call to the <tt>next</tt> method.
   * @@throws java.lang.UnsupportedOperationException DOCUMENT ME!
   */
  public void remove() {
    throw new java.lang.UnsupportedOperationException("remove method is not supported for this Iterator");
  }

  //// Protected Area

  /** the state over which this iterator operates */
  protected State state;

  /** the state state variable iterator */
  Iterator iterator;

  //// Private Area
  //// Internal Rep
  //// Main
}@


1.4
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d11 1
a11 1
 * @@version $Id: StateIterator.java,v 1.3 2003/08/28 20:38:55 stephenreed Exp $
@


1.3
log
@fixed cvs $Id:
@
text
@d4 1
a7 1

a8 1
 * <P>
a9 1
 * </p>
d11 1
a11 1
 * @@version $Id: BehaviorGeneration.java,v 1.3 2002/11/19 02:42:53 stephenreed Exp $
d80 1
a80 1
  public void remove() throws UnsupportedOperationException, IllegalStateException {
@


1.2
log
@Reinserted the LGPL license clause that was wrongly removed by the Jalopy
indentation tool.
@
text
@d13 1
a13 2
 * @@version $Id: BehaviorGeneration.java,v 1.3 2002/11/19 02:42:53 stephenreed
 *          Exp $
@


1.1
log
@synchronized with work in progress.
@
text
@d15 18
a32 1
 * @@author Stephen L. Reed <p><p><p><p><p>
@

