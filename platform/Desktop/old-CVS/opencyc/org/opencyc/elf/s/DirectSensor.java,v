head	1.7;
access;
symbols
	PRE_1_0:1.7;
locks; strict;
comment	@# @;


1.7
date	2003.09.26.23.16.50;	author stephenreed;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.25.20.59.00;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.25.14.01.42;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.25.03.09.47;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.20.02.27.52;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.18.21.22.57;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.16.20.21.53;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.7
log
@refactored for actuator-sensor
@
text
@package org.opencyc.elf.s;

//// Internal Imports
import org.opencyc.elf.NodeComponent;

import org.opencyc.elf.sp.SensoryPerception;

//// External Imports
import java.util.List;

import java.util.logging.Logger;

import EDU.oswego.cs.dl.util.concurrent.Executor;
import EDU.oswego.cs.dl.util.concurrent.Puttable;
import EDU.oswego.cs.dl.util.concurrent.Takable;

/** DirectSensor is the abstract super class of all direct sensors, as opposed to
 * virtual sensors (sensory perception).
 * 
 * @@version $Id: DirectSensor.java,v 1.6 2003/09/25 20:59:00 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public abstract class DirectSensor extends NodeComponent  implements Sensor {
  
  //// Constructors
  
  /** Constructs a new DirectSensor object given its name.
   *
   * @@param name the sensor name
   * @@param resources the resources required by this sensor
   * @@param sensorChannel the takable channel from which messages are input
   */
  public DirectSensor (String name, List resources, Takable sensorChannel) {
    this.name = name;
    this.resources = resources;
    this.sensorChannel = sensorChannel;
    logger = Logger.getLogger("org.opencyc.elf");
  }

  
  //// Public Area
  
  /** Initializes this direct sensor instance with the given
   * output message channel.
   *
   * @@param sensoryPerceptionChannel the puttable channel to which messages are output
   */
  public abstract void initialize (Puttable sensoryPerceptionChannel);
  
  /** Returns a string representation of this object.
   * 
   * @@return a string representation of this object
   */
  public String toString() {
    StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append("[DirectSensor resources: ");
    stringBuffer.append(resources.toString());
    stringBuffer.append("]");
    return stringBuffer.toString();
  }
  
  /** Gets the name of the sensor.
   *
   * @@return the name of the sensor
   */
  public String getName() {
    return name;
  }
  
  /** Gets the resources required by this sensor.
   *
   * @@return the resources required by this sensor
   */
  public List getResources() {
    return resources;
  }
  
  /** Gets the puttable channel for this node component to which other node
   * components can send messages.
   *
   * @@return the puttable channel for this node component to which other node
   * components can send messages
   */
  public Puttable getChannel() {
    return (Puttable) sensorChannel;
  }
  
  /** the console input sensor name */
  public static final String CONSOLE_INPUT = "console input";

  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the name of the sensor */
  protected String name;
  
  /** the resources required by this sensor */
  protected List resources;
  
  /** the takable channel from which messages are input */
  protected Takable sensorChannel = null;
    
  /** the executor of the consumer thread */
  protected Executor executor;
  
  /** the logger */
  protected static Logger logger;
  
  //// Main
  
}
@


1.6
log
@added an input channel
@
text
@d20 1
a20 1
 * @@version $Id: DirectSensor.java,v 1.5 2003/09/25 14:01:42 stephenreed Exp $
a47 1
   * @@param sensationCapabilities the names of sensations that this sensor can sense
d50 1
a50 1
  public DirectSensor (String name, List resources, List sensationCapabilities, Takable sensorChannel) {
a52 1
    this.sensationCapabilities = sensationCapabilities;
a94 8
  /** Gets the names of sensations that this sensor can sense.
   *
   * @@return the names of sensations that this sensor can sense
   */
  public List getSensationCapabilities() {
    return sensationCapabilities;
  }
  
a115 3
  
  /** the names of sensations that this sensor can sense */
  protected List sensationCapabilities;
@


1.5
log
@added abstract iniitialize(...) method
@
text
@d13 1
d15 1
d20 1
a20 1
 * @@version $Id: DirectSensor.java,v 1.4 2003/09/25 03:09:47 stephenreed Exp $
d49 1
d51 1
a51 1
  public DirectSensor (String name, List resources, List sensationCapabilities) {
d55 1
d105 10
d132 6
@


1.4
log
@added logic to the executor, initializing required actuators and sensors
@
text
@d18 1
a18 1
 * @@version $Id: DirectSensor.java,v 1.3 2003/09/20 02:27:52 stephenreed Exp $
d38 1
a38 1
public class DirectSensor extends NodeComponent  implements Sensor {
d57 7
@


1.3
log
@adding code to ScheduleLibrary
@
text
@d6 2
d18 1
a18 1
 * @@version $Id: DirectSensor.java,v 1.2 2003/09/18 21:22:57 stephenreed Exp $
@


1.2
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@d16 1
a16 1
 * @@version $Id: DirectSensor.java,v 1.1 2003/09/16 20:21:53 stephenreed Exp $
d92 3
@


1.1
log
@initial check in
@
text
@d13 1
a13 2
/**
 * DirectSensor is the abstract super class of all direct sensors, as opposed to
d16 1
a16 1
 * @@version $Id: ConsoleInput.java,v 1.9 2003/09/14 13:58:03 stephenreed Exp $
d40 1
a40 2
  /**
   * Constructs a new DirectSensor object given its name.
d56 1
a56 2
  /**
   * Returns a string representation of this object.
d68 1
a68 2
  /** 
   * Gets the name of the sensor.
d76 1
a76 2
  /**
   * Gets the resources required by this sensor.
d84 1
a84 2
  /**
   * Gets the names of sensations that this sensor can sense.
@

