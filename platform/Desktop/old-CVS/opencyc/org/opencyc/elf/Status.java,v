head	1.6;
access;
symbols
	PRE_1_0:1.6;
locks; strict;
comment	@# @;


1.6
date	2003.09.23.13.49.51;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.22.22.57.37;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.18.22.56.42;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.14.13.57.59;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.28.20.56.38;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.14.03.06.40;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.6
log
@renamed status values
@
text
@package org.opencyc.elf;

//// Internal Imports

//// External Imports
import java.util.HashMap;

/** Status contains status information.  A dictinary is employed to economise on the number
 * of instance variables that otherwise would be required.
 * 
 * @@version $Id: Status.java,v 1.5 2003/09/22 22:57:37 stephenreed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class Status {
  
  //// Constructors
  
  /** Creates a new instance of Status. */
  public Status() {
  }
  
  //// Public Area

  /** Gets a value from the status dictionary given the key.  If the value is not present
   * then null is returned
   *
   * @@param key the key for which a value (if present) will be returned
   * @@return a value from the status dictionary given the key.  If the value is not present
   * then null is returned
   */
  public Object getValue (Object key) {
    return statusDictionary.get(key);
  }

  /** Returns true if the given key has any value in the status dictionary.
   *
   * @@param key the given key
   * @@return true if the given key has any value in the status dictionary
   */
  public boolean isTrue (Object key) {
    return statusDictionary.get(key) != null;
  }

  /** Puts the given key / value pair into the status dictionary.
   *
   * @@param key the given key
   * @@param value the given value
   */
  public void setValue (Object key, Object value) {
    statusDictionary.put(key, value);
  }

  /** Sets the given key as true in the status dictionary.
   * 
   * @@param key the given key
   */
  public void setTrue (Object key) {
    statusDictionary.put(key, Boolean.TRUE);
  }
  
  /** When present, indicates to the job assigner that the reporting scheduler has finished
   * the assigned job.
   */
  public static String JOB_FINISHED = "job finished";
  
  /** When present, indicates to the job assigner that the reporting scheduler has stopped
   * the assigned job as directed.
   */
  public static String JOB_STOPPED = "job stopped";
  
  /** When present, indicates to the scheduler that the reporting executor has finished
   * executing the schedule.
   */
  public static String SCHEDULE_FINISHED = "schedule finished";
  
  /** When present, indicates to the scheduler that the reporting executor has stopped
   * the current schedule as directed.
   */
  public static String SCHEDULE_STOPPED = "schedule stopped";
  
  /** When present, indicates to the higher-level executor that the reporting job assigner 
   * or actuator has finished the commanded task.
   */
  public static String COMMAND_FINISHED = "command finished";
  
  /** When present, indicates to the higher-level executor that the reporting job assigner 
   * or actuator has stopped the commanded task as directed.
   */
  public static String COMMAND_STOPPED = "command stopped";
  
  /** When present, indicates to the receiver that the sender directly or indirectly
   * detected an exceptional condition without handling it.
   */
  public static String EXCEPTION = "exception";
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
  
  /** the status dictionary **/
  protected HashMap statusDictionary = new HashMap();
  
  //// Main

  
}
@


1.5
log
@added additional static state objects
@
text
@d11 1
a11 1
 * @@version $Id: Status.java,v 1.4 2003/09/18 22:56:42 stephenreed Exp $
d79 11
a89 1
   * the assigned schedule.
d93 12
a104 2
  /** When present, indicates to the scheduler that the executor encountered an exceptional
   * condition while processing the current schedule.
d106 1
a106 1
  public static String EXECUTION_EXCEPTION = "execution exception";
d108 2
a109 2
  /** When present, indicates to the higher-level executor that the reporting job assigner has 
   * finished the commanded task.
d111 1
a111 1
  public static String TASK_FINISHED = "task finished";
@


1.4
log
@/home/reed/opencyc/org/opencyc/elf
removed equals(...)  method if present and reformatted multiline comments to one less line
@
text
@d11 1
a11 1
 * @@version $Id: Status.java,v 1.3 2003/09/14 13:57:59 stephenreed Exp $
d52 9
d70 8
d82 5
@


1.3
log
@Changed ArrayList to List, consistently formatted one line comments. ----------------------------------------------------------------------
@
text
@d6 1
d8 2
a9 2
/**
 * Status contains status information.
d11 1
a11 1
 * @@version $Id: Status.java,v 1.2 2003/08/28 20:56:38 stephenreed Exp $
d40 30
d77 3
d81 1
@


1.2
log
@fixed $Id: cvs tag
@
text
@a7 1
 * <P>
a8 1
 * </p>
d10 1
a10 1
 * @@version $Id: BehaviorGeneration.java,v 1.3 2002/11/19 02:42:53 stephenreed Exp $
@


1.1
log
@Initial check in
@
text
@d12 1
a12 2
 * @@version $Id: BehaviorGeneration.java,v 1.3 2002/11/19 02:42:53 stephenreed
 *          Exp $
@

