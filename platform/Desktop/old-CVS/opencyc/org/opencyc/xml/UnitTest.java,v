head	1.9;
access;
symbols
	BRANCH_OPENCYC_1_0_1:1.8.0.2
	OPENCYC_1_0_1:1.8
	PRE_1_0:1.6;
locks; strict;
comment	@# @;


1.9
date	2006.10.21.16.49.20;	author dmiles;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.18.14.21.30;	author dmiles;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.18.13.36.03;	author dmiles;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.17.16.11.37;	author stephenreed;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.19.02.48.59;	author stephenreed;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.18.04.24.46;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.01.22.07.43;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.07.12.36.34;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.06.23.38.26;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Post OpenCyc 1.0 Cyc Java API - This includes the adding back of many exprmental packages
@
text
@package org.opencyc.xml;

import java.util.*;
import junit.framework.*;
import org.opencyc.api.*;
import org.opencyc.cycobject.*;

/**
 * Provides a suite of JUnit test cases for the <tt>org.opencyc.xml</tt> package.<p>
 *
 * @@version $Id: UnitTest.java,v 1.4 2004/06/24 19:06:06 reed Exp $
 * @@author Stephen L. Reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class UnitTest extends TestCase {

    /**
     * Main method in case tracing is prefered over running JUnit GUI.
     */
    public static void main(String[] args) {
        junit.textui.TestRunner.run(suite());
    }

    /**
     * Returns the test suite.
     *
     * @@return the test suite
     */
    public static Test suite() {
        TestSuite testSuite = new TestSuite();
        testSuite = new TestSuite();
        testSuite.addTest(new UnitTest("testTextUtil"));
        return testSuite;
    }

    /**
     * Constructs a new UnitTest object.
     * @@param name the test case name.
     */
    public UnitTest(String name) {
        super(name);
    }

    /**
     * Tests the TextUtil class.
     */
    public void testTextUtil() {
        System.out.println("\n*** testTextUtil ***");
        String xmlText = "abc def";
        Assert.assertEquals(xmlText, TextUtil.doEntityReference(xmlText));
        Assert.assertEquals(xmlText, TextUtil.undoEntityReference(xmlText));
        xmlText = "abc&def<hij>klm";
        Assert.assertEquals("abc&amp;def&lt;hij&gt;klm", TextUtil.doEntityReference(xmlText));
        Assert.assertEquals(xmlText, TextUtil.undoEntityReference("abc&amp;def&lt;hij&gt;klm"));
        System.out.println("*** testTextUtil OK ***");
    }


}
@


1.8
log
@This is the Additional Content to Create OpenCyc-1.0.1
@
text
@@


1.7
log
@This is a checkin of OpenCyc 1.0.1 Java  OPENCYC_1_0_1
@
text
@@


1.6
log
@Refactor ExportDaml.java
@
text
@d11 1
a11 1
 * @@version $Id: UnitTest.java,v 1.5 2001/11/19 02:48:59 stephenreed Exp $
a48 2
        //testSuite.addTest(new UnitTest("testExportDaml1"));
        //testSuite.addTest(new UnitTest("testExportDaml2"));
a61 40
     * Tests the ExportDaml class.
     */
    public void xtestExportDaml1() {
        System.out.println("\n*** testExportDaml1 ***");
        try {
            ExportDaml exportDaml = new ExportDaml(new CycAccess());
            exportDaml.verbosity = 3;
            // Export #$PublicConstant terms to DAML.
            exportDaml.cycKbSubsetCollectionGuid =
                CycObjectFactory.makeGuid("bd7abd90-9c29-11b1-9dad-c379636f7270");
            exportDaml.export(ExportDaml.EXPORT_KB_SUBSET);
        }
        catch (Exception e) {
            e.printStackTrace();
            Assert.fail(e.getMessage());
        }
        System.out.println("*** testExportDaml1 OK ***");
    }

    /**
     * Tests the ExportDaml class.
     */
    public void testExportDaml2() {
        System.out.println("\n*** testExportDaml2 ***");
        try {
            ExportDaml exportDaml = new ExportDaml(new CycAccess());
            exportDaml.verbosity = 3;
            // Export #$IKBConstant terms to DAML.
            exportDaml.cycKbSubsetCollectionGuid =
                CycObjectFactory.makeGuid("bf90b3e2-9c29-11b1-9dad-c379636f7270");
            exportDaml.export(ExportDaml.EXPORT_KB_SUBSET);
        }
        catch (Exception e) {
            e.printStackTrace();
            Assert.fail(e.getMessage());
        }
        System.out.println("*** testExportDaml2 OK ***");
    }

    /**
@


1.5
log
@Added unit test cases for TextUtil class
@
text
@d11 1
a11 1
 * @@version $Id: UnitTest.java,v 1.4 2001/11/18 04:24:46 stephenreed Exp $
a67 1
        ExportDaml exportDaml = new ExportDaml();
d69 1
a87 1
        ExportDaml exportDaml = new ExportDaml();
d89 1
@


1.4
log
@Initial check in
@
text
@d11 1
a11 1
 * @@version $Id: UnitTest.java,v 1.3 2001/11/01 22:07:43 stephenreed Exp $
d108 6
a113 5





@


1.3
log
@Added Agent Manager classes for CoABS interface
@
text
@d11 1
a11 1
 * @@version $Id: UnitTest.java,v 1.2 2001/10/07 12:36:34 stephenreed Exp $
d38 1
a38 3
        boolean allTests = false;
        //boolean allTests = true;
        runTests(allTests);
d42 11
a52 13
     * Runs the unit tests
     */
    public static void runTests(boolean allTests) {
        TestSuite testSuite;
        if (allTests)
            testSuite = new TestSuite(UnitTest.class);
        else {
            testSuite = new TestSuite();
            //testSuite.addTest(new UnitTest("testExportDaml1"));
            testSuite.addTest(new UnitTest("testExportDaml2"));
        }
        TestResult testResult = new TestResult();
        testSuite.run(testResult);
d67 1
a67 1
        System.out.println("** testExportDaml1 **");
d80 1
a80 1
        System.out.println("** testExportDaml1 OK **");
d87 1
a87 1
        System.out.println("** testExportDaml2 **");
d100 14
a113 1
        System.out.println("** testExportDaml2 OK **");
d115 1
@


1.2
log
@Added method for KB subset export, used it in ExportDaml.
@
text
@d11 1
a11 1
 * @@version $Id: UnitTest.java,v 1.1 2001/10/06 23:38:26 stephenreed Exp $
d78 1
a78 1
            exportDaml.export();
d98 1
a98 1
            exportDaml.export();
@


1.1
log
@Added unit test class for org.opencyc.xml package
@
text
@d11 1
a11 1
 * @@version $Id: UnitTest.java,v 1.6 2001/08/30 23:35:11 stephenreed Exp $
d70 1
a70 1
    public void testExportDaml1() {
@

