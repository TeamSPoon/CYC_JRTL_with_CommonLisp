head	1.5;
access;
symbols
	PRE_1_0:1.4;
locks; strict;
comment	@# @;


1.5
date	2006.10.21.16.49.16;	author dmiles;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.18.16.02.56;	author stephenreed;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.18.16.00.32;	author stephenreed;	state dead;
branches;
next	1.2;

1.2
date	2002.02.11.20.14.24;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.10.22.17.07;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Post OpenCyc 1.0 Cyc Java API - This includes the adding back of many exprmental packages
@
text
@package org.opencyc.chat;

import java.util.HashMap;

/**
 * Provides a chat user model.<p>
 *
 * Implemented as a simple property dictionary.
 *
 * @@version $Id: ChatUserModel.java,v 1.4 2002/02/18 16:02:56 stephenreed Exp $
 * @@author Stephen L. Reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class ChatUserModel {

    /**
     * Indicates that the user model is completely restored from the KB.
     */
    protected boolean isInitialized = false;

    /**
     * Dictionary of attribute and object values.
     */
    protected HashMap attributes = new HashMap();

    /**
     * Constructs a new ChatUserModel object.
     *
     * @@param chatUserUniqueId the unique id assigned to the user by the chat
     * system
     */
    public ChatUserModel(String chatUserUniqueId) {
        set("chatUserUniqueId", chatUserUniqueId);
    }

    /**
     * Initializes the user model.
     */
    public void initialize () {

        // TODO restore attributes from the KB
        isInitialized = true;
    }

    /**
     * Sets the value for the given attribute.
     *
     * @@param attribute the key object
     * @@param value the value object
     */
    public void set (String attribute, Object value) {

        // TODO launch a thread to store the attribute in the KB
        attributes.put(attribute, value);
    }

    /**
     * Returns the value for the given attribute.
     *
     * @@param attribute the key object
     * @@retrun the value for the given attribute
     */
    public Object get (Object attribute) {
        return attributes.get(attribute);
    }
}@


1.4
log
@Adding back classes during chatterbot class renaming
@
text
@d3 1
a3 1
import java.util.*;
d10 1
a10 1
 * @@version $Id: ChatUserModel.java,v 1.2 2002/02/11 20:14:24 stephenreed Exp $
@


1.3
log
@Renaming and refactoring chatterbot classes.
@
text
@d34 5
d45 10
d56 4
a59 1
    public ChatUserModel() {
d69 2
@


1.2
log
@Added UnitTest for chat packaage and moved import statements above the class comment.
@
text
@d10 1
a10 1
 * @@version $Id: ChatUserModel.java,v 1.1 2002/02/10 22:17:07 stephenreed Exp $
@


1.1
log
@Initial check in of chat for OpenCyc
@
text
@d3 2
d10 1
a10 1
 * @@version $Id: Peer.java,v 1.7 2002/02/04 17:03:26 stephenreed Exp $
a30 3

import java.util.*;

@

