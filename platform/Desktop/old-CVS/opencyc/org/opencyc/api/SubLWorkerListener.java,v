head	1.2;
access;
symbols
	BRANCH_OPENCYC_1_0_1:1.1.0.2
	OPENCYC_1_0_1:1.1;
locks; strict;
comment	@# @;


1.2
date	2006.10.21.16.49.16;	author dmiles;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.14.21.33;	author dmiles;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Post OpenCyc 1.0 Cyc Java API - This includes the adding back of many exprmental packages
@
text
@/* $Id: SubLWorkerListener.java,v 1.3 2004/03/30 00:27:49 tbrussea Exp $
 */

package org.opencyc.api;

//// EXTERNAL IMPORTS
import java.util.EventListener;

/** <P> This interface is one that must be implemented by anyone
 * wishing to listen in on events generated by a SubLWorker.
 *
 * <p>Copyright 2004 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @@see SubLWorker
 * @@author tbrussea
 * @@version $Id: SubLWorkerListener.java,v 1.3 2004/03/30 00:27:49 tbrussea Exp $
 */
public interface SubLWorkerListener extends EventListener {

  /** This event is fired when a SubLWorker is starting the 
   * processing of a SubL task.
   * @@param event the event object with details about this event
   */    
  public void notifySubLWorkerStarted(SubLWorkerEvent event);

  /** This event is fired when new data becomes available in 
   * the processing of a SubL task.
   * @@param event the event object with details about this event
   */
  public void notifySubLWorkerDataAvailable(SubLWorkerEvent event);

  /** This event is fired when a SubL task has been terminated
   * for any reason.
   * @@param event the event object with details about this event
   */
  public void notifySubLWorkerTerminated(SubLWorkerEvent event);

}
@


1.1
log
@This is the Additional Content to Create OpenCyc-1.0.1
@
text
@d7 1
a7 1
import java.util.EventListener; 
@

