head	1.3;
access;
symbols
	PRE_1_0:1.3;
locks; strict;
comment	@# @;


1.3
date	2002.10.31.03.16.53;	author stephenreed;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.29.23.30.17;	author stephenreed;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.27.04.54.59;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Added more code for UML state machine interpretation
@
text
@package org.opencyc.uml.statemachine;

import org.opencyc.uml.commonbehavior.*;

/**
 * TimeEvent from the UML State_Machine package.
 *
 * @@version $Id: TimeEvent.java,v 1.2 2002/10/29 23:30:17 stephenreed Exp $
 * @@author Stephen L. Reed
 *
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

public class TimeEvent extends Event {

    /**
     * the time expression for this time event
     */
    protected TimeExpression when;

    /**
     * Constructs a new TimeEvent object.
     */
    public TimeEvent() {
    }

    /**
     * Returns true if the given object equals this object.
     *
     * @@param object the given object
     * @@return true if the given object equals this object, otherwise returns false
     */
    public boolean equals (Object object) {
        return object instanceof TimeEvent;
    }

    /**
     * Gets the time expression for this time event
     *
     * @@return the time expression for this time event
     */
    public TimeExpression getWhen () {
        return when;
    }

    /**
     * Sets the time expression for this time event
     *
     * @@param when the time expression for this time event
     */
    public void setWhen (TimeExpression when) {
        this.when = when;
    }
}@


1.2
log
@Added getter and setter methods.
@
text
@d8 1
a8 1
 * @@version $Id: TimeEvent.java,v 1.1 2002/10/27 04:54:59 stephenreed Exp $
d41 10
@


1.1
log
@Adding UML statemachine support.
@
text
@d8 1
a8 1
 * @@version $Id: PseudoState.java,v 1.1 2002/10/25 23:54:58 stephenreed Exp $
d33 1
a33 1
     * time expression for this time event
d35 1
a35 1
    public TimeExpression when;
d41 18
@

