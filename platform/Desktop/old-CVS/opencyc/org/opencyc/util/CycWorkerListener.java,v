head	1.4;
access;
symbols
	BRANCH_OPENCYC_1_0_1:1.3.0.2
	OPENCYC_1_0_1:1.3
	PRE_1_0:1.1;
locks; strict;
comment	@# @;


1.4
date	2006.10.21.16.49.18;	author dmiles;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.18.14.21.32;	author dmiles;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.18.13.36.03;	author dmiles;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.15.21.54.14;	author stephenreed;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Post OpenCyc 1.0 Cyc Java API - This includes the adding back of many exprmental packages
@
text
@/*
 * CycWorkerListener.java
 *
 * Created on March 22, 2002, 9:25 AM
 */
package org.opencyc.util;

import java.util.*;

/**
 * This is an interface to be used by classes that wishes to listen
 * to a CycWorker's events.
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * @@see CycWorker
 * @@see CycWorkerEvent
 * @@see SwingWorker
 * @@author  tbrussea
 * @@version $Id: CycWorkerListener.java,v 1.1 2002/04/24 17:08:31 tbrussea Exp $
 */
public interface CycWorkerListener extends EventListener {
    
  /** 
   * Called when the CycWorker is started. 
   * @@param evt The CycWorkerEvent object.
   **/
  void notifyWorkerStarted(CycWorkerEvent evt);
    
  /** 
   * Called when the CycWorker is interrupted. 
   * @@param evt The CycWorkerEvent object.
   **/
  void notifyWorkerInterrupted(CycWorkerEvent evt);
    
  /** 
   * Called when the CycWorker is finished. 
   * @@param evt The CycWorkerEvent object.
   **/
  void notifyWorkerFinished(CycWorkerEvent evt);
}
@


1.3
log
@This is the Additional Content to Create OpenCyc-1.0.1
@
text
@@


1.2
log
@This is a checkin of OpenCyc 1.0.1 Java  OPENCYC_1_0_1
@
text
@@


1.1
log
@Initial check in.
@
text
@@

