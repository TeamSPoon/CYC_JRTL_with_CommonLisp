head	1.2;
access;
symbols
	BRANCH_OPENCYC_1_0_1:1.1.0.2
	OPENCYC_1_0_1:1.1;
locks; strict;
comment	@# @;


1.2
date	2006.10.21.16.49.18;	author dmiles;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.14.21.32;	author dmiles;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Post OpenCyc 1.0 Cyc Java API - This includes the adding back of many exprmental packages
@
text
@package org.opencyc.util;

//// Internal Imports


//// External Imports
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

/**
 * Provides a concise formatter for java logging output.<br>
 * 
 * @@version $Id: ConciseLoggingFormatter.java,v 1.2 2005/06/07 22:46:31 reed Exp $
 * @@author Stephen L. Reed  
 * <p>Copyright 2001 Cycorp, Inc., license is open source GNU LGPL.
 * <p><a href="http://www.opencyc.org/license.txt">the license</a>
 * <p><a href="http://www.opencyc.org">www.opencyc.org</a>
 * <p><a href="http://www.sourceforge.net/projects/opencyc">OpenCyc at SourceForge</a>
 * <p>
 * THIS SOFTWARE AND KNOWLEDGE BASE CONTENT ARE PROVIDED ``AS IS'' AND
 * ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENCYC
 * ORGANIZATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE AND KNOWLEDGE
 * BASE CONTENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
public class ConciseLoggingFormatter extends SimpleFormatter {
  
  //// Constructors
  
  /** Creates a new instance of ConciseLoggingFormatter */
  public ConciseLoggingFormatter() {
  }
  
  //// Public Area
  
  /**
   * Formats the given log record.
   */
  public String format (LogRecord logRecord) {
    StringBuffer stringBuffer = new StringBuffer();
    if (logRecord == null)
      stringBuffer.append("null logRecord received by ConciseLoggingFormatter");
    else if (logRecord.getMessage() == null)
      stringBuffer.append("null logRecord message received by ConciseLoggingFormatter");
    else
      stringBuffer.append(logRecord.getMessage());
    stringBuffer.append('\n');
    return stringBuffer.toString();
  }
  
  //// Protected Area
  
  //// Private Area
  
  //// Internal Rep
    
  //// Main
  
}
@


1.1
log
@This is the Additional Content to Create OpenCyc-1.0.1
@
text
@@

