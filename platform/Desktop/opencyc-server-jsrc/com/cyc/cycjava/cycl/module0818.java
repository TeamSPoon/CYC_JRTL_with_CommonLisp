package com.cyc.cycjava.cycl;

import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.reader;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.cdestructuring_bind;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Strings;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLString;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLInteger;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class module0818 extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.module0818";
    public static final String myFingerPrint = "2ff0408fa8806c269bc05d192ca8257e467120b1f6facab2ac967f1234863eb3";
    private static SubLSymbol $g6475$;
    private static SubLSymbol $g6476$;
    private static SubLSymbol $g6477$;
    private static SubLSymbol $g6478$;
    private static SubLSymbol $g6479$;
    private static SubLSymbol $g6480$;
    private static SubLSymbol $g6481$;
    private static SubLSymbol $g6482$;
    private static SubLSymbol $g6483$;
    private static SubLSymbol $g6484$;
    private static SubLSymbol $g6485$;
    private static SubLSymbol $g6486$;
    private static SubLSymbol $g6487$;
    private static SubLSymbol $g6488$;
    private static SubLSymbol $g6489$;
    private static SubLSymbol $g6490$;
    private static SubLSymbol $g6491$;
    private static SubLSymbol $g6492$;
    private static final SubLList $ic0$;
    private static final SubLObject $ic1$;
    private static final SubLList $ic2$;
    private static final SubLList $ic3$;
    private static final SubLObject $ic4$;
    private static final SubLList $ic5$;
    private static final SubLList $ic6$;
    private static final SubLObject $ic7$;
    private static final SubLSymbol $ic8$;
    private static final SubLSymbol $ic9$;
    private static final SubLSymbol $ic10$;
    private static final SubLSymbol $ic11$;
    private static final SubLList $ic12$;
    private static final SubLSymbol $ic13$;
    private static final SubLSymbol $ic14$;
    private static final SubLList $ic15$;
    private static final SubLSymbol $ic16$;
    private static final SubLList $ic17$;
    private static final SubLList $ic18$;
    private static final SubLList $ic19$;
    private static final SubLList $ic20$;
    private static final SubLInteger $ic21$;
    private static final SubLList $ic22$;
    private static final SubLList $ic23$;
    private static final SubLSymbol $ic24$;
    private static final SubLString $ic25$;
    private static final SubLString $ic26$;
    private static final SubLString $ic27$;
    private static final SubLSymbol $ic28$;
    private static final SubLSymbol $ic29$;
    private static final SubLObject $ic30$;
    private static final SubLList $ic31$;
    private static final SubLList $ic32$;
    private static final SubLList $ic33$;
    private static final SubLSymbol $ic34$;
    private static final SubLString $ic35$;
    private static final SubLString $ic36$;
    
    public static SubLObject f52382(final SubLObject var1) {
        if (var1.isString()) {
            SubLObject var2 = module0818.$g6475$.getGlobalValue();
            SubLObject var3 = (SubLObject)module0818.NIL;
            var3 = var2.first();
            while (module0818.NIL != var2) {
                if (module0818.NIL != Strings.stringE(var1, var3, (SubLObject)module0818.UNPROVIDED, (SubLObject)module0818.UNPROVIDED, (SubLObject)module0818.UNPROVIDED, (SubLObject)module0818.UNPROVIDED)) {
                    return (SubLObject)module0818.T;
                }
                var2 = var2.rest();
                var3 = var2.first();
            }
        }
        return (SubLObject)module0818.NIL;
    }
    
    public static SubLObject f52383(final SubLObject var4) {
        SubLObject var5 = module0818.$g6476$.getGlobalValue();
        SubLObject var6 = (SubLObject)module0818.NIL;
        var6 = var5.first();
        while (module0818.NIL != var5) {
            SubLObject var7;
            final SubLObject var6_7 = var7 = var6;
            SubLObject var8 = (SubLObject)module0818.NIL;
            SubLObject var9 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var7, var6_7, (SubLObject)module0818.$ic2$);
            var8 = var7.first();
            var7 = var7.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var7, var6_7, (SubLObject)module0818.$ic2$);
            var9 = var7.first();
            var7 = var7.rest();
            if (module0818.NIL == var7) {
                SubLObject var2_11 = var9;
                SubLObject var10 = (SubLObject)module0818.NIL;
                var10 = var2_11.first();
                while (module0818.NIL != var2_11) {
                    if (var4.eql(var10)) {
                        return (SubLObject)module0818.T;
                    }
                    var2_11 = var2_11.rest();
                    var10 = var2_11.first();
                }
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(var6_7, (SubLObject)module0818.$ic2$);
            }
            var5 = var5.rest();
            var6 = var5.first();
        }
        return (SubLObject)module0818.NIL;
    }
    
    public static SubLObject f52384(final SubLObject var4) {
        return conses_high.second(conses_high.assoc(var4, module0818.$g6477$.getGlobalValue(), Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED));
    }
    
    public static SubLObject f52385(final SubLObject var13) {
        if (var13.isCons()) {
            SubLObject var14 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var13, var13, (SubLObject)module0818.$ic5$);
            var14 = var13.first();
            final SubLObject var16;
            final SubLObject var15 = var16 = var13.rest();
            final SubLObject var17 = Sequences.length(var16);
            final SubLObject var18 = f52386(var14, var17);
            if (module0818.NIL != var18) {
                return reader.bq_cons(var18, ConsesLow.append(var16, (SubLObject)module0818.NIL));
            }
        }
        return var13;
    }
    
    public static SubLObject f52386(final SubLObject var16, final SubLObject var18) {
        final SubLObject var19 = module0035.f2294(module0818.$g6479$.getGlobalValue(), var16, Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED);
        if (module0818.NIL != var19) {
            return module0035.f2294(var19, var18, (SubLObject)module0818.UNPROVIDED, (SubLObject)module0818.UNPROVIDED);
        }
        return (SubLObject)module0818.NIL;
    }
    
    public static SubLObject f52387(final SubLObject var21) {
        if (var21.isCons() && module0818.$ic8$ == var21.first()) {
            final SubLObject var22 = conses_high.second(var21);
            if (var22.isCons()) {
                SubLObject var24;
                final SubLObject var23 = var24 = var22;
                SubLObject var25 = (SubLObject)module0818.NIL;
                cdestructuring_bind.destructuring_bind_must_consp(var24, var23, (SubLObject)module0818.$ic5$);
                var25 = var24.first();
                final SubLObject var26;
                var24 = (var26 = var24.rest());
                if (var25 == module0818.$ic9$) {
                    return var26.first();
                }
                if (var25 == module0818.EQ) {
                    return reader.bq_cons((SubLObject)module0818.$ic10$, ConsesLow.append(var26, (SubLObject)module0818.NIL));
                }
                if (var25 == module0818.$ic11$) {
                    return (SubLObject)ConsesLow.list((SubLObject)module0818.$ic10$, (SubLObject)module0818.$ic12$, var26.first());
                }
                final SubLObject var27 = f52388(var25);
                if (module0818.NIL != var27) {
                    return (SubLObject)ConsesLow.listS((SubLObject)module0818.$ic13$, var26.first(), var27, ConsesLow.append(var26.rest(), (SubLObject)module0818.NIL));
                }
            }
            return (SubLObject)ConsesLow.list((SubLObject)module0818.$ic14$, (SubLObject)module0818.$ic12$, var22);
        }
        return var21;
    }
    
    public static SubLObject f52389() {
        final SubLObject var26 = Hashtables.make_hash_table(Sequences.length(module0818.$g6481$.getGlobalValue()), Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED);
        SubLObject var27 = module0818.$g6481$.getGlobalValue();
        SubLObject var28 = (SubLObject)module0818.NIL;
        var28 = var27.first();
        while (module0818.NIL != var27) {
            SubLObject var30;
            final SubLObject var29 = var30 = var28;
            SubLObject var31 = (SubLObject)module0818.NIL;
            SubLObject var32 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var30, var29, (SubLObject)module0818.$ic17$);
            var31 = var30.first();
            var30 = var30.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var30, var29, (SubLObject)module0818.$ic17$);
            var32 = var30.first();
            var30 = var30.rest();
            if (module0818.NIL == var30) {
                Hashtables.sethash(var31, var26, var32);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(var29, (SubLObject)module0818.$ic17$);
            }
            var27 = var27.rest();
            var28 = var27.first();
        }
        module0818.$g6482$.setGlobalValue(var26);
        return var26;
    }
    
    public static SubLObject f52388(final SubLObject var16) {
        return Hashtables.gethash_without_values(var16, module0818.$g6482$.getGlobalValue(), (SubLObject)module0818.NIL);
    }
    
    public static SubLObject f52390(final SubLObject var30) {
        if (var30.isCons()) {
            SubLObject var31 = (SubLObject)module0818.NIL;
            SubLObject var32 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var30, var30, (SubLObject)module0818.$ic18$);
            var31 = var30.first();
            final SubLObject var33 = var32 = var30.rest();
            final SubLObject var34 = f52391(var31);
            if (module0818.NIL != var34) {
                return (SubLObject)ConsesLow.listS((SubLObject)module0818.$ic13$, var32.first(), var34, ConsesLow.append(var32.rest(), (SubLObject)module0818.NIL));
            }
        }
        return var30;
    }
    
    public static SubLObject f52392() {
        final SubLObject var26 = Hashtables.make_hash_table(Sequences.length(module0818.$g6483$.getGlobalValue()), Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED);
        SubLObject var27 = module0818.$g6483$.getGlobalValue();
        SubLObject var28 = (SubLObject)module0818.NIL;
        var28 = var27.first();
        while (module0818.NIL != var27) {
            SubLObject var30;
            final SubLObject var29 = var30 = var28;
            SubLObject var31 = (SubLObject)module0818.NIL;
            SubLObject var32 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var30, var29, (SubLObject)module0818.$ic20$);
            var31 = var30.first();
            var30 = var30.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var30, var29, (SubLObject)module0818.$ic20$);
            var32 = var30.first();
            var30 = var30.rest();
            if (module0818.NIL == var30) {
                Hashtables.sethash(var31, var26, var32);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(var29, (SubLObject)module0818.$ic20$);
            }
            var27 = var27.rest();
            var28 = var27.first();
        }
        module0818.$g6484$.setGlobalValue(var26);
        return var26;
    }
    
    public static SubLObject f52391(final SubLObject var16) {
        return Hashtables.gethash_without_values(var16, module0818.$g6484$.getGlobalValue(), (SubLObject)module0818.NIL);
    }
    
    public static SubLObject f52393(final SubLObject var4) {
        return module0035.sublisp_boolean(Hashtables.gethash_without_values(var4, module0818.$g6486$.getGlobalValue(), (SubLObject)module0818.NIL));
    }
    
    public static SubLObject f52394(final SubLObject var4) {
        return Hashtables.gethash_without_values(var4, module0818.$g6485$.getGlobalValue(), (SubLObject)module0818.NIL);
    }
    
    public static SubLObject f52395(final SubLObject var4) {
        return Hashtables.gethash_without_values(var4, module0818.$g6486$.getGlobalValue(), (SubLObject)module0818.NIL);
    }
    
    public static SubLObject f52396() {
        module0818.$g6486$.setGlobalValue(Hashtables.make_hash_table((SubLObject)module0818.$ic21$, Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED));
        module0818.$g6485$.setGlobalValue(Hashtables.make_hash_table((SubLObject)module0818.$ic21$, Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED));
        SubLObject var2 = module0818.$g6476$.getGlobalValue();
        SubLObject var3 = (SubLObject)module0818.NIL;
        var3 = var2.first();
        while (module0818.NIL != var2) {
            SubLObject var5;
            final SubLObject var4 = var5 = var3;
            SubLObject var6 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var5, var4, (SubLObject)module0818.$ic22$);
            var6 = var5.first();
            var5 = var5.rest();
            final SubLObject var7 = (SubLObject)(var5.isCons() ? var5.first() : module0818.NIL);
            cdestructuring_bind.destructuring_bind_must_listp(var5, var4, (SubLObject)module0818.$ic22$);
            var5 = var5.rest();
            if (module0818.NIL == var5) {
                SubLObject var2_39 = var7;
                SubLObject var8 = (SubLObject)module0818.NIL;
                var8 = var2_39.first();
                while (module0818.NIL != var2_39) {
                    final SubLObject var9 = f52397(var8);
                    Hashtables.sethash(var8, module0818.$g6486$.getGlobalValue(), var9);
                    Hashtables.sethash(var8, module0818.$g6485$.getGlobalValue(), var6);
                    var2_39 = var2_39.rest();
                    var8 = var2_39.first();
                }
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(var4, (SubLObject)module0818.$ic22$);
            }
            var2 = var2.rest();
            var3 = var2.first();
        }
        SubLObject var11;
        final SubLObject var10 = var11 = ConsesLow.nconc(conses_high.copy_list(module0818.$g6478$.getGlobalValue()), conses_high.copy_list(module0818.$g6480$.getGlobalValue()));
        SubLObject var12 = (SubLObject)module0818.NIL;
        var12 = var11.first();
        while (module0818.NIL != var11) {
            SubLObject var14;
            final SubLObject var13 = var14 = var12;
            SubLObject var15 = (SubLObject)module0818.NIL;
            SubLObject var16 = (SubLObject)module0818.NIL;
            SubLObject var17 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var14, var13, (SubLObject)module0818.$ic23$);
            var15 = var14.first();
            var14 = var14.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var14, var13, (SubLObject)module0818.$ic23$);
            var16 = var14.first();
            var14 = var14.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var14, var13, (SubLObject)module0818.$ic23$);
            var17 = var14.first();
            var14 = var14.rest();
            final SubLObject var18 = (SubLObject)(var14.isCons() ? var14.first() : module0818.NIL);
            cdestructuring_bind.destructuring_bind_must_listp(var14, var13, (SubLObject)module0818.$ic23$);
            var14 = var14.rest();
            if (module0818.NIL == var14) {
                Hashtables.sethash(var15, module0818.$g6486$.getGlobalValue(), var17);
                Hashtables.sethash(var15, module0818.$g6485$.getGlobalValue(), var16);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(var13, (SubLObject)module0818.$ic23$);
            }
            var11 = var11.rest();
            var12 = var11.first();
        }
        return Hashtables.hash_table_count(module0818.$g6486$.getGlobalValue());
    }
    
    public static SubLObject f52397(final SubLObject var4) {
        final SubLObject var5 = f52384(var4);
        if (module0818.NIL != var5) {
            return var5;
        }
        return f52398(var4);
    }
    
    public static SubLObject f52399(final SubLObject var4) {
        final SubLObject var5 = f52400(var4);
        if (module0818.NIL != var5) {
            return Sequences.cconcatenate((SubLObject)module0818.$ic25$, module0006.f205(var5));
        }
        final SubLObject var6 = f52401(var4);
        if (module0818.NIL != f52382(var6)) {
            return Sequences.cconcatenate((SubLObject)module0818.$ic26$, module0006.f203(var6));
        }
        if (module0818.NIL != Characters.digit_char_p(Strings.sublisp_char(var6, (SubLObject)module0818.ZERO_INTEGER), (SubLObject)module0818.UNPROVIDED)) {
            return Sequences.cconcatenate((SubLObject)module0818.$ic27$, module0006.f203(var6));
        }
        return var6;
    }
    
    public static SubLObject f52398(final SubLObject var4) {
        final SubLThread var5 = SubLProcess.currentSubLThread();
        final SubLObject var6 = module0034.$g879$.getDynamicValue(var5);
        SubLObject var7 = (SubLObject)module0818.NIL;
        if (module0818.NIL == var6) {
            return f52399(var4);
        }
        var7 = module0034.f1857(var6, (SubLObject)module0818.$ic24$, (SubLObject)module0818.UNPROVIDED);
        if (module0818.NIL == var7) {
            var7 = module0034.f1807(module0034.f1842(var6), (SubLObject)module0818.$ic24$, (SubLObject)module0818.ONE_INTEGER, (SubLObject)module0818.NIL, (SubLObject)module0818.EQ, (SubLObject)module0818.UNPROVIDED);
            module0034.f1860(var6, (SubLObject)module0818.$ic24$, var7);
        }
        SubLObject var8 = module0034.f1814(var7, var4, (SubLObject)module0818.$ic28$);
        if (var8 == module0818.$ic28$) {
            var8 = Values.arg2(var5.resetMultipleValues(), (SubLObject)Values.multiple_value_list(f52399(var4)));
            module0034.f1816(var7, var4, var8, (SubLObject)module0818.UNPROVIDED);
        }
        return module0034.f1959(var8);
    }
    
    public static SubLObject f52400(final SubLObject var4) {
        if (module0018.$g577$.getGlobalValue().eql(Symbols.symbol_package(var4)) && module0818.NIL == f52393(var4)) {
            final SubLObject var5 = module0813.f52032();
            if (module0818.NIL != var5) {
                return module0813.f52096(var5, var4);
            }
        }
        return (SubLObject)module0818.NIL;
    }
    
    public static SubLObject f52401(final SubLObject var54) {
        final SubLObject var55 = Symbols.symbol_name(var54);
        return f52402(var55);
    }
    
    public static SubLObject f52402(final SubLObject var55) {
        return module0816.f52271(var55);
    }
    
    public static SubLObject f52403(final SubLObject var4) {
        final SubLObject var5 = f52394(var4);
        if (module0818.NIL != var5) {
            return var5;
        }
        final SubLObject var6 = module0809.f51534(var4);
        if (module0818.NIL != var6) {
            final SubLObject var7 = module0819.f52454(var6);
            return var7;
        }
        return (SubLObject)module0818.$ic29$;
    }
    
    public static SubLObject f52404(final SubLObject var4) {
        final SubLObject var5 = f52395(var4);
        if (module0818.NIL != var5) {
            return var5;
        }
        return f52398(var4);
    }
    
    public static SubLObject f52405(final SubLObject var4) {
        return Hashtables.gethash_without_values(var4, module0818.$g6487$.getGlobalValue(), (SubLObject)module0818.$ic29$);
    }
    
    public static SubLObject f52406() {
        final SubLObject var26 = Hashtables.make_hash_table((SubLObject)module0818.$ic21$, Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED);
        SubLObject var27 = module0818.$g6476$.getGlobalValue();
        SubLObject var28 = (SubLObject)module0818.NIL;
        var28 = var27.first();
        while (module0818.NIL != var27) {
            SubLObject var30;
            final SubLObject var29 = var30 = var28;
            SubLObject var31 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var30, var29, (SubLObject)module0818.$ic22$);
            var31 = var30.first();
            var30 = var30.rest();
            final SubLObject var32 = (SubLObject)(var30.isCons() ? var30.first() : module0818.NIL);
            cdestructuring_bind.destructuring_bind_must_listp(var30, var29, (SubLObject)module0818.$ic22$);
            var30 = var30.rest();
            if (module0818.NIL == var30) {
                SubLObject var2_60 = var32;
                SubLObject var33 = (SubLObject)module0818.NIL;
                var33 = var2_60.first();
                while (module0818.NIL != var2_60) {
                    if (module0818.NIL != module0004.f85(var33)) {
                        final SubLObject var34 = module0004.f86(var33);
                        Hashtables.sethash(var33, var26, var34);
                    }
                    var2_60 = var2_60.rest();
                    var33 = var2_60.first();
                }
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(var29, (SubLObject)module0818.$ic22$);
            }
            var27 = var27.rest();
            var28 = var27.first();
        }
        SubLObject var36;
        final SubLObject var35 = var36 = ConsesLow.nconc(conses_high.copy_list(module0818.$g6478$.getGlobalValue()), conses_high.copy_list(module0818.$g6480$.getGlobalValue()));
        SubLObject var37 = (SubLObject)module0818.NIL;
        var37 = var36.first();
        while (module0818.NIL != var36) {
            SubLObject var39;
            final SubLObject var38 = var39 = var37;
            SubLObject var40 = (SubLObject)module0818.NIL;
            SubLObject var41 = (SubLObject)module0818.NIL;
            SubLObject var42 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var39, var38, (SubLObject)module0818.$ic23$);
            var40 = var39.first();
            var39 = var39.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var39, var38, (SubLObject)module0818.$ic23$);
            var41 = var39.first();
            var39 = var39.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var39, var38, (SubLObject)module0818.$ic23$);
            var42 = var39.first();
            var39 = var39.rest();
            final SubLObject var34 = (SubLObject)(var39.isCons() ? var39.first() : module0818.NIL);
            cdestructuring_bind.destructuring_bind_must_listp(var39, var38, (SubLObject)module0818.$ic23$);
            var39 = var39.rest();
            if (module0818.NIL == var39) {
                Hashtables.sethash(var40, var26, var34);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(var38, (SubLObject)module0818.$ic23$);
            }
            var36 = var36.rest();
            var37 = var36.first();
        }
        module0818.$g6487$.setGlobalValue(var26);
        return var26;
    }
    
    public static SubLObject f52407(final SubLObject var63) {
        return module0035.f2294(module0818.$g6488$.getGlobalValue(), var63, Symbols.symbol_function((SubLObject)module0818.EQL), (SubLObject)module0818.UNPROVIDED);
    }
    
    public static SubLObject f52408(final SubLObject var54) {
        return conses_high.fourth(conses_high.assoc(var54, module0818.$g6490$.getGlobalValue(), Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED));
    }
    
    public static SubLObject f52409(final SubLObject var64) {
        return module0035.sublisp_boolean(Hashtables.gethash_without_values(var64, module0818.$g6492$.getGlobalValue(), (SubLObject)module0818.NIL));
    }
    
    public static SubLObject f52410(final SubLObject var64) {
        return Hashtables.gethash_without_values(var64, module0818.$g6491$.getGlobalValue(), (SubLObject)module0818.NIL);
    }
    
    public static SubLObject f52411(final SubLObject var64) {
        return Hashtables.gethash_without_values(var64, module0818.$g6492$.getGlobalValue(), (SubLObject)module0818.NIL);
    }
    
    public static SubLObject f52412() {
        final SubLObject var41 = ConsesLow.nconc(conses_high.copy_list(module0818.$g6489$.getGlobalValue()), conses_high.copy_list(module0818.$g6490$.getGlobalValue()));
        final SubLObject var42 = Hashtables.make_hash_table(Sequences.length(var41), Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED);
        final SubLObject var43 = Hashtables.make_hash_table(Sequences.length(var41), Symbols.symbol_function((SubLObject)module0818.EQ), (SubLObject)module0818.UNPROVIDED);
        SubLObject var44 = var41;
        SubLObject var45 = (SubLObject)module0818.NIL;
        var45 = var44.first();
        while (module0818.NIL != var44) {
            SubLObject var47;
            final SubLObject var46 = var47 = var45;
            SubLObject var48 = (SubLObject)module0818.NIL;
            SubLObject var49 = (SubLObject)module0818.NIL;
            SubLObject var50 = (SubLObject)module0818.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(var47, var46, (SubLObject)module0818.$ic33$);
            var48 = var47.first();
            var47 = var47.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var47, var46, (SubLObject)module0818.$ic33$);
            var49 = var47.first();
            var47 = var47.rest();
            cdestructuring_bind.destructuring_bind_must_consp(var47, var46, (SubLObject)module0818.$ic33$);
            var50 = var47.first();
            var47 = var47.rest();
            final SubLObject var51 = (SubLObject)(var47.isCons() ? var47.first() : module0818.NIL);
            cdestructuring_bind.destructuring_bind_must_listp(var47, var46, (SubLObject)module0818.$ic33$);
            var47 = var47.rest();
            if (module0818.NIL == var47) {
                Hashtables.sethash(var48, var42, var49);
                Hashtables.sethash(var48, var43, var50);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(var46, (SubLObject)module0818.$ic33$);
            }
            var44 = var44.rest();
            var45 = var44.first();
        }
        module0818.$g6491$.setGlobalValue(var42);
        module0818.$g6492$.setGlobalValue(var43);
        return Hashtables.hash_table_count(var43);
    }
    
    public static SubLObject f52413(final SubLObject var64) {
        final SubLObject var65 = f52410(var64);
        if (module0818.NIL != var65) {
            return var65;
        }
        final SubLObject var66 = module0809.f51540(var64);
        if (module0818.NIL != var66) {
            final SubLObject var67 = module0819.f52454(var66);
            return var67;
        }
        return (SubLObject)module0818.$ic29$;
    }
    
    public static SubLObject f52414(final SubLObject var64) {
        final SubLObject var65 = f52411(var64);
        if (module0818.NIL != var65) {
            return var65;
        }
        return f52415(var64);
    }
    
    public static SubLObject f52416(final SubLObject var64) {
        final SubLObject var65 = f52417(var64);
        if (module0818.NIL != var65) {
            return Sequences.cconcatenate((SubLObject)module0818.$ic35$, new SubLObject[] { module0006.f205(var65), module0818.$ic36$ });
        }
        final SubLObject var66 = f52401(var64);
        return Sequences.cconcatenate((SubLObject)module0818.$ic36$, new SubLObject[] { module0006.f203(var66), module0818.$ic36$ });
    }
    
    public static SubLObject f52415(final SubLObject var64) {
        final SubLThread var65 = SubLProcess.currentSubLThread();
        final SubLObject var66 = module0034.$g879$.getDynamicValue(var65);
        SubLObject var67 = (SubLObject)module0818.NIL;
        if (module0818.NIL == var66) {
            return f52416(var64);
        }
        var67 = module0034.f1857(var66, (SubLObject)module0818.$ic34$, (SubLObject)module0818.UNPROVIDED);
        if (module0818.NIL == var67) {
            var67 = module0034.f1807(module0034.f1842(var66), (SubLObject)module0818.$ic34$, (SubLObject)module0818.ONE_INTEGER, (SubLObject)module0818.NIL, (SubLObject)module0818.EQ, (SubLObject)module0818.UNPROVIDED);
            module0034.f1860(var66, (SubLObject)module0818.$ic34$, var67);
        }
        SubLObject var68 = module0034.f1814(var67, var64, (SubLObject)module0818.$ic28$);
        if (var68 == module0818.$ic28$) {
            var68 = Values.arg2(var65.resetMultipleValues(), (SubLObject)Values.multiple_value_list(f52416(var64)));
            module0034.f1816(var67, var64, var68, (SubLObject)module0818.UNPROVIDED);
        }
        return module0034.f1959(var68);
    }
    
    public static SubLObject f52417(final SubLObject var64) {
        if (module0018.$g577$.getGlobalValue().eql(Symbols.symbol_package(var64)) && module0818.NIL == f52409(var64)) {
            final SubLObject var65 = module0813.f52032();
            if (module0818.NIL != var65) {
                return module0813.f52097(var65, var64);
            }
        }
        return (SubLObject)module0818.NIL;
    }
    
    public static SubLObject f52418() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52382", "S#57507", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52383", "S#57508", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52384", "S#57509", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52385", "S#57510", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52386", "S#57511", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52387", "S#57512", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52389", "S#57513", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52388", "S#57514", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52390", "S#57515", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52392", "S#57516", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52391", "S#57517", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52393", "S#56052", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52394", "S#57518", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52395", "S#57519", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52396", "S#57520", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52397", "S#57521", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52399", "S#57522", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52398", "S#57523", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52400", "S#57524", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52401", "S#57525", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52402", "S#57526", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52403", "S#57527", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52404", "S#57528", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52405", "S#57529", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52406", "S#57530", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52407", "S#57531", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52408", "S#57532", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52409", "S#56054", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52410", "S#57533", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52411", "S#57534", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52412", "S#57535", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52413", "S#57536", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52414", "S#57537", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52416", "S#57538", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52415", "S#57539", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.module0818", "f52417", "S#57540", 1, 0, false);
        return (SubLObject)module0818.NIL;
    }
    
    public static SubLObject f52419() {
        module0818.$g6475$ = SubLFiles.deflexical("S#57541", (SubLObject)module0818.$ic0$);
        module0818.$g6476$ = SubLFiles.deflexical("S#57542", module0818.$ic1$);
        module0818.$g6477$ = SubLFiles.deflexical("S#57543", (SubLObject)module0818.$ic3$);
        module0818.$g6478$ = SubLFiles.deflexical("S#57544", module0818.$ic4$);
        module0818.$g6479$ = SubLFiles.deflexical("S#57545", (SubLObject)module0818.$ic6$);
        module0818.$g6480$ = SubLFiles.deflexical("S#57546", module0818.$ic7$);
        module0818.$g6481$ = SubLFiles.deflexical("S#57547", (SubLObject)module0818.$ic15$);
        module0818.$g6482$ = SubLFiles.deflexical("S#57548", (SubLObject)module0818.$ic16$);
        module0818.$g6483$ = SubLFiles.deflexical("S#57549", (SubLObject)module0818.$ic19$);
        module0818.$g6484$ = SubLFiles.deflexical("S#57550", (SubLObject)module0818.$ic16$);
        module0818.$g6485$ = SubLFiles.deflexical("S#57551", (SubLObject)module0818.$ic16$);
        module0818.$g6486$ = SubLFiles.deflexical("S#57552", (SubLObject)module0818.$ic16$);
        module0818.$g6487$ = SubLFiles.deflexical("S#57553", (SubLObject)module0818.$ic16$);
        module0818.$g6488$ = SubLFiles.deflexical("S#57554", module0818.$ic30$);
        module0818.$g6489$ = SubLFiles.deflexical("S#57555", (SubLObject)module0818.$ic31$);
        module0818.$g6490$ = SubLFiles.deflexical("S#57556", (SubLObject)module0818.$ic32$);
        module0818.$g6491$ = SubLFiles.deflexical("S#57557", (SubLObject)module0818.$ic16$);
        module0818.$g6492$ = SubLFiles.deflexical("S#57558", (SubLObject)module0818.$ic16$);
        return (SubLObject)module0818.NIL;
    }
    
    public static SubLObject f52420() {
        f52389();
        f52392();
        module0034.f1895((SubLObject)module0818.$ic24$);
        f52396();
        f52406();
        f52412();
        module0034.f1895((SubLObject)module0818.$ic34$);
        return (SubLObject)module0818.NIL;
    }
    
    private static SubLObject _constant_1_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("LIST*"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Alien"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIEN-NULL-PTR?", "SUBLISP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Characters"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("ALPHA-CHAR-P"), SubLObjectFactory.makeSymbol("ALPHANUMERICP"), SubLObjectFactory.makeSymbol("BOTH-CASE-P"), SubLObjectFactory.makeSymbol("CHAR-CODE"), SubLObjectFactory.makeSymbol("CHAR-DOWNCASE"), SubLObjectFactory.makeSymbol("CHAR-EQUAL"), SubLObjectFactory.makeSymbol("CHAR-GREATERP"), SubLObjectFactory.makeSymbol("CHAR-LESSP"), SubLObjectFactory.makeSymbol("CHAR-NOT-EQUAL"), SubLObjectFactory.makeSymbol("CHAR-NOT-GREATERP"), SubLObjectFactory.makeSymbol("CHAR-NOT-LESSP"), SubLObjectFactory.makeSymbol("CHAR-UPCASE"), SubLObjectFactory.makeSymbol("CHAR/="), SubLObjectFactory.makeSymbol("CHAR<"), SubLObjectFactory.makeSymbol("CHAR<="), SubLObjectFactory.makeSymbol("CHAR="), SubLObjectFactory.makeSymbol("CHAR>"), SubLObjectFactory.makeSymbol("CHAR>="), SubLObjectFactory.makeSymbol("CODE-CHAR"), SubLObjectFactory.makeSymbol("DIGIT-CHAR"), SubLObjectFactory.makeSymbol("DIGIT-CHAR-P"), SubLObjectFactory.makeSymbol("LOWER-CASE-P"), SubLObjectFactory.makeSymbol("UPPER-CASE-P"), SubLObjectFactory.makeSymbol("NAME-CHARACTER", "SUBLISP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ConsesLow"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("APPEND"), SubLObjectFactory.makeSymbol("CAR"), SubLObjectFactory.makeSymbol("CDR"), SubLObjectFactory.makeSymbol("MAKE-LIST"), SubLObjectFactory.makeSymbol("NCONC"), SubLObjectFactory.makeSymbol("NTH"), SubLObjectFactory.makeSymbol("RPLACA"), SubLObjectFactory.makeSymbol("RPLACD"), SubLObjectFactory.makeSymbol("SET-NTH") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("THROW"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Environment"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("GET-MACHINE-NAME"), SubLObjectFactory.makeSymbol("GET-NETWORK-NAME"), SubLObjectFactory.makeSymbol("GET-PROCESS-ID"), SubLObjectFactory.makeSymbol("GET-USER-NAME"), SubLObjectFactory.makeSymbol("LISP-IMPLEMENTATION-TYPE"), SubLObjectFactory.makeSymbol("LISP-IMPLEMENTATION-VERSION"), SubLObjectFactory.makeSymbol("LONG-SITE-NAME"), SubLObjectFactory.makeSymbol("MACHINE-INSTANCE"), SubLObjectFactory.makeSymbol("MACHINE-TYPE"), SubLObjectFactory.makeSymbol("MACHINE-VERSION"), SubLObjectFactory.makeSymbol("SHORT-SITE-NAME"), SubLObjectFactory.makeSymbol("SOFTWARE-TYPE"), SubLObjectFactory.makeSymbol("SOFTWARE-VERSION") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Equality"), (SubLObject)ConsesLow.list((SubLObject)module0818.EQ, (SubLObject)module0818.EQL, (SubLObject)module0818.EQUAL, (SubLObject)module0818.EQUALP, (SubLObject)module0818.IDENTITY)), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BREAK"), (SubLObject)SubLObjectFactory.makeSymbol("CERROR"), (SubLObject)SubLObjectFactory.makeSymbol("DEBUG"), (SubLObject)SubLObjectFactory.makeSymbol("ERROR"), (SubLObject)SubLObjectFactory.makeSymbol("WARN"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Eval"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONSTANTP"), (SubLObject)SubLObjectFactory.makeSymbol("EVAL"), (SubLObject)SubLObjectFactory.makeSymbol("FUNCTION-INFORMATION"), (SubLObject)SubLObjectFactory.makeSymbol("LOAD"), (SubLObject)SubLObjectFactory.makeSymbol("MACROEXPAND"), (SubLObject)SubLObjectFactory.makeSymbol("MACROEXPAND-1"), (SubLObject)SubLObjectFactory.makeSymbol("VARIABLE-INFORMATION"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Filesys"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CONSTRUCT-FILENAME"), SubLObjectFactory.makeSymbol("DELETE-DIRECTORY"), SubLObjectFactory.makeSymbol("DELETE-FILE"), SubLObjectFactory.makeSymbol("DIRECTORY"), SubLObjectFactory.makeSymbol("DIRECTORY-P"), SubLObjectFactory.makeSymbol("FILE-AUTHOR"), SubLObjectFactory.makeSymbol("FILE-WRITE-DATE"), SubLObjectFactory.makeSymbol("MAKE-DIRECTORY"), SubLObjectFactory.makeSymbol("PROBE-FILE"), SubLObjectFactory.makeSymbol("RENAME-FILE"), SubLObjectFactory.makeSymbol("S#6892", "CYC") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPLY"), (SubLObject)SubLObjectFactory.makeSymbol("FUNCALL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Guids"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("ASSEMBLE-FIXNUMS-TO-GUID"), SubLObjectFactory.makeSymbol("CRACK-DATE-RELATIVE-GUID"), SubLObjectFactory.makeSymbol("DATE-RELATIVE-GUID-P"), SubLObjectFactory.makeSymbol("DISASSEMBLE-GUID-TO-FIXNUMS"), SubLObjectFactory.makeSymbol("GUID-P"), SubLObjectFactory.makeSymbol("GUID-STRING-P"), SubLObjectFactory.makeSymbol("GUID-TO-STRING"), SubLObjectFactory.makeSymbol("GUID/="), SubLObjectFactory.makeSymbol("GUID<"), SubLObjectFactory.makeSymbol("GUID<="), SubLObjectFactory.makeSymbol("GUID="), SubLObjectFactory.makeSymbol("GUID>"), SubLObjectFactory.makeSymbol("GUID>="), SubLObjectFactory.makeSymbol("MAKE-DATE-RELATIVE-GUID"), SubLObjectFactory.makeSymbol("NEW-GUID"), SubLObjectFactory.makeSymbol("STRING-TO-GUID") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CLRHASH"), SubLObjectFactory.makeSymbol("GETHASH"), SubLObjectFactory.makeSymbol("GETHASH-WITHOUT-VALUES"), SubLObjectFactory.makeSymbol("HASH-TABLE-COUNT"), SubLObjectFactory.makeSymbol("HASH-TABLE-SIZE"), SubLObjectFactory.makeSymbol("HASH-TABLE-TEST"), SubLObjectFactory.makeSymbol("MAKE-HASH-TABLE"), SubLObjectFactory.makeSymbol("MAPHASH"), SubLObjectFactory.makeSymbol("REMHASH"), SubLObjectFactory.makeSymbol("SETHASH"), SubLObjectFactory.makeSymbol("GETHASH-BUCKET", "SUBLISP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("JavaLink"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JAVA-NEW"), (SubLObject)SubLObjectFactory.makeSymbol("JAVA-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("JAVA-CALL"), (SubLObject)SubLObjectFactory.makeSymbol("JAVA-STATIC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Locks"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK-IDLE-P"), (SubLObject)SubLObjectFactory.makeSymbol("LOCK-LOCKER"), (SubLObject)SubLObjectFactory.makeSymbol("LOCK-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("MAKE-LOCK"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Mapper"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-IMAGE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Mapping"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPC"), (SubLObject)SubLObjectFactory.makeSymbol("MAPCAN"), (SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)SubLObjectFactory.makeSymbol("MAPCON"), (SubLObject)SubLObjectFactory.makeSymbol("MAPL"), (SubLObject)SubLObjectFactory.makeSymbol("MAPLIST"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("*"), SubLObjectFactory.makeSymbol("+"), SubLObjectFactory.makeSymbol("-"), SubLObjectFactory.makeSymbol("/"), SubLObjectFactory.makeSymbol("/="), SubLObjectFactory.makeSymbol("<"), SubLObjectFactory.makeSymbol("<="), SubLObjectFactory.makeSymbol("="), SubLObjectFactory.makeSymbol(">"), SubLObjectFactory.makeSymbol(">="), SubLObjectFactory.makeSymbol("ABS"), SubLObjectFactory.makeSymbol("ACOS"), SubLObjectFactory.makeSymbol("ASH"), SubLObjectFactory.makeSymbol("ASIN"), SubLObjectFactory.makeSymbol("ASSEMBLE-FIXNUMS-TO-INTEGER"), SubLObjectFactory.makeSymbol("ATAN"), SubLObjectFactory.makeSymbol("BOOLE"), SubLObjectFactory.makeSymbol("CEILING"), SubLObjectFactory.makeSymbol("COS"), SubLObjectFactory.makeSymbol("DECODE-FLOAT"), SubLObjectFactory.makeSymbol("DISASSEMBLE-INTEGER-TO-FIXNUMS"), SubLObjectFactory.makeSymbol("EVENP"), SubLObjectFactory.makeSymbol("EXP"), SubLObjectFactory.makeSymbol("EXPT"), SubLObjectFactory.makeSymbol("FIXNUM*"), SubLObjectFactory.makeSymbol("FLOAT"), SubLObjectFactory.makeSymbol("FLOAT-DIGITS"), SubLObjectFactory.makeSymbol("FLOAT-RADIX"), SubLObjectFactory.makeSymbol("FLOAT-SIGN"), SubLObjectFactory.makeSymbol("FLOOR"), SubLObjectFactory.makeSymbol("INFINITY-P"), SubLObjectFactory.makeSymbol("INT/"), SubLObjectFactory.makeSymbol("INTEGER-DECODE-FLOAT"), SubLObjectFactory.makeSymbol("INTEGER-LENGTH"), SubLObjectFactory.makeSymbol("ISQRT"), SubLObjectFactory.makeSymbol("LOG"), SubLObjectFactory.makeSymbol("LOGAND"), SubLObjectFactory.makeSymbol("LOGANDC1"), SubLObjectFactory.makeSymbol("LOGANDC2"), SubLObjectFactory.makeSymbol("LOGBITP"), SubLObjectFactory.makeSymbol("LOGCOUNT"), SubLObjectFactory.makeSymbol("LOGEQV"), SubLObjectFactory.makeSymbol("LOGIOR"), SubLObjectFactory.makeSymbol("LOGNAND"), SubLObjectFactory.makeSymbol("LOGNOR"), SubLObjectFactory.makeSymbol("LOGNOT"), SubLObjectFactory.makeSymbol("LOGORC1"), SubLObjectFactory.makeSymbol("LOGORC2"), SubLObjectFactory.makeSymbol("LOGTEST"), SubLObjectFactory.makeSymbol("LOGXOR"), SubLObjectFactory.makeSymbol("MAX"), SubLObjectFactory.makeSymbol("MIN"), SubLObjectFactory.makeSymbol("MINUSP"), SubLObjectFactory.makeSymbol("MOD"), SubLObjectFactory.makeSymbol("NOT-A-NUMBER-P"), SubLObjectFactory.makeSymbol("ODDP"), SubLObjectFactory.makeSymbol("PLUSP"), SubLObjectFactory.makeSymbol("REM"), SubLObjectFactory.makeSymbol("ROUND"), SubLObjectFactory.makeSymbol("SCALE-FLOAT"), SubLObjectFactory.makeSymbol("SIN"), SubLObjectFactory.makeSymbol("SQRT"), SubLObjectFactory.makeSymbol("TAN"), SubLObjectFactory.makeSymbol("TRUNCATE"), SubLObjectFactory.makeSymbol("ZEROP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Packages"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("APROPOS"), SubLObjectFactory.makeSymbol("EXPORT"), SubLObjectFactory.makeSymbol("FIND-PACKAGE"), SubLObjectFactory.makeSymbol("FIND-SYMBOL"), SubLObjectFactory.makeSymbol("IMPORT"), SubLObjectFactory.makeSymbol("INTERN"), SubLObjectFactory.makeSymbol("LIST-ALL-PACKAGES"), SubLObjectFactory.makeSymbol("LOCK-PACKAGE"), SubLObjectFactory.makeSymbol("MAKE-PACKAGE"), SubLObjectFactory.makeSymbol("PACKAGE-LOCKED-P"), SubLObjectFactory.makeSymbol("PACKAGE-NAME"), SubLObjectFactory.makeSymbol("PACKAGE-NICKNAMES"), SubLObjectFactory.makeSymbol("PACKAGE-SHADOWING-SYMBOLS"), SubLObjectFactory.makeSymbol("PACKAGE-USE-LIST"), SubLObjectFactory.makeSymbol("PACKAGE-USED-BY-LIST"), SubLObjectFactory.makeSymbol("UNEXPORT"), SubLObjectFactory.makeSymbol("UNINTERN") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("PrintLow"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT"), (SubLObject)SubLObjectFactory.makeSymbol("WRITE"), (SubLObject)SubLObjectFactory.makeSymbol("WRITE-TO-STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Processes"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EXIT"), (SubLObject)SubLObjectFactory.makeSymbol("FORK-PROCESS"), (SubLObject)SubLObjectFactory.makeSymbol("RESTART-PROCESS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Regex"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57631", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57632", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57633", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57634", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57635", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57636", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57637", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Sequences"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CCONCATENATE"), SubLObjectFactory.makeSymbol("COPY-SEQ"), SubLObjectFactory.makeSymbol("COUNT"), SubLObjectFactory.makeSymbol("COUNT-IF"), SubLObjectFactory.makeSymbol("CREDUCE"), SubLObjectFactory.makeSymbol("DELETE"), SubLObjectFactory.makeSymbol("DELETE-DUPLICATES"), SubLObjectFactory.makeSymbol("DELETE-IF"), SubLObjectFactory.makeSymbol("ELT"), SubLObjectFactory.makeSymbol("FILL"), SubLObjectFactory.makeSymbol("FIND"), SubLObjectFactory.makeSymbol("FIND-IF"), SubLObjectFactory.makeSymbol("LENGTH"), SubLObjectFactory.makeSymbol("MISMATCH"), SubLObjectFactory.makeSymbol("NREVERSE"), SubLObjectFactory.makeSymbol("NSUBSTITUTE"), SubLObjectFactory.makeSymbol("NSUBSTITUTE-IF"), SubLObjectFactory.makeSymbol("POSITION"), SubLObjectFactory.makeSymbol("POSITION-IF"), SubLObjectFactory.makeSymbol("REMOVE"), SubLObjectFactory.makeSymbol("REMOVE-DUPLICATES"), SubLObjectFactory.makeSymbol("REMOVE-IF"), SubLObjectFactory.makeSymbol("REPLACE"), SubLObjectFactory.makeSymbol("REVERSE"), SubLObjectFactory.makeSymbol("SEARCH"), SubLObjectFactory.makeSymbol("SUBSEQ"), SubLObjectFactory.makeSymbol("SUBSTITUTE"), SubLObjectFactory.makeSymbol("SUBSTITUTE-IF") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Sort"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CMERGE"), (SubLObject)SubLObjectFactory.makeSymbol("SORT"), (SubLObject)SubLObjectFactory.makeSymbol("STABLE-SORT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Storage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GC"), (SubLObject)SubLObjectFactory.makeSymbol("GC-DYNAMIC"), (SubLObject)SubLObjectFactory.makeSymbol("GC-EPHEMERAL"), (SubLObject)SubLObjectFactory.makeSymbol("GC-FULL"), (SubLObject)SubLObjectFactory.makeSymbol("REGISTER-LOW-MEMORY-CALLBACK"), (SubLObject)SubLObjectFactory.makeSymbol("ROOM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Strings"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CHAR"), SubLObjectFactory.makeSymbol("MAKE-STRING"), SubLObjectFactory.makeSymbol("NSTRING-CAPITALIZE"), SubLObjectFactory.makeSymbol("NSTRING-DOWNCASE"), SubLObjectFactory.makeSymbol("NSTRING-UPCASE"), SubLObjectFactory.makeSymbol("SET-CHAR"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("STRING-CAPITALIZE"), SubLObjectFactory.makeSymbol("STRING-DOWNCASE"), SubLObjectFactory.makeSymbol("STRING-EQUAL"), SubLObjectFactory.makeSymbol("STRING-GREATERP"), SubLObjectFactory.makeSymbol("STRING-LEFT-TRIM"), SubLObjectFactory.makeSymbol("STRING-LESSP"), SubLObjectFactory.makeSymbol("STRING-NOT-EQUAL"), SubLObjectFactory.makeSymbol("STRING-NOT-GREATERP"), SubLObjectFactory.makeSymbol("STRING-NOT-LESSP"), SubLObjectFactory.makeSymbol("STRING-RIGHT-TRIM"), SubLObjectFactory.makeSymbol("STRING-TRIM"), SubLObjectFactory.makeSymbol("STRING-UPCASE"), SubLObjectFactory.makeSymbol("STRING/="), SubLObjectFactory.makeSymbol("STRING<"), SubLObjectFactory.makeSymbol("STRING<="), SubLObjectFactory.makeSymbol("STRING="), SubLObjectFactory.makeSymbol("STRING>"), SubLObjectFactory.makeSymbol("STRING>=") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Sxhash"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SXHASH"), (SubLObject)SubLObjectFactory.makeSymbol("SXHASH-ROT", "SUBLISP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Symbols"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("BOUNDP"), SubLObjectFactory.makeSymbol("FBOUNDP"), SubLObjectFactory.makeSymbol("FMAKUNBOUND"), SubLObjectFactory.makeSymbol("GENSYM"), SubLObjectFactory.makeSymbol("GENTEMP"), SubLObjectFactory.makeSymbol("GET"), SubLObjectFactory.makeSymbol("MAKE-KEYWORD"), SubLObjectFactory.makeSymbol("MAKE-SYMBOL"), SubLObjectFactory.makeSymbol("MAKUNBOUND"), SubLObjectFactory.makeSymbol("PUT"), SubLObjectFactory.makeSymbol("REMPROP"), SubLObjectFactory.makeSymbol("SET"), SubLObjectFactory.makeSymbol("SYMBOL-FUNCTION"), SubLObjectFactory.makeSymbol("SYMBOL-NAME"), SubLObjectFactory.makeSymbol("SYMBOL-PACKAGE"), SubLObjectFactory.makeSymbol("SYMBOL-PLIST"), SubLObjectFactory.makeSymbol("SYMBOL-VALUE") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Tcp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN-TCP-STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Threads"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("ALL-PROCESSES"), SubLObjectFactory.makeSymbol("CURRENT-PROCESS"), SubLObjectFactory.makeSymbol("DEBUG-PROCESS"), SubLObjectFactory.makeSymbol("INTERRUPT-PROCESS"), SubLObjectFactory.makeSymbol("KILL-PROCESS"), SubLObjectFactory.makeSymbol("MAKE-PROCESS"), SubLObjectFactory.makeSymbol("NOTIFY"), SubLObjectFactory.makeSymbol("PROCESS-ACTIVE-P"), SubLObjectFactory.makeSymbol("PROCESS-BLOCK"), SubLObjectFactory.makeSymbol("PROCESS-NAME"), SubLObjectFactory.makeSymbol("PROCESS-PRIORITY"), SubLObjectFactory.makeSymbol("PROCESS-STATE"), SubLObjectFactory.makeSymbol("PROCESS-UNBLOCK"), SubLObjectFactory.makeSymbol("PROCESS-WAIT"), SubLObjectFactory.makeSymbol("PROCESS-WAIT-WITH-TIMEOUT"), SubLObjectFactory.makeSymbol("PROCESS-WHOSTATE"), SubLObjectFactory.makeSymbol("SET-PROCESS-PRIORITY"), SubLObjectFactory.makeSymbol("SHOW-PROCESSES"), SubLObjectFactory.makeSymbol("SLEEP"), SubLObjectFactory.makeSymbol("VALID-PROCESS-P") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Time"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DECODE-UNIVERSAL-TIME"), (SubLObject)SubLObjectFactory.makeSymbol("ENCODE-UNIVERSAL-TIME"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DECODED-TIME"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INTERNAL-REAL-TIME"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INTERNAL-RUN-TIME"), (SubLObject)SubLObjectFactory.makeSymbol("GET-UNIVERSAL-TIME"), (SubLObject)SubLObjectFactory.makeSymbol("INTERNAL-REAL-TIME-HAS-ARRIVED?"), (SubLObject)SubLObjectFactory.makeSymbol("TIME-HAS-ARRIVED?"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("ATOM"), SubLObjectFactory.makeSymbol("CHARACTERP"), SubLObjectFactory.makeSymbol("CONSP"), SubLObjectFactory.makeSymbol("FALSE"), SubLObjectFactory.makeSymbol("FIXNUMP"), SubLObjectFactory.makeSymbol("FLOATP"), SubLObjectFactory.makeSymbol("FUNCTION-SPEC-P"), SubLObjectFactory.makeSymbol("FUNCTIONP"), SubLObjectFactory.makeSymbol("HASH-TABLE-P"), SubLObjectFactory.makeSymbol("INTEGERP"), SubLObjectFactory.makeSymbol("KEYWORDP"), SubLObjectFactory.makeSymbol("LISTP"), SubLObjectFactory.makeSymbol("LOCK-P"), SubLObjectFactory.makeSymbol("MACRO-OPERATOR-P"), SubLObjectFactory.makeSymbol("NULL"), SubLObjectFactory.makeSymbol("NUMBERP"), SubLObjectFactory.makeSymbol("PACKAGEP"), SubLObjectFactory.makeSymbol("PROCESSP"), SubLObjectFactory.makeSymbol("SEQUENCEP"), SubLObjectFactory.makeSymbol("STREAMP"), SubLObjectFactory.makeSymbol("STRINGP"), SubLObjectFactory.makeSymbol("SYMBOLP"), SubLObjectFactory.makeSymbol("TRUE"), SubLObjectFactory.makeSymbol("TYPE-OF"), SubLObjectFactory.makeSymbol("VECTORP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("UserIO"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALERT-USER"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING-FROM-USER"), (SubLObject)SubLObjectFactory.makeSymbol("LOG-MESSAGE"), (SubLObject)SubLObjectFactory.makeSymbol("NOTIFY-USER"), (SubLObject)SubLObjectFactory.makeSymbol("REPORT-ERROR"), (SubLObject)SubLObjectFactory.makeSymbol("USER-CONFIRM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Values")), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Vectors"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AREF"), (SubLObject)SubLObjectFactory.makeSymbol("MAKE-VECTOR"), (SubLObject)SubLObjectFactory.makeSymbol("SET-AREF"), (SubLObject)SubLObjectFactory.makeSymbol("VECTOR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("bytes"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BYTE"), (SubLObject)SubLObjectFactory.makeSymbol("DPB"), (SubLObject)SubLObjectFactory.makeSymbol("LDB"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("character_names"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHARACTER-NAMES", "SUBLISP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("compatibility"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEFAULT-STRUCT-PRINT-FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("GET-FILE-POSITION"), (SubLObject)SubLObjectFactory.makeSymbol("OPEN-BINARY"), (SubLObject)SubLObjectFactory.makeSymbol("OPEN-TEXT"), (SubLObject)SubLObjectFactory.makeSymbol("SET-FILE-POSITION"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("complex_special_forms"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEFSTRUCT-ANALYZE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-NOTE-FUNCTION-ENTRY", "SUBLISP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("conses_high"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("ACONS"), SubLObjectFactory.makeSymbol("ADJOIN"), SubLObjectFactory.makeSymbol("ASSOC"), SubLObjectFactory.makeSymbol("ASSOC-IF"), SubLObjectFactory.makeSymbol("BUTLAST"), SubLObjectFactory.makeSymbol("CAAR"), SubLObjectFactory.makeSymbol("CADR"), SubLObjectFactory.makeSymbol("CDAR"), SubLObjectFactory.makeSymbol("CDDR"), SubLObjectFactory.makeSymbol("COPY-ALIST"), SubLObjectFactory.makeSymbol("COPY-LIST"), SubLObjectFactory.makeSymbol("COPY-TREE"), SubLObjectFactory.makeSymbol("EIGHTH"), SubLObjectFactory.makeSymbol("ENDP"), SubLObjectFactory.makeSymbol("FIFTH"), SubLObjectFactory.makeSymbol("FIRST"), SubLObjectFactory.makeSymbol("FOURTH"), SubLObjectFactory.makeSymbol("GETF"), SubLObjectFactory.makeSymbol("INTERSECTION"), SubLObjectFactory.makeSymbol("LAST"), SubLObjectFactory.makeSymbol("LDIFF"), SubLObjectFactory.makeSymbol("LIST-LENGTH"), SubLObjectFactory.makeSymbol("MEMBER"), SubLObjectFactory.makeSymbol("MEMBER-IF"), SubLObjectFactory.makeSymbol("NBUTLAST"), SubLObjectFactory.makeSymbol("NINTERSECTION"), SubLObjectFactory.makeSymbol("NINTH"), SubLObjectFactory.makeSymbol("NRECONC"), SubLObjectFactory.makeSymbol("NSET-DIFFERENCE"), SubLObjectFactory.makeSymbol("NSET-EXCLUSIVE-OR"), SubLObjectFactory.makeSymbol("NSUBLIS"), SubLObjectFactory.makeSymbol("NSUBST"), SubLObjectFactory.makeSymbol("NSUBST-IF"), SubLObjectFactory.makeSymbol("NTHCDR"), SubLObjectFactory.makeSymbol("NUNION"), SubLObjectFactory.makeSymbol("PAIRLIS"), SubLObjectFactory.makeSymbol("PUTF"), SubLObjectFactory.makeSymbol("RASSOC"), SubLObjectFactory.makeSymbol("RASSOC-IF"), SubLObjectFactory.makeSymbol("REMF"), SubLObjectFactory.makeSymbol("REST"), SubLObjectFactory.makeSymbol("REVAPPEND"), SubLObjectFactory.makeSymbol("SECOND"), SubLObjectFactory.makeSymbol("SET-DIFFERENCE"), SubLObjectFactory.makeSymbol("SET-EXCLUSIVE-OR"), SubLObjectFactory.makeSymbol("SEVENTH"), SubLObjectFactory.makeSymbol("SIXTH"), SubLObjectFactory.makeSymbol("SUBLIS"), SubLObjectFactory.makeSymbol("SUBSETP"), SubLObjectFactory.makeSymbol("SUBST"), SubLObjectFactory.makeSymbol("SUBST-IF"), SubLObjectFactory.makeSymbol("S#57638", "CYC"), SubLObjectFactory.makeSymbol("TAILP"), SubLObjectFactory.makeSymbol("TENTH"), SubLObjectFactory.makeSymbol("THIRD"), SubLObjectFactory.makeSymbol("TREE-EQUAL"), SubLObjectFactory.makeSymbol("UNION"), SubLObjectFactory.makeSymbol("S#57639", "CYC") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("foreign"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DECLARE-FOREIGN-SHARED-LIBRARY", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("DEFINE-FOREIGN-FUNCTION-INTERNAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("ENSURE-FOREIGN-SHARED-LIBRARY-LOADED", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("FOREIGN-SHARED-LIBRARY-INSTALLED?", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("VECTOR-FOR-MARSHALLING", "SUBLISP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("hashtables_high"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-P"), (SubLObject)SubLObjectFactory.makeSymbol("MAKE-HASH-TABLE-ITERATOR"), (SubLObject)SubLObjectFactory.makeSymbol("DESTROY-HASH-TABLE-ITERATOR"), (SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-HASH-TABLE"), (SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-DONE-P"), (SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-KEY"), (SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-NEXT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("math_utilities"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BELLEROPHON", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("FLONUM-DIGIT-LIST", "SUBLISP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRIN1"), (SubLObject)SubLObjectFactory.makeSymbol("PRIN1-TO-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("PRINC"), (SubLObject)SubLObjectFactory.makeSymbol("PRINC-TO-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("PRINT"), (SubLObject)SubLObjectFactory.makeSymbol("PRINT-OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("random"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RANDOM"), (SubLObject)SubLObjectFactory.makeSymbol("SEED-RANDOM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("COPY-READTABLE"), SubLObjectFactory.makeSymbol("GET-DISPATCH-MACRO-CHARACTER"), SubLObjectFactory.makeSymbol("GET-MACRO-CHARACTER"), SubLObjectFactory.makeSymbol("MAKE-DISPATCH-MACRO-CHARACTER"), SubLObjectFactory.makeSymbol("PARSE-INTEGER"), SubLObjectFactory.makeSymbol("READ"), SubLObjectFactory.makeSymbol("READ-DELIMITED-LIST"), SubLObjectFactory.makeSymbol("READ-FROM-STRING"), SubLObjectFactory.makeSymbol("READ-FROM-STRING-IGNORING-ERRORS"), SubLObjectFactory.makeSymbol("READ-IGNORING-ERRORS"), SubLObjectFactory.makeSymbol("READ-PRESERVING-WHITESPACE"), SubLObjectFactory.makeSymbol("READTABLE-CASE"), SubLObjectFactory.makeSymbol("READTABLEP"), SubLObjectFactory.makeSymbol("READTABLE-P", "SUBLISP"), SubLObjectFactory.makeSymbol("SET-DISPATCH-MACRO-CHARACTER"), SubLObjectFactory.makeSymbol("SET-MACRO-CHARACTER"), SubLObjectFactory.makeSymbol("SET-SYNTAX-FROM-CHAR"), SubLObjectFactory.makeSymbol("SIMPLE-READER-ERROR"), SubLObjectFactory.makeSymbol("END-OF-FILE-ERROR", "SUBLISP"), SubLObjectFactory.makeSymbol("SINGLE-ESCAPE-SYNTAXP", "SUBLISP"), SubLObjectFactory.makeSymbol("SYMBOL-ESCAPEP", "SUBLISP"), SubLObjectFactory.makeSymbol("WHITESPACE-1-CHAR-P", "SUBLISP"), SubLObjectFactory.makeSymbol("WHITESPACE-2-CHAR-P", "SUBLISP"), SubLObjectFactory.makeSymbol("BQ-CONS"), SubLObjectFactory.makeSymbol("BQ-VECTOR") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("cdestructuring_bind"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDESTRUCTURING-BIND-ERROR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("DESTRUCTURING-BIND-MUST-CONSP", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("DESTRUCTURING-BIND-MUST-LISTP", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("PROPERTY-LIST-MEMBER", "SUBLISP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("visitation"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VISIT-DEFSTRUCT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("streams_high"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("BROADCAST-STREAM-STREAMS"), SubLObjectFactory.makeSymbol("CLEAR-INPUT"), SubLObjectFactory.makeSymbol("CLEAR-OUTPUT"), SubLObjectFactory.makeSymbol("CLOSE"), SubLObjectFactory.makeSymbol("CONCATENATED-STREAM-STREAMS"), SubLObjectFactory.makeSymbol("ECHO-STREAM-INPUT-STREAM"), SubLObjectFactory.makeSymbol("ECHO-STREAM-OUTPUT-STREAM"), SubLObjectFactory.makeSymbol("FILE-LENGTH"), SubLObjectFactory.makeSymbol("FILE-POSITION"), SubLObjectFactory.makeSymbol("FILE-STRING-LENGTH"), SubLObjectFactory.makeSymbol("FINISH-OUTPUT"), SubLObjectFactory.makeSymbol("FORCE-OUTPUT"), SubLObjectFactory.makeSymbol("FRESH-LINE"), SubLObjectFactory.makeSymbol("GET-OUTPUT-STREAM-STRING"), SubLObjectFactory.makeSymbol("INPUT-STREAM-P"), SubLObjectFactory.makeSymbol("INTERACTIVE-STREAM-P"), SubLObjectFactory.makeSymbol("LISTEN"), SubLObjectFactory.makeSymbol("MAKE-BROADCAST-STREAM"), SubLObjectFactory.makeSymbol("MAKE-CONCATENATED-STREAM"), SubLObjectFactory.makeSymbol("MAKE-ECHO-STREAM"), SubLObjectFactory.makeSymbol("MAKE-PRIVATE-BROADCAST-STREAM"), SubLObjectFactory.makeSymbol("MAKE-PRIVATE-CONCATENATED-STREAM"), SubLObjectFactory.makeSymbol("MAKE-PRIVATE-ECHO-STREAM"), SubLObjectFactory.makeSymbol("MAKE-PRIVATE-STRING-INPUT-STREAM"), SubLObjectFactory.makeSymbol("MAKE-PRIVATE-STRING-OUTPUT-STREAM"), SubLObjectFactory.makeSymbol("MAKE-PRIVATE-SYNONYM-STREAM"), SubLObjectFactory.makeSymbol("MAKE-PRIVATE-TWO-WAY-STREAM"), SubLObjectFactory.makeSymbol("MAKE-STRING-INPUT-STREAM"), SubLObjectFactory.makeSymbol("MAKE-STRING-OUTPUT-STREAM"), SubLObjectFactory.makeSymbol("MAKE-SYNONYM-STREAM"), SubLObjectFactory.makeSymbol("MAKE-TWO-WAY-STREAM"), SubLObjectFactory.makeSymbol("OPEN-STREAM-P"), SubLObjectFactory.makeSymbol("OUTPUT-STREAM-P"), SubLObjectFactory.makeSymbol("PEEK-CHAR"), SubLObjectFactory.makeSymbol("READ-BYTE"), SubLObjectFactory.makeSymbol("READ-CHAR"), SubLObjectFactory.makeSymbol("READ-CHAR-NO-HANG"), SubLObjectFactory.makeSymbol("READ-LINE"), SubLObjectFactory.makeSymbol("READ-SEQUENCE"), SubLObjectFactory.makeSymbol("STREAM-ELEMENT-TYPE"), SubLObjectFactory.makeSymbol("SYNONYM-STREAM-SYMBOL"), SubLObjectFactory.makeSymbol("TERPRI"), SubLObjectFactory.makeSymbol("TWO-WAY-STREAM-INPUT-STREAM"), SubLObjectFactory.makeSymbol("TWO-WAY-STREAM-OUTPUT-STREAM"), SubLObjectFactory.makeSymbol("UNREAD-CHAR"), SubLObjectFactory.makeSymbol("WRITE-BYTE"), SubLObjectFactory.makeSymbol("WRITE-CHAR"), SubLObjectFactory.makeSymbol("WRITE-LINE"), SubLObjectFactory.makeSymbol("WRITE-SEQUENCE"), SubLObjectFactory.makeSymbol("WRITE-STRING"), SubLObjectFactory.makeSymbol("STREAM-LINE-COLUMN", "SUBLISP") })) });
    }
    
    private static SubLObject _constant_4_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("open"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57152", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&REST"), (SubLObject)SubLObjectFactory.makeSymbol("S#8831", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56691", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeBoolean"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#671", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57160", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeInteger"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57640", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57161", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeChar"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#1546", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57162", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeInteger"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIXNUM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57163", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeDouble"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOAT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57164", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeGuid"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57165", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeSymbol"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57166", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeKeyword"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57167", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeUninternedSymbol"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57169", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeString"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57170", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("makeSymbol"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("PACKAGE-NAME"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56683", "CYC"), (SubLObject)SubLObjectFactory.makeString("SubLNil"), (SubLObject)SubLObjectFactory.makeString("toBool"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#671", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56677", "CYC"), (SubLObject)SubLObjectFactory.makeString("Symbols"), (SubLObject)SubLObjectFactory.makeString("symbol_value"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#54", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57641", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("getResult"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57642", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57643", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("getTarget"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57642", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%HASH-INDEX-KEY", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("hash_index_key"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#705", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#134", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%HASH-INDEX-OBJ", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("hash_index_obj"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#705", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#134", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56678", "CYC"), (SubLObject)SubLObjectFactory.makeString("Symbols"), (SubLObject)SubLObjectFactory.makeString("symbol_value"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#54", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56688", "CYC"), (SubLObject)SubLObjectFactory.makeString("SubLProcess"), (SubLObject)SubLObjectFactory.makeString("nthMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#770", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56722", "CYC"), (SubLObject)SubLObjectFactory.makeString("SubLSpecialOperatorDeclarations"), (SubLObject)SubLObjectFactory.makeString("proclaim"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57237", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%NEXT-HASH-INDEX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("next_hash_index"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#705", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#134", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-NOT-READABLE"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("print_not_readable"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57241", "CYC"), (SubLObject)SubLObjectFactory.makeString("Symbols"), (SubLObject)SubLObjectFactory.makeString("set"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#54", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#704", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57242", "CYC"), (SubLObject)SubLObjectFactory.makeString("Symbols"), (SubLObject)SubLObjectFactory.makeString("set"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#54", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#704", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%GET-INITIAL-CONTINUATION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Eval"), (SubLObject)SubLObjectFactory.makeString("get_initial_continuation"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%GET-RED-OBJECT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("SubLMain"), (SubLObject)SubLObjectFactory.makeString("get_red_object"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%SET-INITIAL-CONTINUATION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Eval"), (SubLObject)SubLObjectFactory.makeString("set_initial_continuation"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57247", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIEN-AS-STRING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Alien"), (SubLObject)SubLObjectFactory.makeString("alien_as_string"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIEN-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Alien"), (SubLObject)SubLObjectFactory.makeString("alien_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CIRCULAR-REFERENCE-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("circular_reference_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-FOREIGN-FUNCTION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Alien"), (SubLObject)SubLObjectFactory.makeString("def_foreign_function"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57248", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57249", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"), (SubLObject)SubLObjectFactory.makeSymbol("S#57250", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57251", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57252", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57253", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-CLOSE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_close"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("ABORT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-FILE-LENGTH", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_file_length"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-NEXT-INPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_next_input_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("S#57254", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-SEND-OUTPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_send_output_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-SET-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_set_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("S#57255", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-CLOSE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_close"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("ABORT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-FILE-LENGTH", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_file_length"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-NEXT-INPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_next_input_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("S#57254", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-SEND-OUTPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_send_output_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-SET-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_set_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("S#57255", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-TIME", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Time"), (SubLObject)SubLObjectFactory.makeString("get_time"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-TIMEZONE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Time"), (SubLObject)SubLObjectFactory.makeString("get_timezone"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("S#54195", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57644", "CYC"), (SubLObject)SubLObjectFactory.makeString("Time"), (SubLObject)SubLObjectFactory.makeString("compute_with_process_resource_tracking_results"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56730", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOAD-SHARED-OBJECT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Alien"), (SubLObject)SubLObjectFactory.makeString("load_shared_object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#6704", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("PATHNAME"), (SubLObject)SubLObjectFactory.makeSymbol("S#6511", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN-DESCRIPTOR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("open_descriptor"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57152", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#5432", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6891", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57265", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57266", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57267", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POINTER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Equality"), (SubLObject)SubLObjectFactory.makeString("pointer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-CHARACTER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_functions"), (SubLObject)SubLObjectFactory.makeString("print_character"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-CONS-CELLS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_functions"), (SubLObject)SubLObjectFactory.makeString("print_cons_cells"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-FLONUM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_functions"), (SubLObject)SubLObjectFactory.makeString("print_flonum"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57271", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-FUNCTION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("print_function"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-HASHTABLE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_functions"), (SubLObject)SubLObjectFactory.makeString("print_hashtable"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57645", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-INTEGER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_functions"), (SubLObject)SubLObjectFactory.makeString("print_integer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTEGER"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-SYMBOL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_functions"), (SubLObject)SubLObjectFactory.makeString("print_symbol"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-STRING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_functions"), (SubLObject)SubLObjectFactory.makeString("print_string"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-VECTOR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_functions"), (SubLObject)SubLObjectFactory.makeString("print_vector"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VECTOR"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RELEASE-LOCK", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Locks"), (SubLObject)SubLObjectFactory.makeString("release_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#672", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEIZE-LOCK", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Locks"), (SubLObject)SubLObjectFactory.makeString("seize_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#672", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-INPUT-INDEX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("streams_high"), (SubLObject)SubLObjectFactory.makeString("stream_input_index"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-BYTE-SEQUENCE-TO-POSITIVE-INTEGER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("streams_high"), (SubLObject)SubLObjectFactory.makeString("read_byte_sequence_to_positive_integer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57646", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("S#57647", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57648", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57649", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-POSITIVE-INTEGER-TO-BYTE-SEQUENCE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("streams_high"), (SubLObject)SubLObjectFactory.makeString("write_positive_integer_as_byte_sequence"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57650", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57646", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("S#57649", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-BYTE-SEQUENCE-INTO-STRING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("streams_high"), (SubLObject)SubLObjectFactory.makeString("read_byte_sequence_into_string"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("S#57647", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57648", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-STRING-TO-BYTE-SEQUENCE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("streams_high"), (SubLObject)SubLObjectFactory.makeString("write_string_to_byte_sequence"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("S#35177", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNREAD-BYTE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("streams_high"), (SubLObject)SubLObjectFactory.makeString("unread_byte"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BYTE"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57651", "CYC"), (SubLObject)SubLObjectFactory.makeString("Processes"), (SubLObject)SubLObjectFactory.makeString("external_processes_supportedP"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57626", "CYC"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("bignump"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEANP"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("booleanp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READER-WRITER-LOCK-P"), (SubLObject)SubLObjectFactory.makeString("ReadWriteLocks"), (SubLObject)SubLObjectFactory.makeString("rw_lock_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57652", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RW-LOCK-P"), (SubLObject)SubLObjectFactory.makeString("ReadWriteLocks"), (SubLObject)SubLObjectFactory.makeString("rw_lock_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57652", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-RW-LOCK"), (SubLObject)SubLObjectFactory.makeString("ReadWriteLocks"), (SubLObject)SubLObjectFactory.makeString("new_rw_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#29", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RW-LOCK-NAME"), (SubLObject)SubLObjectFactory.makeString("ReadWriteLocks"), (SubLObject)SubLObjectFactory.makeString("rw_lock_name"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3022", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RW-LOCK-SEIZE-READ-LOCK"), (SubLObject)SubLObjectFactory.makeString("ReadWriteLocks"), (SubLObject)SubLObjectFactory.makeString("rw_lock_seize_read_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3022", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RW-LOCK-SEIZE-WRITE-LOCK"), (SubLObject)SubLObjectFactory.makeString("ReadWriteLocks"), (SubLObject)SubLObjectFactory.makeString("rw_lock_seize_write_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3022", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RW-LOCK-RELEASE-READ-LOCK"), (SubLObject)SubLObjectFactory.makeString("ReadWriteLocks"), (SubLObject)SubLObjectFactory.makeString("rw_lock_release_read_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3022", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RW-LOCK-RELEASE-WRITE-LOCK"), (SubLObject)SubLObjectFactory.makeString("ReadWriteLocks"), (SubLObject)SubLObjectFactory.makeString("rw_lock_release_write_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3022", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMAPHORE-P"), (SubLObject)SubLObjectFactory.makeString("Semaphores"), (SubLObject)SubLObjectFactory.makeString("semaphore_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-SEMAPHORE"), (SubLObject)SubLObjectFactory.makeString("Semaphores"), (SubLObject)SubLObjectFactory.makeString("new_semaphore"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#29", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("COUNT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMAPHORE-NAME"), (SubLObject)SubLObjectFactory.makeString("Semaphores"), (SubLObject)SubLObjectFactory.makeString("semaphore_name"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5854", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMAPHORE-SIGNAL"), (SubLObject)SubLObjectFactory.makeString("Semaphores"), (SubLObject)SubLObjectFactory.makeString("semaphore_signal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5854", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMAPHORE-CURRENT-COUNT"), (SubLObject)SubLObjectFactory.makeString("Semaphores"), (SubLObject)SubLObjectFactory.makeString("semaphore_current_count"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5854", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMAPHORE-WAIT"), (SubLObject)SubLObjectFactory.makeString("Semaphores"), (SubLObject)SubLObjectFactory.makeString("semaphore_wait"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5854", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMAPHORE-DRAIN"), (SubLObject)SubLObjectFactory.makeString("Semaphores"), (SubLObject)SubLObjectFactory.makeString("semaphore_drain"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5854", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMAPHORE-WAIT-WITH-TIMEOUT"), (SubLObject)SubLObjectFactory.makeString("Semaphores"), (SubLObject)SubLObjectFactory.makeString("semaphore_wait_with_timeout"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5854", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57653", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#765", "CYC"), (SubLObject)SubLObjectFactory.makeString("Sxhash"), (SubLObject)SubLObjectFactory.makeString("sxhash_rot"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIXNUM"), (SubLObject)SubLObjectFactory.makeSymbol("S#57654", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNLOAD-SHARED-OBJECT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Alien"), (SubLObject)SubLObjectFactory.makeString("unload_shared_object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATHNAME"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WIDE-NEWLINE-STREAM-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("wide_newline_stream_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMORY-MAPPED-STREAM-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("isMemoryMappedStream"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VALUES"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&REST"), (SubLObject)SubLObjectFactory.makeSymbol("S#57655", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56689", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("resetMultipleValues"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57656", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("arg2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57233", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("multiple_value_list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#63", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57657", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("nth_value_step_1"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#770", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57658", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("nth_value_step_2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#770", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#63", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EXTERNAL-PROCESSES-SUPPORTED?", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Processes"), (SubLObject)SubLObjectFactory.makeString("external_processes_supportedP"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-EXTERNAL-PROCESS-STATUS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Processes"), (SubLObject)SubLObjectFactory.makeString("get_external_process_status"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57257", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("S#57258", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KILL-EXTERNAL-PROCESS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Processes"), (SubLObject)SubLObjectFactory.makeString("kill_external_process"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57257", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RUN-EXTERNAL-PROCESS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Processes"), (SubLObject)SubLObjectFactory.makeString("run_external_process"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5951", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("S#105", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57275", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57276", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57277", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CANONICAL-NULL-FILE-STREAM-PATH", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Filesys"), (SubLObject)SubLObjectFactory.makeString("canonical_null_file_stream_path"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57659", "CYC"), (SubLObject)SubLObjectFactory.makeString("SubLProcess"), (SubLObject)SubLObjectFactory.makeString("currentSubLThread"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57452", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("resetMultipleValues"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57660", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("firstMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57661", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("secondMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57662", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("thirdMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57663", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("fourthMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57664", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("fifthMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57665", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("sixthMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57666", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("seventhMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57667", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("eighthMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57451", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("nthMultipleValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5845", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#770", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_STRUCTURES-BAG-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("structures_bag_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#9941", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_NEW-STRUCTURE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("new_structure"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("S#1534", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CLEAR-STRUCTURE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("clear_structure"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#1534", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CLEAR-SUB-STRUCTURE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("clear_sub_structure"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#1534", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_STRUCTURE-TYPE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("structure_type"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_STRUCTURE-SLOT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("structure_slot"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#52297", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_SET-STRUCTURE-SLOT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("set_structure_slot"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#52297", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_REGISTER-DEFSTRUCT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("register_defstruct"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#29", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("S#1534", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57280", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#4498", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_DEF-CSETF", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("def_csetf"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56704", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#4502", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57668", "CYC"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("makeStructDeclNative"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CLASS"), SubLObjectFactory.makeSymbol("TYPE"), SubLObjectFactory.makeSymbol("S#717", "CYC"), SubLObjectFactory.makeSymbol("S#4498", "CYC"), SubLObjectFactory.makeSymbol("S#57669", "CYC"), SubLObjectFactory.makeSymbol("S#57670", "CYC"), SubLObjectFactory.makeSymbol("S#57671", "CYC"), SubLObjectFactory.makeSymbol("S#57672", "CYC"), SubLObjectFactory.makeSymbol("S#57673", "CYC") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_METHOD", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("method_func"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57279", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_REGISTER-METHOD", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("register_method"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57279", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57674", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("handleCatchableThrow"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57675", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#150", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57676", "CYC"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("getEntrySetIterator"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#705", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57677", "CYC"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("iteratorHasNext"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5090", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57678", "CYC"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("iteratorNextEntry"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5090", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57679", "CYC"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("getEntryKey"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#8600", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57680", "CYC"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("getEntryValue"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#8600", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57681", "CYC"), (SubLObject)SubLObjectFactory.makeString("Hashtables"), (SubLObject)SubLObjectFactory.makeString("releaseEntrySetIterator"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5090", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57682", "CYC"), (SubLObject)SubLObjectFactory.makeString("Packages"), (SubLObject)SubLObjectFactory.makeString("makeSymbolIterator"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57683", "CYC"), (SubLObject)SubLObjectFactory.makeString("Packages"), (SubLObject)SubLObjectFactory.makeString("symbolIteratorHasNext"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5090", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57684", "CYC"), (SubLObject)SubLObjectFactory.makeString("Packages"), (SubLObject)SubLObjectFactory.makeString("symbolIteratorNext"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#5090", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57685", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("currentBinding"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#54", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57157", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("bind"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#54", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#3890", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57238", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("rebind"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#54", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#7128", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57686", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("extract_dynamic_values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57687", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57688", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("bind_dynamic_vars"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57687", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#713", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57689", "CYC"), (SubLObject)SubLObjectFactory.makeString("Dynamic"), (SubLObject)SubLObjectFactory.makeString("rebind_dynamic_vars"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57687", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57690", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_JRTL-PARSE-INTEGER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("jrtl_parse_integer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("S#124", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#125", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57268", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("START-TCP-SERVER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Tcp"), (SubLObject)SubLObjectFactory.makeString("start_tcp_server"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#58", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#1755", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("START-TCP-SERVER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Tcp"), (SubLObject)SubLObjectFactory.makeString("stop_tcp_server"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#58", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57691", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("handleRuntimeException"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57692", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57693", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("handleThrowable"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57694", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#150", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57644", "CYC"), (SubLObject)SubLObjectFactory.makeString("Time"), (SubLObject)SubLObjectFactory.makeString("compute_with_process_resource_tracking_results"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57156", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STATIC-AREA"), (SubLObject)SubLObjectFactory.makeString("Storage"), (SubLObject)SubLObjectFactory.makeString("get_static_area"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-THREAD-PRIVATE-AREA"), (SubLObject)SubLObjectFactory.makeString("Storage"), (SubLObject)SubLObjectFactory.makeString("get_thread_private_area"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-WORKING-AREA"), (SubLObject)SubLObjectFactory.makeString("Storage"), (SubLObject)SubLObjectFactory.makeString("get_working_area"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-CASE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("_csetf_readtable_case"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-CHARACTER-SYNTAX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("_csetf_readtable_character_syntax"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-SINGLE-BYTE-CHAR-SYNTAX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("_csetf_readtable_single_byte_char_syntax"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-MACRO-FUNCTIONS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("_csetf_readtable_macro_functions"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-SINGLE-BYTE-MACRO-FUNCTIONS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("_csetf_readtable_single_byte_macro_functions"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-CONSTITUENT-TRAITS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("_csetf_readtable_constituent_traits"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-SINGLE-BYTE-CONSTIT-TRAITS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("_csetf_readtable_single_byte_constit_traits"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-DISPATCH-TABLES", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("_csetf_readtable_dispatch_tables"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#154", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#132", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IS-REGEX-IMPLEMENTATION-AVAILABLE?", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Regex"), (SubLObject)SubLObjectFactory.makeString("is_regex_implementation_availableP"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REGEX-VERSION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Regex"), (SubLObject)SubLObjectFactory.makeString("regex_version"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REGEX-PATTERN-P-IMPL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Regex"), (SubLObject)SubLObjectFactory.makeString("regex_pattern_p_impl"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#32", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPILE-REGULAR-EXPRESSION-IMPL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Regex"), (SubLObject)SubLObjectFactory.makeString("compile_regular_expression_impl"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#63", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57695", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MATCH-REGULAR-EXPRESSION-PATTERN-OFFSETS-IMPL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Regex"), (SubLObject)SubLObjectFactory.makeString("match_regular_expression_pattern_offsets_impl"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#32", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeSymbol("S#57696", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57695", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#124", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#125", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISCARD-REGULAR-EXPRESSION-PATTERN-IMPL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Regex"), (SubLObject)SubLObjectFactory.makeString("discard_regular_expression_pattern_impl"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#32", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-REGEX-ERRORMSG", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Regex"), (SubLObject)SubLObjectFactory.makeString("get_regex_errormsg"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#1546", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57697", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("unimplementedMethod"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#29", "CYC"))) });
    }
    
    private static SubLObject _constant_7_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57063", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("add"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57560", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("add"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57698", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57562", "CYC"), (SubLObject)SubLObjectFactory.makeString("ConsesLow"), (SubLObject)SubLObjectFactory.makeString("append"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#719", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57563", "CYC"), (SubLObject)SubLObjectFactory.makeString("ConsesLow"), (SubLObject)SubLObjectFactory.makeString("append"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#719", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57699", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57564", "CYC"), (SubLObject)SubLObjectFactory.makeString("ConsesLow"), (SubLObject)SubLObjectFactory.makeString("append"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#719", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57699", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57700", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57565", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("apply"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#168", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57566", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("apply"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#168", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57701", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("sublisp_break"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57568", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("cerror"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57702", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57569", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("cerror"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57702", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57570", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("cerror"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57702", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57571", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("cerror"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57702", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6053", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57567", "CYC"), (SubLObject)SubLObjectFactory.makeString("Sequences"), (SubLObject)SubLObjectFactory.makeString("cconcatenate"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57703", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57704", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57067", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("divide"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57572", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("error"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57573", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("error"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57574", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("error"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57575", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("error"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6053", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57576", "CYC"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("sublisp_false"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57577", "CYC"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("sublisp_false"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#202", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57578", "CYC"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("sublisp_false"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57579", "CYC"), (SubLObject)SubLObjectFactory.makeString("PrintLow"), (SubLObject)SubLObjectFactory.makeString("format"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57705", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#200", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57580", "CYC"), (SubLObject)SubLObjectFactory.makeString("PrintLow"), (SubLObject)SubLObjectFactory.makeString("format"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57705", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#200", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57581", "CYC"), (SubLObject)SubLObjectFactory.makeString("PrintLow"), (SubLObject)SubLObjectFactory.makeString("format"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57705", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#200", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57069", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("funcall"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57070", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("funcall"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57071", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("funcall"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57582", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("funcall"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6053", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57583", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("funcall"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6053", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6054", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57584", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("funcall"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6053", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6054", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#25436", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57585", "CYC"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("funcall"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6053", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6054", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#25436", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#25437", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57066", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("invert"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#1993", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57594", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("listS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57706", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57595", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("listS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57706", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57596", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("listS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57706", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57597", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("listS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57706", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57598", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("listS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57708", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57706", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57599", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("listS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57708", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57709", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57706", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57586", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57587", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57588", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57589", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57708", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57590", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57708", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57709", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57591", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57708", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57709", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57710", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57592", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57708", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57709", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57710", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57711", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57593", "CYC"), (SubLObject)SubLObjectFactory.makeKeyword("IMPORTED"), (SubLObject)SubLObjectFactory.makeString("list"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#34610", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#34611", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57707", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57708", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57709", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57710", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57711", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57712", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57600", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("logand"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57713", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57714", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57601", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("logior"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57713", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57714", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57602", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("logior"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57713", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57714", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57715", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57603", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("logxor"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57713", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57714", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57604", "CYC"), (SubLObject)SubLObjectFactory.makeString("Mapping"), (SubLObject)SubLObjectFactory.makeString("mapcar"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#37217", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("LIST"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57072", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("max"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57073", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("min"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57064", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("minus"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#1993", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57062", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("multiply"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57559", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("multiply"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57698", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57605", "CYC"), (SubLObject)SubLObjectFactory.makeString("ConsesLow"), (SubLObject)SubLObjectFactory.makeString("nconc"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#719", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57606", "CYC"), (SubLObject)SubLObjectFactory.makeString("ConsesLow"), (SubLObject)SubLObjectFactory.makeString("nconc"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#719", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57699", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57607", "CYC"), (SubLObject)SubLObjectFactory.makeString("Strings"), (SubLObject)SubLObjectFactory.makeString("stringLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57283", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57284", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57065", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("subtract"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57561", "CYC"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("subtract"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57074", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57075", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57698", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57608", "CYC"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("sublisp_true"), (SubLObject)module0818.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57609", "CYC"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("sublisp_true"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#202", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57610", "CYC"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("sublisp_true"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57611", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3843", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57612", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3843", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57716", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57613", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3843", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57716", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57717", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57614", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3843", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57716", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57717", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57718", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57615", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3843", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57716", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57717", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57719", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57616", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3843", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57716", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57717", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57719", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57720", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57617", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3843", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57716", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57717", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57719", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57720", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57721", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57618", "CYC"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("values"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#3843", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57716", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57717", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57718", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57719", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57720", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57721", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#57722", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57619", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("warn"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57620", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("warn"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57621", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("warn"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57622", "CYC"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("warn"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#159", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#750", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#751", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#6053", "CYC"))) });
    }
    
    private static SubLObject _constant_30_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.cons((SubLObject)module0818.T, (SubLObject)SubLObjectFactory.makeString("T")), ConsesLow.cons((SubLObject)module0818.NIL, (SubLObject)SubLObjectFactory.makeString("NIL")), ConsesLow.cons((SubLObject)module0818.EQ, (SubLObject)SubLObjectFactory.makeString("EQ")), ConsesLow.cons((SubLObject)module0818.EQL, (SubLObject)SubLObjectFactory.makeString("EQL")), ConsesLow.cons((SubLObject)module0818.EQUAL, (SubLObject)SubLObjectFactory.makeString("EQUAL")), ConsesLow.cons((SubLObject)module0818.EQUALP, (SubLObject)SubLObjectFactory.makeString("EQUALP")), ConsesLow.cons((SubLObject)module0818.IDENTITY, (SubLObject)SubLObjectFactory.makeString("IDENTITY")), ConsesLow.cons((SubLObject)module0818.MINUS_ONE_INTEGER, (SubLObject)SubLObjectFactory.makeString("MINUS_ONE_INTEGER")), ConsesLow.cons((SubLObject)module0818.ZERO_INTEGER, (SubLObject)SubLObjectFactory.makeString("ZERO_INTEGER")), ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeString("ONE_INTEGER")), ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeString("TWO_INTEGER")), ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeString("THREE_INTEGER")), ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeString("FOUR_INTEGER")), ConsesLow.cons((SubLObject)module0818.FIVE_INTEGER, (SubLObject)SubLObjectFactory.makeString("FIVE_INTEGER")), ConsesLow.cons((SubLObject)module0818.SIX_INTEGER, (SubLObject)SubLObjectFactory.makeString("SIX_INTEGER")), ConsesLow.cons((SubLObject)module0818.SEVEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("SEVEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.EIGHT_INTEGER, (SubLObject)SubLObjectFactory.makeString("EIGHT_INTEGER")), ConsesLow.cons((SubLObject)module0818.NINE_INTEGER, (SubLObject)SubLObjectFactory.makeString("NINE_INTEGER")), ConsesLow.cons((SubLObject)module0818.TEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("TEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.ELEVEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("ELEVEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.TWELVE_INTEGER, (SubLObject)SubLObjectFactory.makeString("TWELVE_INTEGER")), ConsesLow.cons((SubLObject)module0818.THIRTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("THIRTEEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.FOURTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("FOURTEEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.FIFTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("FIFTEEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.SIXTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("SIXTEEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.SEVENTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("SEVENTEEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.EIGHTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("EIGHTEEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.NINETEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("NINETEEN_INTEGER")), ConsesLow.cons((SubLObject)module0818.TWENTY_INTEGER, (SubLObject)SubLObjectFactory.makeString("TWENTY_INTEGER")), ConsesLow.cons((SubLObject)Characters.CHAR_null, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_null")), ConsesLow.cons((SubLObject)Characters.CHAR_backspace, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_backspace")), ConsesLow.cons((SubLObject)Characters.CHAR_tab, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_tab")), ConsesLow.cons((SubLObject)Characters.CHAR_newline, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_newline")), ConsesLow.cons((SubLObject)Characters.CHAR_return, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_return")), ConsesLow.cons((SubLObject)Characters.CHAR_page, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_page")), ConsesLow.cons((SubLObject)Characters.CHAR_escape, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_escape")), ConsesLow.cons((SubLObject)Characters.CHAR_space, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_space")), ConsesLow.cons((SubLObject)Characters.CHAR_exclamation, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_exclamation")), ConsesLow.cons((SubLObject)Characters.CHAR_quotation, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_quotation")), ConsesLow.cons((SubLObject)Characters.CHAR_hash, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_hash")), ConsesLow.cons((SubLObject)Characters.CHAR_dollar, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_dollar")), ConsesLow.cons((SubLObject)Characters.CHAR_percent, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_percent")), ConsesLow.cons((SubLObject)Characters.CHAR_ampersand, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_ampersand")), ConsesLow.cons((SubLObject)Characters.CHAR_quote, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_quote")), ConsesLow.cons((SubLObject)Characters.CHAR_lparen, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_lparen")), ConsesLow.cons((SubLObject)Characters.CHAR_rparen, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_rparen")), ConsesLow.cons((SubLObject)Characters.CHAR_asterisk, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_asterisk")), ConsesLow.cons((SubLObject)Characters.CHAR_plus, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_plus")), ConsesLow.cons((SubLObject)Characters.CHAR_comma, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_comma")), ConsesLow.cons((SubLObject)Characters.CHAR_hyphen, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_hyphen")), ConsesLow.cons((SubLObject)Characters.CHAR_period, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_period")), ConsesLow.cons((SubLObject)Characters.CHAR_slash, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_slash")), ConsesLow.cons((SubLObject)Characters.CHAR_0, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_0")), ConsesLow.cons((SubLObject)Characters.CHAR_1, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_1")), ConsesLow.cons((SubLObject)Characters.CHAR_2, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_2")), ConsesLow.cons((SubLObject)Characters.CHAR_3, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_3")), ConsesLow.cons((SubLObject)Characters.CHAR_4, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_4")), ConsesLow.cons((SubLObject)Characters.CHAR_5, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_5")), ConsesLow.cons((SubLObject)Characters.CHAR_6, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_6")), ConsesLow.cons((SubLObject)Characters.CHAR_7, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_7")), ConsesLow.cons((SubLObject)Characters.CHAR_8, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_8")), ConsesLow.cons((SubLObject)Characters.CHAR_9, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_9")), ConsesLow.cons((SubLObject)Characters.CHAR_colon, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_colon")), ConsesLow.cons((SubLObject)Characters.CHAR_semicolon, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_semicolon")), ConsesLow.cons((SubLObject)Characters.CHAR_less, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_less")), ConsesLow.cons((SubLObject)Characters.CHAR_equal, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_equal")), ConsesLow.cons((SubLObject)Characters.CHAR_greater, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_greater")), ConsesLow.cons((SubLObject)Characters.CHAR_question, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_question")), ConsesLow.cons((SubLObject)Characters.CHAR_at, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_at")), ConsesLow.cons((SubLObject)Characters.CHAR_A, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_A")), ConsesLow.cons((SubLObject)Characters.CHAR_B, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_B")), ConsesLow.cons((SubLObject)Characters.CHAR_C, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_C")), ConsesLow.cons((SubLObject)Characters.CHAR_D, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_D")), ConsesLow.cons((SubLObject)Characters.CHAR_E, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_E")), ConsesLow.cons((SubLObject)Characters.CHAR_F, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_F")), ConsesLow.cons((SubLObject)Characters.CHAR_G, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_G")), ConsesLow.cons((SubLObject)Characters.CHAR_H, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_H")), ConsesLow.cons((SubLObject)Characters.CHAR_I, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_I")), ConsesLow.cons((SubLObject)Characters.CHAR_J, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_J")), ConsesLow.cons((SubLObject)Characters.CHAR_K, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_K")), ConsesLow.cons((SubLObject)Characters.CHAR_L, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_L")), ConsesLow.cons((SubLObject)Characters.CHAR_M, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_M")), ConsesLow.cons((SubLObject)Characters.CHAR_N, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_N")), ConsesLow.cons((SubLObject)Characters.CHAR_O, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_O")), ConsesLow.cons((SubLObject)Characters.CHAR_P, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_P")), ConsesLow.cons((SubLObject)Characters.CHAR_Q, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_Q")), ConsesLow.cons((SubLObject)Characters.CHAR_R, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_R")), ConsesLow.cons((SubLObject)Characters.CHAR_S, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_S")), ConsesLow.cons((SubLObject)Characters.CHAR_T, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_T")), ConsesLow.cons((SubLObject)Characters.CHAR_U, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_U")), ConsesLow.cons((SubLObject)Characters.CHAR_V, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_V")), ConsesLow.cons((SubLObject)Characters.CHAR_W, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_W")), ConsesLow.cons((SubLObject)Characters.CHAR_X, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_X")), ConsesLow.cons((SubLObject)Characters.CHAR_Y, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_Y")), ConsesLow.cons((SubLObject)Characters.CHAR_Z, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_Z")), ConsesLow.cons((SubLObject)Characters.CHAR_lbracket, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_lbracket")), ConsesLow.cons((SubLObject)Characters.CHAR_backslash, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_backslash")), ConsesLow.cons((SubLObject)Characters.CHAR_rbracket, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_rbracket")), ConsesLow.cons((SubLObject)Characters.CHAR_caret, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_caret")), ConsesLow.cons((SubLObject)Characters.CHAR_underbar, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_underbar")), ConsesLow.cons((SubLObject)Characters.CHAR_backquote, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_backquote")), ConsesLow.cons((SubLObject)Characters.CHAR_a, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_a")), ConsesLow.cons((SubLObject)Characters.CHAR_b, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_b")), ConsesLow.cons((SubLObject)Characters.CHAR_c, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_c")), ConsesLow.cons((SubLObject)Characters.CHAR_d, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_d")), ConsesLow.cons((SubLObject)Characters.CHAR_e, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_e")), ConsesLow.cons((SubLObject)Characters.CHAR_f, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_f")), ConsesLow.cons((SubLObject)Characters.CHAR_g, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_g")), ConsesLow.cons((SubLObject)Characters.CHAR_h, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_h")), ConsesLow.cons((SubLObject)Characters.CHAR_i, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_i")), ConsesLow.cons((SubLObject)Characters.CHAR_j, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_j")), ConsesLow.cons((SubLObject)Characters.CHAR_k, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_k")), ConsesLow.cons((SubLObject)Characters.CHAR_l, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_l")), ConsesLow.cons((SubLObject)Characters.CHAR_m, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_m")), ConsesLow.cons((SubLObject)Characters.CHAR_n, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_n")), ConsesLow.cons((SubLObject)Characters.CHAR_o, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_o")), ConsesLow.cons((SubLObject)Characters.CHAR_p, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_p")), ConsesLow.cons((SubLObject)Characters.CHAR_q, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_q")), ConsesLow.cons((SubLObject)Characters.CHAR_r, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_r")), ConsesLow.cons((SubLObject)Characters.CHAR_s, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_s")), ConsesLow.cons((SubLObject)Characters.CHAR_t, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_t")), ConsesLow.cons((SubLObject)Characters.CHAR_u, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_u")), ConsesLow.cons((SubLObject)Characters.CHAR_v, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_v")), ConsesLow.cons((SubLObject)Characters.CHAR_w, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_w")), ConsesLow.cons((SubLObject)Characters.CHAR_x, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_x")), ConsesLow.cons((SubLObject)Characters.CHAR_y, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_y")), ConsesLow.cons((SubLObject)Characters.CHAR_z, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_z")), ConsesLow.cons((SubLObject)Characters.CHAR_lbrace, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_lbrace")), ConsesLow.cons((SubLObject)Characters.CHAR_vertical, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_vertical")), ConsesLow.cons((SubLObject)Characters.CHAR_rbrace, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_rbrace")), ConsesLow.cons((SubLObject)Characters.CHAR_tilde, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_tilde")), ConsesLow.cons((SubLObject)Characters.CHAR_rubout, (SubLObject)SubLObjectFactory.makeString("Characters.CHAR_rubout")) });
    }
    
    public void declareFunctions() {
        f52418();
    }
    
    public void initializeVariables() {
        f52419();
    }
    
    public void runTopLevelForms() {
        f52420();
    }
    
    static {
        me = (SubLFile)new module0818();
        module0818.$g6475$ = null;
        module0818.$g6476$ = null;
        module0818.$g6477$ = null;
        module0818.$g6478$ = null;
        module0818.$g6479$ = null;
        module0818.$g6480$ = null;
        module0818.$g6481$ = null;
        module0818.$g6482$ = null;
        module0818.$g6483$ = null;
        module0818.$g6484$ = null;
        module0818.$g6485$ = null;
        module0818.$g6486$ = null;
        module0818.$g6487$ = null;
        module0818.$g6488$ = null;
        module0818.$g6489$ = null;
        module0818.$g6490$ = null;
        module0818.$g6491$ = null;
        module0818.$g6492$ = null;
        $ic0$ = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeString("abstract"), SubLObjectFactory.makeString("assert"), SubLObjectFactory.makeString("boolean"), SubLObjectFactory.makeString("break"), SubLObjectFactory.makeString("byte"), SubLObjectFactory.makeString("case"), SubLObjectFactory.makeString("catch"), SubLObjectFactory.makeString("char"), SubLObjectFactory.makeString("class"), SubLObjectFactory.makeString("const"), SubLObjectFactory.makeString("continue"), SubLObjectFactory.makeString("default"), SubLObjectFactory.makeString("do"), SubLObjectFactory.makeString("double"), SubLObjectFactory.makeString("else"), SubLObjectFactory.makeString("enum"), SubLObjectFactory.makeString("extends"), SubLObjectFactory.makeString("false"), SubLObjectFactory.makeString("final"), SubLObjectFactory.makeString("finally"), SubLObjectFactory.makeString("float"), SubLObjectFactory.makeString("for"), SubLObjectFactory.makeString("goto"), SubLObjectFactory.makeString("if"), SubLObjectFactory.makeString("implements"), SubLObjectFactory.makeString("import"), SubLObjectFactory.makeString("instanceof"), SubLObjectFactory.makeString("int"), SubLObjectFactory.makeString("interface"), SubLObjectFactory.makeString("long"), SubLObjectFactory.makeString("native"), SubLObjectFactory.makeString("new"), SubLObjectFactory.makeString("null"), SubLObjectFactory.makeString("package"), SubLObjectFactory.makeString("private"), SubLObjectFactory.makeString("protected"), SubLObjectFactory.makeString("public"), SubLObjectFactory.makeString("return"), SubLObjectFactory.makeString("short"), SubLObjectFactory.makeString("static"), SubLObjectFactory.makeString("strictfp"), SubLObjectFactory.makeString("super"), SubLObjectFactory.makeString("switch"), SubLObjectFactory.makeString("synchronized"), SubLObjectFactory.makeString("this"), SubLObjectFactory.makeString("throw"), SubLObjectFactory.makeString("throws"), SubLObjectFactory.makeString("transient"), SubLObjectFactory.makeString("true"), SubLObjectFactory.makeString("try"), SubLObjectFactory.makeString("void"), SubLObjectFactory.makeString("volatile"), SubLObjectFactory.makeString("while") });
        $ic1$ = _constant_1_initializer();
        $ic2$ = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLASS-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("S#2269", "CYC"));
        $ic3$ = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*"), (SubLObject)SubLObjectFactory.makeString("multiply")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)SubLObjectFactory.makeString("add")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("-"), (SubLObject)SubLObjectFactory.makeString("subtract")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("/"), (SubLObject)SubLObjectFactory.makeString("divide")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INT/"), (SubLObject)SubLObjectFactory.makeString("integerDivide")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIXNUM*"), (SubLObject)SubLObjectFactory.makeString("fixnumMultiply")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("/="), (SubLObject)SubLObjectFactory.makeString("numNE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("<"), (SubLObject)SubLObjectFactory.makeString("numL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("<="), (SubLObject)SubLObjectFactory.makeString("numLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("="), (SubLObject)SubLObjectFactory.makeString("numE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">"), (SubLObject)SubLObjectFactory.makeString("numG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">="), (SubLObject)SubLObjectFactory.makeString("numGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR/="), (SubLObject)SubLObjectFactory.makeString("charNE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR<"), (SubLObject)SubLObjectFactory.makeString("charL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR<="), (SubLObject)SubLObjectFactory.makeString("charLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR="), (SubLObject)SubLObjectFactory.makeString("charE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR>"), (SubLObject)SubLObjectFactory.makeString("charG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR>="), (SubLObject)SubLObjectFactory.makeString("charGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID/="), (SubLObject)SubLObjectFactory.makeString("guidNE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID<"), (SubLObject)SubLObjectFactory.makeString("guidL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID<="), (SubLObject)SubLObjectFactory.makeString("guidLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID="), (SubLObject)SubLObjectFactory.makeString("guidE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID>"), (SubLObject)SubLObjectFactory.makeString("guidG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID>="), (SubLObject)SubLObjectFactory.makeString("guidGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NULL"), (SubLObject)SubLObjectFactory.makeString("sublisp_null")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING/="), (SubLObject)SubLObjectFactory.makeString("stringNE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING<"), (SubLObject)SubLObjectFactory.makeString("stringL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING<="), (SubLObject)SubLObjectFactory.makeString("stringLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING="), (SubLObject)SubLObjectFactory.makeString("stringE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING>"), (SubLObject)SubLObjectFactory.makeString("stringG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING>="), (SubLObject)SubLObjectFactory.makeString("stringGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST*"), (SubLObject)SubLObjectFactory.makeString("listS")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BQ-LIST*"), (SubLObject)SubLObjectFactory.makeString("bq_listS")) });
        $ic4$ = _constant_4_initializer();
        $ic5$ = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#166", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&REST"), (SubLObject)SubLObjectFactory.makeSymbol("S#105", "CYC"));
        $ic6$ = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57062", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57559", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57063", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57560", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("-"), (SubLObject)ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57064", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57065", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57561", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("/"), (SubLObject)ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57066", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57067", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57562", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57563", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57564", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPLY"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57565", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57566", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CCONCATENATE"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57567", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CERROR"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57568", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57569", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57570", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FIVE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57571", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ERROR"), (SubLObject)ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57572", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57573", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57574", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57575", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FALSE"), (SubLObject)ConsesLow.cons((SubLObject)module0818.ZERO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57576", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57577", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57578", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57579", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57580", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57581", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCALL"), (SubLObject)ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57069", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57070", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57071", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57582", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FIVE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57583", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.SIX_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57584", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.SEVEN_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57585", "CYC"))), ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("LIST"), ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57586", "CYC")), ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57587", "CYC")), ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57588", "CYC")), ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57589", "CYC")), ConsesLow.cons((SubLObject)module0818.FIVE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57590", "CYC")), ConsesLow.cons((SubLObject)module0818.SIX_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57591", "CYC")), ConsesLow.cons((SubLObject)module0818.SEVEN_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57592", "CYC")), ConsesLow.cons((SubLObject)module0818.EIGHT_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57593", "CYC")) }), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST*"), (SubLObject)ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57594", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57595", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57596", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57597", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FIVE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57598", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.SIX_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57599", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGAND"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57600", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGIOR"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57601", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57602", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGXOR"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57603", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57604", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAX"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57072", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MIN"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57073", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NCONC"), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57605", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57606", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING<="), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57607", "CYC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TRUE"), (SubLObject)ConsesLow.cons((SubLObject)module0818.ZERO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57608", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57609", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57610", "CYC"))), ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("VALUES"), ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57611", "CYC")), ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57612", "CYC")), ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57613", "CYC")), ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57614", "CYC")), ConsesLow.cons((SubLObject)module0818.FIVE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57615", "CYC")), ConsesLow.cons((SubLObject)module0818.SIX_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57616", "CYC")), ConsesLow.cons((SubLObject)module0818.SEVEN_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57617", "CYC")), ConsesLow.cons((SubLObject)module0818.EIGHT_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57618", "CYC")) }), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)ConsesLow.cons((SubLObject)module0818.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57619", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57620", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57621", "CYC")), (SubLObject)ConsesLow.cons((SubLObject)module0818.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("S#57622", "CYC"))) });
        $ic7$ = _constant_7_initializer();
        $ic8$ = SubLObjectFactory.makeSymbol("S#56683", "CYC");
        $ic9$ = SubLObjectFactory.makeSymbol("S#56691", "CYC");
        $ic10$ = SubLObjectFactory.makeSymbol("S#57623", "CYC");
        $ic11$ = SubLObjectFactory.makeSymbol("NULL");
        $ic12$ = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#56848", "CYC"), (SubLObject)module0818.NIL);
        $ic13$ = SubLObjectFactory.makeSymbol("S#57624", "CYC");
        $ic14$ = SubLObjectFactory.makeSymbol("S#57625", "CYC");
        $ic15$ = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ATOM"), (SubLObject)SubLObjectFactory.makeString("isAtom")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57626", "CYC"), (SubLObject)SubLObjectFactory.makeString("isBignum")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHARACTERP"), (SubLObject)SubLObjectFactory.makeString("isChar")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONSP"), (SubLObject)SubLObjectFactory.makeString("isCons")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIXNUMP"), (SubLObject)SubLObjectFactory.makeString("isFixnum")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOATP"), (SubLObject)SubLObjectFactory.makeString("isDouble")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION-SPEC-P"), (SubLObject)SubLObjectFactory.makeString("isFunctionSpec")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTIONP"), (SubLObject)SubLObjectFactory.makeString("isFunction")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-P"), (SubLObject)SubLObjectFactory.makeString("isHashtable")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTEGERP"), (SubLObject)SubLObjectFactory.makeString("isInteger")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDP"), (SubLObject)SubLObjectFactory.makeString("isKeyword")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LISTP"), (SubLObject)SubLObjectFactory.makeString("isList")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK-P"), (SubLObject)SubLObjectFactory.makeString("isLock")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MACRO-OPERATOR-P"), (SubLObject)SubLObjectFactory.makeString("isMacroOperator")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NULL"), (SubLObject)SubLObjectFactory.makeString("isNil")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUMBERP"), (SubLObject)SubLObjectFactory.makeString("isNumber")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGEP"), (SubLObject)SubLObjectFactory.makeString("isPackage")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#104", "CYC"), (SubLObject)SubLObjectFactory.makeString("isProcess")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEQUENCEP"), (SubLObject)SubLObjectFactory.makeString("isSequence")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAMP"), (SubLObject)SubLObjectFactory.makeString("isStream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRINGP"), (SubLObject)SubLObjectFactory.makeString("isString")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("S#57627", "CYC"), (SubLObject)SubLObjectFactory.makeString("isStructure")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOLP"), (SubLObject)SubLObjectFactory.makeString("isSymbol")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VECTORP"), (SubLObject)SubLObjectFactory.makeString("isVector")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PLUSP"), (SubLObject)SubLObjectFactory.makeString("isPositive")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MINUSP"), (SubLObject)SubLObjectFactory.makeString("isNegative")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ZEROP"), (SubLObject)SubLObjectFactory.makeString("isZero")), ConsesLow.list((SubLObject)module0818.EQL, (SubLObject)SubLObjectFactory.makeString("eql")), ConsesLow.list((SubLObject)module0818.EQUAL, (SubLObject)SubLObjectFactory.makeString("equal")), ConsesLow.list((SubLObject)module0818.EQUALP, (SubLObject)SubLObjectFactory.makeString("equalp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("<"), (SubLObject)SubLObjectFactory.makeString("numL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("<="), (SubLObject)SubLObjectFactory.makeString("numLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">"), (SubLObject)SubLObjectFactory.makeString("numG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">="), (SubLObject)SubLObjectFactory.makeString("numGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("="), (SubLObject)SubLObjectFactory.makeString("numE")) });
        $ic16$ = SubLObjectFactory.makeKeyword("UNINITIALIZED");
        $ic17$ = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("S#57628", "CYC"));
        $ic18$ = (SubLList)ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("S#166", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("S#105", "CYC"));
        $ic19$ = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAR"), (SubLObject)SubLObjectFactory.makeString("first")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeString("first")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDR"), (SubLObject)SubLObjectFactory.makeString("rest")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REST"), (SubLObject)SubLObjectFactory.makeString("rest")));
        $ic20$ = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("METHOD"));
        $ic21$ = SubLObjectFactory.makeInteger(500);
        $ic22$ = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLASS-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("S#2269", "CYC"));
        $ic23$ = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"), (SubLObject)SubLObjectFactory.makeSymbol("CLASS-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("S#57629", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("S#30", "CYC"));
        $ic24$ = SubLObjectFactory.makeSymbol("S#57523", "CYC");
        $ic25$ = SubLObjectFactory.makeString("f");
        $ic26$ = SubLObjectFactory.makeString("sublisp_");
        $ic27$ = SubLObjectFactory.makeString("f_");
        $ic28$ = SubLObjectFactory.makeKeyword("&MEMOIZED-ITEM-NOT-FOUND&");
        $ic29$ = SubLObjectFactory.makeKeyword("UNSPECIFIED");
        $ic30$ = _constant_30_initializer();
        $ic31$ = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*BREAK-ON-ERROR?*"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$break_on_errorP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CONTINUE-CERROR?*"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$continue_cerrorP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*ERROR-ABORT-HANDLER*"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$error_abort_handler$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*ERROR-HANDLER*"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$error_handler$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*ERROR-MESSAGE*"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$error_message$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*IGNORE-BREAKS?*"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$ignore_breaksP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*IGNORE-MUSTS?*"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$ignore_mustsP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*IGNORE-WARNS?*"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$ignore_warnsP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*"), (SubLObject)SubLObjectFactory.makeString("Eval"), (SubLObject)SubLObjectFactory.makeString("$star$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("**"), (SubLObject)SubLObjectFactory.makeString("Eval"), (SubLObject)SubLObjectFactory.makeString("$star_star$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("***"), (SubLObject)SubLObjectFactory.makeString("Eval"), (SubLObject)SubLObjectFactory.makeString("$star_star_star$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CALL-ARGUMENTS-LIMIT"), (SubLObject)SubLObjectFactory.makeString("Functions"), (SubLObject)SubLObjectFactory.makeString("$call_arguments_limit$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*EXP1*"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$exp1$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*MOST-NEGATIVE-FIXNUM*"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$most_negative_fixnum$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*MOST-POSITIVE-FIXNUM*"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$most_positive_fixnum$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PI*"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$pi$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-1"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_1$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-2"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_2$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-AND"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_and$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-ANDC1"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_andc1$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-ANDC2"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_andc2$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-C1"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_c1$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-C2"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_c2$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-CLR"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_clr$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-EQV"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_eqv$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-IOR"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_ior$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-NAND"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_nand$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-NOR"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_nor$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-ORC1"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_orc1$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-ORC2"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_orc2$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-SET"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_set$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-XOR"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$boole_xor$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PACKAGE*"), (SubLObject)SubLObjectFactory.makeString("Packages"), (SubLObject)SubLObjectFactory.makeString("$package$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*RAND-MAX*"), (SubLObject)SubLObjectFactory.makeString("random"), (SubLObject)SubLObjectFactory.makeString("$rand_max$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DEBUG-IO*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$debug_io$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*ERROR-OUTPUT*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$error_output$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*NULL-INPUT*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$null_input$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*NULL-OUTPUT*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$null_output$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*QUERY-IO*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$query_io$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STANDARD-INPUT*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$standard_input$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STANDARD-OUTPUT*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$standard_output$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STREAM-INITIAL-INPUT-BUFFER-SIZE*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$stream_initial_input_buffer_size$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STREAM-INITIAL-OUTPUT-BUFFER-SIZE*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$stream_initial_output_buffer_size$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*TERMINAL-IO*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$terminal_io$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*TRACE-OUTPUT*"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$trace_output$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*GENSYM-COUNTER*"), (SubLObject)SubLObjectFactory.makeString("Symbols"), (SubLObject)SubLObjectFactory.makeString("$gensym_counter$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*RETAIN-CLIENT-SOCKET?*"), (SubLObject)SubLObjectFactory.makeString("Tcp"), (SubLObject)SubLObjectFactory.makeString("$retain_client_socketP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*TCP-LOCALHOST-ONLY?*"), (SubLObject)SubLObjectFactory.makeString("Tcp"), (SubLObject)SubLObjectFactory.makeString("$tcp_localhost_onlyP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-MAX-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("Threads"), (SubLObject)SubLObjectFactory.makeString("$process_max_priority$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-CRITICAL-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("Threads"), (SubLObject)SubLObjectFactory.makeString("$process_critical_priority$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-NORMAL-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("Threads"), (SubLObject)SubLObjectFactory.makeString("$process_normal_priority$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-BACKGROUND-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("Threads"), (SubLObject)SubLObjectFactory.makeString("$process_background_priority$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-MIN-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("Threads"), (SubLObject)SubLObjectFactory.makeString("$process_min_priority$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*SUSPEND-TYPE-CHECKING?*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$suspend_type_checkingP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*MULTIPLE-VALUES-LIMIT*"), (SubLObject)SubLObjectFactory.makeString("Values"), (SubLObject)SubLObjectFactory.makeString("$multiple_values_limit$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CALL-PROFILING-ENABLED?*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("complex_special_forms"), (SubLObject)SubLObjectFactory.makeString("$call_profiling_enabledP$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CALL-PROFILING-TABLE*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("complex_special_forms"), (SubLObject)SubLObjectFactory.makeString("$call_profiling_table$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-ARRAY*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_array$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-BASE*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_base$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-CASE*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_case$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-CIRCLE*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_circle$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-ESCAPE*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_escape$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-GENSYM*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_gensym$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-LENGTH*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_length$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-LEVEL*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_level$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-LINES*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_lines$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-MISER-WIDTH*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_miser_width$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-PPRINT-DISPATCH*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_pprint_dispatch$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-PRETTY*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_pretty$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-RADIX*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_radix$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-READABLY*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_readably$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-RIGHT-MARGIN*"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_right_margin$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*FEATURES*"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("$features$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READ-BASE*"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("$read_base$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READ-DEFAULT-FLOAT-FORMAT*"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("$read_default_float_format$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READ-EVAL*"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("$read_eval$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READ-SUPPRESS*"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("$read_suppress$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READTABLE*"), (SubLObject)SubLObjectFactory.makeString("reader"), (SubLObject)SubLObjectFactory.makeString("$readtable$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STREAM-REQUIRES-LOCKING*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_macros"), (SubLObject)SubLObjectFactory.makeString("$stream_requires_locking$")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*INTERNAL-TIME-UNITS-PER-SECOND*"), (SubLObject)SubLObjectFactory.makeString("time_high"), (SubLObject)SubLObjectFactory.makeString("$internal_time_units_per_second$")) });
        $ic32$ = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*IS-THREAD-PERFORMING-CLEANUP?*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Threads"), (SubLObject)SubLObjectFactory.makeString("$is_thread_performing_cleanupP$"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-OBJECT-METHOD-TABLE*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_high"), (SubLObject)SubLObjectFactory.makeString("$print_object_method_table$"), (SubLObject)SubLObjectFactory.makeKeyword("LEXICAL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*SXHASH-METHOD-TABLE*"), (SubLObject)SubLObjectFactory.makeString("Sxhash"), (SubLObject)SubLObjectFactory.makeString("$sxhash_method_table$"), (SubLObject)SubLObjectFactory.makeKeyword("LEXICAL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*VISIT-DEFSTRUCT-OBJECT-METHOD-TABLE*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("visitation"), (SubLObject)SubLObjectFactory.makeString("$visit_defstruct_object_method_table$"), (SubLObject)SubLObjectFactory.makeKeyword("LEXICAL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-SYMBOL*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_symbol$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-CONS*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_cons$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-FIXNUM*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_fixnum$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-FLOAT*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_float$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-CHARACTER*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_character$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-STRING*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_string$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-VECTOR*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_vector$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-FUNCTION*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_function$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-HASH-TABLE*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_hash_table$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-PACKAGE*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_package$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-STREAM*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_stream$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-BIGNUM*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_bignum$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-LOCK*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_lock$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-PROCESS*"), (SubLObject)SubLObjectFactory.makeString("Types"), (SubLObject)SubLObjectFactory.makeString("$dtp_process$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-GUID*"), (SubLObject)SubLObjectFactory.makeString("Guids"), (SubLObject)SubLObjectFactory.makeString("$dtp_guid$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-STRUCTURES-BAG*"), (SubLObject)SubLObjectFactory.makeString("Structures"), (SubLObject)SubLObjectFactory.makeString("$dtp_structures_bag$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*REMOTE-ADDRESS*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Tcp"), (SubLObject)SubLObjectFactory.makeString("$remote_address$"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*REMOTE-HOSTNAME*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Tcp"), (SubLObject)SubLObjectFactory.makeString("$remote_hostname$"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*%EVALUATOR-METHOD*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Eval"), (SubLObject)SubLObjectFactory.makeString("$evaluator_method$"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DOUBLE-FLOAT-MINIMUM-EXPONENT*"), (SubLObject)SubLObjectFactory.makeString("Numbers"), (SubLObject)SubLObjectFactory.makeString("$double_float_minimum_exponent$"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*SYSTEM-INFO*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("SystemInfo"), (SubLObject)SubLObjectFactory.makeString("$system_info$"), (SubLObject)SubLObjectFactory.makeKeyword("LEXICAL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CURRENT-AREA*"), (SubLObject)SubLObjectFactory.makeString("Storage"), (SubLObject)SubLObjectFactory.makeString("$current_area$"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*SHOULD-MEMORY-MAP-FILES?*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("StreamsLow"), (SubLObject)SubLObjectFactory.makeString("$should_memory_map_files$"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*RESTARTS*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("Errors"), (SubLObject)SubLObjectFactory.makeString("$restarts$"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")) });
        $ic33$ = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"), (SubLObject)SubLObjectFactory.makeSymbol("CLASS-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("S#57629", "CYC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("S#57630", "CYC"));
        $ic34$ = SubLObjectFactory.makeSymbol("S#57539", "CYC");
        $ic35$ = SubLObjectFactory.makeString("$g");
        $ic36$ = SubLObjectFactory.makeString("$");
    }
}

/*
	DECOMPILATION REPORT

	Decompiled from: G:\opt\CYC_JRTL_with_CommonLisp\platform\lib\cyc-oc4.0-unzipped/com/cyc/cycjava/cycl/module0818.class
	Total time: 696 ms
	
	Decompiled with Procyon 0.5.32.
*/