package com.cyc.cycjava.cycl;

import com.cyc.tool.subl.jrtl.nativeCode.subLisp.UnaryFunction;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLStructDecl;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.CommonSymbols;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLStructDeclNative;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLStructNative;
import com.cyc.cycjava.cycl.cyc_testing.generic_testing;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.visitation;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLSpecialOperatorDeclarations;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Structures;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Equality;
import java.util.Map;
import java.util.Iterator;
import java.util.ArrayList;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Dynamic;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.StreamsLow;
import com.cyc.cycjava.cycl.inference.harness.inference_datastructures_enumerated_types;
import com.cyc.cycjava.cycl.inference.harness.inference_strategist;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Strings;
import com.cyc.cycjava.cycl.inference.harness.inference_datastructures_inference;
import com.cyc.cycjava.cycl.inference.harness.inference_kernel;
import com.cyc.cycjava.cycl.inference.ask_utilities;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.cdestructuring_bind;
import com.cyc.cycjava.cycl.inference.harness.inference_datastructures_problem_store;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ReadWriteLocks;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.reader;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.print_high;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.streams_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Types;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.*;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Mapping;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sort;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Threads;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Functions;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.cycjava.cycl.inference.harness.abnormal;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.PrintLow;
import com.cyc.cycjava.cycl.sbhl.sbhl_marking_vars;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLInteger;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLString;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class gke_main
    extends
      SubLTranslatedFile
{
  public static final SubLFile me;
  public static final String myName = "com.cyc.cycjava.cycl.gke_main";
  public static final String myFingerPrint = "2ec39b83b811911189c1481d304fe675d62a14ea245c7ef56fb9b8310d88b583";
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12170L)
  private static SubLSymbol $gke_isas_filtered_term_caching_state$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12457L)
  private static SubLSymbol $gke_overly_general_non_predicate_types$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12936L)
  private static SubLSymbol $gke_filtered_termP_caching_state$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 13311L)
  private static SubLSymbol $gke_overly_general_predicate_types$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 13638L)
  private static SubLSymbol $gke_predicate_filteredP_caching_state$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 16188L)
  public static SubLSymbol $use_rbp_wff_in_gkeP$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 45090L)
  private static SubLSymbol $gke_memoization_state_caching_state$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 47570L)
  private static SubLSymbol $generate_gke_gloss_wrt_mt_cached_caching_state$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 50876L)
  private static SubLSymbol $candidate_replacements_for_sentence_cached_caching_state$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 53310L)
  private static SubLSymbol $gke_get_elements_caching_state$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55614L)
  private static SubLSymbol $omit_suggestion_stumpsP$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLSymbol $dtp_replacement_tree$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 66309L)
  private static SubLSymbol $use_tva_for_suggestionsP$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 67353L)
  public static SubLSymbol $default_patience_wait_time$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 67545L)
  public static SubLSymbol $gke_query_threads$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 74768L)
  private static SubLSymbol $daemon_should_run_inference_statuses$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 75319L)
  private static SubLSymbol $gke_run_inference_with_adjusted_dynamic_propertiesP$;
  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 77538L)
  private static SubLSymbol $inference_done_statuses$;
  private static final SubLSymbol $sym0$GET_GKE_ARG_OPTIONS;
  private static final SubLString $str1$Got_unknown_arg_type_for___A__;
  private static final SubLSymbol $kw2$PARENTS;
  private static final SubLString $str3$Natural_language_processing_has_d;
  private static final SubLSymbol $kw4$CHILDREN;
  private static final SubLSymbol $kw5$SIBLINGS;
  private static final SubLSymbol $sym6$GET_GKE_EXPANDED_ITEMS;
  private static final SubLSymbol $kw7$ANY;
  private static final SubLList $list8;
  private static final SubLList $list9;
  private static final SubLSymbol $sym10$GET_GKE_QUANTIFIER_RANGES;
  private static final SubLString $str11$Get_the_quantifier_ranges;
  private static final SubLSymbol $sym12$STRING_LESSP;
  private static final SubLSymbol $sym13$NULL;
  private static final SubLSymbol $sym14$NART_SUBSTITUTE;
  private static final SubLInteger $int15$200;
  private static final SubLSymbol $kw16$NEW;
  private static final SubLSymbol $sym17$GKE_LIST_ITEM_COMPARATOR;
  private static final SubLInteger $int18$175;
  private static final SubLSymbol $sym19$GKE_FILTERED_TERM_;
  private static final SubLSymbol $sym20$RKF_MAX_SPECS;
  private static final SubLSymbol $sym21$RKF_INSTANTIATIONS;
  private static final SubLObject $const22$Collection;
  private static final SubLSymbol $sym23$GKE_ISAS_FILTERED_TERM;
  private static final SubLSymbol $sym24$ALL_GENLS;
  private static final SubLSymbol $sym25$RKF_ALL_GENLS;
  private static final SubLSymbol $sym26$_GKE_ISAS_FILTERED_TERM_CACHING_STATE_;
  private static final SubLList $list27;
  private static final SubLSymbol $sym28$_GKE_FILTERED_TERM__CACHING_STATE_;
  private static final SubLList $list29;
  private static final SubLSymbol $sym30$GKE_PREDICATE_FILTERED_;
  private static final SubLSymbol $kw31$TRUE;
  private static final SubLList $list32;
  private static final SubLSymbol $sym33$_GKE_PREDICATE_FILTERED__CACHING_STATE_;
  private static final SubLSymbol $sym34$LISTP;
  private static final SubLSymbol $sym35$TREE_POSITION_P;
  private static final SubLSymbol $sym36$CYCL_FORMULA_;
  private static final SubLSymbol $sym37$HLMT_P;
  private static final SubLString $str38$OPERATOR_TERMS_PASS_CONSTRAINTS_r;
  private static final SubLString $str39$OPERATOR_TERMS_PASS_CONSTRAINTS_r;
  private static final SubLSymbol $sym40$GET_GKE_NAUT_ARG_POSITION;
  private static final SubLSymbol $sym41$GET_GKE_IS_KNOWN;
  private static final SubLSymbol $kw42$HTML;
  private static final SubLObject $const43$GenericIntelligenceAnalysis_CAE_A;
  private static final SubLSymbol $kw44$TEXT;
  private static final SubLObject $const45$GenericMedicalResearchTask_Allotm;
  private static final SubLSymbol $kw46$UNKNOWN;
  private static final SubLSymbol $kw47$DEFAULT;
  private static final SubLSymbol $kw48$DECLARATIVE;
  private static final SubLSymbol $kw49$NONE;
  private static final SubLString $str50$Show_all_values_of_;
  private static final SubLString $str51$_such_that__;
  private static final SubLString $str52$Is_it_true_that__;
  private static final SubLObject $const53$TheCoordinationSet;
  private static final SubLSymbol $sym54$PPH_ANCHOR_TAGS_FOR_TERM;
  private static final SubLObject $const55$thereExists;
  private static final SubLList $list56;
  private static final SubLSymbol $kw57$NOR;
  private static final SubLSymbol $kw58$IGNORE;
  private static final SubLObject $const59$and;
  private static final SubLSymbol $kw60$AND;
  private static final SubLList $list61;
  private static final SubLList $list62;
  private static final SubLObject $const63$or;
  private static final SubLSymbol $kw64$NOT;
  private static final SubLSymbol $kw65$OR;
  private static final SubLString $str66$All_of_the_following_are_true;
  private static final SubLString $str67$At_least_one_of_the_following_is_;
  private static final SubLString $str68$None_of_the_following_is_true;
  private static final SubLSymbol $sym69$GKE_ADD_CLONED_LITERAL;
  private static final SubLList $list70;
  private static final SubLString $str71$_S_must_be_one_of__S;
  private static final SubLSymbol $kw72$ERROR;
  private static final SubLSymbol $sym73$GKE_REMOVE_LITERAL;
  private static final SubLString $str74$GKEReformulationRuleHoldingMt;
  private static final SubLSymbol $sym75$EL_SENTENCE_P;
  private static final SubLSymbol $kw76$LOOSEN;
  private static final SubLSymbol $kw77$STRENGTHEN;
  private static final SubLString $str78$useReformulationRuleForGuidedKnow;
  private static final SubLSymbol $kw79$META_PREDICATES;
  private static final SubLList $list80;
  private static final SubLList $list81;
  private static final SubLSymbol $sym82$POSSIBLE_SENTENCE_SUBSTITUTIONS;
  private static final SubLObject $const83$EnglishMt;
  private static final SubLObject $const84$nonPlural_Generic;
  private static final SubLList $list85;
  private static final SubLSymbol $sym86$STRINGP;
  private static final SubLObject $const87$Thing;
  private static final SubLSymbol $sym88$GENERALITY_ESTIMATE_;
  private static final SubLSymbol $sym89$SUBSTITUTE_TERM_INTO_SENTENCE;
  private static final SubLSymbol $sym90$NART_P;
  private static final SubLSymbol $sym91$NART_EL_FORMULA;
  private static final SubLString $str92$_S_does_not_have_arg_position__S;
  private static final SubLSymbol $sym93$EL_FORMULA_P;
  private static final SubLObject $const94$isa;
  private static final SubLList $list95;
  private static final SubLSymbol $sym96$EL_VAR_;
  private static final SubLSymbol $sym97$EL_VAR_NAME;
  private static final SubLObject $const98$Individual;
  private static final SubLObject $const99$TheSet;
  private static final SubLSymbol $kw100$EL_VARIABLE;
  private static final SubLObject $const101$equals;
  private static final SubLSymbol $sym102$GKE_MEMOIZATION_STATE;
  private static final SubLString $str103$GKE_Memoization_State;
  private static final SubLSymbol $sym104$_GKE_MEMOIZATION_STATE_CACHING_STATE_;
  private static final SubLSymbol $sym105$CLEAR_GKE_MEMOIZATION_STATE;
  private static final SubLSymbol $sym106$GKE_GLOSS_FOR_LITERAL;
  private static final SubLSymbol $sym107$ATOMIC_SENTENCE_;
  private static final SubLSymbol $sym108$RELEVANT_MT_IS_EQ;
  private static final SubLObject $const109$gkeGlossWrtDomainMt;
  private static final SubLSymbol $kw110$GAF;
  private static final SubLSymbol $sym111$GENERATE_GKE_GLOSS_WRT_MT_CACHED;
  private static final SubLSymbol $sym112$_GENERATE_GKE_GLOSS_WRT_MT_CACHED_CACHING_STATE_;
  private static final SubLInteger $int113$256;
  private static final SubLSymbol $sym114$CANDIDATE_REPLACEMENT_RENDERERS_FOR_SENTENCE;
  private static final SubLList $list115;
  private static final SubLSymbol $kw116$NOT_FOUND;
  private static final SubLSymbol $sym117$CANDIDATE_REPLACEMENTS_FOR_VARIABLES;
  private static final SubLSymbol $sym118$CANDIDATE_REPLACEMENTS_FOR_ARG;
  private static final SubLSymbol $sym119$CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED;
  private static final SubLList $list120;
  private static final SubLList $list121;
  private static final SubLList $list122;
  private static final SubLObject $const123$suggestionsForPredRelativeToIsaIn;
  private static final SubLList $list124;
  private static final SubLObject $const125$suggestionsForPredRelativeToGenls;
  private static final SubLSymbol $sym126$_CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED_CACHING_STATE_;
  private static final SubLInteger $int127$2048;
  private static final SubLSymbol $sym128$CLEAR_CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED;
  private static final SubLSymbol $sym129$INTERSECTION;
  private static final SubLSymbol $sym130$UNION;
  private static final SubLSymbol $sym131$GKE_GET_ELEMENTS;
  private static final SubLSymbol $sym132$HL_PROTOTYPICAL_INSTANCE_;
  private static final SubLSymbol $sym133$_X;
  private static final SubLObject $const134$elementOf;
  private static final SubLSymbol $sym135$_GKE_GET_ELEMENTS_CACHING_STATE_;
  private static final SubLSymbol $sym136$CLEAR_GKE_GET_ELEMENTS;
  private static final SubLSymbol $sym137$NEW_REPLACEMENT_TREE;
  private static final SubLList $list138;
  private static final SubLString $str139$__Conflating__S_to__S_____;
  private static final SubLSymbol $sym140$_OMIT_SUGGESTION_STUMPS__;
  private static final SubLSymbol $sym141$REPLACEMENT_TREE;
  private static final SubLSymbol $sym142$REPLACEMENT_TREE_P;
  private static final SubLList $list143;
  private static final SubLList $list144;
  private static final SubLList $list145;
  private static final SubLList $list146;
  private static final SubLSymbol $sym147$PRINT_REPLACEMENT_TREE;
  private static final SubLSymbol $sym148$REPLACEMENT_TREE_PRINT_FUNCTION_TRAMPOLINE;
  private static final SubLList $list149;
  private static final SubLSymbol $sym150$R_TREE_ROOT;
  private static final SubLSymbol $sym151$_CSETF_R_TREE_ROOT;
  private static final SubLSymbol $sym152$R_TREE_CHILDREN;
  private static final SubLSymbol $sym153$_CSETF_R_TREE_CHILDREN;
  private static final SubLSymbol $kw154$ROOT;
  private static final SubLString $str155$Invalid_slot__S_for_construction_;
  private static final SubLSymbol $kw156$BEGIN;
  private static final SubLSymbol $sym157$MAKE_REPLACEMENT_TREE;
  private static final SubLSymbol $kw158$SLOT;
  private static final SubLSymbol $kw159$END;
  private static final SubLSymbol $sym160$VISIT_DEFSTRUCT_OBJECT_REPLACEMENT_TREE_METHOD;
  private static final SubLString $str161$_REPLACEMENT_TREE__S_;
  private static final SubLSymbol $sym162$NON_DOTTED_LIST_P;
  private static final SubLString $str163$Unable_to_place__D_renderers;
  private static final SubLString $str164$Hit_max_depth_of__D__Pruning__D_r;
  private static final SubLString $str165$__Placing__S_under_superiors___S_;
  private static final SubLSymbol $sym166$SECOND;
  private static final SubLString $str167$__Found__S_on_level__D___;
  private static final SubLString $str168$__Not_in_subtree__so_adding__S_un;
  private static final SubLString $str169$___Tree_level__D_is_now__S___;
  private static final SubLString $str170$Found_it_;
  private static final SubLString $str171$__Postponing__S_because__S_is_not;
  private static final SubLSymbol $sym172$_COL;
  private static final SubLObject $const173$suggestionGenlClassOrderedBy;
  private static final SubLList $list174;
  private static final SubLList $list175;
  private static final SubLList $list176;
  private static final SubLList $list177;
  private static final SubLSymbol $kw178$PROBLEM_STORE;
  private static final SubLSymbol $kw179$INFERENCE_MODE;
  private static final SubLSymbol $kw180$MINIMAL;
  private static final SubLSymbol $kw181$ANSWER_LANGUAGE;
  private static final SubLSymbol $kw182$HL;
  private static final SubLList $list183;
  private static final SubLObject $const184$genls;
  private static final SubLList $list185;
  private static final SubLSymbol $sym186$_SET;
  private static final SubLString $str187$__Filtered_renderers___S__;
  private static final SubLSymbol $sym188$_USE_TVA_FOR_SUGGESTIONS__;
  private static final SubLSymbol $kw189$X;
  private static final SubLSymbol $kw190$ALLOWED_MODULES;
  private static final SubLList $list191;
  private static final SubLList $list192;
  private static final SubLList $list193;
  private static final SubLString $str194$_;
  private static final SubLString $str195$_;
  private static final SubLSymbol $sym196$POSSIBLY_MT_P;
  private static final SubLSymbol $sym197$QUERY_PROPERTIES_P;
  private static final SubLSymbol $kw198$CONDITIONAL_SENTENCE_;
  private static final SubLList $list199;
  private static final SubLSymbol $sym200$GKE_START_CONTINUABLE_QUERY;
  private static final SubLList $list201;
  private static final SubLString $str202$Setup_a_query__and_immediately_re;
  private static final SubLList $list203;
  private static final SubLSymbol $sym204$INTEGERP;
  private static final SubLSymbol $kw205$QUEUE;
  private static final SubLSymbol $kw206$DAEMON;
  private static final SubLString $str207$Error_with_query___A__;
  private static final SubLSymbol $sym208$GKE_CONTINUE_QUERY;
  private static final SubLList $list209;
  private static final SubLString $str210$Continue_an_existing_query__ident;
  private static final SubLList $list211;
  private static final SubLString $str212$gke_query_thread__A__A;
  private static final SubLSymbol $sym213$GKE_RUN_INFERENCE;
  private static final SubLString $str214$results_daemon__A__A;
  private static final SubLSymbol $sym215$RESULTS_DAEMON;
  private static final SubLSymbol $kw216$IGNORE_ERRORS_TARGET;
  private static final SubLSymbol $sym217$IGNORE_ERRORS_HANDLER;
  private static final SubLSymbol $kw218$BINDINGS;
  private static final SubLSymbol $kw219$SOURCE_ICONS;
  private static final SubLList $list220;
  private static final SubLSymbol $kw221$MAX_TIME;
  private static final SubLSymbol $kw222$MAX_TRANSFORMATION_DEPTH;
  private static final SubLSymbol $sym223$SPECIAL_VARIABLE_STATE_P;
  private static final SubLSymbol $sym224$GKE_GET_ONE_INFERENCE_RESULT;
  private static final SubLList $list225;
  private static final SubLString $str226$Get_one_inference_result;
  private static final SubLList $list227;
  private static final SubLSymbol $sym228$ID_OF_VALID_PROBLEM_STORE_P;
  private static final SubLSymbol $kw229$SKIP;
  private static final SubLSymbol $sym230$GKE_GET_INFERENCE_RESULTS;
  private static final SubLString $str231$get_all_the_inference_results_so_;
  private static final SubLList $list232;
  private static final SubLList $list233;
  private static final SubLSymbol $sym234$GKE_INFERENCE_COMPLETE_;
  private static final SubLString $str235$ret_t_iff_inference_is_suspended_;
  private static final SubLSymbol $sym236$GKE_GET_INFERENCE_STATUS;
  private static final SubLString $str237$get_the_status_of_the_inference;
  private static final SubLSymbol $sym238$GKE_GET_INFERENCE_SUSPEND_STATUS;
  private static final SubLString $str239$get_the_suspend_status_of_the_inf;
  private static final SubLSymbol $sym240$NULL_OR_INTEGERP;
  private static final SubLSymbol $sym241$GKE_STOP_CONTINUABLE_QUERY;
  private static final SubLList $list242;
  private static final SubLString $str243$Find_and_stop_the_inference_;
  private static final SubLList $list244;
  private static final SubLSymbol $sym245$GKE_RELEASE_INFERENCE_RESOURCES;
  private static final SubLString $str246$Destroy_problem_store_and_inferen;
  private static final SubLSymbol $sym247$GKE_TEST_QUERIES;
  private static final SubLSymbol $sym248$_SENT;
  private static final SubLSymbol $sym249$_QUERY;
  private static final SubLList $list250;
  private static final SubLObject $const251$TestVocabularyMt;
  private static final SubLString $str252$GKE_Query_Sentence_Literal_Manipu;
  private static final SubLString $str253$GKE_Main_Test_Suite;
  private static final SubLList $list254;
  private static final SubLSymbol $sym255$TEST_CANDIDATE_REPLACEMENTS;
  private static final SubLSymbol $kw256$TEST;
  private static final SubLSymbol $sym257$CANDIDATE_REPLACEMENTS_EQUAL_;
  private static final SubLSymbol $kw258$OWNER;
  private static final SubLSymbol $kw259$CLASSES;
  private static final SubLList $list260;
  private static final SubLSymbol $kw261$KB;
  private static final SubLSymbol $kw262$FULL;
  private static final SubLSymbol $kw263$WORKING_;
  private static final SubLList $list264;
  private static final SubLSymbol $sym265$FORT_P;
  private static final SubLSymbol $sym266$_EXIT;
  private static final SubLSymbol $sym267$SORT_RESULT;
  private static final SubLSymbol $sym268$REMOVE_JAVALIST_DETAIL;
  private static final SubLList $list269;
  private static final SubLSymbol $sym270$SORT_GROVE;
  private static final SubLSymbol $sym271$TERM___WITH_CONSTANT_BY_NAME;
  private static final SubLSymbol $sym272$CAR;
  private static final SubLSymbol $sym273$SORT_TREE;
  private static final SubLList $list274;
  private static final SubLList $list275;
  private static final SubLList $list276;
  private static final SubLSymbol $sym277$TEST_CANDIDATE_REPLACEMENT_RENDERERS_FOR_VARS;
  private static final SubLList $list278;
  private static final SubLSymbol $sym279$TEST_CANDIDATE_REPLACEMENT_RENDERERS_STUMPS;
  private static final SubLList $list280;
  private static final SubLSymbol $sym281$TEST_CANDIDATE_REPLACEMENT_RENDERERS;
  private static final SubLObject $list282;
  private static final SubLSymbol $sym283$NARTIFY_AND_SUBSTITUTE_TERM_INTO_SENTENCE;
  private static final SubLList $list284;
  private static final SubLObject $list285;

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 788L)
  public static SubLObject get_gke_arg_options(final SubLObject aterm, final SubLObject arg_num, final SubLObject options_type, final SubLObject cycl_formula, SubLObject generation_mt, SubLObject domain_mt,
      final SubLObject depth, SubLObject orig_term)
  {
    if( orig_term == UNPROVIDED )
    {
      orig_term = NIL;
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    generation_mt = hlmt_czer.canonicalize_hlmt( generation_mt );
    domain_mt = hlmt_czer.canonicalize_hlmt( domain_mt );
    final SubLObject arg = narts_high.nart_substitute( aterm );
    SubLObject options = NIL;
    SubLObject nl_values = NIL;
    SubLObject validity_list = NIL;
    SubLObject substitutions = NIL;
    final SubLObject already_resourcing_p = sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.getDynamicValue( thread );
    final SubLObject _prev_bind_0 = sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.currentBinding( thread );
    final SubLObject _prev_bind_2 = sbhl_marking_vars.$resourced_sbhl_marking_spaces$.currentBinding( thread );
    final SubLObject _prev_bind_3 = sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.currentBinding( thread );
    try
    {
      sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.bind( sbhl_marking_vars.determine_resource_limit( already_resourcing_p, SIX_INTEGER ), thread );
      sbhl_marking_vars.$resourced_sbhl_marking_spaces$.bind( sbhl_marking_vars.possibly_new_marking_resource( already_resourcing_p ), thread );
      sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.bind( T, thread );
      if( NIL != fort_types_interface.isa_relationP( arg, UNPROVIDED ) )
      {
        options = get_arg_option_isa_relation( arg, arg_num, cycl_formula, domain_mt, depth, options_type );
      }
      else if( NIL != fort_types_interface.isa_collectionP( arg, UNPROVIDED ) )
      {
        options = get_arg_option_collection( arg, arg_num, cycl_formula, domain_mt, depth, orig_term, options_type );
      }
      else if( NIL != kb_accessors.individualP( arg ) )
      {
        options = get_arg_option_individual( arg, arg_num, cycl_formula, domain_mt, depth, options_type );
      }
      else
      {
        PrintLow.format( T, $str1$Got_unknown_arg_type_for___A__, arg );
      }
      final SubLObject datum_evaluated_var = get_gke_combine_with_is_valid_substitution( options, arg_num, cycl_formula, domain_mt );
      substitutions = datum_evaluated_var.first();
      validity_list = conses_high.cadr( datum_evaluated_var );
      final SubLObject validity_dictionary = dictionary_utilities.add_values_from_lists_to_dictionary( substitutions, validity_list, UNPROVIDED );
      final SubLObject _prev_bind_0_$1 = pph_vars.$pph_language_mt$.currentBinding( thread );
      final SubLObject _prev_bind_1_$2 = pph_vars.$pph_domain_mt$.currentBinding( thread );
      try
      {
        pph_vars.$pph_language_mt$.bind( ( NIL != generation_mt ) ? pph_utilities.pph_canonicalize_hlmt( generation_mt ) : pph_vars.$pph_language_mt$.getDynamicValue( thread ), thread );
        pph_vars.$pph_domain_mt$.bind( ( NIL != domain_mt ) ? pph_utilities.pph_canonicalize_hlmt( domain_mt ) : pph_vars.$pph_domain_mt$.getDynamicValue( thread ), thread );
        if( options_type == $kw2$PARENTS )
        {
          nl_values = gke_process_results( NIL, substitutions, UNPROVIDED, UNPROVIDED );
        }
        else
        {
          nl_values = gke_process_results( T, substitutions, UNPROVIDED, UNPROVIDED );
        }
      }
      finally
      {
        pph_vars.$pph_domain_mt$.rebind( _prev_bind_1_$2, thread );
        pph_vars.$pph_language_mt$.rebind( _prev_bind_0_$1, thread );
      }
      if( NIL == list_utilities.same_length_p( nl_values, validity_list ) )
      {
        Errors.warn( $str3$Natural_language_processing_has_d, Sequences.length( nl_values ), Sequences.length( validity_list ) );
      }
      validity_list = NIL;
      SubLObject cdolist_list_var = nl_values;
      SubLObject nl_value = NIL;
      nl_value = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        validity_list = ConsesLow.cons( dictionary.dictionary_lookup( validity_dictionary, conses_high.second( nl_value ), UNPROVIDED ), validity_list );
        cdolist_list_var = cdolist_list_var.rest();
        nl_value = cdolist_list_var.first();
      }
      validity_list = Sequences.nreverse( validity_list );
    }
    finally
    {
      sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.rebind( _prev_bind_3, thread );
      sbhl_marking_vars.$resourced_sbhl_marking_spaces$.rebind( _prev_bind_2, thread );
      sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.rebind( _prev_bind_0, thread );
    }
    return ConsesLow.list( nl_values, validity_list );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 2856L)
  public static SubLObject get_arg_option_isa_relation(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth, final SubLObject options_type)
  {
    if( options_type == $kw4$CHILDREN )
    {
      return get_gke_spec_preds( arg, arg_num, cycl_formula, domain_mt, depth );
    }
    if( options_type == $kw5$SIBLINGS )
    {
      return get_gke_instance_siblings( arg, arg_num, cycl_formula, domain_mt, depth );
    }
    if( options_type == $kw2$PARENTS )
    {
      return get_gke_genl_preds( arg, arg_num, cycl_formula, domain_mt, depth );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 3302L)
  public static SubLObject get_arg_option_collection(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth, final SubLObject orig_term,
      final SubLObject options_type)
  {
    if( options_type == $kw4$CHILDREN )
    {
      return get_gke_specs( arg, arg_num, cycl_formula, domain_mt, depth, orig_term );
    }
    if( options_type == $kw5$SIBLINGS )
    {
      return get_gke_collection_siblings( arg, arg_num, cycl_formula, domain_mt, depth );
    }
    if( options_type == $kw2$PARENTS )
    {
      return get_gke_genls( arg, arg_num, cycl_formula, domain_mt, depth );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 3758L)
  public static SubLObject get_arg_option_individual(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth, final SubLObject options_type)
  {
    if( options_type == $kw4$CHILDREN )
    {
      return NIL;
    }
    if( options_type == $kw5$SIBLINGS )
    {
      return get_gke_instance_siblings( arg, arg_num, cycl_formula, domain_mt, depth );
    }
    if( options_type == $kw2$PARENTS )
    {
      return get_gke_isas( arg, arg_num, cycl_formula, domain_mt, depth );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 4142L)
  public static SubLObject get_gke_expanded_items(final SubLObject string, final SubLObject domain_mt, final SubLObject max_count)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject result = NIL;
    final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( mt_relevance_macros.determine_inference_mt_relevance_el_spec( domain_mt ) );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
      mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
      mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
      result = list_utilities.first_n( max_count, cb_frames.terms_for_browsing( string, UNPROVIDED, UNPROVIDED ) );
      result = pph_main.generate_disambiguation_phrases( result, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
    }
    finally
    {
      mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
    }
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 4425L)
  public static SubLObject get_gke_combine_with_is_valid_substitution(final SubLObject list_of_substitutes, final SubLObject term_position, final SubLObject original_expression, SubLObject domain_mt)
  {
    if( domain_mt == UNPROVIDED )
    {
      domain_mt = NIL;
    }
    final SubLObject valid_substitutions = terms_pass_constraints( list_of_substitutes, term_position, original_expression, hlmt_czer.canonicalize_hlmt( domain_mt ) );
    return ConsesLow.list( list_of_substitutes, valid_substitutions );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 5002L)
  public static SubLObject get_gke_cycl_formulas_for_nl_phrase(final SubLObject nl_phrase, final SubLObject parsing_mt, final SubLObject domain_mt, final SubLObject timeout)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject parsing_timed_outP = NIL;
    SubLObject result = NIL;
    final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( mt_relevance_macros.determine_inference_mt_relevance_el_spec( domain_mt ) );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
    final SubLObject _prev_bind_4 = control_vars.$within_assert$.currentBinding( thread );
    final SubLObject _prev_bind_5 = wff_utilities.$check_arg_typesP$.currentBinding( thread );
    final SubLObject _prev_bind_6 = at_vars.$at_check_arg_typesP$.currentBinding( thread );
    final SubLObject _prev_bind_7 = wff_utilities.$check_wff_semanticsP$.currentBinding( thread );
    final SubLObject _prev_bind_8 = wff_utilities.$check_wff_coherenceP$.currentBinding( thread );
    final SubLObject _prev_bind_9 = wff_utilities.$check_var_typesP$.currentBinding( thread );
    final SubLObject _prev_bind_10 = czer_vars.$simplify_literalP$.currentBinding( thread );
    final SubLObject _prev_bind_11 = at_vars.$at_check_relator_constraintsP$.currentBinding( thread );
    final SubLObject _prev_bind_12 = at_vars.$at_check_arg_formatP$.currentBinding( thread );
    final SubLObject _prev_bind_13 = wff_vars.$validate_constantsP$.currentBinding( thread );
    final SubLObject _prev_bind_14 = system_parameters.$suspend_sbhl_type_checkingP$.currentBinding( thread );
    final SubLObject _prev_bind_15 = parsing_macros.$parsing_timeout_time_check_count$.currentBinding( thread );
    final SubLObject _prev_bind_16 = parsing_macros.$parsing_timeout_time$.currentBinding( thread );
    final SubLObject _prev_bind_17 = parsing_macros.$parsing_timeout_reachedP$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
      mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
      mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
      control_vars.$within_assert$.bind( NIL, thread );
      wff_utilities.$check_arg_typesP$.bind( NIL, thread );
      at_vars.$at_check_arg_typesP$.bind( NIL, thread );
      wff_utilities.$check_wff_semanticsP$.bind( NIL, thread );
      wff_utilities.$check_wff_coherenceP$.bind( NIL, thread );
      wff_utilities.$check_var_typesP$.bind( NIL, thread );
      czer_vars.$simplify_literalP$.bind( NIL, thread );
      at_vars.$at_check_relator_constraintsP$.bind( NIL, thread );
      at_vars.$at_check_arg_formatP$.bind( NIL, thread );
      wff_vars.$validate_constantsP$.bind( NIL, thread );
      system_parameters.$suspend_sbhl_type_checkingP$.bind( T, thread );
      parsing_macros.$parsing_timeout_time_check_count$.bind( ZERO_INTEGER, thread );
      parsing_macros.$parsing_timeout_time$.bind( parsing_macros.parsing_compute_timeout_time( timeout ), thread );
      parsing_macros.$parsing_timeout_reachedP$.bind( parsing_macros.$parsing_timeout_reachedP$.getDynamicValue( thread ), thread );
      parsing_macros.$parsing_timeout_reachedP$.setDynamicValue( parsing_macros.parsing_timeout_time_reachedP(), thread );
      if( NIL == parsing_macros.$parsing_timeout_reachedP$.getDynamicValue( thread ) )
      {
        final SubLObject _prev_bind_0_$3 = parsing_vars.$npp_use_nl_tagsP$.currentBinding( thread );
        final SubLObject _prev_bind_1_$4 = abnormal.$abnormality_checking_enabled$.currentBinding( thread );
        final SubLObject _prev_bind_2_$5 = lexicon_vars.$exclude_vulgaritiesP$.currentBinding( thread );
        try
        {
          parsing_vars.$npp_use_nl_tagsP$.bind( NIL, thread );
          abnormal.$abnormality_checking_enabled$.bind( NIL, thread );
          lexicon_vars.$exclude_vulgaritiesP$.bind( T, thread );
          final SubLObject v_related_concepts = result = pph_main.generate_disambiguation_phrases( psp_main.ps_get_cycls_for_phrase( nl_phrase, $kw7$ANY, $kw7$ANY, NIL, psp_lexicon.get_default_psp_lexicon( hlmt_czer
              .canonicalize_hlmt( parsing_mt ), UNPROVIDED, UNPROVIDED ), UNPROVIDED, UNPROVIDED ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
        }
        finally
        {
          lexicon_vars.$exclude_vulgaritiesP$.rebind( _prev_bind_2_$5, thread );
          abnormal.$abnormality_checking_enabled$.rebind( _prev_bind_1_$4, thread );
          parsing_vars.$npp_use_nl_tagsP$.rebind( _prev_bind_0_$3, thread );
        }
      }
      parsing_timed_outP = parsing_macros.parsing_timeout_time_reachedP();
    }
    finally
    {
      parsing_macros.$parsing_timeout_reachedP$.rebind( _prev_bind_17, thread );
      parsing_macros.$parsing_timeout_time$.rebind( _prev_bind_16, thread );
      parsing_macros.$parsing_timeout_time_check_count$.rebind( _prev_bind_15, thread );
      system_parameters.$suspend_sbhl_type_checkingP$.rebind( _prev_bind_14, thread );
      wff_vars.$validate_constantsP$.rebind( _prev_bind_13, thread );
      at_vars.$at_check_arg_formatP$.rebind( _prev_bind_12, thread );
      at_vars.$at_check_relator_constraintsP$.rebind( _prev_bind_11, thread );
      czer_vars.$simplify_literalP$.rebind( _prev_bind_10, thread );
      wff_utilities.$check_var_typesP$.rebind( _prev_bind_9, thread );
      wff_utilities.$check_wff_coherenceP$.rebind( _prev_bind_8, thread );
      wff_utilities.$check_wff_semanticsP$.rebind( _prev_bind_7, thread );
      at_vars.$at_check_arg_typesP$.rebind( _prev_bind_6, thread );
      wff_utilities.$check_arg_typesP$.rebind( _prev_bind_5, thread );
      control_vars.$within_assert$.rebind( _prev_bind_4, thread );
      mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
    }
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 5815L)
  public static SubLObject get_gke_quantifiers()
  {
    return gke_process_results( NIL, $list8, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 6068L)
  public static SubLObject get_gke_quantifier_ranges()
  {
    return gke_process_results( NIL, $list9, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 6468L)
  public static SubLObject gke_list_item_comparator(final SubLObject item_a, final SubLObject item_b)
  {
    return Functions.funcall( Symbols.symbol_function( $sym12$STRING_LESSP ), item_a.first().first(), item_b.first().first() );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 6606L)
  public static SubLObject gke_process_results(final SubLObject should_sort, final SubLObject args, SubLObject generation_mt, SubLObject domain_mt)
  {
    if( generation_mt == UNPROVIDED )
    {
      generation_mt = pph_vars.$pph_language_mt$.getDynamicValue();
    }
    if( domain_mt == UNPROVIDED )
    {
      domain_mt = pph_vars.$pph_domain_mt$.getDynamicValue();
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject result = NIL;
    final SubLObject _prev_bind_0 = pph_vars.$pph_language_mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = pph_vars.$pph_domain_mt$.currentBinding( thread );
    try
    {
      pph_vars.$pph_language_mt$.bind( ( NIL != generation_mt ) ? pph_utilities.pph_canonicalize_hlmt( generation_mt ) : pph_vars.$pph_language_mt$.getDynamicValue( thread ), thread );
      pph_vars.$pph_domain_mt$.bind( ( NIL != domain_mt ) ? pph_utilities.pph_canonicalize_hlmt( domain_mt ) : pph_vars.$pph_domain_mt$.getDynamicValue( thread ), thread );
      final SubLObject _prev_bind_0_$6 = pph_macros.$free_pph_problem_store_pointers$.currentBinding( thread );
      try
      {
        pph_macros.$free_pph_problem_store_pointers$.bind( NIL, thread );
        thread.resetMultipleValues();
        final SubLObject _prev_bind_0_$7 = pph_macros.$pph_problem_store_pointer$.currentBinding( thread );
        try
        {
          pph_macros.$pph_problem_store_pointer$.bind( pph_macros.find_or_create_pph_problem_store_pointer(), thread );
          final SubLObject reuseP = thread.secondMultipleValue();
          thread.resetMultipleValues();
          try
          {
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$8 = pph_macros.$pph_memoization_state$.currentBinding( thread );
            try
            {
              pph_macros.$pph_memoization_state$.bind( pph_macros.find_or_create_pph_memoization_state(), thread );
              final SubLObject new_or_reused = thread.secondMultipleValue();
              thread.resetMultipleValues();
              final SubLObject _prev_bind_0_$9 = pph_macros.$pph_external_memoization_state$.currentBinding( thread );
              try
              {
                pph_macros.$pph_external_memoization_state$.bind( pph_macros.find_or_create_pph_external_memoization_state(), thread );
                final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue( thread );
                final SubLObject _prev_bind_0_$10 = memoization_state.$memoization_state$.currentBinding( thread );
                try
                {
                  memoization_state.$memoization_state$.bind( local_state, thread );
                  final SubLObject original_memoization_process = memoization_state.memoization_state_original_process( local_state );
                  try
                  {
                    result = Sequences.delete_if( Symbols.symbol_function( $sym13$NULL ), list_utilities.nmapcar( $sym14$NART_SUBSTITUTE, cardinality_estimates.sort_by_generality_estimate( Sequences.remove_duplicates(
                        list_utilities.first_n( $int15$200, args ), Symbols.symbol_function( EQUAL ), UNPROVIDED, UNPROVIDED, UNPROVIDED ), UNPROVIDED ) ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
                  }
                  finally
                  {
                    final SubLObject _prev_bind_0_$11 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                    try
                    {
                      Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                      final SubLObject _values = Values.getValuesAsVector();
                      memoization_state.memoization_state_possibly_clear_original_process( local_state, original_memoization_process );
                      Values.restoreValuesFromVector( _values );
                    }
                    finally
                    {
                      Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$11, thread );
                    }
                  }
                }
                finally
                {
                  memoization_state.$memoization_state$.rebind( _prev_bind_0_$10, thread );
                }
              }
              finally
              {
                pph_macros.$pph_external_memoization_state$.rebind( _prev_bind_0_$9, thread );
              }
              if( new_or_reused == $kw16$NEW && NIL != memoization_state.memoization_state_p( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) ) )
              {
                memoization_state.clear_all_memoization( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) );
              }
            }
            finally
            {
              pph_macros.$pph_memoization_state$.rebind( _prev_bind_0_$8, thread );
            }
          }
          finally
          {
            final SubLObject _prev_bind_0_$12 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
            try
            {
              Threads.$is_thread_performing_cleanupP$.bind( T, thread );
              final SubLObject _values2 = Values.getValuesAsVector();
              if( NIL == reuseP )
              {
                pph_macros.free_pph_problem_store_pointer( pph_macros.$pph_problem_store_pointer$.getDynamicValue( thread ) );
              }
              Values.restoreValuesFromVector( _values2 );
            }
            finally
            {
              Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$12, thread );
            }
          }
        }
        finally
        {
          pph_macros.$pph_problem_store_pointer$.rebind( _prev_bind_0_$7, thread );
        }
      }
      finally
      {
        pph_macros.$free_pph_problem_store_pointers$.rebind( _prev_bind_0_$6, thread );
      }
      result = api_widgets.convert_term_list_to_renderings_for_java( result, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
    }
    finally
    {
      pph_vars.$pph_domain_mt$.rebind( _prev_bind_2, thread );
      pph_vars.$pph_language_mt$.rebind( _prev_bind_0, thread );
    }
    if( NIL != should_sort )
    {
      return Sort.sort( result, Symbols.symbol_function( $sym17$GKE_LIST_ITEM_COMPARATOR ), UNPROVIDED );
    }
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 7459L)
  public static SubLObject get_gke_specs(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth, SubLObject orig_term)
  {
    if( orig_term == UNPROVIDED )
    {
      orig_term = NIL;
    }
    SubLObject result = NIL;
    if( NIL != orig_term && NIL != kb_accessors.individualP( orig_term ) )
    {
      result = rkf_ontology_utilities.rkf_instantiations( arg, domain_mt );
      if( NIL != list_utilities.lengthG( result, $int18$175, UNPROVIDED ) )
      {
        result = list_utilities.first_n( $int18$175, isa.asserted_instance( arg, domain_mt ) );
      }
    }
    result = ConsesLow.append( result, rkf_ontology_utilities.rkf_max_specs( arg, domain_mt ) );
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 7954L)
  public static SubLObject get_gke_genls(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth)
  {
    return rkf_ontology_utilities.rkf_all_genls( arg, domain_mt );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 8138L)
  public static SubLObject get_gke_spec_preds(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth)
  {
    SubLObject result = NIL;
    SubLObject cdolist_list_var = genl_predicates.max_spec_predicates( arg, domain_mt, UNPROVIDED );
    SubLObject spec_pred = NIL;
    spec_pred = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      if( NIL == gke_predicate_filteredP( spec_pred, domain_mt ) )
      {
        result = ConsesLow.cons( spec_pred, result );
      }
      cdolist_list_var = cdolist_list_var.rest();
      spec_pred = cdolist_list_var.first();
    }
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 8479L)
  public static SubLObject get_gke_genl_preds(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth)
  {
    SubLObject result = NIL;
    SubLObject cdolist_list_var = genl_predicates.genl_predicate_roots( arg, domain_mt, UNPROVIDED );
    SubLObject genl_pred = NIL;
    genl_pred = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      if( NIL == gke_predicate_filteredP( genl_pred, domain_mt ) )
      {
        result = ConsesLow.cons( genl_pred, result );
      }
      cdolist_list_var = cdolist_list_var.rest();
      genl_pred = cdolist_list_var.first();
    }
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 8821L)
  public static SubLObject get_gke_collection_siblings(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject result = NIL;
    final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( domain_mt );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
      mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
      mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
      result = Sequences.remove_if( $sym19$GKE_FILTERED_TERM_, list_utilities.flatten( Mapping.mapcar( Symbols.symbol_function( $sym20$RKF_MAX_SPECS ), Sequences.remove_if( $sym19$GKE_FILTERED_TERM_,
          cardinality_estimates.sort_by_generality_estimate( rkf_ontology_utilities.rkf_min_genls( arg, domain_mt ), UNPROVIDED ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED ) ) ), UNPROVIDED, UNPROVIDED, UNPROVIDED,
          UNPROVIDED );
      result = conses_high.union( result, Sequences.remove_if( $sym19$GKE_FILTERED_TERM_, list_utilities.flatten( Mapping.mapcar( Symbols.symbol_function( $sym20$RKF_MAX_SPECS ), Sequences.remove_if(
          $sym19$GKE_FILTERED_TERM_, cardinality_estimates.sort_by_generality_estimate( rkf_ontology_utilities.rkf_min_isa( arg, domain_mt ), UNPROVIDED ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED ) ) ),
          UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED ), UNPROVIDED, UNPROVIDED );
      result = conses_high.union( result, get_gke_instance_siblings( arg, arg_num, cycl_formula, domain_mt, depth ), UNPROVIDED, UNPROVIDED );
    }
    finally
    {
      mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
    }
    return Sequences.remove_duplicates( result, Symbols.symbol_function( EQUAL ), UNPROVIDED, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 9990L)
  public static SubLObject get_gke_instance_siblings(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject result = NIL;
    final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( mt_relevance_macros.determine_inference_mt_relevance_el_spec( domain_mt ) );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
      mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
      mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
      result = Sequences.remove_if( $sym19$GKE_FILTERED_TERM_, list_utilities.flatten( Mapping.mapcar( Symbols.symbol_function( $sym21$RKF_INSTANTIATIONS ), Sequences.remove_if( $sym19$GKE_FILTERED_TERM_,
          cardinality_estimates.sort_by_generality_estimate( rkf_ontology_utilities.rkf_min_isa( arg, domain_mt ), UNPROVIDED ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED ) ) ), UNPROVIDED, UNPROVIDED, UNPROVIDED,
          UNPROVIDED );
    }
    finally
    {
      mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
    }
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 10480L)
  public static SubLObject get_gke_siblings(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject result = NIL;
    final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( mt_relevance_macros.determine_inference_mt_relevance_el_spec( domain_mt ) );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
      mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
      mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
      result = Sequences.reverse( list_utilities.flatten( Mapping.mapcar( Symbols.symbol_function( $sym20$RKF_MAX_SPECS ), rkf_ontology_utilities.rkf_min_genls( arg, UNPROVIDED ) ) ) );
    }
    finally
    {
      mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
    }
    return gke_process_results( T, result, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 10791L)
  public static SubLObject add_self_to_quantify_over_isas(final SubLObject arg, final SubLObject domain_mt, final SubLObject alist)
  {
    if( NIL != isa.isaP( arg, $const22$Collection, domain_mt, UNPROVIDED ) )
    {
      return ConsesLow.cons( arg, alist );
    }
    return alist;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 10986L)
  public static SubLObject get_gke_quantify_over_isas(final SubLObject arg, final SubLObject generation_mt, SubLObject domain_mt, final SubLObject depth)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    domain_mt = hlmt_czer.canonicalize_hlmt( domain_mt );
    SubLObject result = NIL;
    final SubLObject _prev_bind_0 = pph_vars.$pph_language_mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = pph_vars.$pph_domain_mt$.currentBinding( thread );
    try
    {
      pph_vars.$pph_language_mt$.bind( ( NIL != generation_mt ) ? pph_utilities.pph_canonicalize_hlmt( generation_mt ) : pph_vars.$pph_language_mt$.getDynamicValue( thread ), thread );
      pph_vars.$pph_domain_mt$.bind( ( NIL != domain_mt ) ? pph_utilities.pph_canonicalize_hlmt( domain_mt ) : pph_vars.$pph_domain_mt$.getDynamicValue( thread ), thread );
      result = gke_process_results( NIL, add_self_to_quantify_over_isas( arg, domain_mt, Sequences.remove_if( $sym23$GKE_ISAS_FILTERED_TERM, list_utilities.flatten( Mapping.mapcar( $sym24$ALL_GENLS, Sequences.remove_if(
          $sym23$GKE_ISAS_FILTERED_TERM, isa.all_isa( arg, domain_mt, UNPROVIDED ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED ) ) ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED ) ), UNPROVIDED, UNPROVIDED );
    }
    finally
    {
      pph_vars.$pph_domain_mt$.rebind( _prev_bind_2, thread );
      pph_vars.$pph_language_mt$.rebind( _prev_bind_0, thread );
    }
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 11780L)
  public static SubLObject get_gke_isas(final SubLObject arg, final SubLObject arg_num, final SubLObject cycl_formula, final SubLObject domain_mt, final SubLObject depth)
  {
    return Sequences.remove_if( $sym23$GKE_ISAS_FILTERED_TERM, list_utilities.flatten( Mapping.mapcar( $sym25$RKF_ALL_GENLS, Sequences.remove_if( $sym23$GKE_ISAS_FILTERED_TERM, rkf_ontology_utilities.rkf_all_isa( arg,
        domain_mt ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED ) ) ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12170L)
  public static SubLObject clear_gke_isas_filtered_term()
  {
    final SubLObject cs = $gke_isas_filtered_term_caching_state$.getGlobalValue();
    if( NIL != cs )
    {
      memoization_state.caching_state_clear( cs );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12170L)
  public static SubLObject remove_gke_isas_filtered_term(final SubLObject v_term, SubLObject domain_mt)
  {
    if( domain_mt == UNPROVIDED )
    {
      domain_mt = mt_relevance_macros.$mt$.getDynamicValue();
    }
    return memoization_state.caching_state_remove_function_results_with_args( $gke_isas_filtered_term_caching_state$.getGlobalValue(), ConsesLow.list( v_term, domain_mt ), UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12170L)
  public static SubLObject gke_isas_filtered_term_internal(final SubLObject v_term, final SubLObject domain_mt)
  {
    final SubLObject overly_general_collections = NIL;
    return makeBoolean( NIL == v_term || NIL != subl_promotions.memberP( v_term, overly_general_collections, UNPROVIDED, UNPROVIDED ) || NIL != rkf_relevance_utilities.rkf_irrelevant_term( v_term, domain_mt ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12170L)
  public static SubLObject gke_isas_filtered_term(final SubLObject v_term, SubLObject domain_mt)
  {
    if( domain_mt == UNPROVIDED )
    {
      domain_mt = mt_relevance_macros.$mt$.getDynamicValue();
    }
    SubLObject caching_state = $gke_isas_filtered_term_caching_state$.getGlobalValue();
    if( NIL == caching_state )
    {
      caching_state = memoization_state.create_global_caching_state_for_name( $sym23$GKE_ISAS_FILTERED_TERM, $sym26$_GKE_ISAS_FILTERED_TERM_CACHING_STATE_, NIL, EQUAL, TWO_INTEGER, ZERO_INTEGER );
    }
    final SubLObject sxhash = memoization_state.sxhash_calc_2( v_term, domain_mt );
    final SubLObject collisions = memoization_state.caching_state_lookup( caching_state, sxhash, UNPROVIDED );
    if( !collisions.eql( memoization_state.$memoized_item_not_found$.getGlobalValue() ) )
    {
      SubLObject cdolist_list_var = collisions;
      SubLObject collision = NIL;
      collision = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        SubLObject cached_args = collision.first();
        final SubLObject results2 = conses_high.second( collision );
        if( v_term.equal( cached_args.first() ) )
        {
          cached_args = cached_args.rest();
          if( NIL != cached_args && NIL == cached_args.rest() && domain_mt.equal( cached_args.first() ) )
          {
            return memoization_state.caching_results( results2 );
          }
        }
        cdolist_list_var = cdolist_list_var.rest();
        collision = cdolist_list_var.first();
      }
    }
    final SubLObject results3 = Values.arg2( Values.resetMultipleValues(), Values.multiple_value_list( gke_isas_filtered_term_internal( v_term, domain_mt ) ) );
    memoization_state.caching_state_enter_multi_key_n( caching_state, sxhash, collisions, results3, ConsesLow.list( v_term, domain_mt ) );
    return memoization_state.caching_results( results3 );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12936L)
  public static SubLObject clear_gke_filtered_termP()
  {
    final SubLObject cs = $gke_filtered_termP_caching_state$.getGlobalValue();
    if( NIL != cs )
    {
      memoization_state.caching_state_clear( cs );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12936L)
  public static SubLObject remove_gke_filtered_termP(final SubLObject v_term, SubLObject domain_mt)
  {
    if( domain_mt == UNPROVIDED )
    {
      domain_mt = mt_relevance_macros.$mt$.getDynamicValue();
    }
    return memoization_state.caching_state_remove_function_results_with_args( $gke_filtered_termP_caching_state$.getGlobalValue(), ConsesLow.list( v_term, domain_mt ), UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12936L)
  public static SubLObject gke_filtered_termP_internal(final SubLObject v_term, final SubLObject domain_mt)
  {
    return makeBoolean( v_term == NIL || NIL != subl_promotions.memberP( cycl_utilities.hl_to_el( v_term ), $gke_overly_general_non_predicate_types$.getGlobalValue(), Symbols.symbol_function( EQUAL ), UNPROVIDED )
        || ( NIL != fort_types_interface.predicate_p( v_term ) && NIL != gke_predicate_filteredP( v_term, domain_mt ) ) || NIL != rkf_relevance_utilities.rkf_irrelevant_term( v_term, domain_mt )
        || NIL != rkf_relevance_utilities.rkf_irrelevant_precision_suggestion( v_term, domain_mt ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 12936L)
  public static SubLObject gke_filtered_termP(final SubLObject v_term, SubLObject domain_mt)
  {
    if( domain_mt == UNPROVIDED )
    {
      domain_mt = mt_relevance_macros.$mt$.getDynamicValue();
    }
    SubLObject caching_state = $gke_filtered_termP_caching_state$.getGlobalValue();
    if( NIL == caching_state )
    {
      caching_state = memoization_state.create_global_caching_state_for_name( $sym19$GKE_FILTERED_TERM_, $sym28$_GKE_FILTERED_TERM__CACHING_STATE_, NIL, EQUAL, TWO_INTEGER, ZERO_INTEGER );
    }
    final SubLObject sxhash = memoization_state.sxhash_calc_2( v_term, domain_mt );
    final SubLObject collisions = memoization_state.caching_state_lookup( caching_state, sxhash, UNPROVIDED );
    if( !collisions.eql( memoization_state.$memoized_item_not_found$.getGlobalValue() ) )
    {
      SubLObject cdolist_list_var = collisions;
      SubLObject collision = NIL;
      collision = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        SubLObject cached_args = collision.first();
        final SubLObject results2 = conses_high.second( collision );
        if( v_term.equal( cached_args.first() ) )
        {
          cached_args = cached_args.rest();
          if( NIL != cached_args && NIL == cached_args.rest() && domain_mt.equal( cached_args.first() ) )
          {
            return memoization_state.caching_results( results2 );
          }
        }
        cdolist_list_var = cdolist_list_var.rest();
        collision = cdolist_list_var.first();
      }
    }
    final SubLObject results3 = Values.arg2( Values.resetMultipleValues(), Values.multiple_value_list( gke_filtered_termP_internal( v_term, domain_mt ) ) );
    memoization_state.caching_state_enter_multi_key_n( caching_state, sxhash, collisions, results3, ConsesLow.list( v_term, domain_mt ) );
    return memoization_state.caching_results( results3 );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 13638L)
  public static SubLObject clear_gke_predicate_filteredP()
  {
    final SubLObject cs = $gke_predicate_filteredP_caching_state$.getGlobalValue();
    if( NIL != cs )
    {
      memoization_state.caching_state_clear( cs );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 13638L)
  public static SubLObject remove_gke_predicate_filteredP(final SubLObject predicate, final SubLObject domain_mt)
  {
    return memoization_state.caching_state_remove_function_results_with_args( $gke_predicate_filteredP_caching_state$.getGlobalValue(), ConsesLow.list( predicate, domain_mt ), UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 13638L)
  public static SubLObject gke_predicate_filteredP_internal(final SubLObject predicate, final SubLObject domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject goodP = NIL;
    if( NIL == subl_promotions.memberP( predicate, $gke_overly_general_predicate_types$.getGlobalValue(), UNPROVIDED, UNPROVIDED ) )
    {
      final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( mt_relevance_macros.determine_inference_mt_relevance_el_spec( domain_mt ) );
      final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
      final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
      final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
      try
      {
        mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
        mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
        mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
        if( NIL == goodP )
        {
          SubLObject csome_list_var;
          SubLObject pred;
          for( csome_list_var = $list32, pred = NIL, pred = csome_list_var.first(); NIL == goodP && NIL != csome_list_var; goodP = kb_mapping_utilities.some_pred_value( predicate, pred, ONE_INTEGER,
              $kw31$TRUE ), csome_list_var = csome_list_var.rest(), pred = csome_list_var.first() )
          {
          }
        }
      }
      finally
      {
        mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
        mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
        mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
      }
    }
    return makeBoolean( NIL == goodP );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 13638L)
  public static SubLObject gke_predicate_filteredP(final SubLObject predicate, final SubLObject domain_mt)
  {
    SubLObject caching_state = $gke_predicate_filteredP_caching_state$.getGlobalValue();
    if( NIL == caching_state )
    {
      caching_state = memoization_state.create_global_caching_state_for_name( $sym30$GKE_PREDICATE_FILTERED_, $sym33$_GKE_PREDICATE_FILTERED__CACHING_STATE_, NIL, EQUAL, TWO_INTEGER, ZERO_INTEGER );
    }
    final SubLObject sxhash = memoization_state.sxhash_calc_2( predicate, domain_mt );
    final SubLObject collisions = memoization_state.caching_state_lookup( caching_state, sxhash, UNPROVIDED );
    if( !collisions.eql( memoization_state.$memoized_item_not_found$.getGlobalValue() ) )
    {
      SubLObject cdolist_list_var = collisions;
      SubLObject collision = NIL;
      collision = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        SubLObject cached_args = collision.first();
        final SubLObject results2 = conses_high.second( collision );
        if( predicate.equal( cached_args.first() ) )
        {
          cached_args = cached_args.rest();
          if( NIL != cached_args && NIL == cached_args.rest() && domain_mt.equal( cached_args.first() ) )
          {
            return memoization_state.caching_results( results2 );
          }
        }
        cdolist_list_var = cdolist_list_var.rest();
        collision = cdolist_list_var.first();
      }
    }
    final SubLObject results3 = Values.arg2( Values.resetMultipleValues(), Values.multiple_value_list( gke_predicate_filteredP_internal( predicate, domain_mt ) ) );
    memoization_state.caching_state_enter_multi_key_n( caching_state, sxhash, collisions, results3, ConsesLow.list( predicate, domain_mt ) );
    return memoization_state.caching_results( results3 );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 14060L)
  public static SubLObject terms_pass_constraints(final SubLObject replacement_terms, final SubLObject term_position, final SubLObject formula, final SubLObject domain_mt)
  {
    assert NIL != Types.listp( replacement_terms ) : replacement_terms;
    assert NIL != list_utilities.tree_position_p( term_position ) : term_position;
    assert NIL != collection_defns.cycl_formulaP( formula ) : formula;
    final SubLObject mt = hlmt_czer.canonicalize_hlmt( domain_mt );
    assert NIL != hlmt.hlmt_p( mt ) : mt;
    if( list_utilities.last_one( term_position ).isZero() )
    {
      return operator_terms_pass_constraints( replacement_terms, term_position, formula, mt );
    }
    return argument_terms_pass_constraints( replacement_terms, term_position, formula, mt );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 14717L)
  public static SubLObject operator_terms_pass_constraints(final SubLObject replacement_terms, final SubLObject term_position, final SubLObject formula, final SubLObject domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    if( NIL == Errors.$ignore_mustsP$.getDynamicValue( thread ) && !list_utilities.last_one( term_position ).isZero() )
    {
      Errors.error( $str38$OPERATOR_TERMS_PASS_CONSTRAINTS_r, term_position );
    }
    SubLObject new_formula = el_utilities.copy_expression( formula );
    SubLObject result = NIL;
    final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( domain_mt );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
    final SubLObject _prev_bind_4 = wff_vars.$provide_wff_suggestionsP$.currentBinding( thread );
    final SubLObject _prev_bind_5 = czer_vars.$simplify_literalP$.currentBinding( thread );
    final SubLObject _prev_bind_6 = system_parameters.$suspend_sbhl_type_checkingP$.currentBinding( thread );
    final SubLObject _prev_bind_7 = control_vars.$within_assert$.currentBinding( thread );
    final SubLObject _prev_bind_8 = wff_vars.$validate_constantsP$.currentBinding( thread );
    final SubLObject _prev_bind_9 = wff_vars.$permit_keyword_variablesP$.currentBinding( thread );
    final SubLObject _prev_bind_10 = wff_utilities.$check_var_typesP$.currentBinding( thread );
    final SubLObject _prev_bind_11 = wff_utilities.$check_arityP$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
      mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
      mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
      wff_vars.$provide_wff_suggestionsP$.bind( NIL, thread );
      czer_vars.$simplify_literalP$.bind( NIL, thread );
      system_parameters.$suspend_sbhl_type_checkingP$.bind( T, thread );
      control_vars.$within_assert$.bind( NIL, thread );
      wff_vars.$validate_constantsP$.bind( NIL, thread );
      wff_vars.$permit_keyword_variablesP$.bind( NIL, thread );
      wff_utilities.$check_var_typesP$.bind( NIL, thread );
      wff_utilities.$check_arityP$.bind( NIL, thread );
      final SubLObject local_state;
      final SubLObject state = local_state = memoization_state.new_memoization_state( UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
      final SubLObject _prev_bind_0_$13 = memoization_state.$memoization_state$.currentBinding( thread );
      try
      {
        memoization_state.$memoization_state$.bind( local_state, thread );
        final SubLObject original_memoization_process = memoization_state.memoization_state_original_process( local_state );
        try
        {
          final SubLObject already_resourcing_p = sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.getDynamicValue( thread );
          final SubLObject _prev_bind_0_$14 = sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.currentBinding( thread );
          final SubLObject _prev_bind_1_$15 = sbhl_marking_vars.$resourced_sbhl_marking_spaces$.currentBinding( thread );
          final SubLObject _prev_bind_2_$16 = sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.currentBinding( thread );
          try
          {
            sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.bind( sbhl_marking_vars.determine_resource_limit( already_resourcing_p, SIX_INTEGER ), thread );
            sbhl_marking_vars.$resourced_sbhl_marking_spaces$.bind( sbhl_marking_vars.possibly_new_marking_resource( already_resourcing_p ), thread );
            sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.bind( T, thread );
            SubLObject cdolist_list_var = replacement_terms;
            SubLObject v_term = NIL;
            v_term = cdolist_list_var.first();
            while ( NIL != cdolist_list_var)
            {
              new_formula = cycl_utilities.formula_arg_position_nsubst( v_term, term_position, new_formula );
              result = ConsesLow.cons( T, result );
              cdolist_list_var = cdolist_list_var.rest();
              v_term = cdolist_list_var.first();
            }
          }
          finally
          {
            sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.rebind( _prev_bind_2_$16, thread );
            sbhl_marking_vars.$resourced_sbhl_marking_spaces$.rebind( _prev_bind_1_$15, thread );
            sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.rebind( _prev_bind_0_$14, thread );
          }
        }
        finally
        {
          final SubLObject _prev_bind_0_$15 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
          try
          {
            Threads.$is_thread_performing_cleanupP$.bind( T, thread );
            final SubLObject _values = Values.getValuesAsVector();
            memoization_state.memoization_state_possibly_clear_original_process( local_state, original_memoization_process );
            Values.restoreValuesFromVector( _values );
          }
          finally
          {
            Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$15, thread );
          }
        }
      }
      finally
      {
        memoization_state.$memoization_state$.rebind( _prev_bind_0_$13, thread );
      }
    }
    finally
    {
      wff_utilities.$check_arityP$.rebind( _prev_bind_11, thread );
      wff_utilities.$check_var_typesP$.rebind( _prev_bind_10, thread );
      wff_vars.$permit_keyword_variablesP$.rebind( _prev_bind_9, thread );
      wff_vars.$validate_constantsP$.rebind( _prev_bind_8, thread );
      control_vars.$within_assert$.rebind( _prev_bind_7, thread );
      system_parameters.$suspend_sbhl_type_checkingP$.rebind( _prev_bind_6, thread );
      czer_vars.$simplify_literalP$.rebind( _prev_bind_5, thread );
      wff_vars.$provide_wff_suggestionsP$.rebind( _prev_bind_4, thread );
      mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
    }
    return Sequences.nreverse( result );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 16345L)
  public static SubLObject argument_terms_pass_constraints(final SubLObject replacement_terms, final SubLObject term_position, final SubLObject formula, final SubLObject domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    if( NIL == Errors.$ignore_mustsP$.getDynamicValue( thread ) && list_utilities.last_one( term_position ).isZero() )
    {
      Errors.error( $str39$OPERATOR_TERMS_PASS_CONSTRAINTS_r, term_position );
    }
    if( NIL != $use_rbp_wff_in_gkeP$.getDynamicValue( thread ) )
    {
      SubLObject result = NIL;
      final SubLObject _prev_bind_0 = parsing_vars.$parsing_domain_mt$.currentBinding( thread );
      try
      {
        parsing_vars.$parsing_domain_mt$.bind( domain_mt, thread );
        result = rbp_wff.rbp_wff_check_formula_arg_position_replacements( formula, term_position, replacement_terms );
      }
      finally
      {
        parsing_vars.$parsing_domain_mt$.rebind( _prev_bind_0, thread );
      }
      return result;
    }
    return argument_terms_pass_isa_genls_constraints( replacement_terms, term_position, formula, domain_mt );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 17061L)
  public static SubLObject argument_terms_pass_isa_genls_constraints(final SubLObject replacement_terms, final SubLObject term_position, final SubLObject formula, final SubLObject domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    final SubLObject result_vector = Vectors.make_vector( Sequences.length( replacement_terms ), UNPROVIDED );
    final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( domain_mt );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
      mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
      mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
      final SubLObject already_resourcing_p = sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.getDynamicValue( thread );
      final SubLObject _prev_bind_0_$18 = sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.currentBinding( thread );
      final SubLObject _prev_bind_1_$19 = sbhl_marking_vars.$resourced_sbhl_marking_spaces$.currentBinding( thread );
      final SubLObject _prev_bind_2_$20 = sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.currentBinding( thread );
      try
      {
        sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.bind( sbhl_marking_vars.determine_resource_limit( already_resourcing_p, SIX_INTEGER ), thread );
        sbhl_marking_vars.$resourced_sbhl_marking_spaces$.bind( sbhl_marking_vars.possibly_new_marking_resource( already_resourcing_p ), thread );
        sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.bind( T, thread );
        thread.resetMultipleValues();
        final SubLObject isa_constraints = at_utilities.term_position_requires_types_in_relation( term_position, formula, UNPROVIDED );
        final SubLObject genl_constraints = thread.secondMultipleValue();
        thread.resetMultipleValues();
        SubLObject list_var = NIL;
        SubLObject v_term = NIL;
        SubLObject n = NIL;
        list_var = replacement_terms;
        v_term = list_var.first();
        for( n = ZERO_INTEGER; NIL != list_var; list_var = list_var.rest(), v_term = list_var.first(), n = Numbers.add( ONE_INTEGER, n ) )
        {
          SubLObject problemP = makeBoolean( NIL == cycl_grammar.cycl_denotational_term_p( v_term ) );
          if( NIL == problemP )
          {
            SubLObject csome_list_var = genl_constraints;
            SubLObject required_genl = NIL;
            required_genl = csome_list_var.first();
            while ( NIL == problemP && NIL != csome_list_var)
            {
              if( NIL == genls.genlsP( v_term, required_genl, UNPROVIDED, UNPROVIDED ) )
              {
                problemP = T;
              }
              csome_list_var = csome_list_var.rest();
              required_genl = csome_list_var.first();
            }
          }
          if( NIL == problemP )
          {
            SubLObject csome_list_var = isa_constraints;
            SubLObject required_isa = NIL;
            required_isa = csome_list_var.first();
            while ( NIL == problemP && NIL != csome_list_var)
            {
              if( NIL == isa.isaP( v_term, required_isa, UNPROVIDED, UNPROVIDED ) )
              {
                problemP = T;
              }
              csome_list_var = csome_list_var.rest();
              required_isa = csome_list_var.first();
            }
          }
          Vectors.set_aref( result_vector, n, makeBoolean( NIL == problemP ) );
        }
      }
      finally
      {
        sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.rebind( _prev_bind_2_$20, thread );
        sbhl_marking_vars.$resourced_sbhl_marking_spaces$.rebind( _prev_bind_1_$19, thread );
        sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.rebind( _prev_bind_0_$18, thread );
      }
    }
    finally
    {
      mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
    }
    return vector_utilities.vector_elements( result_vector, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 17904L)
  public static SubLObject get_gke_naut_arg_position(SubLObject arg_pos, final SubLObject cycl_formula, final SubLObject domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject ret_arg_pos = arg_pos;
    final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( mt_relevance_macros.determine_inference_mt_relevance_el_spec( domain_mt ) );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
      mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
      mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
      if( NIL != el_utilities.possibly_naut_p( cycl_utilities.formula_arg_position( cycl_formula, arg_pos, UNPROVIDED ) ) )
      {
        ret_arg_pos = arg_pos;
      }
      else
      {
        SubLObject possible_naut = NIL;
        SubLObject end;
        SubLObject i;
        for( end = Numbers.subtract( Sequences.length( arg_pos ), ONE_INTEGER ), i = NIL, i = ZERO_INTEGER; !i.numGE( end ); i = Numbers.add( i, ONE_INTEGER ) )
        {
          arg_pos = list_utilities.remove_last( arg_pos );
          possible_naut = cycl_utilities.formula_arg_position( cycl_formula, arg_pos, UNPROVIDED );
          if( NIL != cycl_grammar.cycl_nat_p( possible_naut ) )
          {
            ret_arg_pos = arg_pos;
            i = end;
          }
        }
      }
    }
    finally
    {
      mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
    }
    return ret_arg_pos;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 19079L)
  public static SubLObject get_gke_is_known(final SubLObject cycl_formula, final SubLObject domain_mt)
  {
    return rkf_query_utilities.rkf_known( cycl_formula, domain_mt, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 19183L)
  public static SubLObject simulate_gke_query_paraphrase(final SubLObject query_sentence, SubLObject mode, SubLObject terseP, SubLObject task)
  {
    if( mode == UNPROVIDED )
    {
      mode = $kw42$HTML;
    }
    if( terseP == UNPROVIDED )
    {
      terseP = T;
    }
    if( task == UNPROVIDED )
    {
      task = $const43$GenericIntelligenceAnalysis_CAE_A;
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    final SubLObject paraphrase_mt = query_library_utils.cae_default_paraphrase_mt( task );
    final SubLObject nl_domain_mt = query_library_utils.cae_default_nl_domain_mt( task );
    thread.resetMultipleValues();
    final SubLObject javalist = ( NIL != terseP ) ? simulate_gke_query_paraphrase_terse( query_sentence, paraphrase_mt, nl_domain_mt )
        : simulate_gke_query_paraphrase_verbose( query_sentence, paraphrase_mt, nl_domain_mt );
    final SubLObject supports = thread.secondMultipleValue();
    thread.resetMultipleValues();
    final SubLObject pcase_var = mode;
    if( pcase_var.eql( $kw42$HTML ) )
    {
      return Values.values( pph_utilities.pph_javalist_html_string( javalist, UNPROVIDED ), supports );
    }
    if( pcase_var.eql( $kw44$TEXT ) )
    {
      return Values.values( pph_utilities.pph_javalist_string( javalist ), supports );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 20044L)
  public static SubLObject simulate_ccf_paraphrase(final SubLObject query_sentence, SubLObject mode, SubLObject terse)
  {
    if( mode == UNPROVIDED )
    {
      mode = $kw42$HTML;
    }
    if( terse == UNPROVIDED )
    {
      terse = T;
    }
    return html_utilities.html_markup( simulate_gke_query_paraphrase( query_sentence, mode, terse, $const45$GenericMedicalResearchTask_Allotm ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 20255L)
  public static SubLObject simulate_ccf3_paraphrase(final SubLObject query_sentence, SubLObject mode, SubLObject terse)
  {
    if( mode == UNPROVIDED )
    {
      mode = $kw42$HTML;
    }
    if( terse == UNPROVIDED )
    {
      terse = T;
    }
    return html_utilities.html_markup( simulate_gke3_query_paraphrase( query_sentence, mode, terse, $const45$GenericMedicalResearchTask_Allotm ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 20470L)
  public static SubLObject simulate_gke_query_paraphrase_terse(final SubLObject query_sentence, final SubLObject paraphrase_mt, final SubLObject nl_domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject javalist = NIL;
    SubLObject supports = NIL;
    final SubLObject _prev_bind_0 = pph_vars.$pph_terse_modeP$.currentBinding( thread );
    final SubLObject _prev_bind_2 = pph_vars.$pph_use_bulleted_listsP$.currentBinding( thread );
    final SubLObject _prev_bind_3 = pph_vars.$pph_replace_bulleted_list_tagsP$.currentBinding( thread );
    final SubLObject _prev_bind_4 = pph_vars.$paraphrase_precision$.currentBinding( thread );
    final SubLObject _prev_bind_5 = pph_vars.$pph_terse_mt_scopeP$.currentBinding( thread );
    final SubLObject _prev_bind_6 = pph_vars.$pph_maximize_linksP$.currentBinding( thread );
    final SubLObject _prev_bind_7 = pph_vars.$pph_link_arg0P$.currentBinding( thread );
    final SubLObject _prev_bind_8 = pph_vars.$pph_consolidate_output_list_for_natP$.currentBinding( thread );
    final SubLObject _prev_bind_9 = pph_vars.$pph_use_smart_variable_replacementP$.currentBinding( thread );
    final SubLObject _prev_bind_10 = pph_vars.$pph_demerit_cutoff$.currentBinding( thread );
    final SubLObject _prev_bind_11 = pph_vars.$pph_use_title_capitalizationP$.currentBinding( thread );
    final SubLObject _prev_bind_12 = pph_vars.$pph_use_indexical_datesP$.currentBinding( thread );
    final SubLObject _prev_bind_13 = pph_vars.$pph_addressee$.currentBinding( thread );
    final SubLObject _prev_bind_14 = pph_vars.$pph_speaker$.currentBinding( thread );
    final SubLObject _prev_bind_15 = pph_vars.$pph_quantify_varsP$.currentBinding( thread );
    try
    {
      pph_vars.$pph_terse_modeP$.bind( T, thread );
      pph_vars.$pph_use_bulleted_listsP$.bind( T, thread );
      pph_vars.$pph_replace_bulleted_list_tagsP$.bind( T, thread );
      pph_vars.$paraphrase_precision$.bind( NIL, thread );
      pph_vars.$pph_terse_mt_scopeP$.bind( T, thread );
      pph_vars.$pph_maximize_linksP$.bind( NIL, thread );
      pph_vars.$pph_link_arg0P$.bind( T, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.bind( NIL, thread );
      pph_vars.$pph_use_smart_variable_replacementP$.bind( T, thread );
      pph_vars.$pph_demerit_cutoff$.bind( number_utilities.positive_infinity(), thread );
      pph_vars.$pph_use_title_capitalizationP$.bind( NIL, thread );
      pph_vars.$pph_use_indexical_datesP$.bind( NIL, thread );
      pph_vars.$pph_addressee$.bind( $kw46$UNKNOWN, thread );
      pph_vars.$pph_speaker$.bind( $kw46$UNKNOWN, thread );
      pph_vars.$pph_quantify_varsP$.bind( NIL, thread );
      thread.resetMultipleValues();
      final SubLObject the_javalist = pph_main.generate_phrase_for_java( query_sentence, $kw47$DEFAULT, $kw48$DECLARATIVE, paraphrase_mt, nl_domain_mt, UNPROVIDED );
      final SubLObject ignore_me = thread.secondMultipleValue();
      final SubLObject the_justification = thread.thirdMultipleValue();
      thread.resetMultipleValues();
      javalist = the_javalist;
      supports = the_justification;
    }
    finally
    {
      pph_vars.$pph_quantify_varsP$.rebind( _prev_bind_15, thread );
      pph_vars.$pph_speaker$.rebind( _prev_bind_14, thread );
      pph_vars.$pph_addressee$.rebind( _prev_bind_13, thread );
      pph_vars.$pph_use_indexical_datesP$.rebind( _prev_bind_12, thread );
      pph_vars.$pph_use_title_capitalizationP$.rebind( _prev_bind_11, thread );
      pph_vars.$pph_demerit_cutoff$.rebind( _prev_bind_10, thread );
      pph_vars.$pph_use_smart_variable_replacementP$.rebind( _prev_bind_9, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.rebind( _prev_bind_8, thread );
      pph_vars.$pph_link_arg0P$.rebind( _prev_bind_7, thread );
      pph_vars.$pph_maximize_linksP$.rebind( _prev_bind_6, thread );
      pph_vars.$pph_terse_mt_scopeP$.rebind( _prev_bind_5, thread );
      pph_vars.$paraphrase_precision$.rebind( _prev_bind_4, thread );
      pph_vars.$pph_replace_bulleted_list_tagsP$.rebind( _prev_bind_3, thread );
      pph_vars.$pph_use_bulleted_listsP$.rebind( _prev_bind_2, thread );
      pph_vars.$pph_terse_modeP$.rebind( _prev_bind_0, thread );
    }
    return Values.values( javalist, supports );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 21435L)
  public static SubLObject simulate_gke_query_paraphrase_verbose(final SubLObject query_sentence, final SubLObject paraphrase_mt, final SubLObject nl_domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject javalist = NIL;
    SubLObject supports = NIL;
    final SubLObject _prev_bind_0 = pph_vars.$pph_terse_modeP$.currentBinding( thread );
    final SubLObject _prev_bind_2 = pph_vars.$pph_use_bulleted_listsP$.currentBinding( thread );
    final SubLObject _prev_bind_3 = pph_vars.$pph_replace_bulleted_list_tagsP$.currentBinding( thread );
    final SubLObject _prev_bind_4 = pph_vars.$paraphrase_precision$.currentBinding( thread );
    final SubLObject _prev_bind_5 = pph_vars.$pph_terse_mt_scopeP$.currentBinding( thread );
    final SubLObject _prev_bind_6 = pph_vars.$pph_maximize_linksP$.currentBinding( thread );
    final SubLObject _prev_bind_7 = pph_vars.$pph_link_arg0P$.currentBinding( thread );
    final SubLObject _prev_bind_8 = pph_vars.$pph_consolidate_output_list_for_natP$.currentBinding( thread );
    final SubLObject _prev_bind_9 = pph_vars.$pph_use_smart_variable_replacementP$.currentBinding( thread );
    final SubLObject _prev_bind_10 = pph_vars.$pph_demerit_cutoff$.currentBinding( thread );
    final SubLObject _prev_bind_11 = pph_vars.$pph_use_title_capitalizationP$.currentBinding( thread );
    final SubLObject _prev_bind_12 = pph_vars.$pph_use_indexical_datesP$.currentBinding( thread );
    final SubLObject _prev_bind_13 = pph_vars.$pph_addressee$.currentBinding( thread );
    final SubLObject _prev_bind_14 = pph_vars.$pph_speaker$.currentBinding( thread );
    final SubLObject _prev_bind_15 = pph_vars.$pph_quantify_varsP$.currentBinding( thread );
    try
    {
      pph_vars.$pph_terse_modeP$.bind( NIL, thread );
      pph_vars.$pph_use_bulleted_listsP$.bind( T, thread );
      pph_vars.$pph_replace_bulleted_list_tagsP$.bind( T, thread );
      pph_vars.$paraphrase_precision$.bind( NIL, thread );
      pph_vars.$pph_terse_mt_scopeP$.bind( T, thread );
      pph_vars.$pph_maximize_linksP$.bind( T, thread );
      pph_vars.$pph_link_arg0P$.bind( T, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.bind( NIL, thread );
      pph_vars.$pph_use_smart_variable_replacementP$.bind( T, thread );
      pph_vars.$pph_demerit_cutoff$.bind( number_utilities.positive_infinity(), thread );
      pph_vars.$pph_use_title_capitalizationP$.bind( NIL, thread );
      pph_vars.$pph_use_indexical_datesP$.bind( NIL, thread );
      pph_vars.$pph_addressee$.bind( $kw46$UNKNOWN, thread );
      pph_vars.$pph_speaker$.bind( $kw46$UNKNOWN, thread );
      pph_vars.$pph_quantify_varsP$.bind( NIL, thread );
      thread.resetMultipleValues();
      final SubLObject the_javalist = pph_main.generate_phrase_for_java( query_sentence, $kw47$DEFAULT, $kw48$DECLARATIVE, paraphrase_mt, nl_domain_mt, UNPROVIDED );
      final SubLObject ignore_me = thread.secondMultipleValue();
      final SubLObject the_justification = thread.thirdMultipleValue();
      thread.resetMultipleValues();
      javalist = the_javalist;
      supports = the_justification;
    }
    finally
    {
      pph_vars.$pph_quantify_varsP$.rebind( _prev_bind_15, thread );
      pph_vars.$pph_speaker$.rebind( _prev_bind_14, thread );
      pph_vars.$pph_addressee$.rebind( _prev_bind_13, thread );
      pph_vars.$pph_use_indexical_datesP$.rebind( _prev_bind_12, thread );
      pph_vars.$pph_use_title_capitalizationP$.rebind( _prev_bind_11, thread );
      pph_vars.$pph_demerit_cutoff$.rebind( _prev_bind_10, thread );
      pph_vars.$pph_use_smart_variable_replacementP$.rebind( _prev_bind_9, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.rebind( _prev_bind_8, thread );
      pph_vars.$pph_link_arg0P$.rebind( _prev_bind_7, thread );
      pph_vars.$pph_maximize_linksP$.rebind( _prev_bind_6, thread );
      pph_vars.$pph_terse_mt_scopeP$.rebind( _prev_bind_5, thread );
      pph_vars.$paraphrase_precision$.rebind( _prev_bind_4, thread );
      pph_vars.$pph_replace_bulleted_list_tagsP$.rebind( _prev_bind_3, thread );
      pph_vars.$pph_use_bulleted_listsP$.rebind( _prev_bind_2, thread );
      pph_vars.$pph_terse_modeP$.rebind( _prev_bind_0, thread );
    }
    return Values.values( javalist, supports );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 22413L)
  public static SubLObject simulate_gke3_query_paraphrase(final SubLObject query_sentence, SubLObject mode, SubLObject terseP, SubLObject task)
  {
    if( mode == UNPROVIDED )
    {
      mode = $kw42$HTML;
    }
    if( terseP == UNPROVIDED )
    {
      terseP = T;
    }
    if( task == UNPROVIDED )
    {
      task = $const43$GenericIntelligenceAnalysis_CAE_A;
    }
    final SubLObject params_$21;
    final SubLObject params = params_$21 = nl_generation_api.new_pph_parameters( UNPROVIDED );
    pph_parameter_declarations.set_pph_lexical_context_internal( params_$21, query_library_utils.cae_default_paraphrase_mt( task ) );
    final SubLObject params_$22 = params;
    pph_parameter_declarations.set_pph_semantic_mt_internal( params_$22, query_library_utils.cae_default_nl_domain_mt( task ) );
    final SubLObject params_$23 = params;
    pph_parameter_declarations.set_prefer_terse_paraphraseP_internal( params_$23, terseP );
    return simulate_gke3_paraphrase_guts( query_sentence, params );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 23084L)
  public static SubLObject simulate_gke3_paraphrase_guts(final SubLObject query_sentence, final SubLObject params)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject output_string = NIL;
    pph_parameter_declarations.set_maximize_linksP_internal( params, NIL );
    pph_parameter_declarations.set_use_smart_variable_replacementP_internal( params, T );
    pph_parameter_declarations.set_demerit_cutoff_internal( params, number_utilities.positive_infinity() );
    pph_parameter_declarations.set_use_title_capitalizationP_internal( params, NIL );
    pph_parameter_declarations.set_use_indexical_datesP_internal( params, NIL );
    pph_parameter_declarations.set_quantify_variablesP_internal( params, NIL );
    pph_parameter_declarations.set_pph_sentential_force_internal( params, $kw49$NONE );
    final SubLObject _prev_bind_0 = pph_vars.$paraphrase_precision$.currentBinding( thread );
    final SubLObject _prev_bind_2 = pph_vars.$pph_terse_mt_scopeP$.currentBinding( thread );
    final SubLObject _prev_bind_3 = pph_vars.$pph_consolidate_output_list_for_natP$.currentBinding( thread );
    final SubLObject _prev_bind_4 = pph_vars.$pph_addressee$.currentBinding( thread );
    final SubLObject _prev_bind_5 = pph_vars.$pph_speaker$.currentBinding( thread );
    try
    {
      pph_vars.$paraphrase_precision$.bind( NIL, thread );
      pph_vars.$pph_terse_mt_scopeP$.bind( T, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.bind( NIL, thread );
      pph_vars.$pph_addressee$.bind( $kw46$UNKNOWN, thread );
      pph_vars.$pph_speaker$.bind( $kw46$UNKNOWN, thread );
      SubLObject stream = NIL;
      try
      {
        stream = streams_high.make_private_string_output_stream();
        if( NIL != collection_defns.cycl_open_formulaP( query_sentence ) )
        {
          PrintLow.format( stream, $str50$Show_all_values_of_ );
          gke3_paraphrase_open_vars( stream, query_sentence, params );
          PrintLow.format( stream, $str51$_such_that__ );
        }
        else
        {
          PrintLow.format( stream, $str52$Is_it_true_that__ );
        }
        gke3_paraphrase_guts_int( stream, query_sentence, params, TWO_INTEGER );
        output_string = streams_high.get_output_stream_string( stream );
      }
      finally
      {
        final SubLObject _prev_bind_0_$31 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
        try
        {
          Threads.$is_thread_performing_cleanupP$.bind( T, thread );
          final SubLObject _values = Values.getValuesAsVector();
          streams_high.close( stream, UNPROVIDED );
          Values.restoreValuesFromVector( _values );
        }
        finally
        {
          Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$31, thread );
        }
      }
    }
    finally
    {
      pph_vars.$pph_speaker$.rebind( _prev_bind_5, thread );
      pph_vars.$pph_addressee$.rebind( _prev_bind_4, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.rebind( _prev_bind_3, thread );
      pph_vars.$pph_terse_mt_scopeP$.rebind( _prev_bind_2, thread );
      pph_vars.$paraphrase_precision$.rebind( _prev_bind_0, thread );
    }
    return output_string;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 24052L)
  public static SubLObject gke3_paraphrase_open_vars(final SubLObject stream, final SubLObject query_sentence, final SubLObject params)
  {
    final SubLObject open_vars = el_utilities.sentence_free_variables( query_sentence, UNPROVIDED, UNPROVIDED, UNPROVIDED );
    final SubLObject var_term = ConsesLow.cons( $const53$TheCoordinationSet, open_vars );
    final SubLObject pph_map = nl_generation_api.cycl_term_to_nl_internal( var_term, params ).first();
    final SubLObject string = nl_generation_api.pph_output_map_to_html_internal( pph_map, $sym54$PPH_ANCHOR_TAGS_FOR_TERM, T, ZERO_INTEGER, T, NIL );
    return print_high.princ( string, stream );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 24391L)
  public static SubLObject gke3_paraphrase_guts_int(final SubLObject stream, SubLObject sentence, final SubLObject params, SubLObject depth)
  {
    if( depth == UNPROVIDED )
    {
      depth = ZERO_INTEGER;
    }
    if( cycl_utilities.formula_arg0( sentence ).eql( $const55$thereExists ) )
    {
      gke3_paraphrase_guts_int( stream, cycl_utilities.formula_arg2( sentence, UNPROVIDED ), params, depth );
    }
    else
    {
      if( NIL != starts_with_gke3_connectiveP( sentence ) )
      {
        final SubLObject connective = starts_with_gke3_connectiveP( sentence );
        if( NIL == list_utilities.lengthE( sentence, TWO_INTEGER, UNPROVIDED ) || NIL != conses_high.member( connective, $list56, UNPROVIDED, UNPROVIDED ) )
        {
          string_utilities.indent( stream, depth );
          print_high.princ( gke3_string_for_conjunction( connective ), stream );
          streams_high.terpri( stream );
          depth = Numbers.add( depth, TWO_INTEGER );
          if( connective == $kw57$NOR )
          {
            sentence = cycl_utilities.formula_arg1( sentence, UNPROVIDED );
          }
        }
        SubLObject cdolist_list_var;
        final SubLObject args = cdolist_list_var = cycl_utilities.formula_args( sentence, $kw58$IGNORE );
        SubLObject conjunct = NIL;
        conjunct = cdolist_list_var.first();
        while ( NIL != cdolist_list_var)
        {
          gke3_paraphrase_guts_int( stream, conjunct, params, depth );
          cdolist_list_var = cdolist_list_var.rest();
          conjunct = cdolist_list_var.first();
        }
        return NIL;
      }
      if( NIL != collection_defns.cycl_atomic_sentenceP( sentence ) )
      {
        final SubLObject pph_map = nl_generation_api.cycl_term_to_nl_internal( sentence, params ).first();
        final SubLObject string = nl_generation_api.pph_output_map_to_html_internal( pph_map, $sym54$PPH_ANCHOR_TAGS_FOR_TERM, T, ZERO_INTEGER, T, NIL );
        string_utilities.indent( stream, depth );
        print_high.princ( string, stream );
        streams_high.terpri( stream );
      }
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 25388L)
  public static SubLObject starts_with_gke3_connectiveP(final SubLObject sentence)
  {
    if( cycl_utilities.formula_arg0( sentence ).eql( $const59$and ) )
    {
      return $kw60$AND;
    }
    if( NIL != conses_high.member( cycl_utilities.formula_arg0( sentence ), $list61, UNPROVIDED, UNPROVIDED ) && cycl_utilities.formula_arg_position( sentence, $list62, UNPROVIDED ).eql( $const63$or ) )
    {
      return $kw57$NOR;
    }
    if( NIL != conses_high.member( cycl_utilities.formula_arg0( sentence ), $list61, UNPROVIDED, UNPROVIDED ) )
    {
      return $kw64$NOT;
    }
    if( cycl_utilities.formula_arg0( sentence ).eql( $const63$or ) )
    {
      return $kw65$OR;
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 25786L)
  public static SubLObject gke3_string_for_conjunction(final SubLObject conj)
  {
    if( conj.eql( $kw60$AND ) )
    {
      return $str66$All_of_the_following_are_true;
    }
    if( conj.eql( $kw65$OR ) )
    {
      return $str67$At_least_one_of_the_following_is_;
    }
    if( conj.eql( $kw57$NOR ) )
    {
      return $str68$None_of_the_following_is_true;
    }
    if( conj.eql( $kw64$NOT ) )
    {
      return $str68$None_of_the_following_is_true;
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 26063L)
  public static SubLObject simulate_gke_term_paraphrase(final SubLObject v_term, SubLObject mode, SubLObject terseP)
  {
    if( mode == UNPROVIDED )
    {
      mode = $kw42$HTML;
    }
    if( terseP == UNPROVIDED )
    {
      terseP = T;
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject javalist = NIL;
    SubLObject supports = NIL;
    final SubLObject _prev_bind_0 = pph_vars.$pph_terse_modeP$.currentBinding( thread );
    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_precision$.currentBinding( thread );
    final SubLObject _prev_bind_3 = pph_vars.$pph_use_bulleted_listsP$.currentBinding( thread );
    final SubLObject _prev_bind_4 = pph_vars.$pph_replace_bulleted_list_tagsP$.currentBinding( thread );
    final SubLObject _prev_bind_5 = pph_vars.$pph_terse_mt_scopeP$.currentBinding( thread );
    final SubLObject _prev_bind_6 = pph_vars.$pph_maximize_linksP$.currentBinding( thread );
    final SubLObject _prev_bind_7 = pph_vars.$pph_link_arg0P$.currentBinding( thread );
    final SubLObject _prev_bind_8 = pph_vars.$pph_consolidate_output_list_for_natP$.currentBinding( thread );
    final SubLObject _prev_bind_9 = pph_vars.$pph_use_smart_variable_replacementP$.currentBinding( thread );
    final SubLObject _prev_bind_10 = pph_vars.$pph_demerit_cutoff$.currentBinding( thread );
    final SubLObject _prev_bind_11 = pph_vars.$pph_use_title_capitalizationP$.currentBinding( thread );
    final SubLObject _prev_bind_12 = pph_vars.$pph_use_indexical_datesP$.currentBinding( thread );
    final SubLObject _prev_bind_13 = pph_vars.$pph_speaker$.currentBinding( thread );
    final SubLObject _prev_bind_14 = pph_vars.$pph_addressee$.currentBinding( thread );
    final SubLObject _prev_bind_15 = pph_macros.$free_pph_problem_store_pointers$.currentBinding( thread );
    try
    {
      pph_vars.$pph_terse_modeP$.bind( terseP, thread );
      pph_vars.$paraphrase_precision$.bind( makeBoolean( NIL == terseP ), thread );
      pph_vars.$pph_use_bulleted_listsP$.bind( T, thread );
      pph_vars.$pph_replace_bulleted_list_tagsP$.bind( NIL, thread );
      pph_vars.$pph_terse_mt_scopeP$.bind( T, thread );
      pph_vars.$pph_maximize_linksP$.bind( makeBoolean( NIL == terseP ), thread );
      pph_vars.$pph_link_arg0P$.bind( T, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.bind( NIL, thread );
      pph_vars.$pph_use_smart_variable_replacementP$.bind( T, thread );
      pph_vars.$pph_demerit_cutoff$.bind( number_utilities.positive_infinity(), thread );
      pph_vars.$pph_use_title_capitalizationP$.bind( NIL, thread );
      pph_vars.$pph_use_indexical_datesP$.bind( NIL, thread );
      pph_vars.$pph_speaker$.bind( $kw46$UNKNOWN, thread );
      pph_vars.$pph_addressee$.bind( $kw46$UNKNOWN, thread );
      pph_macros.$free_pph_problem_store_pointers$.bind( NIL, thread );
      thread.resetMultipleValues();
      final SubLObject _prev_bind_0_$32 = pph_macros.$pph_problem_store_pointer$.currentBinding( thread );
      try
      {
        pph_macros.$pph_problem_store_pointer$.bind( pph_macros.find_or_create_pph_problem_store_pointer(), thread );
        final SubLObject reuseP = thread.secondMultipleValue();
        thread.resetMultipleValues();
        try
        {
          thread.resetMultipleValues();
          final SubLObject _prev_bind_0_$33 = pph_macros.$pph_memoization_state$.currentBinding( thread );
          try
          {
            pph_macros.$pph_memoization_state$.bind( pph_macros.find_or_create_pph_memoization_state(), thread );
            final SubLObject new_or_reused = thread.secondMultipleValue();
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$34 = pph_macros.$pph_external_memoization_state$.currentBinding( thread );
            try
            {
              pph_macros.$pph_external_memoization_state$.bind( pph_macros.find_or_create_pph_external_memoization_state(), thread );
              final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue( thread );
              final SubLObject _prev_bind_0_$35 = memoization_state.$memoization_state$.currentBinding( thread );
              try
              {
                memoization_state.$memoization_state$.bind( local_state, thread );
                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process( local_state );
                try
                {
                  thread.resetMultipleValues();
                  final SubLObject the_javalist = pph_main.generate_phrase_for_java( v_term, $kw47$DEFAULT, $kw49$NONE, UNPROVIDED, UNPROVIDED, UNPROVIDED );
                  final SubLObject ignore_me = thread.secondMultipleValue();
                  final SubLObject the_justification = thread.thirdMultipleValue();
                  thread.resetMultipleValues();
                  javalist = the_javalist;
                  supports = the_justification;
                }
                finally
                {
                  final SubLObject _prev_bind_0_$36 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                  try
                  {
                    Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                    final SubLObject _values = Values.getValuesAsVector();
                    memoization_state.memoization_state_possibly_clear_original_process( local_state, original_memoization_process );
                    Values.restoreValuesFromVector( _values );
                  }
                  finally
                  {
                    Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$36, thread );
                  }
                }
              }
              finally
              {
                memoization_state.$memoization_state$.rebind( _prev_bind_0_$35, thread );
              }
            }
            finally
            {
              pph_macros.$pph_external_memoization_state$.rebind( _prev_bind_0_$34, thread );
            }
            if( new_or_reused == $kw16$NEW && NIL != memoization_state.memoization_state_p( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) ) )
            {
              memoization_state.clear_all_memoization( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) );
            }
          }
          finally
          {
            pph_macros.$pph_memoization_state$.rebind( _prev_bind_0_$33, thread );
          }
        }
        finally
        {
          final SubLObject _prev_bind_0_$37 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
          try
          {
            Threads.$is_thread_performing_cleanupP$.bind( T, thread );
            final SubLObject _values2 = Values.getValuesAsVector();
            if( NIL == reuseP )
            {
              pph_macros.free_pph_problem_store_pointer( pph_macros.$pph_problem_store_pointer$.getDynamicValue( thread ) );
            }
            Values.restoreValuesFromVector( _values2 );
          }
          finally
          {
            Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$37, thread );
          }
        }
      }
      finally
      {
        pph_macros.$pph_problem_store_pointer$.rebind( _prev_bind_0_$32, thread );
      }
    }
    finally
    {
      pph_macros.$free_pph_problem_store_pointers$.rebind( _prev_bind_15, thread );
      pph_vars.$pph_addressee$.rebind( _prev_bind_14, thread );
      pph_vars.$pph_speaker$.rebind( _prev_bind_13, thread );
      pph_vars.$pph_use_indexical_datesP$.rebind( _prev_bind_12, thread );
      pph_vars.$pph_use_title_capitalizationP$.rebind( _prev_bind_11, thread );
      pph_vars.$pph_demerit_cutoff$.rebind( _prev_bind_10, thread );
      pph_vars.$pph_use_smart_variable_replacementP$.rebind( _prev_bind_9, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.rebind( _prev_bind_8, thread );
      pph_vars.$pph_link_arg0P$.rebind( _prev_bind_7, thread );
      pph_vars.$pph_maximize_linksP$.rebind( _prev_bind_6, thread );
      pph_vars.$pph_terse_mt_scopeP$.rebind( _prev_bind_5, thread );
      pph_vars.$pph_replace_bulleted_list_tagsP$.rebind( _prev_bind_4, thread );
      pph_vars.$pph_use_bulleted_listsP$.rebind( _prev_bind_3, thread );
      pph_vars.$paraphrase_precision$.rebind( _prev_bind_2, thread );
      pph_vars.$pph_terse_modeP$.rebind( _prev_bind_0, thread );
    }
    final SubLObject pcase_var = mode;
    if( pcase_var.eql( $kw42$HTML ) )
    {
      return Values.values( pph_utilities.pph_javalist_html_string( javalist, UNPROVIDED ), supports );
    }
    if( pcase_var.eql( $kw44$TEXT ) )
    {
      return Values.values( pph_utilities.pph_javalist_string( javalist ), supports );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 27357L)
  public static SubLObject gke_add_cloned_literal(final SubLObject query_sentence, final SubLObject arg_position, final SubLObject domain_mt, SubLObject connective)
  {
    if( connective == UNPROVIDED )
    {
      connective = $kw60$AND;
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    final SubLObject valid_connectives = $list70;
    if( NIL == Errors.$ignore_mustsP$.getDynamicValue( thread ) && NIL == conses_high.member( connective, valid_connectives, UNPROVIDED, UNPROVIDED ) )
    {
      Errors.error( $str71$_S_must_be_one_of__S, connective, valid_connectives );
    }
    SubLObject ans = el_utilities.copy_expression( query_sentence );
    thread.resetMultipleValues();
    final SubLObject target_literal = gke_find_literal_to_clone( query_sentence, arg_position );
    final SubLObject target_literal_arg_position = thread.secondMultipleValue();
    thread.resetMultipleValues();
    if( $kw72$ERROR != target_literal )
    {
      final SubLObject new_literal = loosen_gke_literal( target_literal, UNPROVIDED );
      ans = gke_add_literal( query_sentence, target_literal_arg_position, new_literal, connective );
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 28216L)
  public static SubLObject gke_strengthen_query_sentence(final SubLObject query_sentence, final SubLObject arg_position, final SubLObject domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject ans = el_utilities.copy_expression( query_sentence );
    thread.resetMultipleValues();
    final SubLObject target_literal = gke_find_literal_to_strengthen( query_sentence, arg_position );
    final SubLObject target_literal_arg_position = thread.secondMultipleValue();
    thread.resetMultipleValues();
    if( $kw72$ERROR != target_literal )
    {
      final SubLObject new_literal = strengthen_gke_literal( target_literal, UNPROVIDED );
      ans = gke_formula_arg_position_subst( new_literal, target_literal_arg_position, query_sentence );
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 28805L)
  public static SubLObject gke_remove_literal(final SubLObject query_sentence, final SubLObject arg_position, final SubLObject domain_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject ans = el_utilities.copy_expression( query_sentence );
    thread.resetMultipleValues();
    final SubLObject target_literal = gke_find_literal_to_remove( query_sentence, arg_position );
    final SubLObject target_literal_arg_position = thread.secondMultipleValue();
    thread.resetMultipleValues();
    if( $kw72$ERROR != target_literal && NIL != target_literal_arg_position )
    {
      final SubLObject enclosing_arg_position = conses_high.butlast( target_literal_arg_position, UNPROVIDED );
      final SubLObject enclosing_formula = gke_formula_arg_position( query_sentence, enclosing_arg_position, UNPROVIDED );
      if( ( NIL != el_utilities.el_disjunction_p( enclosing_formula ) || NIL != el_utilities.el_conjunction_p( enclosing_formula ) ) && NIL != el_utilities.formula_arityG( enclosing_formula, ONE_INTEGER, UNPROVIDED ) )
      {
        SubLObject juncts = NIL;
        final SubLObject target_arg_num = list_utilities.last_one( target_literal_arg_position );
        SubLObject current_arg_num = ZERO_INTEGER;
        SubLObject cdolist_list_var;
        final SubLObject args = cdolist_list_var = cycl_utilities.formula_args( enclosing_formula, $kw58$IGNORE );
        SubLObject arg = NIL;
        arg = cdolist_list_var.first();
        while ( NIL != cdolist_list_var)
        {
          current_arg_num = Numbers.add( current_arg_num, ONE_INTEGER );
          if( !current_arg_num.eql( target_arg_num ) )
          {
            juncts = ConsesLow.cons( arg, juncts );
          }
          cdolist_list_var = cdolist_list_var.rest();
          arg = cdolist_list_var.first();
        }
        ans = ( ( NIL != list_utilities.lengthG( juncts, ONE_INTEGER, UNPROVIDED ) ) ? el_utilities.make_el_formula( cycl_utilities.formula_arg0( enclosing_formula ), Sequences.nreverse( juncts ), UNPROVIDED )
            : juncts.first() );
        if( NIL != enclosing_arg_position )
        {
          ans = el_utilities.replace_formula_arg_position( enclosing_arg_position, ans, query_sentence );
        }
      }
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 30211L)
  public static SubLObject gke_find_literal_to_clone(final SubLObject query_sentence, final SubLObject arg_position)
  {
    return gke_find_literal_for_arg_position( query_sentence, arg_position );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 30358L)
  public static SubLObject gke_find_literal_to_remove(final SubLObject query_sentence, final SubLObject arg_position)
  {
    return gke_find_literal_for_arg_position( query_sentence, arg_position );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 30505L)
  public static SubLObject gke_find_literal_to_strengthen(final SubLObject query_sentence, final SubLObject arg_position)
  {
    return gke_find_literal_for_arg_position( query_sentence, arg_position );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 30656L)
  public static SubLObject gke_find_literal_for_arg_position(final SubLObject query_sentence, final SubLObject arg_position)
  {
    SubLObject target_literal_arg_position;
    SubLObject target_literal;
    for( target_literal_arg_position = conses_high.butlast( arg_position, UNPROVIDED ), target_literal = cycl_utilities.formula_arg_position( query_sentence, target_literal_arg_position, UNPROVIDED ); NIL == el_utilities
        .atomic_sentenceP( target_literal ) && NIL == list_utilities.lengthL( target_literal_arg_position, TWO_INTEGER, UNPROVIDED ); target_literal_arg_position = conses_high.butlast( target_literal_arg_position,
            UNPROVIDED ), target_literal = cycl_utilities.formula_arg_position( query_sentence, target_literal_arg_position, UNPROVIDED ) )
    {
    }
    if( NIL == el_utilities.atomic_sentenceP( target_literal ) )
    {
      target_literal = $kw72$ERROR;
      target_literal_arg_position = $kw72$ERROR;
    }
    return Values.values( target_literal, target_literal_arg_position );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 31507L)
  public static SubLObject gke_add_literal(final SubLObject query_sentence, final SubLObject arg_position, final SubLObject new_literal, final SubLObject connective)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    thread.resetMultipleValues();
    final SubLObject siblings = gke_get_siblings( query_sentence, arg_position, connective );
    final SubLObject replace_enclosing_formulaP = thread.secondMultipleValue();
    thread.resetMultipleValues();
    final SubLObject new_sub_formula = ( connective == $kw60$AND ) ? simplifier.conjoin( ConsesLow.cons( new_literal, siblings ), UNPROVIDED ) : simplifier.disjoin( ConsesLow.cons( new_literal, siblings ), UNPROVIDED );
    final SubLObject target_arg_position = ( NIL != replace_enclosing_formulaP ) ? conses_high.butlast( arg_position, UNPROVIDED ) : arg_position;
    final SubLObject new_query_sentence = gke_formula_arg_position_subst( new_sub_formula, target_arg_position, query_sentence );
    return new_query_sentence;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 32202L)
  public static SubLObject gke_get_siblings(final SubLObject query_sentence, final SubLObject arg_position, final SubLObject connective)
  {
    if( NIL == arg_position )
    {
      return Values.values( ConsesLow.list( query_sentence ), NIL );
    }
    final SubLObject enclosing_formula = gke_formula_arg_position( query_sentence, conses_high.butlast( arg_position, UNPROVIDED ), UNPROVIDED );
    if( connective == $kw60$AND && NIL != el_utilities.el_conjunction_p( enclosing_formula ) )
    {
      return Values.values( cycl_utilities.formula_args( enclosing_formula, UNPROVIDED ), T );
    }
    if( connective == $kw65$OR && NIL != el_utilities.el_disjunction_p( enclosing_formula ) )
    {
      return Values.values( cycl_utilities.formula_args( enclosing_formula, UNPROVIDED ), T );
    }
    return Values.values( ConsesLow.list( gke_formula_arg_position( query_sentence, arg_position, UNPROVIDED ) ), NIL );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 33044L)
  public static SubLObject gke_formula_arg_position(final SubLObject formula, final SubLObject arg_position, SubLObject v_default)
  {
    if( v_default == UNPROVIDED )
    {
      v_default = NIL;
    }
    if( NIL != cycl_utilities.arg_position_p( arg_position ) )
    {
      return cycl_utilities.formula_arg_position( formula, arg_position, v_default );
    }
    if( NIL == arg_position )
    {
      return Values.values( formula, T );
    }
    return Values.values( v_default, NIL );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 33409L)
  public static SubLObject gke_formula_arg_position_subst(final SubLObject new_term, final SubLObject arg_position, final SubLObject formula)
  {
    if( NIL != cycl_utilities.arg_position_p( arg_position ) )
    {
      return cycl_utilities.formula_arg_position_subst( new_term, arg_position, formula );
    }
    if( NIL == arg_position )
    {
      return new_term;
    }
    return formula;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 33755L)
  public static SubLObject loosen_gke_literal(final SubLObject literal, SubLObject mt)
  {
    if( mt == UNPROVIDED )
    {
      mt = constants_high.find_constant( $str74$GKEReformulationRuleHoldingMt );
    }
    assert NIL != el_grammar.el_sentence_p( literal ) : literal;
    assert NIL != hlmt.hlmt_p( mt ) : mt;
    final SubLObject settings = reformulator_settings_for_gke( $kw76$LOOSEN );
    SubLObject v_answer = literal;
    if( NIL != settings )
    {
      v_answer = reformulator_hub.reformulate_cycl( literal, mt, settings );
    }
    return v_answer;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 34157L)
  public static SubLObject strengthen_gke_literal(final SubLObject literal, SubLObject mt)
  {
    if( mt == UNPROVIDED )
    {
      mt = constants_high.find_constant( $str74$GKEReformulationRuleHoldingMt );
    }
    assert NIL != el_grammar.el_sentence_p( literal ) : literal;
    if( NIL == mt )
    {
      return literal;
    }
    assert NIL != hlmt.hlmt_p( mt ) : mt;
    final SubLObject settings = reformulator_settings_for_gke( $kw77$STRENGTHEN );
    SubLObject v_answer = literal;
    if( NIL != settings )
    {
      v_answer = reformulator_hub.reformulate_cycl( literal, mt, settings );
    }
    return v_answer;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 34600L)
  public static SubLObject reformulator_settings_for_gke(final SubLObject mode)
  {
    if( mode.eql( $kw76$LOOSEN ) )
    {
      final SubLObject meta_predicate = constants_high.find_constant( $str78$useReformulationRuleForGuidedKnow );
      SubLObject settings = NIL;
      if( NIL != constant_handles.valid_constantP( meta_predicate, UNPROVIDED ) )
      {
        final SubLObject meta_predicates = ConsesLow.list( meta_predicate );
        settings = ConsesLow.list( $kw79$META_PREDICATES, meta_predicates );
      }
      return settings;
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 35081L)
  public static SubLObject sentence_substitution_wffP(final SubLObject sentence, final SubLObject mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject wffP = NIL;
    final SubLObject _prev_bind_0 = at_vars.$at_assume_conjuncts_independentP$.currentBinding( thread );
    try
    {
      at_vars.$at_assume_conjuncts_independentP$.bind( NIL, thread );
      wffP = wff.el_wffP( sentence, mt, UNPROVIDED );
    }
    finally
    {
      at_vars.$at_assume_conjuncts_independentP$.rebind( _prev_bind_0, thread );
    }
    return wffP;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 35266L)
  public static SubLObject free_variable(final SubLObject variable, final SubLObject sentence)
  {
    if( NIL != formula_pattern_match.formula_matches_pattern( sentence, ConsesLow.listS( $const55$thereExists, variable, $list80 ) ) )
    {
      return conses_high.third( sentence );
    }
    if( NIL != formula_pattern_match.formula_matches_pattern( sentence, $list81 ) )
    {
      return ConsesLow.list( $const55$thereExists, conses_high.second( sentence ), free_variable( variable, conses_high.third( sentence ) ) );
    }
    return sentence;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 35619L)
  public static SubLObject existentially_boundP(final SubLObject variable, final SubLObject sentence)
  {
    if( NIL != formula_pattern_match.formula_matches_pattern( sentence, ConsesLow.listS( $const55$thereExists, variable, $list80 ) ) )
    {
      return T;
    }
    if( NIL != formula_pattern_match.formula_matches_pattern( sentence, $list81 ) )
    {
      return existentially_boundP( variable, conses_high.third( sentence ) );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 35929L)
  public static SubLObject possible_sentence_substitutions(final SubLObject string, final SubLObject sentence, final SubLObject arg_pos, final SubLObject replace_all, final SubLObject domain_mt,
      SubLObject allow_coercionP, SubLObject generation_mt, SubLObject parsing_mt, SubLObject possibly_strip_extraneous_punctuationP, SubLObject force, SubLObject nl_preds, SubLObject string_match_options,
      SubLObject instance_limit)
  {
    if( allow_coercionP == UNPROVIDED )
    {
      allow_coercionP = T;
    }
    if( generation_mt == UNPROVIDED )
    {
      generation_mt = pph_vars.$pph_language_mt$.getDynamicValue();
    }
    if( parsing_mt == UNPROVIDED )
    {
      parsing_mt = $const83$EnglishMt;
    }
    if( possibly_strip_extraneous_punctuationP == UNPROVIDED )
    {
      possibly_strip_extraneous_punctuationP = T;
    }
    if( force == UNPROVIDED )
    {
      force = $kw49$NONE;
    }
    if( nl_preds == UNPROVIDED )
    {
      nl_preds = ConsesLow.list( $const84$nonPlural_Generic );
    }
    if( string_match_options == UNPROVIDED )
    {
      string_match_options = $list85;
    }
    if( instance_limit == UNPROVIDED )
    {
      instance_limit = TEN_INTEGER;
    }
    assert NIL != Types.stringp( string ) : string;
    SubLObject ans = NIL;
    SubLObject isa_constraint = formula_arg_pos_isa_constraint( sentence, arg_pos, domain_mt );
    SubLObject non_wffP = NIL;
    SubLObject candidates = api_widgets.get_constrained_cycl_for_string_int( string, isa_constraint, domain_mt, generation_mt, parsing_mt, NIL, NIL, possibly_strip_extraneous_punctuationP, force, nl_preds, NIL, NIL,
        string_match_options, instance_limit );
    SubLObject allow_non_wffP = NIL;
    ans = substitute_terms_into_sentence( candidates, sentence, arg_pos, replace_all, domain_mt, allow_non_wffP );
    if( NIL != allow_coercionP && NIL != list_utilities.empty_list_p( ans ) )
    {
      isa_constraint = $const87$Thing;
      SubLObject cdolist_list_var;
      candidates = ( cdolist_list_var = Sequences.delete_duplicates( ConsesLow.append( candidates, api_widgets.get_constrained_cycl_for_string_int( string, isa_constraint, domain_mt, generation_mt, parsing_mt, NIL, NIL,
          possibly_strip_extraneous_punctuationP, force, nl_preds, NIL, NIL, string_match_options, instance_limit ) ), Symbols.symbol_function( EQUAL ), UNPROVIDED, UNPROVIDED, UNPROVIDED ) );
      SubLObject candidate = NIL;
      candidate = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        final SubLObject v_term = conses_high.last( candidate, UNPROVIDED ).first();
        SubLObject new_sentence = coerce_term_into_sentence( v_term, sentence, arg_pos, replace_all, domain_mt, UNPROVIDED );
        if( NIL != new_sentence )
        {
          if( NIL != el_utilities.el_formula_p( new_sentence ) )
          {
            new_sentence = el_utilities.optimize_el_formula_variable_names( new_sentence, generation_mt, domain_mt, UNPROVIDED );
          }
          ans = ConsesLow.cons( ConsesLow.list( candidate, new_sentence ), ans );
        }
        cdolist_list_var = cdolist_list_var.rest();
        candidate = cdolist_list_var.first();
      }
    }
    if( NIL != list_utilities.empty_list_p( ans ) )
    {
      allow_non_wffP = T;
      ans = substitute_terms_into_sentence( candidates, sentence, arg_pos, replace_all, domain_mt, allow_non_wffP );
      if( NIL != list_utilities.non_empty_list_p( ans ) )
      {
        non_wffP = T;
      }
    }
    return ConsesLow.list( Sequences.nreverse( ans ), non_wffP );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 38123L)
  public static SubLObject formula_arg_pos_isa_constraint(final SubLObject sentence, final SubLObject arg_pos, final SubLObject mt)
  {
    final SubLObject var = czer_utilities.unique_el_var_wrt_expression( sentence, UNPROVIDED );
    final SubLObject constraints = at_var_types.formula_variable_isa_constraints( var, el_utilities.replace_formula_arg_position( arg_pos, var, sentence ), mt, UNPROVIDED );
    return ( NIL != constraints ) ? list_utilities.extremal( constraints, $sym88$GENERALITY_ESTIMATE_, UNPROVIDED ) : $const87$Thing;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 38548L)
  public static SubLObject substitute_term_into_sentence(final SubLObject v_term, final SubLObject sentence, final SubLObject arg_pos, final SubLObject replace_all, final SubLObject domain_mt, SubLObject try_coercionP,
      SubLObject allow_non_wffP, SubLObject optimize_var_namesP)
  {
    if( try_coercionP == UNPROVIDED )
    {
      try_coercionP = T;
    }
    if( allow_non_wffP == UNPROVIDED )
    {
      allow_non_wffP = NIL;
    }
    if( optimize_var_namesP == UNPROVIDED )
    {
      optimize_var_namesP = T;
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    final SubLObject el_sentence = cycl_utilities.expression_transform( sentence, $sym90$NART_P, $sym91$NART_EL_FORMULA, UNPROVIDED, UNPROVIDED );
    if( NIL == Errors.$ignore_mustsP$.getDynamicValue( thread ) && NIL == el_utilities.formula_has_arg_position_p( el_sentence, arg_pos ) )
    {
      Errors.error( $str92$_S_does_not_have_arg_position__S, sentence, arg_pos );
    }
    SubLObject ans = substitute_term_into_sentence_int( v_term, el_sentence, arg_pos, replace_all, domain_mt, allow_non_wffP );
    if( NIL != try_coercionP && NIL == ans )
    {
      ans = coerce_term_into_sentence( v_term, el_sentence, arg_pos, replace_all, domain_mt, UNPROVIDED );
    }
    if( NIL != optimize_var_namesP && NIL != el_utilities.el_formula_p( ans ) )
    {
      ans = el_utilities.optimize_el_formula_variable_names( ans, pph_vars.$pph_language_mt$.getDynamicValue( thread ), domain_mt, sentence );
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 39377L)
  public static SubLObject substitute_terms_into_sentence(final SubLObject renderings, final SubLObject sentence, final SubLObject arg_pos, final SubLObject replace_all, final SubLObject domain_mt,
      final SubLObject allow_non_wffP)
  {
    SubLObject ans = NIL;
    SubLObject cdolist_list_var = renderings;
    SubLObject rendering = NIL;
    rendering = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      final SubLObject v_term = conses_high.second( rendering );
      final SubLObject new_sentence = substitute_term_into_sentence_int( v_term, sentence, arg_pos, replace_all, domain_mt, allow_non_wffP );
      if( NIL != new_sentence )
      {
        ans = ConsesLow.cons( ConsesLow.list( rendering, new_sentence ), ans );
      }
      cdolist_list_var = cdolist_list_var.rest();
      rendering = cdolist_list_var.first();
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 39788L)
  public static SubLObject substitute_term_into_sentence_int(final SubLObject v_term, final SubLObject sentence, final SubLObject arg_pos, final SubLObject replace_all, final SubLObject domain_mt,
      final SubLObject allow_non_wffP)
  {
    final SubLObject replaced_term = cycl_utilities.formula_arg_position( sentence, arg_pos, UNPROVIDED );
    SubLObject new_sentence = ( NIL != replace_all ) ? cycl_utilities.expression_subst( v_term, replaced_term, sentence, Symbols.symbol_function( EQUAL ), UNPROVIDED )
        : el_utilities.replace_formula_arg_position( arg_pos, v_term, sentence );
    SubLObject cdolist_list_var = cycl_utilities.expression_gather( new_sentence, Symbols.symbol_function( $sym93$EL_FORMULA_P ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
    SubLObject expression = NIL;
    expression = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      if( NIL != formula_pattern_match.formula_matches_pattern( expression, ConsesLow.listS( $const55$thereExists, v_term, $list80 ) ) )
      {
        new_sentence = cycl_utilities.expression_nsubst( el_utilities.quantified_sub_sentence( expression ), expression, new_sentence, Symbols.symbol_function( EQUAL ), UNPROVIDED );
      }
      cdolist_list_var = cdolist_list_var.rest();
      expression = cdolist_list_var.first();
    }
    if( NIL != cycl_variables.cyc_varP( replaced_term ) && NIL != existentially_boundP( replaced_term, new_sentence ) && NIL == list_utilities.tree_find( replaced_term, free_variable( replaced_term, new_sentence ),
        UNPROVIDED, UNPROVIDED ) )
    {
      new_sentence = free_variable( replaced_term, new_sentence );
    }
    if( NIL != allow_non_wffP || NIL != sentence_substitution_wffP( new_sentence, domain_mt ) )
    {
      return new_sentence;
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 40957L)
  public static SubLObject coerce_term_into_sentence(final SubLObject v_term, final SubLObject sentence, final SubLObject arg_pos, final SubLObject replace_all, final SubLObject domain_mt,
      SubLObject optimize_el_formula_variable_namesP)
  {
    if( optimize_el_formula_variable_namesP == UNPROVIDED )
    {
      optimize_el_formula_variable_namesP = T;
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    if( NIL != isa.isaP( v_term, $const22$Collection, domain_mt, UNPROVIDED ) )
    {
      final SubLObject new_variable = czer_utilities.unique_el_var_wrt_expression( sentence, UNPROVIDED );
      SubLObject new_sentence = free_variable( cycl_utilities.formula_arg_position( sentence, arg_pos, UNPROVIDED ), sentence );
      if( NIL != replace_all )
      {
        new_sentence = conses_high.sublis( ConsesLow.list( reader.bq_cons( cycl_utilities.formula_arg_position( sentence, arg_pos, UNPROVIDED ), new_variable ) ), new_sentence, UNPROVIDED, UNPROVIDED );
      }
      else
      {
        new_sentence = free_variable( cycl_utilities.formula_arg_position( sentence, arg_pos, UNPROVIDED ), el_utilities.replace_formula_arg_position( arg_pos, new_variable, sentence ) );
      }
      final SubLObject new_literal = ConsesLow.list( $const94$isa, new_variable, v_term );
      thread.resetMultipleValues();
      final SubLObject uniq_new_literal = value_tables.varmap_uniquify_source_vars( new_literal, new_sentence );
      final SubLObject var_map = thread.secondMultipleValue();
      thread.resetMultipleValues();
      if( NIL != replace_all )
      {
        new_sentence = query_library_api.combine_formulas_at_position( $list95, new_sentence, NIL, NIL, NIL, NIL );
        new_sentence = query_library_api.combine_formulas_at_position( new_sentence, uniq_new_literal, NIL, NIL, NIL, NIL );
      }
      else
      {
        new_sentence = query_library_api.combine_formulas_at_position( new_sentence, uniq_new_literal, conses_high.butlast( arg_pos, UNPROVIDED ), NIL, NIL, NIL );
      }
      final SubLObject new_variable_alias = list_utilities.alist_lookup( var_map, new_variable, UNPROVIDED, UNPROVIDED );
      new_sentence = cycl_utilities.formula_subst( new_variable, new_variable_alias, new_sentence, UNPROVIDED, UNPROVIDED );
      if( NIL != sentence_substitution_wffP( new_sentence, domain_mt ) )
      {
        final SubLObject best_var_name = ( NIL != optimize_el_formula_variable_namesP ) ? el_utilities.optimize_el_formula_variable_name( new_variable, new_sentence, UNPROVIDED, UNPROVIDED )
            : cycl_variables.el_var_name( new_variable );
        final SubLObject other_vars = cycl_utilities.expression_gather( new_sentence, Symbols.symbol_function( $sym96$EL_VAR_ ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
        final SubLObject other_var_names = Mapping.mapcar( Symbols.symbol_function( $sym97$EL_VAR_NAME ), other_vars );
        final SubLObject unique_var_name = czer_utilities.unique_var_name_wrt( best_var_name, other_var_names );
        final SubLObject new_variable2 = el_utilities.correct_variable( cycl_variables.make_el_var( unique_var_name ) );
        final SubLObject new_sentence2 = conses_high.nsublis( ConsesLow.list( reader.bq_cons( new_variable, new_variable2 ) ), new_sentence, UNPROVIDED, UNPROVIDED );
        return new_sentence2;
      }
      return NIL;
    }
    else
    {
      if( NIL == isa.isaP( v_term, $const98$Individual, domain_mt, UNPROVIDED ) )
      {
        return NIL;
      }
      final SubLObject new_term = kb_utilities.set_to_collection( ConsesLow.list( $const99$TheSet, v_term ), domain_mt );
      SubLObject new_sentence = substitute_term_into_sentence_int( new_term, sentence, arg_pos, replace_all, domain_mt, NIL );
      if( NIL == new_sentence )
      {
        return NIL;
      }
      SubLObject cdolist_list_var = cycl_utilities.expression_gather( new_sentence, Symbols.symbol_function( $sym34$LISTP ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
      SubLObject expression = NIL;
      expression = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        if( NIL != formula_pattern_match.formula_matches_pattern( expression, ConsesLow.list( $const94$isa, $kw100$EL_VARIABLE, new_term ) ) )
        {
          final SubLObject obsolete_variable = conses_high.second( expression );
          SubLObject cdolist_list_var_$38;
          final SubLObject arg_positions = cdolist_list_var_$38 = cycl_utilities.arg_positions_dfs( expression, new_sentence, Symbols.symbol_function( EQUAL ) );
          SubLObject arg_pos_$39 = NIL;
          arg_pos_$39 = cdolist_list_var_$38.first();
          while ( NIL != cdolist_list_var_$38)
          {
            if( NIL != arg_pos_$39 )
            {
              final SubLObject group_arg_pos = conses_high.butlast( arg_pos_$39, UNPROVIDED );
              SubLObject group = cycl_utilities.formula_arg_position( new_sentence, group_arg_pos, UNPROVIDED );
              if( group.first().eql( $const59$and ) && NIL != list_utilities.lengthG( group, TWO_INTEGER, UNPROVIDED ) )
              {
                group = Sequences.remove( expression, group, Symbols.symbol_function( EQUAL ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
                group = cycl_utilities.formula_subst( v_term, obsolete_variable, group, Symbols.symbol_function( EQUAL ), UNPROVIDED );
                if( NIL != list_utilities.lengthE( group, TWO_INTEGER, UNPROVIDED ) )
                {
                  group = conses_high.second( group );
                }
                if( NIL != group_arg_pos )
                {
                  new_sentence = cycl_utilities.formula_arg_position_subst( group, group_arg_pos, new_sentence );
                }
                else
                {
                  new_sentence = group;
                }
              }
              else
              {
                final SubLObject new_literal2 = ConsesLow.list( $const101$equals, conses_high.second( expression ), v_term );
                new_sentence = cycl_utilities.formula_arg_position_subst( new_literal2, arg_pos_$39, new_sentence );
              }
            }
            else
            {
              new_sentence = ConsesLow.list( $const101$equals, conses_high.second( new_sentence ), v_term );
            }
            cdolist_list_var_$38 = cdolist_list_var_$38.rest();
            arg_pos_$39 = cdolist_list_var_$38.first();
          }
          if( NIL != existentially_boundP( obsolete_variable, new_sentence ) && NIL == list_utilities.tree_find( obsolete_variable, free_variable( obsolete_variable, new_sentence ), UNPROVIDED, UNPROVIDED ) )
          {
            new_sentence = free_variable( obsolete_variable, new_sentence );
          }
        }
        cdolist_list_var = cdolist_list_var.rest();
        expression = cdolist_list_var.first();
      }
      if( NIL == sentence_substitution_wffP( new_sentence, domain_mt ) )
      {
        return NIL;
      }
      return new_sentence;
    }
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 45090L)
  public static SubLObject clear_gke_memoization_state()
  {
    final SubLObject cs = $gke_memoization_state_caching_state$.getGlobalValue();
    if( NIL != cs )
    {
      memoization_state.caching_state_clear( cs );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 45090L)
  public static SubLObject remove_gke_memoization_state()
  {
    return memoization_state.caching_state_remove_function_results_with_args( $gke_memoization_state_caching_state$.getGlobalValue(), ConsesLow.list( EMPTY_SUBL_OBJECT_ARRAY ), UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 45090L)
  public static SubLObject gke_memoization_state_internal()
  {
    final SubLObject name = $str103$GKE_Memoization_State;
    return memoization_state.new_memoization_state( name, ReadWriteLocks.new_rw_lock( name ), UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 45090L)
  public static SubLObject gke_memoization_state()
  {
    SubLObject caching_state = $gke_memoization_state_caching_state$.getGlobalValue();
    if( NIL == caching_state )
    {
      caching_state = memoization_state.create_global_caching_state_for_name( $sym102$GKE_MEMOIZATION_STATE, $sym104$_GKE_MEMOIZATION_STATE_CACHING_STATE_, NIL, EQL, ZERO_INTEGER, ZERO_INTEGER );
      memoization_state.register_hl_store_cache_clear_callback( $sym105$CLEAR_GKE_MEMOIZATION_STATE );
    }
    SubLObject results = memoization_state.caching_state_get_zero_arg_results( caching_state, UNPROVIDED );
    if( results.eql( memoization_state.$memoized_item_not_found$.getGlobalValue() ) )
    {
      results = Values.arg2( Values.resetMultipleValues(), Values.multiple_value_list( gke_memoization_state_internal() ) );
      memoization_state.caching_state_set_zero_arg_results( caching_state, results, UNPROVIDED );
    }
    return memoization_state.caching_results( results );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 46745L)
  public static SubLObject gke_gloss_for_literal(final SubLObject literal, SubLObject domain_mt, SubLObject language_mt)
  {
    if( domain_mt == UNPROVIDED )
    {
      domain_mt = pph_vars.$pph_domain_mt$.getDynamicValue();
    }
    if( language_mt == UNPROVIDED )
    {
      language_mt = pph_vars.$pph_language_mt$.getDynamicValue();
    }
    assert NIL != el_utilities.atomic_sentenceP( literal ) : literal;
    final SubLObject from_kb = get_gke_gloss_from_kb( literal, domain_mt, language_mt );
    return ( NIL != from_kb ) ? from_kb : generate_gke_gloss_wrt_mt_cached( literal, domain_mt, language_mt );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 47155L)
  public static SubLObject get_gke_gloss_from_kb(final SubLObject literal, final SubLObject domain_mt, final SubLObject language_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject gloss = NIL;
    final SubLObject hl_literal = narts_high.nart_substitute( literal );
    final SubLObject _prev_bind_0 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
    final SubLObject _prev_bind_2 = mt_relevance_macros.$mt$.currentBinding( thread );
    try
    {
      mt_relevance_macros.$relevant_mt_function$.bind( $sym108$RELEVANT_MT_IS_EQ, thread );
      mt_relevance_macros.$mt$.bind( language_mt, thread );
      final SubLObject pred_var = $const109$gkeGlossWrtDomainMt;
      if( NIL != kb_mapping_macros.do_gaf_arg_index_key_validator( domain_mt, TWO_INTEGER, pred_var ) )
      {
        final SubLObject iterator_var = kb_mapping_macros.new_gaf_arg_final_index_spec_iterator( domain_mt, TWO_INTEGER, pred_var );
        SubLObject done_var = NIL;
        final SubLObject token_var = NIL;
        while ( NIL == done_var)
        {
          final SubLObject final_index_spec = iteration.iteration_next_without_values_macro_helper( iterator_var, token_var );
          final SubLObject valid = makeBoolean( !token_var.eql( final_index_spec ) );
          if( NIL != valid )
          {
            SubLObject final_index_iterator = NIL;
            try
            {
              final_index_iterator = kb_mapping_macros.new_final_index_iterator( final_index_spec, $kw110$GAF, NIL, NIL );
              SubLObject done_var_$40 = NIL;
              final SubLObject token_var_$41 = NIL;
              while ( NIL == done_var_$40)
              {
                final SubLObject gaf = iteration.iteration_next_without_values_macro_helper( final_index_iterator, token_var_$41 );
                final SubLObject valid_$42 = makeBoolean( !token_var_$41.eql( gaf ) );
                if( NIL != valid_$42 && cycl_utilities.formula_arg1( assertions_high.gaf_arg1( gaf ), UNPROVIDED ).equal( hl_literal ) )
                {
                  gloss = assertions_high.gaf_arg3( gaf );
                }
                done_var_$40 = makeBoolean( NIL == valid_$42 );
              }
            }
            finally
            {
              final SubLObject _prev_bind_0_$43 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
              try
              {
                Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                final SubLObject _values = Values.getValuesAsVector();
                if( NIL != final_index_iterator )
                {
                  kb_mapping_macros.destroy_final_index_iterator( final_index_iterator );
                }
                Values.restoreValuesFromVector( _values );
              }
              finally
              {
                Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$43, thread );
              }
            }
          }
          done_var = makeBoolean( NIL == valid );
        }
      }
    }
    finally
    {
      mt_relevance_macros.$mt$.rebind( _prev_bind_2, thread );
      mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_0, thread );
    }
    return ( NIL != gloss ) ? pph_utilities.cycl_structured_paraphrase_to_pph_javalist( gloss ) : NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 47570L)
  public static SubLObject clear_generate_gke_gloss_wrt_mt_cached()
  {
    final SubLObject cs = $generate_gke_gloss_wrt_mt_cached_caching_state$.getGlobalValue();
    if( NIL != cs )
    {
      memoization_state.caching_state_clear( cs );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 47570L)
  public static SubLObject remove_generate_gke_gloss_wrt_mt_cached(final SubLObject literal, final SubLObject domain_mt, final SubLObject language_mt)
  {
    return memoization_state.caching_state_remove_function_results_with_args( $generate_gke_gloss_wrt_mt_cached_caching_state$.getGlobalValue(), ConsesLow.list( literal, domain_mt, language_mt ), UNPROVIDED,
        UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 47570L)
  public static SubLObject generate_gke_gloss_wrt_mt_cached_internal(final SubLObject literal, final SubLObject domain_mt, final SubLObject language_mt)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject javalist = NIL;
    final SubLObject _prev_bind_0 = constant_completion_high.$require_case_insensitive_name_uniqueness$.currentBinding( thread );
    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding( thread );
    final SubLObject _prev_bind_3 = pph_vars.$pph_use_bulleted_listsP$.currentBinding( thread );
    final SubLObject _prev_bind_4 = pph_vars.$pph_replace_bulleted_list_tagsP$.currentBinding( thread );
    final SubLObject _prev_bind_5 = pph_vars.$use_parenthetical_disambiguationsP$.currentBinding( thread );
    final SubLObject _prev_bind_6 = pph_vars.$paraphrase_precision$.currentBinding( thread );
    final SubLObject _prev_bind_7 = pph_vars.$pph_terse_mt_scopeP$.currentBinding( thread );
    final SubLObject _prev_bind_8 = pph_vars.$pph_maximize_linksP$.currentBinding( thread );
    final SubLObject _prev_bind_9 = pph_vars.$pph_link_arg0P$.currentBinding( thread );
    final SubLObject _prev_bind_10 = pph_vars.$pph_consolidate_output_list_for_natP$.currentBinding( thread );
    final SubLObject _prev_bind_11 = pph_vars.$pph_use_smart_variable_replacementP$.currentBinding( thread );
    final SubLObject _prev_bind_12 = pph_vars.$pph_demerit_cutoff$.currentBinding( thread );
    final SubLObject _prev_bind_13 = pph_vars.$pph_use_title_capitalizationP$.currentBinding( thread );
    final SubLObject _prev_bind_14 = pph_vars.$pph_use_indexical_datesP$.currentBinding( thread );
    final SubLObject _prev_bind_15 = pph_vars.$pph_addressee$.currentBinding( thread );
    final SubLObject _prev_bind_16 = pph_vars.$pph_speaker$.currentBinding( thread );
    final SubLObject _prev_bind_17 = pph_vars.$pph_quantify_varsP$.currentBinding( thread );
    final SubLObject _prev_bind_18 = pph_vars.$pph_blanks_for_varsP$.currentBinding( thread );
    try
    {
      constant_completion_high.$require_case_insensitive_name_uniqueness$.bind( NIL, thread );
      pph_vars.$paraphrase_mode$.bind( $kw42$HTML, thread );
      pph_vars.$pph_use_bulleted_listsP$.bind( T, thread );
      pph_vars.$pph_replace_bulleted_list_tagsP$.bind( NIL, thread );
      pph_vars.$use_parenthetical_disambiguationsP$.bind( T, thread );
      pph_vars.$paraphrase_precision$.bind( NIL, thread );
      pph_vars.$pph_terse_mt_scopeP$.bind( T, thread );
      pph_vars.$pph_maximize_linksP$.bind( T, thread );
      pph_vars.$pph_link_arg0P$.bind( T, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.bind( NIL, thread );
      pph_vars.$pph_use_smart_variable_replacementP$.bind( T, thread );
      pph_vars.$pph_demerit_cutoff$.bind( number_utilities.positive_infinity(), thread );
      pph_vars.$pph_use_title_capitalizationP$.bind( NIL, thread );
      pph_vars.$pph_use_indexical_datesP$.bind( NIL, thread );
      pph_vars.$pph_addressee$.bind( $kw46$UNKNOWN, thread );
      pph_vars.$pph_speaker$.bind( $kw46$UNKNOWN, thread );
      pph_vars.$pph_quantify_varsP$.bind( NIL, thread );
      pph_vars.$pph_blanks_for_varsP$.bind( NIL, thread );
      javalist = pph_main.generate_phrase_for_java( narts_high.nart_substitute( literal ), $kw47$DEFAULT, $kw48$DECLARATIVE, language_mt, domain_mt, UNPROVIDED );
    }
    finally
    {
      pph_vars.$pph_blanks_for_varsP$.rebind( _prev_bind_18, thread );
      pph_vars.$pph_quantify_varsP$.rebind( _prev_bind_17, thread );
      pph_vars.$pph_speaker$.rebind( _prev_bind_16, thread );
      pph_vars.$pph_addressee$.rebind( _prev_bind_15, thread );
      pph_vars.$pph_use_indexical_datesP$.rebind( _prev_bind_14, thread );
      pph_vars.$pph_use_title_capitalizationP$.rebind( _prev_bind_13, thread );
      pph_vars.$pph_demerit_cutoff$.rebind( _prev_bind_12, thread );
      pph_vars.$pph_use_smart_variable_replacementP$.rebind( _prev_bind_11, thread );
      pph_vars.$pph_consolidate_output_list_for_natP$.rebind( _prev_bind_10, thread );
      pph_vars.$pph_link_arg0P$.rebind( _prev_bind_9, thread );
      pph_vars.$pph_maximize_linksP$.rebind( _prev_bind_8, thread );
      pph_vars.$pph_terse_mt_scopeP$.rebind( _prev_bind_7, thread );
      pph_vars.$paraphrase_precision$.rebind( _prev_bind_6, thread );
      pph_vars.$use_parenthetical_disambiguationsP$.rebind( _prev_bind_5, thread );
      pph_vars.$pph_replace_bulleted_list_tagsP$.rebind( _prev_bind_4, thread );
      pph_vars.$pph_use_bulleted_listsP$.rebind( _prev_bind_3, thread );
      pph_vars.$paraphrase_mode$.rebind( _prev_bind_2, thread );
      constant_completion_high.$require_case_insensitive_name_uniqueness$.rebind( _prev_bind_0, thread );
    }
    return javalist;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 47570L)
  public static SubLObject generate_gke_gloss_wrt_mt_cached(final SubLObject literal, final SubLObject domain_mt, final SubLObject language_mt)
  {
    SubLObject caching_state = $generate_gke_gloss_wrt_mt_cached_caching_state$.getGlobalValue();
    if( NIL == caching_state )
    {
      caching_state = memoization_state.create_global_caching_state_for_name( $sym111$GENERATE_GKE_GLOSS_WRT_MT_CACHED, $sym112$_GENERATE_GKE_GLOSS_WRT_MT_CACHED_CACHING_STATE_, $int113$256, EQUAL, THREE_INTEGER,
          ZERO_INTEGER );
    }
    final SubLObject sxhash = memoization_state.sxhash_calc_3( literal, domain_mt, language_mt );
    final SubLObject collisions = memoization_state.caching_state_lookup( caching_state, sxhash, UNPROVIDED );
    if( !collisions.eql( memoization_state.$memoized_item_not_found$.getGlobalValue() ) )
    {
      SubLObject cdolist_list_var = collisions;
      SubLObject collision = NIL;
      collision = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        SubLObject cached_args = collision.first();
        final SubLObject results2 = conses_high.second( collision );
        if( literal.equal( cached_args.first() ) )
        {
          cached_args = cached_args.rest();
          if( domain_mt.equal( cached_args.first() ) )
          {
            cached_args = cached_args.rest();
            if( NIL != cached_args && NIL == cached_args.rest() && language_mt.equal( cached_args.first() ) )
            {
              return memoization_state.caching_results( results2 );
            }
          }
        }
        cdolist_list_var = cdolist_list_var.rest();
        collision = cdolist_list_var.first();
      }
    }
    final SubLObject results3 = Values.arg2( Values.resetMultipleValues(), Values.multiple_value_list( generate_gke_gloss_wrt_mt_cached_internal( literal, domain_mt, language_mt ) ) );
    memoization_state.caching_state_enter_multi_key_n( caching_state, sxhash, collisions, results3, ConsesLow.list( literal, domain_mt, language_mt ) );
    return memoization_state.caching_results( results3 );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 48538L)
  public static SubLObject candidate_replacement_renderers_for_sentence(final SubLObject sentence, final SubLObject mt, SubLObject generation_mt)
  {
    if( generation_mt == UNPROVIDED )
    {
      generation_mt = pph_vars.$pph_language_mt$.getDynamicValue();
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    final SubLObject replacements = candidate_replacements_for_sentence( sentence, mt );
    SubLObject renderers = NIL;
    SubLObject problem_store = NIL;
    try
    {
      problem_store = inference_datastructures_problem_store.new_problem_store( NIL );
      final SubLObject local_state = gke_memoization_state();
      final SubLObject _prev_bind_0 = memoization_state.$memoization_state$.currentBinding( thread );
      try
      {
        memoization_state.$memoization_state$.bind( local_state, thread );
        final SubLObject original_memoization_process = memoization_state.memoization_state_original_process( local_state );
        try
        {
          final SubLObject _prev_bind_0_$44 = pph_macros.$free_pph_problem_store_pointers$.currentBinding( thread );
          try
          {
            pph_macros.$free_pph_problem_store_pointers$.bind( NIL, thread );
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$45 = pph_macros.$pph_problem_store_pointer$.currentBinding( thread );
            try
            {
              pph_macros.$pph_problem_store_pointer$.bind( pph_macros.find_or_create_pph_problem_store_pointer(), thread );
              final SubLObject reuseP = thread.secondMultipleValue();
              thread.resetMultipleValues();
              try
              {
                thread.resetMultipleValues();
                final SubLObject _prev_bind_0_$46 = pph_macros.$pph_memoization_state$.currentBinding( thread );
                try
                {
                  pph_macros.$pph_memoization_state$.bind( pph_macros.find_or_create_pph_memoization_state(), thread );
                  final SubLObject new_or_reused = thread.secondMultipleValue();
                  thread.resetMultipleValues();
                  final SubLObject _prev_bind_0_$47 = pph_macros.$pph_external_memoization_state$.currentBinding( thread );
                  try
                  {
                    pph_macros.$pph_external_memoization_state$.bind( pph_macros.find_or_create_pph_external_memoization_state(), thread );
                    final SubLObject local_state_$48 = pph_macros.$pph_memoization_state$.getDynamicValue( thread );
                    final SubLObject _prev_bind_0_$48 = memoization_state.$memoization_state$.currentBinding( thread );
                    try
                    {
                      memoization_state.$memoization_state$.bind( local_state_$48, thread );
                      final SubLObject original_memoization_process_$50 = memoization_state.memoization_state_original_process( local_state_$48 );
                      try
                      {
                        SubLObject cdolist_list_var = replacements;
                        SubLObject cons = NIL;
                        cons = cdolist_list_var.first();
                        while ( NIL != cdolist_list_var)
                        {
                          SubLObject current;
                          final SubLObject datum = current = cons;
                          SubLObject key = NIL;
                          SubLObject terms = NIL;
                          cdestructuring_bind.destructuring_bind_must_consp( current, datum, $list115 );
                          key = current.first();
                          current = ( terms = current.rest() );
                          SubLObject focal_term = cycl_utilities.formula_arg_position( sentence, key, $kw116$NOT_FOUND );
                          final SubLObject renderer_list = api_widgets.get_term_list_as_renderings( terms, mt, $kw49$NONE, generation_mt, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
                          if( NIL != cycl_variables.cyc_varP( focal_term ) )
                          {
                            focal_term = terms.first();
                          }
                          if( focal_term != $kw116$NOT_FOUND )
                          {
                            SubLObject cdolist_list_var_$51 = replacement_renderer_groves( focal_term, mt, renderer_list, problem_store );
                            SubLObject grove = NIL;
                            grove = cdolist_list_var_$51.first();
                            while ( NIL != cdolist_list_var_$51)
                            {
                              renderers = list_utilities.alist_push( renderers, key, grove, UNPROVIDED );
                              cdolist_list_var_$51 = cdolist_list_var_$51.rest();
                              grove = cdolist_list_var_$51.first();
                            }
                          }
                          renderers = list_utilities.alist_push( renderers, key, renderer_list, UNPROVIDED );
                          cdolist_list_var = cdolist_list_var.rest();
                          cons = cdolist_list_var.first();
                        }
                      }
                      finally
                      {
                        final SubLObject _prev_bind_0_$49 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                        try
                        {
                          Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                          final SubLObject _values = Values.getValuesAsVector();
                          memoization_state.memoization_state_possibly_clear_original_process( local_state_$48, original_memoization_process_$50 );
                          Values.restoreValuesFromVector( _values );
                        }
                        finally
                        {
                          Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$49, thread );
                        }
                      }
                    }
                    finally
                    {
                      memoization_state.$memoization_state$.rebind( _prev_bind_0_$48, thread );
                    }
                  }
                  finally
                  {
                    pph_macros.$pph_external_memoization_state$.rebind( _prev_bind_0_$47, thread );
                  }
                  if( new_or_reused == $kw16$NEW && NIL != memoization_state.memoization_state_p( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) ) )
                  {
                    memoization_state.clear_all_memoization( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) );
                  }
                }
                finally
                {
                  pph_macros.$pph_memoization_state$.rebind( _prev_bind_0_$46, thread );
                }
              }
              finally
              {
                final SubLObject _prev_bind_0_$50 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                try
                {
                  Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                  final SubLObject _values2 = Values.getValuesAsVector();
                  if( NIL == reuseP )
                  {
                    pph_macros.free_pph_problem_store_pointer( pph_macros.$pph_problem_store_pointer$.getDynamicValue( thread ) );
                  }
                  Values.restoreValuesFromVector( _values2 );
                }
                finally
                {
                  Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$50, thread );
                }
              }
            }
            finally
            {
              pph_macros.$pph_problem_store_pointer$.rebind( _prev_bind_0_$45, thread );
            }
          }
          finally
          {
            pph_macros.$free_pph_problem_store_pointers$.rebind( _prev_bind_0_$44, thread );
          }
        }
        finally
        {
          final SubLObject _prev_bind_0_$51 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
          try
          {
            Threads.$is_thread_performing_cleanupP$.bind( T, thread );
            final SubLObject _values3 = Values.getValuesAsVector();
            memoization_state.memoization_state_possibly_clear_original_process( local_state, original_memoization_process );
            Values.restoreValuesFromVector( _values3 );
          }
          finally
          {
            Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$51, thread );
          }
        }
      }
      finally
      {
        memoization_state.$memoization_state$.rebind( _prev_bind_0, thread );
      }
    }
    finally
    {
      final SubLObject _prev_bind_2 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
      try
      {
        Threads.$is_thread_performing_cleanupP$.bind( T, thread );
        final SubLObject _values4 = Values.getValuesAsVector();
        inference_datastructures_problem_store.destroy_problem_store( problem_store );
        Values.restoreValuesFromVector( _values4 );
      }
      finally
      {
        Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_2, thread );
      }
    }
    return renderers;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 49664L)
  public static SubLObject candidate_replacements_for_variables(final SubLObject sentence, final SubLObject mt)
  {
    SubLObject ans = NIL;
    final SubLObject v_variables = el_utilities.sentence_free_variables( sentence, UNPROVIDED, UNPROVIDED, UNPROVIDED );
    final SubLObject replacements = candidate_replacements_for_sentence( sentence, mt );
    SubLObject cdolist_list_var = v_variables;
    SubLObject variable = NIL;
    variable = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      final SubLObject arg_positions = cycl_utilities.arg_positions_dfs( variable, sentence, UNPROVIDED );
      SubLObject variable_replacements = NIL;
      SubLObject cdolist_list_var_$55 = arg_positions;
      SubLObject arg_pos = NIL;
      arg_pos = cdolist_list_var_$55.first();
      while ( NIL != cdolist_list_var_$55)
      {
        final SubLObject new_variable_replacements = list_utilities.alist_lookup( replacements, arg_pos, Symbols.symbol_function( EQUAL ), UNPROVIDED );
        if( NIL != new_variable_replacements )
        {
          if( NIL == variable_replacements )
          {
            variable_replacements = new_variable_replacements;
          }
          else
          {
            variable_replacements = conses_high.intersection( variable_replacements, new_variable_replacements, UNPROVIDED, UNPROVIDED );
          }
        }
        cdolist_list_var_$55 = cdolist_list_var_$55.rest();
        arg_pos = cdolist_list_var_$55.first();
      }
      if( NIL != variable_replacements )
      {
        ans = list_utilities.alist_enter( ans, variable, variable_replacements, Symbols.symbol_function( EQUAL ) );
      }
      cdolist_list_var = cdolist_list_var.rest();
      variable = cdolist_list_var.first();
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 50485L)
  public static SubLObject candidate_replacements_for_arg(final SubLObject sentence, final SubLObject arg_position, final SubLObject mt)
  {
    return list_utilities.alist_lookup( candidate_replacements_for_sentence( sentence, mt ), arg_position, Symbols.symbol_function( EQUAL ), UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 50729L)
  public static SubLObject candidate_replacements_for_sentence(final SubLObject sentence, final SubLObject mt)
  {
    return conses_high.copy_list( candidate_replacements_for_sentence_cached( sentence, mt ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 50876L)
  public static SubLObject clear_candidate_replacements_for_sentence_cached()
  {
    final SubLObject cs = $candidate_replacements_for_sentence_cached_caching_state$.getGlobalValue();
    if( NIL != cs )
    {
      memoization_state.caching_state_clear( cs );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 50876L)
  public static SubLObject remove_candidate_replacements_for_sentence_cached(final SubLObject sentence, final SubLObject mt)
  {
    return memoization_state.caching_state_remove_function_results_with_args( $candidate_replacements_for_sentence_cached_caching_state$.getGlobalValue(), ConsesLow.list( sentence, mt ), UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 50876L)
  public static SubLObject candidate_replacements_for_sentence_cached_internal(final SubLObject sentence, final SubLObject mt)
  {
    SubLObject ans = NIL;
    final SubLObject v_properties = $list120;
    if( NIL != el_utilities.el_formula_p( sentence ) )
    {
      SubLObject pos = ZERO_INTEGER;
      SubLObject cdolist_list_var;
      final SubLObject args = cdolist_list_var = cycl_utilities.formula_args( sentence, $kw58$IGNORE );
      SubLObject item = NIL;
      item = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        pos = Numbers.add( pos, ONE_INTEGER );
        SubLObject cdolist_list_var_$56;
        final SubLObject replacement_alist = cdolist_list_var_$56 = candidate_replacements_for_sentence( item, mt );
        SubLObject cons = NIL;
        cons = cdolist_list_var_$56.first();
        while ( NIL != cdolist_list_var_$56)
        {
          SubLObject current;
          final SubLObject datum = current = cons;
          SubLObject key = NIL;
          SubLObject replacements = NIL;
          cdestructuring_bind.destructuring_bind_must_consp( current, datum, $list121 );
          key = current.first();
          current = current.rest();
          SubLObject cdolist_list_var_$57;
          replacements = ( cdolist_list_var_$57 = current );
          SubLObject replacement = NIL;
          replacement = cdolist_list_var_$57.first();
          while ( NIL != cdolist_list_var_$57)
          {
            ans = list_utilities.alist_pushnew( ans, ConsesLow.cons( pos, key ), replacement, Symbols.symbol_function( EQUAL ), UNPROVIDED );
            cdolist_list_var_$57 = cdolist_list_var_$57.rest();
            replacement = cdolist_list_var_$57.first();
          }
          cdolist_list_var_$56 = cdolist_list_var_$56.rest();
          cons = cdolist_list_var_$56.first();
        }
        cdolist_list_var = cdolist_list_var.rest();
        item = cdolist_list_var.first();
      }
      final SubLObject pred = cycl_utilities.formula_arg0( sentence );
      final SubLObject vars = $list122;
      SubLObject query = ConsesLow.listS( $const123$suggestionsForPredRelativeToIsaIn, pred, vars );
      SubLObject cdolist_list_var2 = ask_utilities.query_template( vars, query, mt, v_properties );
      SubLObject result = NIL;
      result = cdolist_list_var2.first();
      while ( NIL != cdolist_list_var2)
      {
        SubLObject current2;
        final SubLObject datum2 = current2 = result;
        SubLObject replacement_coll = NIL;
        SubLObject replacement_pos = NIL;
        SubLObject constraint_coll = NIL;
        SubLObject constraint_pos = NIL;
        cdestructuring_bind.destructuring_bind_must_consp( current2, datum2, $list124 );
        replacement_coll = current2.first();
        current2 = current2.rest();
        cdestructuring_bind.destructuring_bind_must_consp( current2, datum2, $list124 );
        replacement_pos = current2.first();
        current2 = current2.rest();
        cdestructuring_bind.destructuring_bind_must_consp( current2, datum2, $list124 );
        constraint_coll = current2.first();
        current2 = current2.rest();
        cdestructuring_bind.destructuring_bind_must_consp( current2, datum2, $list124 );
        constraint_pos = current2.first();
        current2 = current2.rest();
        if( NIL == current2 )
        {
          final SubLObject constrained_arg = cycl_utilities.formula_arg_position( sentence, ConsesLow.list( constraint_pos ), UNPROVIDED );
          if( NIL == cycl_variables.cyc_varP( constrained_arg ) && NIL != isa.isaP( constrained_arg, constraint_coll, mt, UNPROVIDED ) )
          {
            ans = add_candidate_replacements( ans, replacement_pos, replacement_coll, mt, v_properties );
          }
        }
        else
        {
          cdestructuring_bind.cdestructuring_bind_error( datum2, $list124 );
        }
        cdolist_list_var2 = cdolist_list_var2.rest();
        result = cdolist_list_var2.first();
      }
      query = ConsesLow.listS( $const125$suggestionsForPredRelativeToGenls, pred, vars );
      cdolist_list_var2 = ask_utilities.query_template( vars, query, mt, v_properties );
      result = NIL;
      result = cdolist_list_var2.first();
      while ( NIL != cdolist_list_var2)
      {
        SubLObject current2;
        final SubLObject datum2 = current2 = result;
        SubLObject replacement_coll = NIL;
        SubLObject replacement_pos = NIL;
        SubLObject constraint_coll = NIL;
        SubLObject constraint_pos = NIL;
        cdestructuring_bind.destructuring_bind_must_consp( current2, datum2, $list124 );
        replacement_coll = current2.first();
        current2 = current2.rest();
        cdestructuring_bind.destructuring_bind_must_consp( current2, datum2, $list124 );
        replacement_pos = current2.first();
        current2 = current2.rest();
        cdestructuring_bind.destructuring_bind_must_consp( current2, datum2, $list124 );
        constraint_coll = current2.first();
        current2 = current2.rest();
        cdestructuring_bind.destructuring_bind_must_consp( current2, datum2, $list124 );
        constraint_pos = current2.first();
        current2 = current2.rest();
        if( NIL == current2 )
        {
          final SubLObject constrained_arg = cycl_utilities.formula_arg_position( sentence, ConsesLow.list( constraint_pos ), UNPROVIDED );
          if( NIL == cycl_variables.cyc_varP( constrained_arg ) && NIL != genls.genlsP( constrained_arg, constraint_coll, mt, UNPROVIDED ) )
          {
            ans = add_candidate_replacements( ans, replacement_pos, replacement_coll, mt, v_properties );
          }
        }
        else
        {
          cdestructuring_bind.cdestructuring_bind_error( datum2, $list124 );
        }
        cdolist_list_var2 = cdolist_list_var2.rest();
        result = cdolist_list_var2.first();
      }
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 50876L)
  public static SubLObject candidate_replacements_for_sentence_cached(final SubLObject sentence, final SubLObject mt)
  {
    SubLObject caching_state = $candidate_replacements_for_sentence_cached_caching_state$.getGlobalValue();
    if( NIL == caching_state )
    {
      caching_state = memoization_state.create_global_caching_state_for_name( $sym119$CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED, $sym126$_CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED_CACHING_STATE_, $int127$2048, EQUAL,
          TWO_INTEGER, ZERO_INTEGER );
      memoization_state.register_hl_store_cache_clear_callback( $sym128$CLEAR_CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED );
    }
    final SubLObject sxhash = memoization_state.sxhash_calc_2( sentence, mt );
    final SubLObject collisions = memoization_state.caching_state_lookup( caching_state, sxhash, UNPROVIDED );
    if( !collisions.eql( memoization_state.$memoized_item_not_found$.getGlobalValue() ) )
    {
      SubLObject cdolist_list_var = collisions;
      SubLObject collision = NIL;
      collision = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        SubLObject cached_args = collision.first();
        final SubLObject results2 = conses_high.second( collision );
        if( sentence.equal( cached_args.first() ) )
        {
          cached_args = cached_args.rest();
          if( NIL != cached_args && NIL == cached_args.rest() && mt.equal( cached_args.first() ) )
          {
            return memoization_state.caching_results( results2 );
          }
        }
        cdolist_list_var = cdolist_list_var.rest();
        collision = cdolist_list_var.first();
      }
    }
    final SubLObject results3 = Values.arg2( Values.resetMultipleValues(), Values.multiple_value_list( candidate_replacements_for_sentence_cached_internal( sentence, mt ) ) );
    memoization_state.caching_state_enter_multi_key_n( caching_state, sxhash, collisions, results3, ConsesLow.list( sentence, mt ) );
    return memoization_state.caching_results( results3 );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 52606L)
  public static SubLObject add_candidate_replacements(SubLObject ans, final SubLObject rep_pos, final SubLObject rep_coll, final SubLObject mt, final SubLObject v_properties)
  {
    final SubLObject key = ConsesLow.list( rep_pos );
    final SubLObject old_values = list_utilities.alist_lookup( ans, key, Symbols.symbol_function( EQUAL ), UNPROVIDED );
    final SubLObject new_values = gke_get_elements( rep_coll, mt, v_properties );
    final SubLObject join_function = candidate_replacement_join_function( cae_query_search.current_cae_task() );
    if( NIL != list_utilities.non_empty_list_p( old_values ) )
    {
      ans = list_utilities.alist_enter( ans, key, Functions.funcall( join_function, old_values, new_values, Symbols.symbol_function( EQUAL ) ), Symbols.symbol_function( EQUAL ) );
    }
    else if( NIL != list_utilities.non_empty_list_p( new_values ) )
    {
      ans = list_utilities.alist_enter( ans, key, new_values, Symbols.symbol_function( EQUAL ) );
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 53157L)
  public static SubLObject candidate_replacement_join_function(final SubLObject task)
  {
    return ( NIL != query_library_utils.query_library_should_suggestions_be_intersected( task ) ) ? Symbols.symbol_function( $sym129$INTERSECTION ) : Symbols.symbol_function( $sym130$UNION );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 53310L)
  public static SubLObject clear_gke_get_elements()
  {
    final SubLObject cs = $gke_get_elements_caching_state$.getGlobalValue();
    if( NIL != cs )
    {
      memoization_state.caching_state_clear( cs );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 53310L)
  public static SubLObject remove_gke_get_elements(final SubLObject set_or_collection, final SubLObject mt, final SubLObject v_properties)
  {
    return memoization_state.caching_state_remove_function_results_with_args( $gke_get_elements_caching_state$.getGlobalValue(), ConsesLow.list( set_or_collection, mt, v_properties ), UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 53310L)
  public static SubLObject gke_get_elements_internal(final SubLObject set_or_collection, final SubLObject mt, final SubLObject v_properties)
  {
    return Sequences.delete_if( $sym132$HL_PROTOTYPICAL_INSTANCE_, ask_utilities.query_variable( $sym133$_X, ConsesLow.list( $const134$elementOf, $sym133$_X, set_or_collection ), mt, v_properties ), UNPROVIDED,
        UNPROVIDED, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 53310L)
  public static SubLObject gke_get_elements(final SubLObject set_or_collection, final SubLObject mt, final SubLObject v_properties)
  {
    SubLObject caching_state = $gke_get_elements_caching_state$.getGlobalValue();
    if( NIL == caching_state )
    {
      caching_state = memoization_state.create_global_caching_state_for_name( $sym131$GKE_GET_ELEMENTS, $sym135$_GKE_GET_ELEMENTS_CACHING_STATE_, $int113$256, EQUAL, THREE_INTEGER, ZERO_INTEGER );
      memoization_state.register_hl_store_cache_clear_callback( $sym136$CLEAR_GKE_GET_ELEMENTS );
    }
    final SubLObject sxhash = memoization_state.sxhash_calc_3( set_or_collection, mt, v_properties );
    final SubLObject collisions = memoization_state.caching_state_lookup( caching_state, sxhash, UNPROVIDED );
    if( !collisions.eql( memoization_state.$memoized_item_not_found$.getGlobalValue() ) )
    {
      SubLObject cdolist_list_var = collisions;
      SubLObject collision = NIL;
      collision = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        SubLObject cached_args = collision.first();
        final SubLObject results2 = conses_high.second( collision );
        if( set_or_collection.equal( cached_args.first() ) )
        {
          cached_args = cached_args.rest();
          if( mt.equal( cached_args.first() ) )
          {
            cached_args = cached_args.rest();
            if( NIL != cached_args && NIL == cached_args.rest() && v_properties.equal( cached_args.first() ) )
            {
              return memoization_state.caching_results( results2 );
            }
          }
        }
        cdolist_list_var = cdolist_list_var.rest();
        collision = cdolist_list_var.first();
      }
    }
    final SubLObject results3 = Values.arg2( Values.resetMultipleValues(), Values.multiple_value_list( gke_get_elements_internal( set_or_collection, mt, v_properties ) ) );
    memoization_state.caching_state_enter_multi_key_n( caching_state, sxhash, collisions, results3, ConsesLow.list( set_or_collection, mt, v_properties ) );
    return memoization_state.caching_results( results3 );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 53587L)
  public static SubLObject replacement_renderer_groves(final SubLObject focal_term, final SubLObject mt, final SubLObject renderer_list, final SubLObject problem_store)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject tables = NIL;
    final SubLObject renderer_nodes = Mapping.mapcar( $sym137$NEW_REPLACEMENT_TREE, renderer_list );
    final SubLObject conflation_table = replacement_renderer_tree_conflation_preds( focal_term, mt, problem_store );
    final SubLObject track_conflationP = list_utilities.non_empty_list_p( conflation_table );
    final SubLObject table_table = ( NIL != track_conflationP ) ? dictionary.new_dictionary( Symbols.symbol_function( EQL ), UNPROVIDED ) : NIL;
    final SubLObject already_resourcing_p = sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.getDynamicValue( thread );
    final SubLObject _prev_bind_0 = sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.currentBinding( thread );
    final SubLObject _prev_bind_2 = sbhl_marking_vars.$resourced_sbhl_marking_spaces$.currentBinding( thread );
    final SubLObject _prev_bind_3 = sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.currentBinding( thread );
    try
    {
      sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.bind( sbhl_marking_vars.determine_resource_limit( already_resourcing_p, SIX_INTEGER ), thread );
      sbhl_marking_vars.$resourced_sbhl_marking_spaces$.bind( sbhl_marking_vars.possibly_new_marking_resource( already_resourcing_p ), thread );
      sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.bind( T, thread );
      SubLObject cdolist_list_var = replacement_renderer_tree_specifications( focal_term, mt, problem_store );
      SubLObject cons = NIL;
      cons = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        SubLObject current;
        final SubLObject datum = current = cons;
        SubLObject bin_pred = NIL;
        SubLObject argnum = NIL;
        cdestructuring_bind.destructuring_bind_must_consp( current, datum, $list138 );
        bin_pred = current.first();
        current = ( argnum = current.rest() );
        final SubLObject table_to_conflate_to = ( NIL != track_conflationP ) ? find_table_to_conflate_to( bin_pred, conflation_table, table_table ) : NIL;
        final SubLObject renderer_to_superiors = renderer_to_superiors_table( renderer_nodes, mt, bin_pred, argnum, problem_store, table_to_conflate_to );
        if( NIL != track_conflationP && NIL == dictionary.dictionary_p( table_to_conflate_to ) )
        {
          dictionary.dictionary_enter( table_table, bin_pred, renderer_to_superiors );
        }
        final SubLObject item_var = renderer_to_superiors;
        if( NIL == conses_high.member( item_var, tables, Symbols.symbol_function( EQL ), Symbols.symbol_function( IDENTITY ) ) )
        {
          tables = ConsesLow.cons( item_var, tables );
        }
        cdolist_list_var = cdolist_list_var.rest();
        cons = cdolist_list_var.first();
      }
    }
    finally
    {
      sbhl_marking_vars.$resourcing_sbhl_marking_spaces_p$.rebind( _prev_bind_3, thread );
      sbhl_marking_vars.$resourced_sbhl_marking_spaces$.rebind( _prev_bind_2, thread );
      sbhl_marking_vars.$resourced_sbhl_marking_space_limit$.rebind( _prev_bind_0, thread );
    }
    SubLObject groves = NIL;
    SubLObject cdolist_list_var2 = tables;
    SubLObject renderer_to_superiors2 = NIL;
    renderer_to_superiors2 = cdolist_list_var2.first();
    while ( NIL != cdolist_list_var2)
    {
      final SubLObject var;
      final SubLObject listy_grove = var = replacement_renderer_grove( renderer_nodes, renderer_to_superiors2 );
      if( NIL != var )
      {
        groves = ConsesLow.cons( var, groves );
      }
      cdolist_list_var2 = cdolist_list_var2.rest();
      renderer_to_superiors2 = cdolist_list_var2.first();
    }
    return groves;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55000L)
  public static SubLObject find_table_to_conflate_to(final SubLObject bin_pred, final SubLObject conflation_table, final SubLObject table_table)
  {
    SubLObject table = NIL;
    if( NIL == table )
    {
      SubLObject csome_list_var = conflation_table;
      SubLObject conflation_set = NIL;
      conflation_set = csome_list_var.first();
      while ( NIL == table && NIL != csome_list_var)
      {
        final SubLObject preds = el_utilities.el_set_items( conflation_set );
        if( NIL != conses_high.member( bin_pred, preds, UNPROVIDED, UNPROVIDED ) && NIL == table )
        {
          SubLObject csome_list_var_$58 = preds;
          SubLObject other_pred = NIL;
          other_pred = csome_list_var_$58.first();
          while ( NIL == table && NIL != csome_list_var_$58)
          {
            if( !other_pred.eql( bin_pred ) )
            {
              table = dictionary.dictionary_lookup_without_values( table_table, other_pred, NIL );
              if( NIL != table )
              {
                PrintLow.format( T, $str139$__Conflating__S_to__S_____, bin_pred, other_pred );
              }
            }
            csome_list_var_$58 = csome_list_var_$58.rest();
            other_pred = csome_list_var_$58.first();
          }
        }
        csome_list_var = csome_list_var.rest();
        conflation_set = csome_list_var.first();
      }
    }
    return table;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject replacement_tree_print_function_trampoline(final SubLObject v_object, final SubLObject stream)
  {
    print_replacement_tree( v_object, stream, ZERO_INTEGER );
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject replacement_tree_p(final SubLObject v_object)
  {
    return ( v_object.getClass() == $replacement_tree_native.class ) ? T : NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject r_tree_root(final SubLObject v_object)
  {
    assert NIL != replacement_tree_p( v_object ) : v_object;
    return v_object.getField2();
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject r_tree_children(final SubLObject v_object)
  {
    assert NIL != replacement_tree_p( v_object ) : v_object;
    return v_object.getField3();
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject _csetf_r_tree_root(final SubLObject v_object, final SubLObject value)
  {
    assert NIL != replacement_tree_p( v_object ) : v_object;
    return v_object.setField2( value );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject _csetf_r_tree_children(final SubLObject v_object, final SubLObject value)
  {
    assert NIL != replacement_tree_p( v_object ) : v_object;
    return v_object.setField3( value );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject make_replacement_tree(SubLObject arglist)
  {
    if( arglist == UNPROVIDED )
    {
      arglist = NIL;
    }
    final SubLObject v_new = new $replacement_tree_native();
    SubLObject next;
    SubLObject current_arg;
    SubLObject current_value;
    SubLObject pcase_var;
    for( next = NIL, next = arglist; NIL != next; next = conses_high.cddr( next ) )
    {
      current_arg = next.first();
      current_value = conses_high.cadr( next );
      pcase_var = current_arg;
      if( pcase_var.eql( $kw154$ROOT ) )
      {
        _csetf_r_tree_root( v_new, current_value );
      }
      else if( pcase_var.eql( $kw4$CHILDREN ) )
      {
        _csetf_r_tree_children( v_new, current_value );
      }
      else
      {
        Errors.error( $str155$Invalid_slot__S_for_construction_, current_arg );
      }
    }
    return v_new;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject visit_defstruct_replacement_tree(final SubLObject obj, final SubLObject visitor_fn)
  {
    Functions.funcall( visitor_fn, obj, $kw156$BEGIN, $sym157$MAKE_REPLACEMENT_TREE, TWO_INTEGER );
    Functions.funcall( visitor_fn, obj, $kw158$SLOT, $kw154$ROOT, r_tree_root( obj ) );
    Functions.funcall( visitor_fn, obj, $kw158$SLOT, $kw4$CHILDREN, r_tree_children( obj ) );
    Functions.funcall( visitor_fn, obj, $kw159$END, $sym157$MAKE_REPLACEMENT_TREE, TWO_INTEGER );
    return obj;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 55999L)
  public static SubLObject visit_defstruct_object_replacement_tree_method(final SubLObject obj, final SubLObject visitor_fn)
  {
    return visit_defstruct_replacement_tree( obj, visitor_fn );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 56131L)
  public static SubLObject print_replacement_tree(final SubLObject v_object, final SubLObject stream, final SubLObject depth)
  {
    PrintLow.format( stream, $str161$_REPLACEMENT_TREE__S_, conses_high.second( replacement_tree_root( v_object ) ) );
    return v_object;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 56316L)
  public static SubLObject new_replacement_tree(final SubLObject root, SubLObject children)
  {
    if( children == UNPROVIDED )
    {
      children = NIL;
    }
    assert NIL != Types.listp( root ) : root;
    final SubLObject list_var = children;
    assert NIL != list_utilities.non_dotted_list_p( list_var ) : list_var;
    SubLObject cdolist_list_var = list_var;
    SubLObject elem = NIL;
    elem = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      assert NIL != replacement_tree_p( elem ) : elem;
      cdolist_list_var = cdolist_list_var.rest();
      elem = cdolist_list_var.first();
    }
    final SubLObject tree = make_replacement_tree( UNPROVIDED );
    _csetf_r_tree_root( tree, root );
    _csetf_r_tree_children( tree, children );
    return tree;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 56614L)
  public static SubLObject replacement_tree_root(final SubLObject tree)
  {
    assert NIL != replacement_tree_p( tree ) : tree;
    return r_tree_root( tree );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 56739L)
  public static SubLObject replacement_tree_children(final SubLObject tree)
  {
    assert NIL != replacement_tree_p( tree ) : tree;
    return r_tree_children( tree );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 56860L)
  public static SubLObject replacement_tree_add_child(final SubLObject superior, final SubLObject renderer)
  {
    assert NIL != replacement_tree_p( superior ) : superior;
    assert NIL != replacement_tree_p( renderer ) : renderer;
    _csetf_r_tree_children( superior, ConsesLow.cons( renderer, r_tree_children( superior ) ) );
    return superior;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 57086L)
  public static SubLObject replacement_renderer_grove(final SubLObject renderer_list, final SubLObject renderer_to_superiors)
  {
    assert NIL != list_utilities.non_dotted_list_p( renderer_list ) : renderer_list;
    SubLObject cdolist_list_var = renderer_list;
    SubLObject elem = NIL;
    elem = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      assert NIL != replacement_tree_p( elem ) : elem;
      cdolist_list_var = cdolist_list_var.rest();
      elem = cdolist_list_var.first();
    }
    return replacement_renderer_grove_recursive( renderer_list, renderer_to_superiors, NIL );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 57309L)
  public static SubLObject replacement_renderer_grove_recursive(final SubLObject renderer_nodes, final SubLObject renderer_to_superiors, final SubLObject recursedP)
  {
    assert NIL != list_utilities.non_dotted_list_p( renderer_nodes ) : renderer_nodes;
    SubLObject cdolist_list_var = renderer_nodes;
    SubLObject elem = NIL;
    elem = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      assert NIL != replacement_tree_p( elem ) : elem;
      cdolist_list_var = cdolist_list_var.rest();
      elem = cdolist_list_var.first();
    }
    SubLObject remaining = conses_high.copy_list( renderer_nodes );
    SubLObject still_remaining = NIL;
    SubLObject tree = NIL;
    SubLObject no_progressP = NIL;
    SubLObject depth = ZERO_INTEGER;
    final SubLObject max_depth = NIL;
    SubLObject listy_grove = NIL;
    while ( ( NIL == max_depth || !depth.numGE( max_depth ) ) && NIL == list_utilities.empty_list_p( remaining ) && NIL == no_progressP)
    {
      still_remaining = NIL;
      no_progressP = T;
      final SubLObject new_tree_level = set.new_set( Symbols.symbol_function( EQL ), UNPROVIDED );
      SubLObject cdolist_list_var2 = Sequences.nreverse( remaining );
      SubLObject renderer_node = NIL;
      renderer_node = cdolist_list_var2.first();
      while ( NIL != cdolist_list_var2)
      {
        if( NIL != postpone_adding_replacementP( renderer_node, tree, renderer_to_superiors ) )
        {
          still_remaining = ConsesLow.cons( renderer_node, still_remaining );
        }
        else
        {
          add_one_renderer( renderer_node, renderer_to_superiors, new_tree_level, tree );
          no_progressP = NIL;
        }
        cdolist_list_var2 = cdolist_list_var2.rest();
        renderer_node = cdolist_list_var2.first();
      }
      tree = list_utilities.add_to_end( new_tree_level, tree );
      remaining = still_remaining;
      depth = Numbers.add( depth, ONE_INTEGER );
    }
    final SubLObject cycleP = makeBoolean( ( NIL == max_depth || depth.numL( max_depth ) ) && NIL != list_utilities.non_empty_list_p( remaining ) );
    if( NIL != cycleP && NIL == recursedP )
    {
      break_replacement_renderer_cycles( remaining, renderer_to_superiors );
      listy_grove = replacement_renderer_grove_recursive( renderer_nodes, renderer_to_superiors, T );
    }
    else if( NIL != cycleP )
    {
      Errors.sublisp_break( $str163$Unable_to_place__D_renderers, new SubLObject[] { Sequences.length( remaining )
      } );
    }
    else if( depth.numG( ONE_INTEGER ) )
    {
      if( NIL != list_utilities.non_empty_list_p( remaining ) )
      {
        Errors.warn( $str164$Hit_max_depth_of__D__Pruning__D_r, max_depth, Sequences.length( remaining ) );
      }
      listy_grove = NIL;
      final SubLObject set_var = tree.first();
      final SubLObject set_contents_var = set.do_set_internal( set_var );
      SubLObject basis_object;
      SubLObject state;
      SubLObject root_node;
      SubLObject listy_tree;
      for( basis_object = set_contents.do_set_contents_basis_object( set_contents_var ), state = NIL, state = set_contents.do_set_contents_initial_state( basis_object, set_contents_var ); NIL == set_contents
          .do_set_contents_doneP( basis_object, state ); state = set_contents.do_set_contents_update_state( state ) )
      {
        root_node = set_contents.do_set_contents_next( basis_object, state );
        if( NIL != set_contents.do_set_contents_element_validP( state, root_node ) )
        {
          listy_tree = listy_replacement_tree( root_node, tree );
          if( NIL == $omit_suggestion_stumpsP$.getGlobalValue() || NIL == list_utilities.lengthLE( listy_tree, ONE_INTEGER, UNPROVIDED ) )
          {
            listy_grove = ConsesLow.cons( listy_tree, listy_grove );
          }
        }
      }
    }
    return listy_grove;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 59368L)
  public static SubLObject add_one_renderer(final SubLObject renderer_node, final SubLObject renderer_to_superiors, final SubLObject new_tree_level, final SubLObject tree)
  {
    assert NIL != replacement_tree_p( renderer_node ) : renderer_node;
    final SubLObject list_var = dictionary.dictionary_keys( renderer_to_superiors );
    assert NIL != list_utilities.non_dotted_list_p( list_var ) : list_var;
    SubLObject cdolist_list_var = list_var;
    SubLObject elem = NIL;
    elem = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      assert NIL != Types.listp( elem ) : elem;
      cdolist_list_var = cdolist_list_var.rest();
      elem = cdolist_list_var.first();
    }
    final SubLObject renderer = replacement_tree_root( renderer_node );
    final SubLObject this_term = conses_high.second( renderer );
    final SubLObject traceP = NIL;
    final SubLObject superiors = dictionary.dictionary_lookup_without_values( renderer_to_superiors, renderer, NIL );
    final SubLObject list_var2 = set.set_element_list( superiors );
    assert NIL != list_utilities.non_dotted_list_p( list_var2 ) : list_var2;
    SubLObject cdolist_list_var2 = list_var2;
    SubLObject elem2 = NIL;
    elem2 = cdolist_list_var2.first();
    while ( NIL != cdolist_list_var2)
    {
      assert NIL != replacement_tree_p( elem2 ) : elem2;
      cdolist_list_var2 = cdolist_list_var2.rest();
      elem2 = cdolist_list_var2.first();
    }
    if( NIL != traceP )
    {
      PrintLow.format( T, $str165$__Placing__S_under_superiors___S_, this_term, Mapping.mapcar( $sym166$SECOND, set.set_element_list( superiors ) ) );
    }
    set.set_add( renderer_node, new_tree_level );
    SubLObject doneP = NIL;
    final SubLObject remaining_superiors = set.copy_set( superiors );
    if( NIL == doneP )
    {
      SubLObject end_var;
      SubLObject i;
      SubLObject tree_level;
      SubLObject set_contents_var;
      SubLObject basis_object;
      SubLObject state;
      SubLObject superior;
      SubLObject foundP;
      for( end_var = MINUS_ONE_INTEGER, i = NIL, i = number_utilities.f_1_( Sequences.length( tree ) ); NIL == doneP && !i.numLE( end_var ); doneP = set.set_emptyP( remaining_superiors ), i = Numbers.add( i,
          MINUS_ONE_INTEGER ) )
      {
        tree_level = ConsesLow.nth( i, tree );
        set_contents_var = set.do_set_internal( superiors );
        for( basis_object = set_contents.do_set_contents_basis_object( set_contents_var ), state = NIL, state = set_contents.do_set_contents_initial_state( basis_object, set_contents_var ); NIL == set_contents
            .do_set_contents_doneP( basis_object, state ); state = set_contents.do_set_contents_update_state( state ) )
        {
          superior = set_contents.do_set_contents_next( basis_object, state );
          if( NIL != set_contents.do_set_contents_element_validP( state, superior ) && NIL != set.set_memberP( superior, remaining_superiors ) )
          {
            foundP = NIL;
            if( NIL != set.set_memberP( superior, tree_level ) )
            {
              foundP = T;
              if( NIL != traceP )
              {
                PrintLow.format( T, $str167$__Found__S_on_level__D___, conses_high.second( superior ), i );
              }
              if( NIL == renderer_tree_contains_rendererP( superior, renderer_node, i, tree, traceP ) )
              {
                if( NIL != traceP )
                {
                  PrintLow.format( T, $str168$__Not_in_subtree__so_adding__S_un, new SubLObject[] { this_term, conses_high.second( superior ), i
                  } );
                }
                replacement_tree_add_child( superior, renderer_node );
                if( NIL != traceP )
                {
                  PrintLow.format( T, $str169$___Tree_level__D_is_now__S___, i, tree_level );
                }
              }
            }
            if( NIL != foundP )
            {
              set.set_remove( superior, remaining_superiors );
            }
          }
        }
      }
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 61191L)
  public static SubLObject renderer_tree_contains_rendererP(final SubLObject root, final SubLObject renderer, final SubLObject i, final SubLObject tree, SubLObject traceP)
  {
    if( traceP == UNPROVIDED )
    {
      traceP = NIL;
    }
    assert NIL != replacement_tree_p( root ) : root;
    assert NIL != replacement_tree_p( renderer ) : renderer;
    SubLObject foundP = NIL;
    final SubLObject immediate_subnodes = replacement_tree_children( root );
    if( NIL == foundP )
    {
      SubLObject csome_list_var = immediate_subnodes;
      SubLObject subnode = NIL;
      subnode = csome_list_var.first();
      while ( NIL == foundP && NIL != csome_list_var)
      {
        if( replacement_tree_root( renderer ).equal( replacement_tree_root( subnode ) ) )
        {
          foundP = T;
          if( NIL != traceP )
          {
            print_high.print( $str170$Found_it_, UNPROVIDED );
          }
        }
        else if( NIL != list_utilities.lengthG( tree, number_utilities.f_1X( i ), UNPROVIDED ) )
        {
          foundP = renderer_tree_contains_rendererP( subnode, renderer, number_utilities.f_1X( i ), tree, traceP );
        }
        csome_list_var = csome_list_var.rest();
        subnode = csome_list_var.first();
      }
    }
    return foundP;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 61777L)
  public static SubLObject break_replacement_renderer_cycles(final SubLObject remaining, final SubLObject renderer_to_superiors)
  {
    assert NIL != list_utilities.non_dotted_list_p( remaining ) : remaining;
    SubLObject cdolist_list_var = remaining;
    SubLObject elem = NIL;
    elem = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      assert NIL != replacement_tree_p( elem ) : elem;
      cdolist_list_var = cdolist_list_var.rest();
      elem = cdolist_list_var.first();
    }
    SubLObject still_remaining = conses_high.copy_list( remaining );
    cdolist_list_var = remaining;
    SubLObject renderer_node = NIL;
    renderer_node = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      final SubLObject renderer = replacement_tree_root( renderer_node );
      final SubLObject superiors = dictionary.dictionary_lookup_without_values( renderer_to_superiors, renderer, UNPROVIDED );
      final SubLObject old_size = set.set_size( superiors );
      set_utilities.set_remove_all( still_remaining, superiors );
      final SubLObject new_size = set.set_size( dictionary.dictionary_lookup_without_values( renderer_to_superiors, renderer, UNPROVIDED ) );
      if( old_size.numG( new_size ) )
      {
      }
      still_remaining = Sequences.delete( renderer, still_remaining, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
      cdolist_list_var = cdolist_list_var.rest();
      renderer_node = cdolist_list_var.first();
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 62525L)
  public static SubLObject listy_replacement_tree(final SubLObject root_node, final SubLObject tree)
  {
    SubLObject subnodes = NIL;
    if( NIL != list_utilities.non_empty_list_p( tree ) )
    {
      SubLObject cdolist_list_var = replacement_tree_children( root_node );
      SubLObject subnode = NIL;
      subnode = cdolist_list_var.first();
      while ( NIL != cdolist_list_var)
      {
        subnodes = ConsesLow.cons( listy_replacement_tree( subnode, tree.rest() ), subnodes );
        cdolist_list_var = cdolist_list_var.rest();
        subnode = cdolist_list_var.first();
      }
    }
    return ConsesLow.cons( replacement_tree_root( root_node ), Sequences.nreverse( subnodes ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 62847L)
  public static SubLObject postpone_adding_replacementP(final SubLObject renderer_node, final SubLObject tree, final SubLObject renderer_to_superiors)
  {
    assert NIL != replacement_tree_p( renderer_node ) : renderer_node;
    SubLObject postponeP = NIL;
    final SubLObject renderer = replacement_tree_root( renderer_node );
    final SubLObject this_term = conses_high.second( renderer );
    final SubLObject traceP = NIL;
    final SubLObject superiors = dictionary.dictionary_lookup_without_values( renderer_to_superiors, renderer, NIL );
    final SubLObject set_contents_var = set.do_set_internal( superiors );
    SubLObject basis_object;
    SubLObject state;
    SubLObject superior;
    SubLObject foundP;
    SubLObject csome_list_var;
    SubLObject tree_level;
    for( basis_object = set_contents.do_set_contents_basis_object( set_contents_var ), state = NIL, state = set_contents.do_set_contents_initial_state( basis_object, set_contents_var ); NIL == postponeP
        && NIL == set_contents.do_set_contents_doneP( basis_object, state ); state = set_contents.do_set_contents_update_state( state ) )
    {
      superior = set_contents.do_set_contents_next( basis_object, state );
      if( NIL != set_contents.do_set_contents_element_validP( state, superior ) )
      {
        foundP = NIL;
        if( NIL == foundP )
        {
          for( csome_list_var = tree, tree_level = NIL, tree_level = csome_list_var.first(); NIL == foundP && NIL != csome_list_var; foundP = set.set_memberP( superior, tree_level ), csome_list_var = csome_list_var
              .rest(), tree_level = csome_list_var.first() )
          {
          }
        }
        if( NIL == foundP )
        {
          if( NIL != traceP )
          {
            PrintLow.format( T, $str171$__Postponing__S_because__S_is_not, this_term, superior );
          }
          postponeP = T;
        }
      }
    }
    return postponeP;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 63678L)
  public static SubLObject replacement_renderer_tree_specifications(final SubLObject focal_term, final SubLObject mt, final SubLObject problem_store)
  {
    final SubLObject query_sentence = el_utilities.make_existential( $sym172$_COL, simplifier.disjoin( ConsesLow.list( ConsesLow.listS( $const173$suggestionGenlClassOrderedBy, focal_term, $list174 ), simplifier.conjoin(
        ConsesLow.list( $list175, ConsesLow.listS( $const94$isa, focal_term, $list176 ) ), UNPROVIDED ) ), UNPROVIDED ) );
    final SubLObject template = $list177;
    return ask_utilities.query_template( template, query_sentence, mt, ConsesLow.list( $kw178$PROBLEM_STORE, problem_store, $kw179$INFERENCE_MODE, $kw180$MINIMAL, $kw181$ANSWER_LANGUAGE, $kw182$HL ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 64208L)
  public static SubLObject replacement_renderer_tree_conflation_preds(final SubLObject focal_term, final SubLObject mt, final SubLObject problem_store)
  {
    final SubLObject query_sentence = el_utilities.make_existential( $sym172$_COL, simplifier.disjoin( ConsesLow.list( simplifier.conjoin( ConsesLow.list( $list183, ConsesLow.listS( $const184$genls, focal_term,
        $list176 ) ), UNPROVIDED ), simplifier.conjoin( ConsesLow.list( $list185, ConsesLow.listS( $const94$isa, focal_term, $list176 ) ), UNPROVIDED ) ), UNPROVIDED ) );
    return ask_utilities.query_variable( $sym186$_SET, query_sentence, mt, ConsesLow.list( $kw178$PROBLEM_STORE, problem_store, $kw179$INFERENCE_MODE, $kw180$MINIMAL, $kw181$ANSWER_LANGUAGE, $kw182$HL ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 64849L)
  public static SubLObject renderer_to_superiors_table(final SubLObject renderer_nodes, final SubLObject mt, final SubLObject bin_pred, final SubLObject argnum, final SubLObject problem_store, SubLObject table)
  {
    if( table == UNPROVIDED )
    {
      table = NIL;
    }
    if( NIL == table )
    {
      table = dictionary.new_dictionary( Symbols.symbol_function( EQL ), Sequences.length( renderer_nodes ) );
    }
    final SubLObject renderer_nodes_from_terms = dictionary.new_dictionary( Symbols.symbol_function( EQL ), Sequences.length( renderer_nodes ) );
    SubLObject cdolist_list_var = renderer_nodes;
    SubLObject renderer_node = NIL;
    renderer_node = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      dictionary.dictionary_enter( renderer_nodes_from_terms, conses_high.second( replacement_tree_root( renderer_node ) ), renderer_node );
      cdolist_list_var = cdolist_list_var.rest();
      renderer_node = cdolist_list_var.first();
    }
    cdolist_list_var = renderer_nodes;
    renderer_node = NIL;
    renderer_node = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      final SubLObject renderer = replacement_tree_root( renderer_node );
      final SubLObject this_term = conses_high.second( renderer );
      final SubLObject traceP = NIL;
      final SubLObject superiors = superiors_for_renderer_term( this_term, mt, bin_pred, argnum, problem_store );
      SubLObject filtered_renderers = dictionary.dictionary_lookup_without_values( table, renderer, UNPROVIDED );
      if( NIL != traceP )
      {
        PrintLow.format( T, $str187$__Filtered_renderers___S__, filtered_renderers );
      }
      if( NIL == set.set_p( filtered_renderers ) )
      {
        filtered_renderers = set.new_set( Symbols.symbol_function( EQL ), UNPROVIDED );
        dictionary.dictionary_enter( table, renderer, filtered_renderers );
      }
      SubLObject cdolist_list_var_$59 = superiors;
      SubLObject superior = NIL;
      superior = cdolist_list_var_$59.first();
      while ( NIL != cdolist_list_var_$59)
      {
        final SubLObject renderer_node_$60 = dictionary.dictionary_lookup_without_values( renderer_nodes_from_terms, superior, UNPROVIDED );
        if( NIL != renderer_node_$60 )
        {
          set.set_add( renderer_node_$60, filtered_renderers );
        }
        cdolist_list_var_$59 = cdolist_list_var_$59.rest();
        superior = cdolist_list_var_$59.first();
      }
      cdolist_list_var = cdolist_list_var.rest();
      renderer_node = cdolist_list_var.first();
    }
    return table;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 66461L)
  public static SubLObject superiors_for_renderer_term(final SubLObject this_term, final SubLObject mt, final SubLObject bin_pred, final SubLObject argnum, final SubLObject problem_store)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    SubLObject superiors = NIL;
    if( NIL != kb_indexing_datastructures.indexed_term_p( this_term ) && bin_pred.eql( $const184$genls ) )
    {
      final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate( mt_relevance_macros.determine_inference_mt_relevance_el_spec( mt ) );
      final SubLObject _prev_bind_0 = mt_relevance_macros.$mt$.currentBinding( thread );
      final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mt_function$.currentBinding( thread );
      final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mts$.currentBinding( thread );
      try
      {
        mt_relevance_macros.$mt$.bind( mt_relevance_macros.update_inference_mt_relevance_mt( mt_var ), thread );
        mt_relevance_macros.$relevant_mt_function$.bind( mt_relevance_macros.update_inference_mt_relevance_function( mt_var ), thread );
        mt_relevance_macros.$relevant_mts$.bind( mt_relevance_macros.update_inference_mt_relevance_mt_list( mt_var ), thread );
        if( argnum.eql( ONE_INTEGER ) )
        {
          superiors = genls.all_specs( this_term, UNPROVIDED, UNPROVIDED );
        }
        else if( argnum.eql( TWO_INTEGER ) )
        {
          superiors = genls.all_genls( this_term, UNPROVIDED, UNPROVIDED );
        }
      }
      finally
      {
        mt_relevance_macros.$relevant_mts$.rebind( _prev_bind_3, thread );
        mt_relevance_macros.$relevant_mt_function$.rebind( _prev_bind_2, thread );
        mt_relevance_macros.$mt$.rebind( _prev_bind_0, thread );
      }
    }
    else
    {
      final SubLObject this_argnum = Numbers.subtract( THREE_INTEGER, argnum );
      final SubLObject variable = $kw189$X;
      final SubLObject query_sentence = el_utilities.replace_formula_arg( this_argnum, this_term, el_utilities.make_binary_formula( bin_pred, variable, variable ) );
      SubLObject v_properties = ConsesLow.list( $kw178$PROBLEM_STORE, problem_store, $kw181$ANSWER_LANGUAGE, $kw182$HL, $kw179$INFERENCE_MODE, $kw180$MINIMAL );
      if( NIL == $use_tva_for_suggestionsP$.getGlobalValue() )
      {
        v_properties = conses_high.putf( v_properties, $kw190$ALLOWED_MODULES, $list191 );
      }
      superiors = ask_utilities.query_variable( variable, query_sentence, mt, v_properties );
    }
    return Sequences.delete( this_term, superiors, Symbols.symbol_function( EQUAL ), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 67679L)
  public static SubLObject gke_subst_nl_for_inference_answer(final SubLObject inference_answer)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    final SubLObject binding_list = inference_kernel.inference_answer_el_bindings( inference_answer );
    SubLObject result = NIL;
    final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding( thread );
    try
    {
      pph_macros.$free_pph_problem_store_pointers$.bind( NIL, thread );
      thread.resetMultipleValues();
      final SubLObject _prev_bind_0_$61 = pph_macros.$pph_problem_store_pointer$.currentBinding( thread );
      try
      {
        pph_macros.$pph_problem_store_pointer$.bind( pph_macros.find_or_create_pph_problem_store_pointer(), thread );
        final SubLObject reuseP = thread.secondMultipleValue();
        thread.resetMultipleValues();
        try
        {
          thread.resetMultipleValues();
          final SubLObject _prev_bind_0_$62 = pph_macros.$pph_memoization_state$.currentBinding( thread );
          try
          {
            pph_macros.$pph_memoization_state$.bind( pph_macros.find_or_create_pph_memoization_state(), thread );
            final SubLObject new_or_reused = thread.secondMultipleValue();
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$63 = pph_macros.$pph_external_memoization_state$.currentBinding( thread );
            try
            {
              pph_macros.$pph_external_memoization_state$.bind( pph_macros.find_or_create_pph_external_memoization_state(), thread );
              final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue( thread );
              final SubLObject _prev_bind_0_$64 = memoization_state.$memoization_state$.currentBinding( thread );
              try
              {
                memoization_state.$memoization_state$.bind( local_state, thread );
                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process( local_state );
                try
                {
                  final SubLObject _prev_bind_0_$65 = pph_vars.$pph_inference_answer$.currentBinding( thread );
                  final SubLObject _prev_bind_2 = pph_vars.$pph_hypothetical_vars$.currentBinding( thread );
                  final SubLObject _prev_bind_3 = pph_vars.$pph_handle_hypotheticalsP$.currentBinding( thread );
                  final SubLObject _prev_bind_4 = pph_vars.$pph_domain_mt$.currentBinding( thread );
                  final SubLObject _prev_bind_5 = pph_vars.$pph_use_bulleted_listsP$.currentBinding( thread );
                  final SubLObject _prev_bind_6 = pph_vars.$pph_repositioned_proofs$.currentBinding( thread );
                  final SubLObject _prev_bind_7 = pph_vars.$pph_displayed_proofs$.currentBinding( thread );
                  final SubLObject _prev_bind_8 = pph_vars.$pph_justified_proofs$.currentBinding( thread );
                  final SubLObject _prev_bind_9 = pph_vars.$pph_proof_depth$.currentBinding( thread );
                  final SubLObject _prev_bind_10 = pph_vars.$pph_displayed_supports$.currentBinding( thread );
                  try
                  {
                    pph_vars.$pph_inference_answer$.bind( inference_answer, thread );
                    pph_vars.$pph_hypothetical_vars$.bind( inference_datastructures_inference.inference_hypothetical_bindings( inference_datastructures_inference.inference_answer_inference( inference_answer ) ),
                        thread );
                    pph_vars.$pph_handle_hypotheticalsP$.bind( T, thread );
                    pph_vars.$pph_domain_mt$.bind( pph_methods.pph_enhanced_domain_mt( pph_proof.pph_get_inference_mt( inference_datastructures_inference.inference_answer_inference( inference_answer ) ), UNPROVIDED ),
                        thread );
                    pph_vars.$pph_use_bulleted_listsP$.bind( T, thread );
                    pph_vars.$pph_repositioned_proofs$.bind( NIL, thread );
                    pph_vars.$pph_displayed_proofs$.bind( pph_proof.find_or_create_pph_displayed_proof_stack(), thread );
                    pph_vars.$pph_justified_proofs$.bind( pph_proof.find_or_create_pph_justified_proof_set(), thread );
                    pph_vars.$pph_proof_depth$.bind( ZERO_INTEGER, thread );
                    pph_vars.$pph_displayed_supports$.bind( NIL, thread );
                    thread.resetMultipleValues();
                    final SubLObject link_function = pph_macros.pph_justification_html_function_and_target();
                    final SubLObject html_target = thread.secondMultipleValue();
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$66 = pph_vars.$constant_link_function$.currentBinding( thread );
                    final SubLObject _prev_bind_1_$67 = pph_vars.$html_generation_target$.currentBinding( thread );
                    try
                    {
                      pph_vars.$constant_link_function$.bind( ( NIL != link_function ) ? link_function : pph_vars.$constant_link_function$.getDynamicValue( thread ), thread );
                      pph_vars.$html_generation_target$.bind( ( NIL != html_target ) ? html_target : pph_vars.$html_generation_target$.getDynamicValue( thread ), thread );
                      SubLObject cdolist_list_var = binding_list;
                      SubLObject binding = NIL;
                      binding = cdolist_list_var.first();
                      while ( NIL != cdolist_list_var)
                      {
                        result = ConsesLow.cons( gke_subst_nl_for_binding( binding ), result );
                        cdolist_list_var = cdolist_list_var.rest();
                        binding = cdolist_list_var.first();
                      }
                    }
                    finally
                    {
                      pph_vars.$html_generation_target$.rebind( _prev_bind_1_$67, thread );
                      pph_vars.$constant_link_function$.rebind( _prev_bind_0_$66, thread );
                    }
                  }
                  finally
                  {
                    pph_vars.$pph_displayed_supports$.rebind( _prev_bind_10, thread );
                    pph_vars.$pph_proof_depth$.rebind( _prev_bind_9, thread );
                    pph_vars.$pph_justified_proofs$.rebind( _prev_bind_8, thread );
                    pph_vars.$pph_displayed_proofs$.rebind( _prev_bind_7, thread );
                    pph_vars.$pph_repositioned_proofs$.rebind( _prev_bind_6, thread );
                    pph_vars.$pph_use_bulleted_listsP$.rebind( _prev_bind_5, thread );
                    pph_vars.$pph_domain_mt$.rebind( _prev_bind_4, thread );
                    pph_vars.$pph_handle_hypotheticalsP$.rebind( _prev_bind_3, thread );
                    pph_vars.$pph_hypothetical_vars$.rebind( _prev_bind_2, thread );
                    pph_vars.$pph_inference_answer$.rebind( _prev_bind_0_$65, thread );
                  }
                }
                finally
                {
                  final SubLObject _prev_bind_0_$67 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                  try
                  {
                    Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                    final SubLObject _values = Values.getValuesAsVector();
                    memoization_state.memoization_state_possibly_clear_original_process( local_state, original_memoization_process );
                    Values.restoreValuesFromVector( _values );
                  }
                  finally
                  {
                    Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$67, thread );
                  }
                }
              }
              finally
              {
                memoization_state.$memoization_state$.rebind( _prev_bind_0_$64, thread );
              }
            }
            finally
            {
              pph_macros.$pph_external_memoization_state$.rebind( _prev_bind_0_$63, thread );
            }
            if( new_or_reused == $kw16$NEW && NIL != memoization_state.memoization_state_p( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) ) )
            {
              memoization_state.clear_all_memoization( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) );
            }
          }
          finally
          {
            pph_macros.$pph_memoization_state$.rebind( _prev_bind_0_$62, thread );
          }
        }
        finally
        {
          final SubLObject _prev_bind_0_$68 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
          try
          {
            Threads.$is_thread_performing_cleanupP$.bind( T, thread );
            final SubLObject _values2 = Values.getValuesAsVector();
            if( NIL == reuseP )
            {
              pph_macros.free_pph_problem_store_pointer( pph_macros.$pph_problem_store_pointer$.getDynamicValue( thread ) );
            }
            Values.restoreValuesFromVector( _values2 );
          }
          finally
          {
            Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$68, thread );
          }
        }
      }
      finally
      {
        pph_macros.$pph_problem_store_pointer$.rebind( _prev_bind_0_$61, thread );
      }
    }
    finally
    {
      pph_macros.$free_pph_problem_store_pointers$.rebind( _prev_bind_0, thread );
    }
    return Sequences.nreverse( result );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 68263L)
  public static SubLObject gke_subst_nl_for_binding(final SubLObject binding)
  {
    SubLObject variable = NIL;
    SubLObject value = NIL;
    cdestructuring_bind.destructuring_bind_must_consp( binding, binding, $list192 );
    variable = binding.first();
    final SubLObject current = value = binding.rest();
    final SubLObject java_phrase = ConsesLow.list( pph_main.generate_phrase_for_java( value, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED ), value );
    final SubLObject variable_string = variable_to_nl_string( variable );
    return ConsesLow.cons( variable_string, java_phrase );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 68540L)
  public static SubLObject el_binding_list_to_gke_binding_list(SubLObject el_binding_list, final SubLObject inference_answer)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    if( NIL != list_utilities.empty_list_p( el_binding_list ) )
    {
      el_binding_list = $list193;
    }
    SubLObject result = NIL;
    final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding( thread );
    try
    {
      pph_macros.$free_pph_problem_store_pointers$.bind( NIL, thread );
      thread.resetMultipleValues();
      final SubLObject _prev_bind_0_$70 = pph_macros.$pph_problem_store_pointer$.currentBinding( thread );
      try
      {
        pph_macros.$pph_problem_store_pointer$.bind( pph_macros.find_or_create_pph_problem_store_pointer(), thread );
        final SubLObject reuseP = thread.secondMultipleValue();
        thread.resetMultipleValues();
        try
        {
          thread.resetMultipleValues();
          final SubLObject _prev_bind_0_$71 = pph_macros.$pph_memoization_state$.currentBinding( thread );
          try
          {
            pph_macros.$pph_memoization_state$.bind( pph_macros.find_or_create_pph_memoization_state(), thread );
            final SubLObject new_or_reused = thread.secondMultipleValue();
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$72 = pph_macros.$pph_external_memoization_state$.currentBinding( thread );
            try
            {
              pph_macros.$pph_external_memoization_state$.bind( pph_macros.find_or_create_pph_external_memoization_state(), thread );
              final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue( thread );
              final SubLObject _prev_bind_0_$73 = memoization_state.$memoization_state$.currentBinding( thread );
              try
              {
                memoization_state.$memoization_state$.bind( local_state, thread );
                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process( local_state );
                try
                {
                  final SubLObject _prev_bind_0_$74 = pph_vars.$pph_inference_answer$.currentBinding( thread );
                  final SubLObject _prev_bind_2 = pph_vars.$pph_hypothetical_vars$.currentBinding( thread );
                  final SubLObject _prev_bind_3 = pph_vars.$pph_handle_hypotheticalsP$.currentBinding( thread );
                  final SubLObject _prev_bind_4 = pph_vars.$pph_domain_mt$.currentBinding( thread );
                  final SubLObject _prev_bind_5 = pph_vars.$pph_use_bulleted_listsP$.currentBinding( thread );
                  final SubLObject _prev_bind_6 = pph_vars.$pph_repositioned_proofs$.currentBinding( thread );
                  final SubLObject _prev_bind_7 = pph_vars.$pph_displayed_proofs$.currentBinding( thread );
                  final SubLObject _prev_bind_8 = pph_vars.$pph_justified_proofs$.currentBinding( thread );
                  final SubLObject _prev_bind_9 = pph_vars.$pph_proof_depth$.currentBinding( thread );
                  final SubLObject _prev_bind_10 = pph_vars.$pph_displayed_supports$.currentBinding( thread );
                  try
                  {
                    pph_vars.$pph_inference_answer$.bind( inference_answer, thread );
                    pph_vars.$pph_hypothetical_vars$.bind( inference_datastructures_inference.inference_hypothetical_bindings( inference_datastructures_inference.inference_answer_inference( inference_answer ) ),
                        thread );
                    pph_vars.$pph_handle_hypotheticalsP$.bind( T, thread );
                    pph_vars.$pph_domain_mt$.bind( pph_methods.pph_enhanced_domain_mt( pph_proof.pph_get_inference_mt( inference_datastructures_inference.inference_answer_inference( inference_answer ) ), UNPROVIDED ),
                        thread );
                    pph_vars.$pph_use_bulleted_listsP$.bind( T, thread );
                    pph_vars.$pph_repositioned_proofs$.bind( NIL, thread );
                    pph_vars.$pph_displayed_proofs$.bind( pph_proof.find_or_create_pph_displayed_proof_stack(), thread );
                    pph_vars.$pph_justified_proofs$.bind( pph_proof.find_or_create_pph_justified_proof_set(), thread );
                    pph_vars.$pph_proof_depth$.bind( ZERO_INTEGER, thread );
                    pph_vars.$pph_displayed_supports$.bind( NIL, thread );
                    thread.resetMultipleValues();
                    final SubLObject link_function = pph_macros.pph_justification_html_function_and_target();
                    final SubLObject html_target = thread.secondMultipleValue();
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$75 = pph_vars.$constant_link_function$.currentBinding( thread );
                    final SubLObject _prev_bind_1_$76 = pph_vars.$html_generation_target$.currentBinding( thread );
                    try
                    {
                      pph_vars.$constant_link_function$.bind( ( NIL != link_function ) ? link_function : pph_vars.$constant_link_function$.getDynamicValue( thread ), thread );
                      pph_vars.$html_generation_target$.bind( ( NIL != html_target ) ? html_target : pph_vars.$html_generation_target$.getDynamicValue( thread ), thread );
                      SubLObject cdolist_list_var = el_binding_list;
                      SubLObject el_binding = NIL;
                      el_binding = cdolist_list_var.first();
                      while ( NIL != cdolist_list_var)
                      {
                        result = ConsesLow.cons( el_binding_to_gke_binding( el_binding ), result );
                        cdolist_list_var = cdolist_list_var.rest();
                        el_binding = cdolist_list_var.first();
                      }
                    }
                    finally
                    {
                      pph_vars.$html_generation_target$.rebind( _prev_bind_1_$76, thread );
                      pph_vars.$constant_link_function$.rebind( _prev_bind_0_$75, thread );
                    }
                  }
                  finally
                  {
                    pph_vars.$pph_displayed_supports$.rebind( _prev_bind_10, thread );
                    pph_vars.$pph_proof_depth$.rebind( _prev_bind_9, thread );
                    pph_vars.$pph_justified_proofs$.rebind( _prev_bind_8, thread );
                    pph_vars.$pph_displayed_proofs$.rebind( _prev_bind_7, thread );
                    pph_vars.$pph_repositioned_proofs$.rebind( _prev_bind_6, thread );
                    pph_vars.$pph_use_bulleted_listsP$.rebind( _prev_bind_5, thread );
                    pph_vars.$pph_domain_mt$.rebind( _prev_bind_4, thread );
                    pph_vars.$pph_handle_hypotheticalsP$.rebind( _prev_bind_3, thread );
                    pph_vars.$pph_hypothetical_vars$.rebind( _prev_bind_2, thread );
                    pph_vars.$pph_inference_answer$.rebind( _prev_bind_0_$74, thread );
                  }
                }
                finally
                {
                  final SubLObject _prev_bind_0_$76 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                  try
                  {
                    Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                    final SubLObject _values = Values.getValuesAsVector();
                    memoization_state.memoization_state_possibly_clear_original_process( local_state, original_memoization_process );
                    Values.restoreValuesFromVector( _values );
                  }
                  finally
                  {
                    Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$76, thread );
                  }
                }
              }
              finally
              {
                memoization_state.$memoization_state$.rebind( _prev_bind_0_$73, thread );
              }
            }
            finally
            {
              pph_macros.$pph_external_memoization_state$.rebind( _prev_bind_0_$72, thread );
            }
            if( new_or_reused == $kw16$NEW && NIL != memoization_state.memoization_state_p( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) ) )
            {
              memoization_state.clear_all_memoization( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) );
            }
          }
          finally
          {
            pph_macros.$pph_memoization_state$.rebind( _prev_bind_0_$71, thread );
          }
        }
        finally
        {
          final SubLObject _prev_bind_0_$77 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
          try
          {
            Threads.$is_thread_performing_cleanupP$.bind( T, thread );
            final SubLObject _values2 = Values.getValuesAsVector();
            if( NIL == reuseP )
            {
              pph_macros.free_pph_problem_store_pointer( pph_macros.$pph_problem_store_pointer$.getDynamicValue( thread ) );
            }
            Values.restoreValuesFromVector( _values2 );
          }
          finally
          {
            Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$77, thread );
          }
        }
      }
      finally
      {
        pph_macros.$pph_problem_store_pointer$.rebind( _prev_bind_0_$70, thread );
      }
    }
    finally
    {
      pph_macros.$free_pph_problem_store_pointers$.rebind( _prev_bind_0, thread );
    }
    return Sequences.nreverse( result );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 69011L)
  public static SubLObject el_binding_to_gke_binding(final SubLObject el_binding)
  {
    SubLObject variable = NIL;
    SubLObject value = NIL;
    cdestructuring_bind.destructuring_bind_must_consp( el_binding, el_binding, $list192 );
    variable = el_binding.first();
    final SubLObject current = value = el_binding.rest();
    final SubLObject variable_string = variable_to_nl_string( variable );
    final SubLObject pph_result = pph_main.generate_phrase_for_java( value, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED );
    final SubLObject java_phrase = ( NIL != pph_utilities.pph_javalist_p( pph_result ) ) ? pph_utilities.possibly_optimize_pph_javalist_for_alphabetization( pph_result ) : NIL;
    final SubLObject offer_fact_sheetP = fact_sheets.term_ok_for_fact_sheet_p( value, UNPROVIDED );
    return ConsesLow.list( variable_string, java_phrase, value, offer_fact_sheetP );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 69546L)
  public static SubLObject variable_to_nl_string(final SubLObject variable)
  {
    SubLObject variable_string = string_utilities.substring( Strings.string_downcase( string_utilities.to_string( variable ), UNPROVIDED, UNPROVIDED ), ONE_INTEGER, UNPROVIDED );
    variable_string = string_utilities.string_substitute( $str194$_, $str195$_, variable_string, UNPROVIDED );
    return pph_utilities.add_title_capitalization( variable_string );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 69804L)
  public static SubLObject gke_start_continuable_query(final SubLObject sentence, final SubLObject mt, SubLObject v_properties)
  {
    if( v_properties == UNPROVIDED )
    {
      v_properties = NIL;
    }
    enforceType( sentence, $sym93$EL_FORMULA_P );
    enforceType( mt, $sym196$POSSIBLY_MT_P );
    enforceType( v_properties, $sym197$QUERY_PROPERTIES_P );
    final SubLObject optimized_sentence = el_utilities.optimize_el_formula_variable_names( sentence, UNPROVIDED, UNPROVIDED, UNPROVIDED );
    final SubLObject conditionalP = inference_strategist.inference_conditional_sentence_p( optimized_sentence );
    final SubLObject static_properties = list_utilities.nmerge_plist( inference_datastructures_enumerated_types.extract_query_static_or_meta_properties( v_properties ), ConsesLow.list( $kw198$CONDITIONAL_SENTENCE_,
        conditionalP ) );
    final SubLObject inference = inference_kernel.new_continuable_inference( optimized_sentence, mt, static_properties );
    final SubLObject problem_store_id = inference_datastructures_problem_store.problem_store_suid( inference_datastructures_inference.inference_problem_store( inference ) );
    final SubLObject inference_id = inference_datastructures_inference.inference_suid( inference );
    final SubLObject special_state = special_variable_state.new_special_variable_state( $list199 );
    return gke_continue_query( problem_store_id, inference_id, v_properties, special_state );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 70822L)
  public static SubLObject gke_warn(final SubLObject message)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    return print_high.princ( message, StreamsLow.$standard_output$.getDynamicValue( thread ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 70966L)
  public static SubLObject gke_continue_query(final SubLObject problem_store_id, final SubLObject inference_id, final SubLObject v_properties, SubLObject special_state)
  {
    if( special_state == UNPROVIDED )
    {
      special_state = NIL;
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    enforceType( problem_store_id, $sym204$INTEGERP );
    enforceType( inference_id, $sym204$INTEGERP );
    enforceType( v_properties, $sym34$LISTP );
    final SubLObject inference = inference_datastructures_problem_store.find_inference_by_ids( problem_store_id, inference_id );
    final SubLObject dynamic_properties = inference_datastructures_enumerated_types.extract_query_dynamic_properties( v_properties );
    if( NIL != inference_datastructures_inference.continuable_inference_p( inference ) )
    {
      final SubLObject old_process_wrapper = Hashtables.gethash( string_utilities.to_string( ConsesLow.list( problem_store_id, inference_id ) ), $gke_query_threads$.getDynamicValue( thread ), UNPROVIDED );
      final SubLObject gke_process = new_gke_process( problem_store_id, inference_id, dynamic_properties, special_state );
      final SubLObject oldest_process_wrapper = ( NIL != old_process_wrapper ) ? old_process_wrapper : gke_process;
      final SubLObject old_queue = process_utilities.process_wrapper_get_property( oldest_process_wrapper, $kw205$QUEUE, UNPROVIDED );
      final SubLObject results_queue = ( NIL != old_queue ) ? old_queue : queues.create_queue( UNPROVIDED );
      final SubLObject daemon = new_results_daemon( problem_store_id, inference_id, results_queue );
      process_utilities.process_wrapper_set_property( gke_process, $kw205$QUEUE, results_queue );
      process_utilities.process_wrapper_set_property( gke_process, $kw206$DAEMON, daemon );
      Hashtables.sethash( string_utilities.to_string( ConsesLow.list( problem_store_id, inference_id ) ), $gke_query_threads$.getDynamicValue( thread ), gke_process );
      return ConsesLow.list( problem_store_id, inference_id );
    }
    return ConsesLow.list( PrintLow.format( NIL, $str207$Error_with_query___A__, inference_datastructures_inference.inference_status( inference ) ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 72555L)
  public static SubLObject new_gke_process(final SubLObject problem_store_id, final SubLObject inference_id, final SubLObject dynamic_properties, SubLObject special_state)
  {
    if( special_state == UNPROVIDED )
    {
      special_state = NIL;
    }
    final SubLObject gke_process = process_utilities.new_process_wrapper( PrintLow.format( NIL, $str212$gke_query_thread__A__A, problem_store_id, inference_id ), $sym213$GKE_RUN_INFERENCE, ConsesLow.list(
        problem_store_id, inference_id, dynamic_properties, special_state ) );
    return gke_process;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 72920L)
  public static SubLObject new_results_daemon(final SubLObject problem_store_id, final SubLObject inference_id, final SubLObject queue)
  {
    final SubLObject daemon = process_utilities.new_process_wrapper( PrintLow.format( NIL, $str214$results_daemon__A__A, problem_store_id, inference_id ), $sym215$RESULTS_DAEMON, ConsesLow.list( problem_store_id,
        inference_id, queue ) );
    return daemon;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 73192L)
  public static SubLObject results_daemon(final SubLObject process_wrapper, final SubLObject problem_store_id, final SubLObject inference_id, final SubLObject queue)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    final SubLObject problem_store = inference_datastructures_problem_store.find_problem_store_by_id( problem_store_id );
    final SubLObject inference = inference_datastructures_problem_store.find_inference_by_id( problem_store, inference_id );
    SubLObject current_answer = ZERO_INTEGER;
    SubLObject ignore_errors_tag = NIL;
    try
    {
      thread.throwStack.push( $kw216$IGNORE_ERRORS_TARGET );
      final SubLObject _prev_bind_0 = Errors.$error_handler$.currentBinding( thread );
      try
      {
        Errors.$error_handler$.bind( Symbols.symbol_function( $sym217$IGNORE_ERRORS_HANDLER ), thread );
        try
        {
          final SubLObject _prev_bind_0_$79 = pph_macros.$free_pph_problem_store_pointers$.currentBinding( thread );
          try
          {
            pph_macros.$free_pph_problem_store_pointers$.bind( NIL, thread );
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$80 = pph_macros.$pph_problem_store_pointer$.currentBinding( thread );
            try
            {
              pph_macros.$pph_problem_store_pointer$.bind( pph_macros.find_or_create_pph_problem_store_pointer(), thread );
              final SubLObject reuseP = thread.secondMultipleValue();
              thread.resetMultipleValues();
              try
              {
                thread.resetMultipleValues();
                final SubLObject _prev_bind_0_$81 = pph_macros.$pph_memoization_state$.currentBinding( thread );
                try
                {
                  pph_macros.$pph_memoization_state$.bind( pph_macros.find_or_create_pph_memoization_state(), thread );
                  final SubLObject new_or_reused = thread.secondMultipleValue();
                  thread.resetMultipleValues();
                  final SubLObject _prev_bind_0_$82 = pph_macros.$pph_external_memoization_state$.currentBinding( thread );
                  try
                  {
                    pph_macros.$pph_external_memoization_state$.bind( pph_macros.find_or_create_pph_external_memoization_state(), thread );
                    final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue( thread );
                    final SubLObject _prev_bind_0_$83 = memoization_state.$memoization_state$.currentBinding( thread );
                    try
                    {
                      memoization_state.$memoization_state$.bind( local_state, thread );
                      final SubLObject original_memoization_process = memoization_state.memoization_state_original_process( local_state );
                      try
                      {
                        if( NIL == daemon_should_run( inference, current_answer ) )
                        {
                          Threads.sleep( ONE_INTEGER );
                        }
                        while ( NIL != daemon_should_run( inference, current_answer ))
                        {
                          for( SubLObject inference_answer = inference_datastructures_inference.find_inference_answer_by_id( inference,
                              current_answer ); NIL != inference_answer; inference_answer = inference_datastructures_inference.find_inference_answer_by_id( inference, current_answer ) )
                          {
                            current_answer = Numbers.add( current_answer, ONE_INTEGER );
                            final SubLObject _prev_bind_0_$84 = pph_vars.$pph_domain_mt$.currentBinding( thread );
                            try
                            {
                              pph_vars.$pph_domain_mt$.bind( inference_datastructures_inference.inference_mt( inference ), thread );
                              final SubLObject el_bindings = inference_kernel.inference_answer_el_bindings( inference_answer );
                              final SubLObject gke_bindings = el_binding_list_to_gke_binding_list( el_bindings, inference_answer );
                              final SubLObject source_icon_data = sources.source_icon_paths_for_inference_answer( inference_answer );
                              final SubLObject plist_to_enqueue = ConsesLow.list( $kw218$BINDINGS, gke_bindings, $kw219$SOURCE_ICONS, source_icon_data );
                              queues.enqueue( plist_to_enqueue, queue );
                            }
                            finally
                            {
                              pph_vars.$pph_domain_mt$.rebind( _prev_bind_0_$84, thread );
                            }
                          }
                          Threads.sleep( ONE_INTEGER );
                        }
                      }
                      finally
                      {
                        final SubLObject _prev_bind_0_$85 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                        try
                        {
                          Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                          final SubLObject _values = Values.getValuesAsVector();
                          memoization_state.memoization_state_possibly_clear_original_process( local_state, original_memoization_process );
                          Values.restoreValuesFromVector( _values );
                        }
                        finally
                        {
                          Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$85, thread );
                        }
                      }
                    }
                    finally
                    {
                      memoization_state.$memoization_state$.rebind( _prev_bind_0_$83, thread );
                    }
                  }
                  finally
                  {
                    pph_macros.$pph_external_memoization_state$.rebind( _prev_bind_0_$82, thread );
                  }
                  if( new_or_reused == $kw16$NEW && NIL != memoization_state.memoization_state_p( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) ) )
                  {
                    memoization_state.clear_all_memoization( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) );
                  }
                }
                finally
                {
                  pph_macros.$pph_memoization_state$.rebind( _prev_bind_0_$81, thread );
                }
              }
              finally
              {
                final SubLObject _prev_bind_0_$86 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                try
                {
                  Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                  final SubLObject _values2 = Values.getValuesAsVector();
                  if( NIL == reuseP )
                  {
                    pph_macros.free_pph_problem_store_pointer( pph_macros.$pph_problem_store_pointer$.getDynamicValue( thread ) );
                  }
                  Values.restoreValuesFromVector( _values2 );
                }
                finally
                {
                  Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$86, thread );
                }
              }
            }
            finally
            {
              pph_macros.$pph_problem_store_pointer$.rebind( _prev_bind_0_$80, thread );
            }
          }
          finally
          {
            pph_macros.$free_pph_problem_store_pointers$.rebind( _prev_bind_0_$79, thread );
          }
        }
        catch( final Throwable catch_var )
        {
          Errors.handleThrowable( catch_var, NIL );
        }
      }
      finally
      {
        Errors.$error_handler$.rebind( _prev_bind_0, thread );
      }
    }
    catch( final Throwable ccatch_env_var )
    {
      ignore_errors_tag = Errors.handleThrowable( ccatch_env_var, $kw216$IGNORE_ERRORS_TARGET );
    }
    finally
    {
      thread.throwStack.pop();
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 74863L)
  public static SubLObject daemon_should_run(final SubLObject inference, final SubLObject current_answer)
  {
    final SubLObject status = inference_datastructures_inference.inference_status( inference );
    final SubLObject current_count = id_index.id_index_count( inference_datastructures_inference.inference_answer_id_index( inference ) );
    return makeBoolean( NIL != subl_promotions.memberP( status, $daemon_should_run_inference_statuses$.getGlobalValue(), UNPROVIDED, UNPROVIDED ) || current_count.numG( current_answer ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 75454L)
  public static SubLObject gke_run_inference(final SubLObject process_wrapper, final SubLObject problem_store_id, final SubLObject inference_id, final SubLObject dynamic_properties, SubLObject special_state)
  {
    if( special_state == UNPROVIDED )
    {
      special_state = NIL;
    }
    final SubLObject problem_store = inference_datastructures_problem_store.find_problem_store_by_id( problem_store_id );
    final SubLObject inference = inference_datastructures_problem_store.find_inference_by_id( problem_store, inference_id );
    final SubLObject adjusted_dynamic_properties = ( NIL != $gke_run_inference_with_adjusted_dynamic_propertiesP$.getGlobalValue() ) ? list_utilities.nmerge_plist( ConsesLow.list( $kw221$MAX_TIME, NIL,
        $kw222$MAX_TRANSFORMATION_DEPTH, THREE_INTEGER ), dynamic_properties ) : dynamic_properties;
    if( NIL != inference_datastructures_inference.continuable_inference_p( inference ) )
    {
      if( NIL != special_state )
      {
        final SubLObject cprogv_var = special_variable_state.with_special_variable_state_variables( special_state );
        final ArrayList old_values = Dynamic.extract_dynamic_values( cprogv_var );
        try
        {
          Dynamic.bind_dynamic_vars( cprogv_var, special_variable_state.with_special_variable_state_values( special_state ) );
          enforceType( special_state, $sym223$SPECIAL_VARIABLE_STATE_P );
          inference_kernel.continue_inference( inference, adjusted_dynamic_properties );
        }
        finally
        {
          Dynamic.rebind_dynamic_vars( cprogv_var, old_values );
        }
      }
      else
      {
        inference_kernel.continue_inference( inference, adjusted_dynamic_properties );
      }
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 76315L)
  public static SubLObject gke_get_one_inference_result(final SubLObject problem_store_id, final SubLObject inference_id)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    enforceType( problem_store_id, $sym204$INTEGERP );
    enforceType( inference_id, $sym204$INTEGERP );
    final SubLObject process_wrapper = Hashtables.gethash( string_utilities.to_string( ConsesLow.list( problem_store_id, inference_id ) ), $gke_query_threads$.getDynamicValue( thread ), UNPROVIDED );
    if( NIL != process_wrapper )
    {
      final SubLObject queue = process_utilities.process_wrapper_get_property( process_wrapper, $kw205$QUEUE, UNPROVIDED );
      if( NIL != queue )
      {
        return queues.dequeue( queue );
      }
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 76761L)
  public static SubLObject gke_get_inference_results(final SubLObject problem_store_id, final SubLObject inference_id)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    enforceType( problem_store_id, $sym228$ID_OF_VALID_PROBLEM_STORE_P );
    enforceType( inference_id, $sym204$INTEGERP );
    final SubLObject problem_store = inference_datastructures_problem_store.find_problem_store_by_id( problem_store_id );
    final SubLObject inference = inference_datastructures_problem_store.find_inference_by_id( problem_store, inference_id );
    SubLObject ans = NIL;
    final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding( thread );
    try
    {
      pph_macros.$free_pph_problem_store_pointers$.bind( NIL, thread );
      thread.resetMultipleValues();
      final SubLObject _prev_bind_0_$87 = pph_macros.$pph_problem_store_pointer$.currentBinding( thread );
      try
      {
        pph_macros.$pph_problem_store_pointer$.bind( pph_macros.find_or_create_pph_problem_store_pointer(), thread );
        final SubLObject reuseP = thread.secondMultipleValue();
        thread.resetMultipleValues();
        try
        {
          thread.resetMultipleValues();
          final SubLObject _prev_bind_0_$88 = pph_macros.$pph_memoization_state$.currentBinding( thread );
          try
          {
            pph_macros.$pph_memoization_state$.bind( pph_macros.find_or_create_pph_memoization_state(), thread );
            final SubLObject new_or_reused = thread.secondMultipleValue();
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$89 = pph_macros.$pph_external_memoization_state$.currentBinding( thread );
            try
            {
              pph_macros.$pph_external_memoization_state$.bind( pph_macros.find_or_create_pph_external_memoization_state(), thread );
              final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue( thread );
              final SubLObject _prev_bind_0_$90 = memoization_state.$memoization_state$.currentBinding( thread );
              try
              {
                memoization_state.$memoization_state$.bind( local_state, thread );
                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process( local_state );
                try
                {
                  final SubLObject idx = inference_datastructures_inference.inference_answer_id_index( inference );
                  if( NIL == id_index.id_index_objects_empty_p( idx, $kw229$SKIP ) )
                  {
                    final SubLObject idx_$91 = idx;
                    if( NIL == id_index.id_index_dense_objects_empty_p( idx_$91, $kw229$SKIP ) )
                    {
                      final SubLObject vector_var = id_index.id_index_dense_objects( idx_$91 );
                      final SubLObject backwardP_var = NIL;
                      SubLObject length;
                      SubLObject v_iteration;
                      SubLObject id;
                      SubLObject inference_answer;
                      for( length = Sequences.length( vector_var ), v_iteration = NIL, v_iteration = ZERO_INTEGER; v_iteration.numL( length ); v_iteration = Numbers.add( v_iteration, ONE_INTEGER ) )
                      {
                        id = ( ( NIL != backwardP_var ) ? Numbers.subtract( length, v_iteration, ONE_INTEGER ) : v_iteration );
                        inference_answer = Vectors.aref( vector_var, id );
                        if( NIL == id_index.id_index_tombstone_p( inference_answer ) || NIL == id_index.id_index_skip_tombstones_p( $kw229$SKIP ) )
                        {
                          if( NIL != id_index.id_index_tombstone_p( inference_answer ) )
                          {
                            inference_answer = $kw229$SKIP;
                          }
                          ans = ConsesLow.cons( gke_subst_nl_for_inference_answer( inference_answer ), ans );
                        }
                      }
                    }
                    final SubLObject idx_$92 = idx;
                    if( NIL == id_index.id_index_sparse_objects_empty_p( idx_$92 ) )
                    {
                      final SubLObject cdohash_table = id_index.id_index_sparse_objects( idx_$92 );
                      SubLObject id2 = NIL;
                      SubLObject inference_answer2 = NIL;
                      final Iterator cdohash_iterator = Hashtables.getEntrySetIterator( cdohash_table );
                      try
                      {
                        while ( Hashtables.iteratorHasNext( cdohash_iterator ))
                        {
                          final Map.Entry cdohash_entry = Hashtables.iteratorNextEntry( cdohash_iterator );
                          id2 = Hashtables.getEntryKey( cdohash_entry );
                          inference_answer2 = Hashtables.getEntryValue( cdohash_entry );
                          ans = ConsesLow.cons( gke_subst_nl_for_inference_answer( inference_answer2 ), ans );
                        }
                      }
                      finally
                      {
                        Hashtables.releaseEntrySetIterator( cdohash_iterator );
                      }
                    }
                  }
                }
                finally
                {
                  final SubLObject _prev_bind_0_$91 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
                  try
                  {
                    Threads.$is_thread_performing_cleanupP$.bind( T, thread );
                    final SubLObject _values = Values.getValuesAsVector();
                    memoization_state.memoization_state_possibly_clear_original_process( local_state, original_memoization_process );
                    Values.restoreValuesFromVector( _values );
                  }
                  finally
                  {
                    Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$91, thread );
                  }
                }
              }
              finally
              {
                memoization_state.$memoization_state$.rebind( _prev_bind_0_$90, thread );
              }
            }
            finally
            {
              pph_macros.$pph_external_memoization_state$.rebind( _prev_bind_0_$89, thread );
            }
            if( new_or_reused == $kw16$NEW && NIL != memoization_state.memoization_state_p( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) ) )
            {
              memoization_state.clear_all_memoization( pph_macros.$pph_memoization_state$.getDynamicValue( thread ) );
            }
          }
          finally
          {
            pph_macros.$pph_memoization_state$.rebind( _prev_bind_0_$88, thread );
          }
        }
        finally
        {
          final SubLObject _prev_bind_0_$92 = Threads.$is_thread_performing_cleanupP$.currentBinding( thread );
          try
          {
            Threads.$is_thread_performing_cleanupP$.bind( T, thread );
            final SubLObject _values2 = Values.getValuesAsVector();
            if( NIL == reuseP )
            {
              pph_macros.free_pph_problem_store_pointer( pph_macros.$pph_problem_store_pointer$.getDynamicValue( thread ) );
            }
            Values.restoreValuesFromVector( _values2 );
          }
          finally
          {
            Threads.$is_thread_performing_cleanupP$.rebind( _prev_bind_0_$92, thread );
          }
        }
      }
      finally
      {
        pph_macros.$pph_problem_store_pointer$.rebind( _prev_bind_0_$87, thread );
      }
    }
    finally
    {
      pph_macros.$free_pph_problem_store_pointers$.rebind( _prev_bind_0, thread );
    }
    return ans;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 77632L)
  public static SubLObject gke_inference_completeP(final SubLObject problem_store_id, final SubLObject inference_id)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    enforceType( problem_store_id, $sym204$INTEGERP );
    enforceType( inference_id, $sym204$INTEGERP );
    if( NIL == inference_datastructures_inference.inference_p( inference_datastructures_problem_store.find_inference_by_ids( problem_store_id, inference_id ) ) )
    {
      return T;
    }
    final SubLObject inference = inference_datastructures_problem_store.find_inference_by_ids( problem_store_id, inference_id );
    final SubLObject status = inference_datastructures_inference.inference_status( inference );
    final SubLObject key = string_utilities.to_string( ConsesLow.list( problem_store_id, inference_id ) );
    final SubLObject gke_process = Hashtables.gethash( key, $gke_query_threads$.getDynamicValue( thread ), UNPROVIDED );
    final SubLObject queue = process_utilities.process_wrapper_get_property( gke_process, $kw205$QUEUE, UNPROVIDED );
    final SubLObject daemon = process_utilities.process_wrapper_get_property( gke_process, $kw206$DAEMON, UNPROVIDED );
    return makeBoolean( NIL != subl_promotions.memberP( status, $inference_done_statuses$.getGlobalValue(), UNPROVIDED, UNPROVIDED ) && NIL != queues.queue_empty_p( queue ) && NIL != process_utilities
        .process_wrapper_process_completedP( daemon ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 78486L)
  public static SubLObject gke_get_inference_status(final SubLObject problem_store_id, final SubLObject inference_id)
  {
    enforceType( problem_store_id, $sym204$INTEGERP );
    enforceType( inference_id, $sym204$INTEGERP );
    final SubLObject inference = inference_datastructures_problem_store.find_inference_by_ids( problem_store_id, inference_id );
    return inference_datastructures_inference.inference_status( inference );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 78791L)
  public static SubLObject gke_get_inference_suspend_status(final SubLObject problem_store_id, final SubLObject inference_id)
  {
    enforceType( problem_store_id, $sym204$INTEGERP );
    enforceType( inference_id, $sym204$INTEGERP );
    final SubLObject inference = inference_datastructures_problem_store.find_inference_by_ids( problem_store_id, inference_id );
    final SubLObject suspend_status = inference_datastructures_inference.inference_suspend_status( inference );
    return suspend_status;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 79157L)
  public static SubLObject gke_stop_continuable_query(final SubLObject problem_store_id, final SubLObject inference_id, SubLObject patience)
  {
    if( patience == UNPROVIDED )
    {
      patience = NIL;
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    enforceType( problem_store_id, $sym204$INTEGERP );
    enforceType( inference_id, $sym204$INTEGERP );
    enforceType( patience, $sym240$NULL_OR_INTEGERP );
    final SubLObject inference = inference_datastructures_problem_store.find_inference_by_ids( problem_store_id, inference_id );
    final SubLObject time_out = ( NIL != patience ) ? patience : $default_patience_wait_time$.getDynamicValue( thread );
    if( NIL != inference_datastructures_inference.running_inference_p( inference ) )
    {
      inference_strategist.inference_interrupt( inference, time_out );
    }
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 79648L)
  public static SubLObject gke_release_inference_resources(final SubLObject problem_store_id, final SubLObject inference_id)
  {
    final SubLThread thread = SubLProcess.currentSubLThread();
    enforceType( problem_store_id, $sym204$INTEGERP );
    enforceType( inference_id, $sym204$INTEGERP );
    final SubLObject problem_store = inference_datastructures_problem_store.find_problem_store_by_id( problem_store_id );
    final SubLObject key = string_utilities.to_string( ConsesLow.list( problem_store_id, inference_id ) );
    inference_datastructures_problem_store.destroy_problem_store( problem_store );
    Hashtables.remhash( key, $gke_query_threads$.getDynamicValue( thread ) );
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 80068L)
  public static SubLObject null_or_integerp(final SubLObject v_object)
  {
    return makeBoolean( NIL == v_object || v_object.isInteger() );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 80163L)
  public static SubLObject clear_cached_gke_functions()
  {
    clear_gke_predicate_filteredP();
    clear_gke_filtered_termP();
    clear_gke_isas_filtered_term();
    clear_gke_get_elements();
    clear_gke_memoization_state();
    clear_candidate_replacements_for_sentence_cached();
    return NIL;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 80437L)
  public static SubLObject gke_test_queries(final SubLObject query_col)
  {
    return Mapping.mapcar( $sym166$SECOND, ask_utilities.query_variable( $sym248$_SENT, ConsesLow.list( $const55$thereExists, $sym249$_QUERY, ConsesLow.listS( $const59$and, ConsesLow.list( $const94$isa, $sym249$_QUERY,
        query_col ), $list250 ) ), $const251$TestVocabularyMt, UNPROVIDED ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject candidate_replacements_equalP(final SubLObject expected, final SubLObject actual)
  {
    SubLObject badP = makeBoolean( NIL == list_utilities.same_length_p( expected, actual ) );
    if( NIL == badP )
    {
      SubLObject expected_one = NIL;
      SubLObject expected_one_$95 = NIL;
      SubLObject actual_one = NIL;
      SubLObject actual_one_$96 = NIL;
      expected_one = expected;
      expected_one_$95 = expected_one.first();
      actual_one = actual;
      actual_one_$96 = actual_one.first();
      while ( NIL == badP && ( NIL != actual_one || NIL != expected_one ))
      {
        if( !expected_one_$95.first().equal( actual_one_$96.first() ) || NIL == list_utilities.sets_equal_equalP( expected_one_$95.rest(), actual_one_$96.rest() ) )
        {
          badP = T;
        }
        expected_one = expected_one.rest();
        expected_one_$95 = expected_one.first();
        actual_one = actual_one.rest();
        actual_one_$96 = actual_one.first();
      }
    }
    return makeBoolean( NIL == badP );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject test_candidate_replacements(final SubLObject sentence, final SubLObject mt)
  {
    return cycl_utilities.expression_transform( candidate_replacements_for_sentence( sentence, mt ), $sym90$NART_P, $sym91$NART_EL_FORMULA, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject test_candidate_replacement_renderers(final SubLObject sentence, final SubLObject mt, SubLObject task)
  {
    if( task == UNPROVIDED )
    {
      task = cae_query_search.current_cae_task();
    }
    final SubLThread thread = SubLProcess.currentSubLThread();
    assert NIL != forts.fort_p( task ) : task;
    final SubLObject _prev_bind_0 = cae_query_search.$current_cae_task$.currentBinding( thread );
    try
    {
      cae_query_search.$current_cae_task$.bind( task, thread );
      return cycl_utilities.expression_transform( Mapping.mapcar( $sym267$SORT_RESULT, Mapping.mapcar( $sym268$REMOVE_JAVALIST_DETAIL, candidate_replacement_renderers_for_sentence( sentence, mt, UNPROVIDED ) ) ),
          $sym90$NART_P, $sym91$NART_EL_FORMULA, UNPROVIDED, UNPROVIDED );
    }
    finally
    {
      cae_query_search.$current_cae_task$.rebind( _prev_bind_0, thread );
    }
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject remove_javalist_detail(final SubLObject result)
  {
    return delete_javalist_detail( conses_high.copy_tree( result ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject sort_result(final SubLObject result)
  {
    SubLObject arg_position = NIL;
    SubLObject groves = NIL;
    cdestructuring_bind.destructuring_bind_must_consp( result, result, $list269 );
    arg_position = result.first();
    final SubLObject current = groves = result.rest();
    ConsesLow.rplacd( result, sort_groves( groves ) );
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject sort_groves(final SubLObject groves)
  {
    return Sort.sort( Mapping.mapcar( $sym270$SORT_GROVE, groves ), $sym271$TERM___WITH_CONSTANT_BY_NAME, $sym272$CAR );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject sort_grove(final SubLObject grove)
  {
    return Sort.sort( Mapping.mapcar( $sym273$SORT_TREE, grove ), $sym271$TERM___WITH_CONSTANT_BY_NAME, $sym272$CAR );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject sort_tree(final SubLObject tree)
  {
    SubLObject root = NIL;
    SubLObject subtrees = NIL;
    cdestructuring_bind.destructuring_bind_must_consp( tree, tree, $list274 );
    root = tree.first();
    final SubLObject current = subtrees = tree.rest();
    return ConsesLow.cons( root, Sort.sort( Mapping.mapcar( $sym273$SORT_TREE, subtrees ), $sym271$TERM___WITH_CONSTANT_BY_NAME, $sym272$CAR ) );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject delete_javalist_detail(final SubLObject result)
  {
    SubLObject arg_position = NIL;
    SubLObject flat_list = NIL;
    SubLObject groves = NIL;
    cdestructuring_bind.destructuring_bind_must_consp( result, result, $list275 );
    arg_position = result.first();
    SubLObject current = result.rest();
    cdestructuring_bind.destructuring_bind_must_consp( current, result, $list275 );
    flat_list = current.first();
    current = current.rest();
    SubLObject cdolist_list_var;
    groves = ( cdolist_list_var = current );
    SubLObject grove = NIL;
    grove = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      SubLObject cdolist_list_var_$97 = grove;
      SubLObject tree = NIL;
      tree = cdolist_list_var_$97.first();
      while ( NIL != cdolist_list_var_$97)
      {
        delete_javalist_detail_from_tree( tree );
        cdolist_list_var_$97 = cdolist_list_var_$97.rest();
        tree = cdolist_list_var_$97.first();
      }
      cdolist_list_var = cdolist_list_var.rest();
      grove = cdolist_list_var.first();
    }
    ConsesLow.rplacd( result, groves );
    return result;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject delete_javalist_detail_from_tree(final SubLObject tree)
  {
    SubLObject root = NIL;
    SubLObject subtrees = NIL;
    cdestructuring_bind.destructuring_bind_must_consp( tree, tree, $list274 );
    root = tree.first();
    final SubLObject current = subtrees = tree.rest();
    SubLObject current_$99;
    final SubLObject datum_$98 = current_$99 = root;
    SubLObject javalist = NIL;
    SubLObject v_term = NIL;
    cdestructuring_bind.destructuring_bind_must_consp( current_$99, datum_$98, $list276 );
    javalist = current_$99.first();
    current_$99 = current_$99.rest();
    cdestructuring_bind.destructuring_bind_must_consp( current_$99, datum_$98, $list276 );
    v_term = current_$99.first();
    current_$99 = current_$99.rest();
    if( NIL == current_$99 )
    {
      ConsesLow.rplaca( tree, v_term );
    }
    else
    {
      cdestructuring_bind.cdestructuring_bind_error( datum_$98, $list276 );
    }
    SubLObject cdolist_list_var = subtrees;
    SubLObject subtree = NIL;
    subtree = cdolist_list_var.first();
    while ( NIL != cdolist_list_var)
    {
      delete_javalist_detail_from_tree( subtree );
      cdolist_list_var = cdolist_list_var.rest();
      subtree = cdolist_list_var.first();
    }
    return tree;
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject test_candidate_replacement_renderers_for_vars(final SubLObject sentence1, final SubLObject sentence2, final SubLObject mt)
  {
    final SubLObject result1 = candidate_replacement_renderers_for_sentence( sentence1, narts_high.nart_substitute( mt ), UNPROVIDED );
    final SubLObject result2 = candidate_replacement_renderers_for_sentence( sentence2, narts_high.nart_substitute( mt ), UNPROVIDED );
    return Equality.equal( result1, result2 );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject test_candidate_replacement_renderers_stumps(final SubLObject sentence, final SubLObject mt)
  {
    final SubLObject old_value = $omit_suggestion_stumpsP$.getGlobalValue();
    SubLObject no_stumps = NIL;
    SubLObject stumps = NIL;
    $omit_suggestion_stumpsP$.setGlobalValue( T );
    no_stumps = test_candidate_replacement_renderers( sentence, mt, UNPROVIDED );
    $omit_suggestion_stumpsP$.setGlobalValue( NIL );
    stumps = test_candidate_replacement_renderers( sentence, mt, UNPROVIDED );
    $omit_suggestion_stumpsP$.setGlobalValue( old_value );
    return cycl_utilities.expression_transform( ConsesLow.list( stumps, no_stumps ), $sym90$NART_P, $sym91$NART_EL_FORMULA, UNPROVIDED, UNPROVIDED );
  }

  @SubLTranslatedFile.SubL(source = "cycl/gke-main.lisp", position = 81098L)
  public static SubLObject nartify_and_substitute_term_into_sentence(final SubLObject v_term, final SubLObject sentence, final SubLObject arg_pos, final SubLObject replace_all, final SubLObject domain_mt,
      SubLObject try_coercionP, SubLObject allow_non_wffP, SubLObject optimize_var_namesP)
  {
    if( try_coercionP == UNPROVIDED )
    {
      try_coercionP = T;
    }
    if( allow_non_wffP == UNPROVIDED )
    {
      allow_non_wffP = NIL;
    }
    if( optimize_var_namesP == UNPROVIDED )
    {
      optimize_var_namesP = T;
    }
    return substitute_term_into_sentence( v_term, narts_high.nart_substitute( sentence ), arg_pos, replace_all, domain_mt, try_coercionP, allow_non_wffP, optimize_var_namesP );
  }

  public static SubLObject declare_gke_main_file()
  {
    SubLFiles.declareFunction( me, "get_gke_arg_options", "GET-GKE-ARG-OPTIONS", 7, 1, false );
    SubLFiles.declareFunction( me, "get_arg_option_isa_relation", "GET-ARG-OPTION-ISA-RELATION", 6, 0, false );
    SubLFiles.declareFunction( me, "get_arg_option_collection", "GET-ARG-OPTION-COLLECTION", 7, 0, false );
    SubLFiles.declareFunction( me, "get_arg_option_individual", "GET-ARG-OPTION-INDIVIDUAL", 6, 0, false );
    SubLFiles.declareFunction( me, "get_gke_expanded_items", "GET-GKE-EXPANDED-ITEMS", 3, 0, false );
    SubLFiles.declareFunction( me, "get_gke_combine_with_is_valid_substitution", "GET-GKE-COMBINE-WITH-IS-VALID-SUBSTITUTION", 3, 1, false );
    SubLFiles.declareFunction( me, "get_gke_cycl_formulas_for_nl_phrase", "GET-GKE-CYCL-FORMULAS-FOR-NL-PHRASE", 4, 0, false );
    SubLFiles.declareFunction( me, "get_gke_quantifiers", "GET-GKE-QUANTIFIERS", 0, 0, false );
    SubLFiles.declareFunction( me, "get_gke_quantifier_ranges", "GET-GKE-QUANTIFIER-RANGES", 0, 0, false );
    SubLFiles.declareFunction( me, "gke_list_item_comparator", "GKE-LIST-ITEM-COMPARATOR", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_process_results", "GKE-PROCESS-RESULTS", 2, 2, false );
    SubLFiles.declareFunction( me, "get_gke_specs", "GET-GKE-SPECS", 5, 1, false );
    SubLFiles.declareFunction( me, "get_gke_genls", "GET-GKE-GENLS", 5, 0, false );
    SubLFiles.declareFunction( me, "get_gke_spec_preds", "GET-GKE-SPEC-PREDS", 5, 0, false );
    SubLFiles.declareFunction( me, "get_gke_genl_preds", "GET-GKE-GENL-PREDS", 5, 0, false );
    SubLFiles.declareFunction( me, "get_gke_collection_siblings", "GET-GKE-COLLECTION-SIBLINGS", 5, 0, false );
    SubLFiles.declareFunction( me, "get_gke_instance_siblings", "GET-GKE-INSTANCE-SIBLINGS", 5, 0, false );
    SubLFiles.declareFunction( me, "get_gke_siblings", "GET-GKE-SIBLINGS", 5, 0, false );
    SubLFiles.declareFunction( me, "add_self_to_quantify_over_isas", "ADD-SELF-TO-QUANTIFY-OVER-ISAS", 3, 0, false );
    SubLFiles.declareFunction( me, "get_gke_quantify_over_isas", "GET-GKE-QUANTIFY-OVER-ISAS", 4, 0, false );
    SubLFiles.declareFunction( me, "get_gke_isas", "GET-GKE-ISAS", 5, 0, false );
    SubLFiles.declareFunction( me, "clear_gke_isas_filtered_term", "CLEAR-GKE-ISAS-FILTERED-TERM", 0, 0, false );
    SubLFiles.declareFunction( me, "remove_gke_isas_filtered_term", "REMOVE-GKE-ISAS-FILTERED-TERM", 1, 1, false );
    SubLFiles.declareFunction( me, "gke_isas_filtered_term_internal", "GKE-ISAS-FILTERED-TERM-INTERNAL", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_isas_filtered_term", "GKE-ISAS-FILTERED-TERM", 1, 1, false );
    SubLFiles.declareFunction( me, "clear_gke_filtered_termP", "CLEAR-GKE-FILTERED-TERM?", 0, 0, false );
    SubLFiles.declareFunction( me, "remove_gke_filtered_termP", "REMOVE-GKE-FILTERED-TERM?", 1, 1, false );
    SubLFiles.declareFunction( me, "gke_filtered_termP_internal", "GKE-FILTERED-TERM?-INTERNAL", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_filtered_termP", "GKE-FILTERED-TERM?", 1, 1, false );
    SubLFiles.declareFunction( me, "clear_gke_predicate_filteredP", "CLEAR-GKE-PREDICATE-FILTERED?", 0, 0, false );
    SubLFiles.declareFunction( me, "remove_gke_predicate_filteredP", "REMOVE-GKE-PREDICATE-FILTERED?", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_predicate_filteredP_internal", "GKE-PREDICATE-FILTERED?-INTERNAL", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_predicate_filteredP", "GKE-PREDICATE-FILTERED?", 2, 0, false );
    SubLFiles.declareFunction( me, "terms_pass_constraints", "TERMS-PASS-CONSTRAINTS", 4, 0, false );
    SubLFiles.declareFunction( me, "operator_terms_pass_constraints", "OPERATOR-TERMS-PASS-CONSTRAINTS", 4, 0, false );
    SubLFiles.declareFunction( me, "argument_terms_pass_constraints", "ARGUMENT-TERMS-PASS-CONSTRAINTS", 4, 0, false );
    SubLFiles.declareFunction( me, "argument_terms_pass_isa_genls_constraints", "ARGUMENT-TERMS-PASS-ISA-GENLS-CONSTRAINTS", 4, 0, false );
    SubLFiles.declareFunction( me, "get_gke_naut_arg_position", "GET-GKE-NAUT-ARG-POSITION", 3, 0, false );
    SubLFiles.declareFunction( me, "get_gke_is_known", "GET-GKE-IS-KNOWN", 2, 0, false );
    SubLFiles.declareFunction( me, "simulate_gke_query_paraphrase", "SIMULATE-GKE-QUERY-PARAPHRASE", 1, 3, false );
    SubLFiles.declareFunction( me, "simulate_ccf_paraphrase", "SIMULATE-CCF-PARAPHRASE", 1, 2, false );
    SubLFiles.declareFunction( me, "simulate_ccf3_paraphrase", "SIMULATE-CCF3-PARAPHRASE", 1, 2, false );
    SubLFiles.declareFunction( me, "simulate_gke_query_paraphrase_terse", "SIMULATE-GKE-QUERY-PARAPHRASE-TERSE", 3, 0, false );
    SubLFiles.declareFunction( me, "simulate_gke_query_paraphrase_verbose", "SIMULATE-GKE-QUERY-PARAPHRASE-VERBOSE", 3, 0, false );
    SubLFiles.declareFunction( me, "simulate_gke3_query_paraphrase", "SIMULATE-GKE3-QUERY-PARAPHRASE", 1, 3, false );
    SubLFiles.declareFunction( me, "simulate_gke3_paraphrase_guts", "SIMULATE-GKE3-PARAPHRASE-GUTS", 2, 0, false );
    SubLFiles.declareFunction( me, "gke3_paraphrase_open_vars", "GKE3-PARAPHRASE-OPEN-VARS", 3, 0, false );
    SubLFiles.declareFunction( me, "gke3_paraphrase_guts_int", "GKE3-PARAPHRASE-GUTS-INT", 3, 1, false );
    SubLFiles.declareFunction( me, "starts_with_gke3_connectiveP", "STARTS-WITH-GKE3-CONNECTIVE?", 1, 0, false );
    SubLFiles.declareFunction( me, "gke3_string_for_conjunction", "GKE3-STRING-FOR-CONJUNCTION", 1, 0, false );
    SubLFiles.declareFunction( me, "simulate_gke_term_paraphrase", "SIMULATE-GKE-TERM-PARAPHRASE", 1, 2, false );
    SubLFiles.declareFunction( me, "gke_add_cloned_literal", "GKE-ADD-CLONED-LITERAL", 3, 1, false );
    SubLFiles.declareFunction( me, "gke_strengthen_query_sentence", "GKE-STRENGTHEN-QUERY-SENTENCE", 3, 0, false );
    SubLFiles.declareFunction( me, "gke_remove_literal", "GKE-REMOVE-LITERAL", 3, 0, false );
    SubLFiles.declareFunction( me, "gke_find_literal_to_clone", "GKE-FIND-LITERAL-TO-CLONE", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_find_literal_to_remove", "GKE-FIND-LITERAL-TO-REMOVE", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_find_literal_to_strengthen", "GKE-FIND-LITERAL-TO-STRENGTHEN", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_find_literal_for_arg_position", "GKE-FIND-LITERAL-FOR-ARG-POSITION", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_add_literal", "GKE-ADD-LITERAL", 4, 0, false );
    SubLFiles.declareFunction( me, "gke_get_siblings", "GKE-GET-SIBLINGS", 3, 0, false );
    SubLFiles.declareFunction( me, "gke_formula_arg_position", "GKE-FORMULA-ARG-POSITION", 2, 1, false );
    SubLFiles.declareFunction( me, "gke_formula_arg_position_subst", "GKE-FORMULA-ARG-POSITION-SUBST", 3, 0, false );
    SubLFiles.declareFunction( me, "loosen_gke_literal", "LOOSEN-GKE-LITERAL", 1, 1, false );
    SubLFiles.declareFunction( me, "strengthen_gke_literal", "STRENGTHEN-GKE-LITERAL", 1, 1, false );
    SubLFiles.declareFunction( me, "reformulator_settings_for_gke", "REFORMULATOR-SETTINGS-FOR-GKE", 1, 0, false );
    SubLFiles.declareFunction( me, "sentence_substitution_wffP", "SENTENCE-SUBSTITUTION-WFF?", 2, 0, false );
    SubLFiles.declareFunction( me, "free_variable", "FREE-VARIABLE", 2, 0, false );
    SubLFiles.declareFunction( me, "existentially_boundP", "EXISTENTIALLY-BOUND?", 2, 0, false );
    SubLFiles.declareFunction( me, "possible_sentence_substitutions", "POSSIBLE-SENTENCE-SUBSTITUTIONS", 5, 8, false );
    SubLFiles.declareFunction( me, "formula_arg_pos_isa_constraint", "FORMULA-ARG-POS-ISA-CONSTRAINT", 3, 0, false );
    SubLFiles.declareFunction( me, "substitute_term_into_sentence", "SUBSTITUTE-TERM-INTO-SENTENCE", 5, 3, false );
    SubLFiles.declareFunction( me, "substitute_terms_into_sentence", "SUBSTITUTE-TERMS-INTO-SENTENCE", 6, 0, false );
    SubLFiles.declareFunction( me, "substitute_term_into_sentence_int", "SUBSTITUTE-TERM-INTO-SENTENCE-INT", 6, 0, false );
    SubLFiles.declareFunction( me, "coerce_term_into_sentence", "COERCE-TERM-INTO-SENTENCE", 5, 1, false );
    SubLFiles.declareFunction( me, "clear_gke_memoization_state", "CLEAR-GKE-MEMOIZATION-STATE", 0, 0, false );
    SubLFiles.declareFunction( me, "remove_gke_memoization_state", "REMOVE-GKE-MEMOIZATION-STATE", 0, 0, false );
    SubLFiles.declareFunction( me, "gke_memoization_state_internal", "GKE-MEMOIZATION-STATE-INTERNAL", 0, 0, false );
    SubLFiles.declareFunction( me, "gke_memoization_state", "GKE-MEMOIZATION-STATE", 0, 0, false );
    SubLFiles.declareFunction( me, "gke_gloss_for_literal", "GKE-GLOSS-FOR-LITERAL", 1, 2, false );
    SubLFiles.declareFunction( me, "get_gke_gloss_from_kb", "GET-GKE-GLOSS-FROM-KB", 3, 0, false );
    SubLFiles.declareFunction( me, "clear_generate_gke_gloss_wrt_mt_cached", "CLEAR-GENERATE-GKE-GLOSS-WRT-MT-CACHED", 0, 0, false );
    SubLFiles.declareFunction( me, "remove_generate_gke_gloss_wrt_mt_cached", "REMOVE-GENERATE-GKE-GLOSS-WRT-MT-CACHED", 3, 0, false );
    SubLFiles.declareFunction( me, "generate_gke_gloss_wrt_mt_cached_internal", "GENERATE-GKE-GLOSS-WRT-MT-CACHED-INTERNAL", 3, 0, false );
    SubLFiles.declareFunction( me, "generate_gke_gloss_wrt_mt_cached", "GENERATE-GKE-GLOSS-WRT-MT-CACHED", 3, 0, false );
    SubLFiles.declareFunction( me, "candidate_replacement_renderers_for_sentence", "CANDIDATE-REPLACEMENT-RENDERERS-FOR-SENTENCE", 2, 1, false );
    SubLFiles.declareFunction( me, "candidate_replacements_for_variables", "CANDIDATE-REPLACEMENTS-FOR-VARIABLES", 2, 0, false );
    SubLFiles.declareFunction( me, "candidate_replacements_for_arg", "CANDIDATE-REPLACEMENTS-FOR-ARG", 3, 0, false );
    SubLFiles.declareFunction( me, "candidate_replacements_for_sentence", "CANDIDATE-REPLACEMENTS-FOR-SENTENCE", 2, 0, false );
    SubLFiles.declareFunction( me, "clear_candidate_replacements_for_sentence_cached", "CLEAR-CANDIDATE-REPLACEMENTS-FOR-SENTENCE-CACHED", 0, 0, false );
    SubLFiles.declareFunction( me, "remove_candidate_replacements_for_sentence_cached", "REMOVE-CANDIDATE-REPLACEMENTS-FOR-SENTENCE-CACHED", 2, 0, false );
    SubLFiles.declareFunction( me, "candidate_replacements_for_sentence_cached_internal", "CANDIDATE-REPLACEMENTS-FOR-SENTENCE-CACHED-INTERNAL", 2, 0, false );
    SubLFiles.declareFunction( me, "candidate_replacements_for_sentence_cached", "CANDIDATE-REPLACEMENTS-FOR-SENTENCE-CACHED", 2, 0, false );
    SubLFiles.declareFunction( me, "add_candidate_replacements", "ADD-CANDIDATE-REPLACEMENTS", 5, 0, false );
    SubLFiles.declareFunction( me, "candidate_replacement_join_function", "CANDIDATE-REPLACEMENT-JOIN-FUNCTION", 1, 0, false );
    SubLFiles.declareFunction( me, "clear_gke_get_elements", "CLEAR-GKE-GET-ELEMENTS", 0, 0, false );
    SubLFiles.declareFunction( me, "remove_gke_get_elements", "REMOVE-GKE-GET-ELEMENTS", 3, 0, false );
    SubLFiles.declareFunction( me, "gke_get_elements_internal", "GKE-GET-ELEMENTS-INTERNAL", 3, 0, false );
    SubLFiles.declareFunction( me, "gke_get_elements", "GKE-GET-ELEMENTS", 3, 0, false );
    SubLFiles.declareFunction( me, "replacement_renderer_groves", "REPLACEMENT-RENDERER-GROVES", 4, 0, false );
    SubLFiles.declareFunction( me, "find_table_to_conflate_to", "FIND-TABLE-TO-CONFLATE-TO", 3, 0, false );
    SubLFiles.declareFunction( me, "replacement_tree_print_function_trampoline", "REPLACEMENT-TREE-PRINT-FUNCTION-TRAMPOLINE", 2, 0, false );
    SubLFiles.declareFunction( me, "replacement_tree_p", "REPLACEMENT-TREE-P", 1, 0, false );
    new $replacement_tree_p$UnaryFunction();
    SubLFiles.declareFunction( me, "r_tree_root", "R-TREE-ROOT", 1, 0, false );
    SubLFiles.declareFunction( me, "r_tree_children", "R-TREE-CHILDREN", 1, 0, false );
    SubLFiles.declareFunction( me, "_csetf_r_tree_root", "_CSETF-R-TREE-ROOT", 2, 0, false );
    SubLFiles.declareFunction( me, "_csetf_r_tree_children", "_CSETF-R-TREE-CHILDREN", 2, 0, false );
    SubLFiles.declareFunction( me, "make_replacement_tree", "MAKE-REPLACEMENT-TREE", 0, 1, false );
    SubLFiles.declareFunction( me, "visit_defstruct_replacement_tree", "VISIT-DEFSTRUCT-REPLACEMENT-TREE", 2, 0, false );
    SubLFiles.declareFunction( me, "visit_defstruct_object_replacement_tree_method", "VISIT-DEFSTRUCT-OBJECT-REPLACEMENT-TREE-METHOD", 2, 0, false );
    SubLFiles.declareFunction( me, "print_replacement_tree", "PRINT-REPLACEMENT-TREE", 3, 0, false );
    SubLFiles.declareFunction( me, "new_replacement_tree", "NEW-REPLACEMENT-TREE", 1, 1, false );
    SubLFiles.declareFunction( me, "replacement_tree_root", "REPLACEMENT-TREE-ROOT", 1, 0, false );
    SubLFiles.declareFunction( me, "replacement_tree_children", "REPLACEMENT-TREE-CHILDREN", 1, 0, false );
    SubLFiles.declareFunction( me, "replacement_tree_add_child", "REPLACEMENT-TREE-ADD-CHILD", 2, 0, false );
    SubLFiles.declareFunction( me, "replacement_renderer_grove", "REPLACEMENT-RENDERER-GROVE", 2, 0, false );
    SubLFiles.declareFunction( me, "replacement_renderer_grove_recursive", "REPLACEMENT-RENDERER-GROVE-RECURSIVE", 3, 0, false );
    SubLFiles.declareFunction( me, "add_one_renderer", "ADD-ONE-RENDERER", 4, 0, false );
    SubLFiles.declareFunction( me, "renderer_tree_contains_rendererP", "RENDERER-TREE-CONTAINS-RENDERER?", 4, 1, false );
    SubLFiles.declareFunction( me, "break_replacement_renderer_cycles", "BREAK-REPLACEMENT-RENDERER-CYCLES", 2, 0, false );
    SubLFiles.declareFunction( me, "listy_replacement_tree", "LISTY-REPLACEMENT-TREE", 2, 0, false );
    SubLFiles.declareFunction( me, "postpone_adding_replacementP", "POSTPONE-ADDING-REPLACEMENT?", 3, 0, false );
    SubLFiles.declareFunction( me, "replacement_renderer_tree_specifications", "REPLACEMENT-RENDERER-TREE-SPECIFICATIONS", 3, 0, false );
    SubLFiles.declareFunction( me, "replacement_renderer_tree_conflation_preds", "REPLACEMENT-RENDERER-TREE-CONFLATION-PREDS", 3, 0, false );
    SubLFiles.declareFunction( me, "renderer_to_superiors_table", "RENDERER-TO-SUPERIORS-TABLE", 5, 1, false );
    SubLFiles.declareFunction( me, "superiors_for_renderer_term", "SUPERIORS-FOR-RENDERER-TERM", 5, 0, false );
    SubLFiles.declareFunction( me, "gke_subst_nl_for_inference_answer", "GKE-SUBST-NL-FOR-INFERENCE-ANSWER", 1, 0, false );
    SubLFiles.declareFunction( me, "gke_subst_nl_for_binding", "GKE-SUBST-NL-FOR-BINDING", 1, 0, false );
    SubLFiles.declareFunction( me, "el_binding_list_to_gke_binding_list", "EL-BINDING-LIST-TO-GKE-BINDING-LIST", 2, 0, false );
    SubLFiles.declareFunction( me, "el_binding_to_gke_binding", "EL-BINDING-TO-GKE-BINDING", 1, 0, false );
    SubLFiles.declareFunction( me, "variable_to_nl_string", "VARIABLE-TO-NL-STRING", 1, 0, false );
    SubLFiles.declareFunction( me, "gke_start_continuable_query", "GKE-START-CONTINUABLE-QUERY", 2, 1, false );
    SubLFiles.declareFunction( me, "gke_warn", "GKE-WARN", 1, 0, false );
    SubLFiles.declareFunction( me, "gke_continue_query", "GKE-CONTINUE-QUERY", 3, 1, false );
    SubLFiles.declareFunction( me, "new_gke_process", "NEW-GKE-PROCESS", 3, 1, false );
    SubLFiles.declareFunction( me, "new_results_daemon", "NEW-RESULTS-DAEMON", 3, 0, false );
    SubLFiles.declareFunction( me, "results_daemon", "RESULTS-DAEMON", 4, 0, false );
    SubLFiles.declareFunction( me, "daemon_should_run", "DAEMON-SHOULD-RUN", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_run_inference", "GKE-RUN-INFERENCE", 4, 1, false );
    SubLFiles.declareFunction( me, "gke_get_one_inference_result", "GKE-GET-ONE-INFERENCE-RESULT", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_get_inference_results", "GKE-GET-INFERENCE-RESULTS", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_inference_completeP", "GKE-INFERENCE-COMPLETE?", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_get_inference_status", "GKE-GET-INFERENCE-STATUS", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_get_inference_suspend_status", "GKE-GET-INFERENCE-SUSPEND-STATUS", 2, 0, false );
    SubLFiles.declareFunction( me, "gke_stop_continuable_query", "GKE-STOP-CONTINUABLE-QUERY", 2, 1, false );
    SubLFiles.declareFunction( me, "gke_release_inference_resources", "GKE-RELEASE-INFERENCE-RESOURCES", 2, 0, false );
    SubLFiles.declareFunction( me, "null_or_integerp", "NULL-OR-INTEGERP", 1, 0, false );
    SubLFiles.declareFunction( me, "clear_cached_gke_functions", "CLEAR-CACHED-GKE-FUNCTIONS", 0, 0, false );
    SubLFiles.declareFunction( me, "gke_test_queries", "GKE-TEST-QUERIES", 1, 0, false );
    SubLFiles.declareFunction( me, "candidate_replacements_equalP", "CANDIDATE-REPLACEMENTS-EQUAL?", 2, 0, false );
    SubLFiles.declareFunction( me, "test_candidate_replacements", "TEST-CANDIDATE-REPLACEMENTS", 2, 0, false );
    SubLFiles.declareFunction( me, "test_candidate_replacement_renderers", "TEST-CANDIDATE-REPLACEMENT-RENDERERS", 2, 1, false );
    SubLFiles.declareFunction( me, "remove_javalist_detail", "REMOVE-JAVALIST-DETAIL", 1, 0, false );
    SubLFiles.declareFunction( me, "sort_result", "SORT-RESULT", 1, 0, false );
    SubLFiles.declareFunction( me, "sort_groves", "SORT-GROVES", 1, 0, false );
    SubLFiles.declareFunction( me, "sort_grove", "SORT-GROVE", 1, 0, false );
    SubLFiles.declareFunction( me, "sort_tree", "SORT-TREE", 1, 0, false );
    SubLFiles.declareFunction( me, "delete_javalist_detail", "DELETE-JAVALIST-DETAIL", 1, 0, false );
    SubLFiles.declareFunction( me, "delete_javalist_detail_from_tree", "DELETE-JAVALIST-DETAIL-FROM-TREE", 1, 0, false );
    SubLFiles.declareFunction( me, "test_candidate_replacement_renderers_for_vars", "TEST-CANDIDATE-REPLACEMENT-RENDERERS-FOR-VARS", 3, 0, false );
    SubLFiles.declareFunction( me, "test_candidate_replacement_renderers_stumps", "TEST-CANDIDATE-REPLACEMENT-RENDERERS-STUMPS", 2, 0, false );
    SubLFiles.declareFunction( me, "nartify_and_substitute_term_into_sentence", "NARTIFY-AND-SUBSTITUTE-TERM-INTO-SENTENCE", 5, 3, false );
    return NIL;
  }

  public static SubLObject init_gke_main_file()
  {
    $gke_isas_filtered_term_caching_state$ = SubLFiles.deflexical( "*GKE-ISAS-FILTERED-TERM-CACHING-STATE*", NIL );
    $gke_overly_general_non_predicate_types$ = SubLFiles.deflexical( "*GKE-OVERLY-GENERAL-NON-PREDICATE-TYPES*", $list27 );
    $gke_filtered_termP_caching_state$ = SubLFiles.deflexical( "*GKE-FILTERED-TERM?-CACHING-STATE*", NIL );
    $gke_overly_general_predicate_types$ = SubLFiles.deflexical( "*GKE-OVERLY-GENERAL-PREDICATE-TYPES*", $list29 );
    $gke_predicate_filteredP_caching_state$ = SubLFiles.deflexical( "*GKE-PREDICATE-FILTERED?-CACHING-STATE*", NIL );
    $use_rbp_wff_in_gkeP$ = SubLFiles.defparameter( "*USE-RBP-WFF-IN-GKE?*", T );
    $gke_memoization_state_caching_state$ = SubLFiles.deflexical( "*GKE-MEMOIZATION-STATE-CACHING-STATE*", NIL );
    $generate_gke_gloss_wrt_mt_cached_caching_state$ = SubLFiles.deflexical( "*GENERATE-GKE-GLOSS-WRT-MT-CACHED-CACHING-STATE*", NIL );
    $candidate_replacements_for_sentence_cached_caching_state$ = SubLFiles.deflexical( "*CANDIDATE-REPLACEMENTS-FOR-SENTENCE-CACHED-CACHING-STATE*", NIL );
    $gke_get_elements_caching_state$ = SubLFiles.deflexical( "*GKE-GET-ELEMENTS-CACHING-STATE*", NIL );
    $omit_suggestion_stumpsP$ = SubLFiles.deflexical( "*OMIT-SUGGESTION-STUMPS?*", ( maybeDefault( $sym140$_OMIT_SUGGESTION_STUMPS__, $omit_suggestion_stumpsP$, NIL ) ) );
    $dtp_replacement_tree$ = SubLFiles.defconstant( "*DTP-REPLACEMENT-TREE*", $sym141$REPLACEMENT_TREE );
    $use_tva_for_suggestionsP$ = SubLFiles.deflexical( "*USE-TVA-FOR-SUGGESTIONS?*", ( maybeDefault( $sym188$_USE_TVA_FOR_SUGGESTIONS__, $use_tva_for_suggestionsP$, NIL ) ) );
    $default_patience_wait_time$ = SubLFiles.defparameter( "*DEFAULT-PATIENCE-WAIT-TIME*", TWO_INTEGER );
    $gke_query_threads$ = SubLFiles.defparameter( "*GKE-QUERY-THREADS*", Hashtables.make_hash_table( FIVE_INTEGER, Symbols.symbol_function( EQUAL ), UNPROVIDED ) );
    $daemon_should_run_inference_statuses$ = SubLFiles.deflexical( "*DAEMON-SHOULD-RUN-INFERENCE-STATUSES*", $list220 );
    $gke_run_inference_with_adjusted_dynamic_propertiesP$ = SubLFiles.deflexical( "*GKE-RUN-INFERENCE-WITH-ADJUSTED-DYNAMIC-PROPERTIES?*", NIL );
    $inference_done_statuses$ = SubLFiles.deflexical( "*INFERENCE-DONE-STATUSES*", $list233 );
    return NIL;
  }

  public static SubLObject setup_gke_main_file()
  {
    access_macros.register_external_symbol( $sym0$GET_GKE_ARG_OPTIONS );
    access_macros.register_external_symbol( $sym6$GET_GKE_EXPANDED_ITEMS );
    utilities_macros.register_cyc_api_function( $sym10$GET_GKE_QUANTIFIER_RANGES, NIL, $str11$Get_the_quantifier_ranges, NIL, NIL );
    memoization_state.note_globally_cached_function( $sym23$GKE_ISAS_FILTERED_TERM );
    memoization_state.note_globally_cached_function( $sym19$GKE_FILTERED_TERM_ );
    memoization_state.note_globally_cached_function( $sym30$GKE_PREDICATE_FILTERED_ );
    access_macros.register_external_symbol( $sym40$GET_GKE_NAUT_ARG_POSITION );
    access_macros.register_external_symbol( $sym41$GET_GKE_IS_KNOWN );
    access_macros.register_external_symbol( $sym69$GKE_ADD_CLONED_LITERAL );
    access_macros.register_external_symbol( $sym73$GKE_REMOVE_LITERAL );
    access_macros.register_external_symbol( $sym82$POSSIBLE_SENTENCE_SUBSTITUTIONS );
    access_macros.register_external_symbol( $sym89$SUBSTITUTE_TERM_INTO_SENTENCE );
    memoization_state.note_globally_cached_function( $sym102$GKE_MEMOIZATION_STATE );
    access_macros.register_external_symbol( $sym106$GKE_GLOSS_FOR_LITERAL );
    memoization_state.note_globally_cached_function( $sym111$GENERATE_GKE_GLOSS_WRT_MT_CACHED );
    access_macros.register_external_symbol( $sym114$CANDIDATE_REPLACEMENT_RENDERERS_FOR_SENTENCE );
    access_macros.register_external_symbol( $sym117$CANDIDATE_REPLACEMENTS_FOR_VARIABLES );
    access_macros.register_external_symbol( $sym118$CANDIDATE_REPLACEMENTS_FOR_ARG );
    memoization_state.note_globally_cached_function( $sym119$CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED );
    memoization_state.note_globally_cached_function( $sym131$GKE_GET_ELEMENTS );
    subl_macro_promotions.declare_defglobal( $sym140$_OMIT_SUGGESTION_STUMPS__ );
    Structures.register_method( print_high.$print_object_method_table$.getGlobalValue(), $dtp_replacement_tree$.getGlobalValue(), Symbols.symbol_function( $sym148$REPLACEMENT_TREE_PRINT_FUNCTION_TRAMPOLINE ) );
    SubLSpecialOperatorDeclarations.proclaim( $list149 );
    Structures.def_csetf( $sym150$R_TREE_ROOT, $sym151$_CSETF_R_TREE_ROOT );
    Structures.def_csetf( $sym152$R_TREE_CHILDREN, $sym153$_CSETF_R_TREE_CHILDREN );
    Equality.identity( $sym141$REPLACEMENT_TREE );
    Structures.register_method( visitation.$visit_defstruct_object_method_table$.getGlobalValue(), $dtp_replacement_tree$.getGlobalValue(), Symbols.symbol_function(
        $sym160$VISIT_DEFSTRUCT_OBJECT_REPLACEMENT_TREE_METHOD ) );
    utilities_macros.note_funcall_helper_function( $sym147$PRINT_REPLACEMENT_TREE );
    subl_macro_promotions.declare_defglobal( $sym188$_USE_TVA_FOR_SUGGESTIONS__ );
    utilities_macros.register_cyc_api_function( $sym200$GKE_START_CONTINUABLE_QUERY, $list201, $str202$Setup_a_query__and_immediately_re, $list203, NIL );
    utilities_macros.register_cyc_api_function( $sym208$GKE_CONTINUE_QUERY, $list209, $str210$Continue_an_existing_query__ident, $list211, NIL );
    utilities_macros.register_cyc_api_function( $sym224$GKE_GET_ONE_INFERENCE_RESULT, $list225, $str226$Get_one_inference_result, $list227, NIL );
    utilities_macros.register_cyc_api_function( $sym230$GKE_GET_INFERENCE_RESULTS, $list225, $str231$get_all_the_inference_results_so_, $list232, NIL );
    utilities_macros.register_cyc_api_function( $sym234$GKE_INFERENCE_COMPLETE_, $list225, $str235$ret_t_iff_inference_is_suspended_, $list227, NIL );
    utilities_macros.register_cyc_api_function( $sym236$GKE_GET_INFERENCE_STATUS, $list225, $str237$get_the_status_of_the_inference, $list227, NIL );
    utilities_macros.register_cyc_api_function( $sym238$GKE_GET_INFERENCE_SUSPEND_STATUS, $list225, $str239$get_the_suspend_status_of_the_inf, $list227, NIL );
    utilities_macros.register_cyc_api_function( $sym241$GKE_STOP_CONTINUABLE_QUERY, $list242, $str243$Find_and_stop_the_inference_, $list244, NIL );
    utilities_macros.register_cyc_api_function( $sym245$GKE_RELEASE_INFERENCE_RESOURCES, $list225, $str246$Destroy_problem_store_and_inferen, $list227, NIL );
    access_macros.register_external_symbol( $sym247$GKE_TEST_QUERIES );
    sunit_external.define_test_category( $str252$GKE_Query_Sentence_Literal_Manipu, UNPROVIDED );
    sunit_external.define_test_suite( $str253$GKE_Main_Test_Suite, $list254, UNPROVIDED, UNPROVIDED );
    generic_testing.define_test_case_table_int( $sym255$TEST_CANDIDATE_REPLACEMENTS, ConsesLow.list( new SubLObject[] { $kw256$TEST, $sym257$CANDIDATE_REPLACEMENTS_EQUAL_, $kw258$OWNER, NIL, $kw259$CLASSES, $list260,
      $kw261$KB, $kw262$FULL, $kw263$WORKING_, T
    } ), $list264 );
    generic_testing.define_test_case_table_int( $sym277$TEST_CANDIDATE_REPLACEMENT_RENDERERS_FOR_VARS, ConsesLow.list( new SubLObject[] { $kw256$TEST, EQUAL, $kw258$OWNER, NIL, $kw259$CLASSES, $list260, $kw261$KB,
      $kw262$FULL, $kw263$WORKING_, T
    } ), $list278 );
    generic_testing.define_test_case_table_int( $sym279$TEST_CANDIDATE_REPLACEMENT_RENDERERS_STUMPS, ConsesLow.list( new SubLObject[] { $kw256$TEST, EQUAL, $kw258$OWNER, NIL, $kw259$CLASSES, $list260, $kw261$KB,
      $kw262$FULL, $kw263$WORKING_, T
    } ), $list280 );
    generic_testing.define_test_case_table_int( $sym281$TEST_CANDIDATE_REPLACEMENT_RENDERERS, ConsesLow.list( new SubLObject[] { $kw256$TEST, EQUAL, $kw258$OWNER, NIL, $kw259$CLASSES, $list260, $kw261$KB, $kw262$FULL,
      $kw263$WORKING_, T
    } ), $list282 );
    generic_testing.define_test_case_table_int( $sym283$NARTIFY_AND_SUBSTITUTE_TERM_INTO_SENTENCE, ConsesLow.list( new SubLObject[] { $kw256$TEST, EQUAL, $kw258$OWNER, NIL, $kw259$CLASSES, $list260, $kw261$KB,
      $kw262$FULL, $kw263$WORKING_, T
    } ), $list284 );
    generic_testing.define_test_case_table_int( $sym89$SUBSTITUTE_TERM_INTO_SENTENCE, ConsesLow.list( new SubLObject[] { $kw256$TEST, EQUAL, $kw258$OWNER, NIL, $kw259$CLASSES, $list260, $kw261$KB, $kw262$FULL,
      $kw263$WORKING_, T
    } ), $list285 );
    return NIL;
  }

  private static SubLObject _constant_282_initializer()
  {
    return ConsesLow.list( ConsesLow.list( ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "dataForValveOfEventRecordsStenosisSeverity" ) ), makeSymbol( "?CARDIAC-VALVE-DATA" ),
        makeSymbol( "?MEDICALLY-RELATED-EVENT" ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles
            .reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), constant_handles.reader_make_constant_shell( makeString( "MedicalResearchCAEGuidanceMt" ) ), constant_handles
                .reader_make_constant_shell( makeString( "CCFMedicalResearch-Allotment" ) ) ), ConsesLow.list( ConsesLow.list( ConsesLow.list( THREE_INTEGER ), ConsesLow.list( new SubLObject[]
                { ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis_critical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "CardiacValveStenosis_present" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis_trivial" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "CardiacValveStenosis_unknown" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "Moderate-SevereToSevereCardiacValveStenosis" ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list(
                                    constant_handles.reader_make_constant_shell( makeString( "SeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveStenosis" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModerateToModerate-SevereToSevereCardiacValveStenosis" ) ), ConsesLow
                                            .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModeratePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow
                                                        .list( constant_handles.reader_make_constant_shell( makeString( "SeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                            "CardiacValveStenosis" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "None-CardiacValveStenosis" ) ) ), ConsesLow.list(
                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MildPhysiologicalConditionOfTypeFn" ) ), constant_handles
                                                                    .reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                        makeString( "MildToModeratePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                            "CardiacValveStenosis" ) ) ) )
    } ) ) ) ), ConsesLow.list( ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "valveProsthesisTypeExplanted" ) ), makeSymbol( "?HEART-VALVE-REPLACEMENT" ), constant_handles
        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000" ) ), makeSymbol( "?VALVE-PROSTHESIS" ) ), constant_handles.reader_make_constant_shell( makeString( "MedicalResearchCAEGuidanceMt" ) ),
        constant_handles.reader_make_constant_shell( makeString( "CCFMedicalResearch-Allotment" ) ) ), ConsesLow.list( ConsesLow.list( ConsesLow.list( TWO_INTEGER ), ConsesLow.list( ConsesLow.list( new SubLObject[]
        { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticAndMitralValveProsthesis" ) ), ConsesLow
            .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel52842007-D" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                "CardiacValveProsthesisModelHALL" ) ) ) ), ConsesLow.list( new SubLObject[]
                { constant_handles.reader_make_constant_shell( makeString( "AorticValveProsthesis" ) ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString(
                    "AorticValveMechanicalProsthesis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticSilasticBallValveProsthesis" ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel1260" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "CardiacValveProsthesisModel1200" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2310" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2320" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "CardiacValveProsthesisModel3160" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel52842006-D" ) ) ), ConsesLow.list(
                                        constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel52842006-F" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "CardiacValveProsthesisModel52842050-B" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGFN-756" ) ) ), ConsesLow
                                                .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGFN-756-IDE" ) ) ), ConsesLow.list( constant_handles
                                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_ONXAE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "CardiacValveProsthesisModelONXA" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelONXAC" ) ) )
            } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Aortic-Biological" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                makeString( "CardiacValveProsthesis-3FAorticBioprosthesis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel1000" ) ) ) ), ConsesLow.list(
                    constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2625" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "CardiacValveProsthesisModel2700" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700PM" ) ) ), ConsesLow.list( constant_handles
                            .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2800" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "CardiacValveProsthesisModel3000" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000TFX" ) ) ), ConsesLow.list(
                                    constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel9000IDE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveProsthesisModelNumber_3300TFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_BSP100" ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelTF-IDE" ) ) )
            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-AorticApex" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                "CardiacValveProsthesisModel503DA" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-AorticCompositeGraft" ) ), ConsesLow.list( constant_handles
                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelXAGV" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "CardiacValveProsthesis-AorticHighProfile" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAHP-105" ) ) ) ), ConsesLow.list(
                            constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-AorticSingleComponent" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "CardiacValveProsthesisModel320" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-AorticStabilizedGlutaraldehydeProcess" ) ),
                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel250" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                        makeString( "CardiacValveProsthesis-CConvex-Concave" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGVC" ) ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-FreestyleAorticRoot" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesisModel995" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-MagnaAortic" ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000TFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CardiacValveProsthesisModelNumber_3300TFX" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-MosaicUltraAortic" ) ), ConsesLow.list(
                                  constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel305" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "CardiacValveProsthesis-PremarketAortic" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700PM" ) ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-PrimaPlusStentlessAortic" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                              makeString( "CardiacValveProsthesisModel2500P" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-ReducedAortic" ) ),
                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelR500" ) ) ) ), ConsesLow.list( constant_handles
                                                      .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel150" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "CardiacValveProsthesisModel242" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2650" ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel300" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesisModel350" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel606366" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelA-101" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CardiacValveProsthesisModelABP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAEC-102" ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGN-751" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "CardiacValveProsthesisModelAGVM" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAJ-501" ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "CardiacValveProsthesisModelAVG-201" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAVG-301" ) ) ), ConsesLow
                                                  .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAVG-CUS" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "CardiacValveProsthesisModelB10" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelB10SP" ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelCAVG-404" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesisModelCAVGJ-514" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_BiocorAortic" ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_C7700" ) ) ), ConsesLow.list( new SubLObject[]
                          { ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CollectionIntersection2Fn" ) ), constant_handles.reader_make_constant_shell( makeString(
                              "CardiacValveProsthesis-Biological-Pericardial" ) ), constant_handles.reader_make_constant_shell( makeString( "AorticValveProsthesis" ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "CardiacValveProsthesis-3FAorticBioprosthesis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "CardiacValveProsthesisModel1000" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700" ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700PM" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "CardiacValveProsthesisModel2800" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000" ) ) ), ConsesLow.list(
                                                  constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000TFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "CardiacValveProsthesisModel9000IDE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "CardiacValveProsthesisModelISA" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_3300TFX" ) ) )
                  } )
        } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-3FAortic" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
            "CardiacValveProsthesisModel1000" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-AorticConduit" ) ), ConsesLow.list( constant_handles
                .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel606366" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-AorticDisc" ) ),
                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelABP" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "CardiacValveProsthesis-AorticRegent" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGFN-756-IDE" ) ) ) ), ConsesLow.list(
                            new SubLObject[]
                            { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-AorticValvedConduit" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "CardiacValveProsthesis-CConvex-Concave" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGVC" ) ) ) ), ConsesLow.list(
                                    constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-NotLowPorosity" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveProsthesisModelAGVM" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel150" ) ) ), ConsesLow.list(
                                            constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel350" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "CardiacValveProsthesisModelAP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAVG-201" ) ) ), ConsesLow.list(
                                                    constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAVG-301" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                        makeString( "CardiacValveProsthesisModelAVG-CUS" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "CardiacValveProsthesisModelCAVG-404" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "CardiacValveProsthesisModelCAVGJ-514" ) ) )
                            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Bicor" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "CardiacValveProsthesisModelB10" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelB10SP" ) ) ), ConsesLow.list( constant_handles
                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_BiocorAortic" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveProsthesisModelNumber_BiocorMitral" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Bileaflet" ) ), ConsesLow
                                            .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3160" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                makeString( "CardiacValveProsthesisModel9120" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelHALL" ) ) ) ),
          ConsesLow.list( new SubLObject[]
          { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Biological" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesis-Allograft" ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles
                  .reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString(
                      "CryolifeAorticAllograft" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles
                          .reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell(
                              makeString( "CryolifePulmonaryAllograft" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ),
                                  constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles
                                      .reader_make_constant_shell( makeString( "LifenetAorticAllograft" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell(
                                              makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "LifenetPulmonaryAllograft" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ),
                                                  constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                      "UnknownManufacturer-Allograft" ) ) ) ) ), ConsesLow.list( new SubLObject[]
                                                      { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Aortic-Biological" ) ), ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "CardiacValveProsthesis-3FAorticBioprosthesis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                              makeString( "CardiacValveProsthesisModel1000" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "CardiacValveProsthesisModel2625" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700" ) ) ),
                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700PM" ) ) ), ConsesLow.list( constant_handles
                                                            .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2800" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "CardiacValveProsthesisModel3000" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "CardiacValveProsthesisModel3000TFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "CardiacValveProsthesisModel9000IDE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "CardiacValveProsthesisModelNumber_3300TFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "CardiacValveProsthesisModelNumber_BSP100" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "CardiacValveProsthesisModelTF-IDE" ) ) )
          } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Biological-BovineOrPorcine" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesis-Biological-Bovine" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_3300TFX" ) ) ), ConsesLow.list( constant_handles
                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_7000" ) ) ) ), ConsesLow.list( new SubLObject[]
                  { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Biological-Porcine" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesis-AorticStabilizedGlutaraldehydeProcess" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel250" ) ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-PrimaPlusStentlessAortic" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CardiacValveProsthesisModel2500P" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel109411-1" ) ) ), ConsesLow.list(
                                  constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel150" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "CardiacValveProsthesisModel200" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel242" ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2625" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "CardiacValveProsthesisModel2650" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel300" ) ) ), ConsesLow.list(
                                                  constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel305" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "CardiacValveProsthesisModel310" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel320" ) ) ), ConsesLow
                                                          .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel342A-V" ) ) ), ConsesLow.list( constant_handles
                                                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel342R" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "CardiacValveProsthesisModel350" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "CardiacValveProsthesisModel606306" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "CardiacValveProsthesisModel606366" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "CardiacValveProsthesisModel6625" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "CardiacValveProsthesisModel6625-ESR-LP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "CardiacValveProsthesisModel6625LP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "CardiacValveProsthesisModel6650" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "CardiacValveProsthesisModel995" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "CardiacValveProsthesisModelISU" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "CardiacValveProsthesisModelNumber_995" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                          makeString( "CardiacValveProsthesisModelXAGV" ) ) )
          } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelB100-M" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesisModelNumber_B100-A" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_B100-M" ) ) ), ConsesLow.list( constant_handles
                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_BSP100" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesisModelTF-IDE" ) ) ) ), ConsesLow.list( new SubLObject[]
                      { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Biological-Pericardial" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "CardiacValveProsthesisModel2900" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6900" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6900P" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "CardiacValveProsthesisModel6900PTFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel7000TFX" ) ) ), ConsesLow.list(
                                      constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelISLM" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "CardiacValveProsthesisModelNumber_12A" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_9000TFX" ) ) ),
                        ConsesLow.list( new SubLObject[]
                        { ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CollectionIntersection2Fn" ) ), constant_handles.reader_make_constant_shell( makeString(
                            "CardiacValveProsthesis-Biological-Pericardial" ) ), constant_handles.reader_make_constant_shell( makeString( "AorticValveProsthesis" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "CardiacValveProsthesis-3FAorticBioprosthesis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "CardiacValveProsthesisModel1000" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700" ) ) ), ConsesLow.list(
                                        constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700PM" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "CardiacValveProsthesisModel2800" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000" ) ) ), ConsesLow.list(
                                                constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000TFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                    makeString( "CardiacValveProsthesisModel9000IDE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelISA" ) ) ),
                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_3300TFX" ) ) )
                        } )
          } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Heterograft" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesis-Biological-Equine" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel9000IDE" ) ) ) ), ConsesLow.list( new SubLObject[]
              { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Biological-Porcine" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "CardiacValveProsthesis-AorticStabilizedGlutaraldehydeProcess" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel250" ) ) ) ), ConsesLow.list(
                      constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-PrimaPlusStentlessAortic" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "CardiacValveProsthesisModel2500P" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel109411-1" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel150" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "CardiacValveProsthesisModel200" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel242" ) ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2625" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "CardiacValveProsthesisModel2650" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel300" ) ) ), ConsesLow.list(
                                              constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel305" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "CardiacValveProsthesisModel310" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel320" ) ) ), ConsesLow.list(
                                                      constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel342A-V" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                          makeString( "CardiacValveProsthesisModel342R" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "CardiacValveProsthesisModel350" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel606306" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel606366" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "CardiacValveProsthesisModel6625" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6625-ESR-LP" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6625LP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "CardiacValveProsthesisModel6650" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel995" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelISU" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "CardiacValveProsthesisModelNumber_995" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelXAGV" ) ) )
          } ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelB10" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesisModelB10SP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_4300" ) ) ), ConsesLow.list( ConsesLow.list(
                  constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles
                      .reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "UnknownManufacturer-BiologicValve" ) ) ) )
          } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-CompositeGraft" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesisModelXAGV" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-ExpandedCuff" ) ), ConsesLow.list( constant_handles
                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAEC-102" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesisModelMEC-102" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-LowProfile" ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelISLM" ) ) ) ), ConsesLow.list( new SubLObject[]
                          { constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Mechanical" ) ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString(
                              "AorticValveMechanicalProsthesis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticSilasticBallValveProsthesis" ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel1260" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "CardiacValveProsthesisModel1200" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2310" ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2320" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "CardiacValveProsthesisModel3160" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel52842006-D" ) ) ), ConsesLow
                                                  .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel52842006-F" ) ) ), ConsesLow.list( constant_handles
                                                      .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel52842050-B" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "CardiacValveProsthesisModelAGFN-756" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "CardiacValveProsthesisModelAGFN-756-IDE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "CardiacValveProsthesisModelNumber_ONXAE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "CardiacValveProsthesisModelONXA" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "CardiacValveProsthesisModelONXAC" ) ) )
          } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Disk" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesisModel606366" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel9120" ) ) ), ConsesLow.list( constant_handles
                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelABP" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel503DA" ) ) ),
                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel52842007-D" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "CardiacValveProsthesisModel6120" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6320" ) ) ), ConsesLow.list( constant_handles
                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel65" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveProsthesisModel70" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel700" ) ) ), ConsesLow.list(
                                            constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel750" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "CardiacValveProsthesisModel825" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel900" ) ) ), ConsesLow.list(
                                                    constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelA-101" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                        makeString( "CardiacValveProsthesisModelAEC-102" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "CardiacValveProsthesisModelAGN-751" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGVC" ) ) ),
                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGVM" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "CardiacValveProsthesisModelAHP-105" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAHPJ-505" ) ) ), ConsesLow.list(
                                    constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAJ-501" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveProsthesisModelAP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAVG-201" ) ) ), ConsesLow.list(
                                            constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAVG-301" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "CardiacValveProsthesisModelAVG-CUS" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelCAVG-404" ) ) ), ConsesLow
                                                    .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelCAVGJ-514" ) ) ), ConsesLow.list( constant_handles
                                                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelF700" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "CardiacValveProsthesisModelHALL" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelM-101" ) ) ),
                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMBP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "CardiacValveProsthesisModelMBRP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMEC-102" ) ) ), ConsesLow.list(
                                    constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMECJ-502" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveProsthesisModelMHP-105" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMJ-501" ) ) ), ConsesLow.list(
                                            constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_106" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "CardiacValveProsthesisModelNumber_503DA" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_AEC-102" ) ) ),
                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_Bjork-Shiley-CC" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                makeString( "CardiacValveProsthesisModelNumber_C7700" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_ONCMC" ) ) ),
                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_ONXA" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                makeString( "CardiacValveProsthesisModelNumber_ONXMC" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelONXM" ) ) ), ConsesLow
                                    .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelR500" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveProsthesisModelS500" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ),
                                            constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ),
                                            constant_handles.reader_make_constant_shell( makeString( "UnknownManufacturer-MechanicalValve" ) ) ) )
          } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-On-X" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesisModelNumber_ONXAE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelONXA" ) ) ), ConsesLow.list( constant_handles
                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelONXAC" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelONXM" ) ) ) ),
          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-OptiformMitralValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesisModelF700" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Perimont" ) ), ConsesLow.list( constant_handles
                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000" ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6900" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesisModel6900P" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_3300TFX" ) ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Stented" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CardiacValveProsthesisModel6650" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-SubAnular" ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMBP" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "CardiacValveProsthesis-SupraAnular" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2650" ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelB10SP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "CardiacValveProsthesisModelMBRP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelS500" ) ) ) ), ConsesLow.list(
                                                  constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-TwoComponent" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "CardiacValveProsthesisModel200" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel300" ) ) ) ),
          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-Universal" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesisModelISU" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_Photofix" ) ) ), ConsesLow.list( new SubLObject[]
              { constant_handles.reader_make_constant_shell( makeString( "MitralValveProsthesis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "CardiacValveProsthesis-ClothCoveredMitral" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6320" ) ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "CardiacValveProsthesis-MitralUpsideDown" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "CardiacValveProsthesisModel2900" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-SilasticMitral" ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6120" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "CardiacValveProsthesis-VascorMitralValveProstheis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel342R" ) ) ) ), ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel109411-1" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "CardiacValveProsthesisModel200" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel305" ) ) ), ConsesLow.list(
                                              constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel310" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "CardiacValveProsthesisModel342A-V" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel606306" ) ) ), ConsesLow
                                                      .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel65" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                          makeString( "CardiacValveProsthesisModel6625" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "CardiacValveProsthesisModel6625-ESR-LP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "CardiacValveProsthesisModel6625LP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "CardiacValveProsthesisModel6650" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "CardiacValveProsthesisModel6900" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "CardiacValveProsthesisModel6900P" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "CardiacValveProsthesisModel6900PTFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "CardiacValveProsthesisModel70" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "CardiacValveProsthesisModel700" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "CardiacValveProsthesisModel7000TFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "CardiacValveProsthesisModel750" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "CardiacValveProsthesisModel825" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "CardiacValveProsthesisModel900" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "CardiacValveProsthesisModel9120" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                  makeString( "CardiacValveProsthesisModelAHPJ-505" ) ) ), ConsesLow.list( constant_handles
                                                                                                                      .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelB100-M" ) ) ), ConsesLow.list(
                                                                                                                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelF700" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelISLM" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "CardiacValveProsthesisModelISU" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelM-101" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMBP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMBRP" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMEC-102" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "CardiacValveProsthesisModelMECJ-502" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMHP-105" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMJ-501" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "CardiacValveProsthesisModelNumber_7000" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_BiocorMitral" ) ) ), ConsesLow.list(
                                constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_Bjork-Shiley-CC" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "CardiacValveProsthesisModelONXM" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelS500" ) ) )
          } ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CollectionUnionFn" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TheSet" ) ),
              constant_handles.reader_make_constant_shell( makeString( "CCFCardiacValveExistingOrExplantProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString(
                  "CCFCardiacValveImplantProsthesis" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CCFCardiacValveExistingOrExplantProsthesis" ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "CCFCardiacValveImplantProsthesis" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString(
                              "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "BaxterHealthcareCorp" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "CardiacValveProsthesisModel2500P" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ),
                                      constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles
                                          .reader_make_constant_shell( makeString( "Beall" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell(
                                                  makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "BeallSurgitool" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                      .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ),
                                                      constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Bjork-shiley" ) ) ), ConsesLow
                                                          .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelABP" ) ) ), ConsesLow.list( constant_handles
                                                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGVC" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "CardiacValveProsthesisModelAGVM" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMBP" ) ) ),
                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMBRP" ) ) ), ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_Bjork-Shiley-CC" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                              makeString( "CardiacValveProsthesisModelXAGV" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles
                                                                      .reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Braunwald-cutter" ) ) ) ),
          ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Carbomedic" ) ) ), ConsesLow.list(
                  constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel700" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesisModelAP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelF700" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelR500" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CardiacValveProsthesisModelS500" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles
                                  .reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles
                                      .reader_make_constant_shell( makeString( "Caster-hall" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell(
                                              makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Cooley-bloodwell-cutter" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ),
                                                  constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Cooley-cutter" ) ) ) ), ConsesLow
                                                      .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell(
                                                          makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell(
                                                              makeString( "Cross-jones" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel65" ) ) ), ConsesLow
                                                                  .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel70" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                      .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                          "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles
                                                                              .reader_make_constant_shell( makeString( "Cutter-TheOrganization" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                      "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles
                                                                                          .reader_make_constant_shell( makeString( "DebakeySurgitool" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                  makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ),
                                                                                              constant_handles.reader_make_constant_shell( makeString( "EdwardsDuromedic" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3160" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel9120" ) ) ) ), ConsesLow.list( new SubLObject[]
                                                                                                      { ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ),
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                  makeString( "EdwardsLifesciences" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                      makeString( "CardiacValveProsthesisModel109411-1" ) ) ), ConsesLow.list( constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2625" ) ) ), ConsesLow.list(
                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "CardiacValveProsthesisModel2650" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2700PM" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2800" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2900" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel3000TFX" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel606306" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel606366" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6625" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                            "CardiacValveProsthesisModel6625-ESR-LP" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                makeString( "CardiacValveProsthesisModel6625LP" ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6650" ) ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6900" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel6900P" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                            "CardiacValveProsthesisModel6900PTFX" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                makeString( "CardiacValveProsthesisModel7000TFX" ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel9000IDE" ) ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                            "CardiacValveProsthesisModelNumber_3300TFX" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_7000" ) ) )
          } ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "FasciaLata" ) ) ) ), ConsesLow.list(
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ),
                      constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Gott-daggett" ) ) ) ), ConsesLow.list( ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ),
                          constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Hancock" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel150" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "CardiacValveProsthesisModel242" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel250" ) ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel342A-V" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "CardiacValveProsthesisModel342R" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ),
                                              constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ),
                                              constant_handles.reader_make_constant_shell( makeString( "Harken" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell(
                                                      makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Homograft" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                              "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell(
                                                                  makeString( "Inescu-shiley" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelISA" ) ) ),
                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelISLM" ) ) ), ConsesLow.list( constant_handles
                                                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelISU" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                      "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell(
                                                                          makeString( "Kay-shiley" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles
                                                                                  .reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Kay-suzuki" ) ) ) ),
          ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Lillihei-kaster" ) ) ) ), ConsesLow.list(
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ),
                      constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Magovern-cromie" ) ) ) ), ConsesLow.list( ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ),
                          constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "MedicalCarbonResearchInstitute" ) ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_ONXAE" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "CardiacValveProsthesisModelONXA" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelONXAC" ) ) ), ConsesLow.list(
                                      constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelONXM" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                          makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles
                                              .reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "MedtronicInc" ) ) ), ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel305" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "CardiacValveProsthesisModel310" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel995" ) ) ), ConsesLow
                                                          .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelHALL" ) ) ), ConsesLow.list( constant_handles
                                                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelNumber_C7700" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                      "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell(
                                                                          makeString( "Omni-science" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles
                                                                                  .reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                      "PulmonaryAutograft" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ),
                                                                                          constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                              "Smeloff-cutter" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "CardiacValveProsthesisModel750" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "CardiacValveProsthesisModel825" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "CardiacValveProsthesisModel900" ) ) ) ), ConsesLow.list( new SubLObject[]
                                                                                                          { ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ),
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                      makeString( "StJudeMedical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                          makeString( "CardiacValveProsthesisModel52842006-D" ) ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel52842006-F" ) ) ),
                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "CardiacValveProsthesisModel52842007-D" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                    makeString( "CardiacValveProsthesisModel52842050-B" ) ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelA-101" ) ) ), ConsesLow.list(
                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "CardiacValveProsthesisModelAEC-102" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGFN-756" ) ) ),
                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "CardiacValveProsthesisModelAGFN-756-IDE" ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAGN-751" ) ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAHP-105" ) ) ),
                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "CardiacValveProsthesisModelAHPJ-505" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                    makeString( "CardiacValveProsthesisModelAJ-501" ) ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAVG-201" ) ) ), ConsesLow.list(
                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "CardiacValveProsthesisModelAVG-301" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelAVG-CUS" ) ) ),
                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModelB10" ) ) ),
                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "CardiacValveProsthesisModelB100-M" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                    makeString( "CardiacValveProsthesisModelB10SP" ) ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelCAVG-404" ) ) ), ConsesLow
                                                                                                                            .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "CardiacValveProsthesisModelCAVGJ-514" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelM-101" ) ) ),
                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "CardiacValveProsthesisModelMEC-102" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                    makeString( "CardiacValveProsthesisModelMECJ-502" ) ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelMHP-105" ) ) ), ConsesLow.list(
                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "CardiacValveProsthesisModelMJ-501" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "CardiacValveProsthesisModelTF-IDE" ) ) )
          } ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
              "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString( "Starr-edwards" ) ) ), ConsesLow.list(
                  constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel1200" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveProsthesisModel1260" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2310" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "CardiacValveProsthesisModel2320" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CardiacValveProsthesisModel6320" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles
                                  .reader_make_constant_shell( makeString( "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles
                                      .reader_make_constant_shell( makeString( "Tascon" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel200" ) ) ), ConsesLow
                                          .list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel300" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "CardiacValveProsthesisModel320" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel350" ) ) ) ), ConsesLow.list(
                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                      "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                          "Therapeutic" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesis-3FAorticBioprosthesis" ) ), ConsesLow.list(
                                                              constant_handles.reader_make_constant_shell( makeString( "CardiacValveProsthesisModel1000" ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                      "CardiacValveProsthesis" ) ), constant_handles.reader_make_constant_shell( makeString( "cCFMadeBy" ) ), constant_handles.reader_make_constant_shell(
                                                                          makeString( "Wada-cutter" ) ) ) )
    } ) ) ) ) ), ConsesLow.list( ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "hasDiagnosis" ) ), makeSymbol( "?DIAG" ), constant_handles.reader_make_constant_shell(
        makeString( "HeartRhythm" ) ) ), constant_handles.reader_make_constant_shell( makeString( "MedicalResearchCAEGuidanceMt" ) ), constant_handles.reader_make_constant_shell( makeString(
            "CCFMedicalResearch-Allotment" ) ) ), ConsesLow.list( ConsesLow.list( ConsesLow.list( TWO_INTEGER ), ConsesLow.list( new SubLObject[]
            { ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AbnormalAorticConduit" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                "AortaArch-AbnormalConduit" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AscendingAorta-AbnormalConduit" ) ) ), ConsesLow.list( constant_handles
                    .reader_make_constant_shell( makeString( "DescendingAorta-AbnormalConduit" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "DescendingThoracicAorta-AbnormalConduit" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AbnormalNumberOfCusps" ) ), ConsesLow.list( constant_handles
                            .reader_make_constant_shell( makeString( "AbnormalNumberOfCusps-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "AbnormalNumberOfCusps-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AbnormalNumberOfCusps-PulmonaryValve" ) ) ), ConsesLow.list(
                                    constant_handles.reader_make_constant_shell( makeString( "AbnormalNumberOfCusps-TricuspidValve" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "Abscess" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Abscess-AorticRoot" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                            makeString( "Aneurysmal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaArch-NormalConduit" ) ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "AortaAscendingRupture" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "AortaDescendingRupture" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticArchAbnormalities" ) ) ), ConsesLow.list(
                                                        constant_handles.reader_make_constant_shell( makeString( "AorticArchRupture" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "Arteriosclerosis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Atherosclerosis" ) ), ConsesLow.list( constant_handles
                                                                .reader_make_constant_shell( makeString( "Atherosclerosis-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "Atherosclerosis-Aorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Atherosclerosis-AortaArch" ) ) ), ConsesLow
                                                                        .list( constant_handles.reader_make_constant_shell( makeString( "Atherosclerosis-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                            .reader_make_constant_shell( makeString( "Atherosclerosis-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                makeString( "Atherosclerosis-DescendingThoracicAorta" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "AtheromaOrAtherosclerosis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Atherosclerosis" ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Atherosclerosis-AbdominalAorta" ) ) ), ConsesLow.list(
                                                                                            constant_handles.reader_make_constant_shell( makeString( "Atherosclerosis-Aorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "Atherosclerosis-AortaArch" ) ) ), ConsesLow.list( constant_handles
                                                                                                    .reader_make_constant_shell( makeString( "Atherosclerosis-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString( "Atherosclerosis-DescendingAorta" ) ), ConsesLow.list( constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "Atherosclerosis-DescendingThoracicAorta" ) ) ) ) ) ), ConsesLow.list(
                                                                                                                constant_handles.reader_make_constant_shell( makeString( "Atresia" ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "AorticArchAtresia" ) ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "Atresia-AorticValve" ) ) ), ConsesLow.list(
                                                                                                                            constant_handles.reader_make_constant_shell( makeString( "Atresia-MitralValve" ) ) ), ConsesLow
                                                                                                                                .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "Atresia-PulmonaryValve" ) ), ConsesLow.list( constant_handles
                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                            "AtresiaWithIntactSeptum-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                    "AtresiaWithVentricularSeptalDefect-PulmonaryValve" ) ) ) ), ConsesLow
                                                                                                                                                        .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "Atresia-TricuspidValve" ) ) ) ), ConsesLow.list(
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "AtrialDisorder" ) ), ConsesLow.list( constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "AtrialArrhythmia" ) ), ConsesLow.list(
                                                                                                                                                                                constant_handles.reader_make_constant_shell(
                                                                                                                                                                                    makeString(
                                                                                                                                                                                        "AtrialFibrillationOrFlutter" ) ),
                                                                                                                                                                                ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "AtrialFibrillation" ) ) ),
                                                                                                                                                                                ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "AtrialFibrillationOrFlutterRequiringTreatment" ) ) ),
                                                                                                                                                                                ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "AtrialFlutter" ) ), ConsesLow.list(
                                                                                                                                                                                            constant_handles
                                                                                                                                                                                                .reader_make_constant_shell(
                                                                                                                                                                                                    makeString(
                                                                                                                                                                                                        "AtrialFlutter-Paroxysmal" ) ) ) ) ),
                                                                                                                                                                        ConsesLow.list( constant_handles
                                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                                "AtrialTachycardia" ) ) ), ConsesLow.list(
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "CardiacFlutter" ) ),
                                                                                                                                                                                    ConsesLow.list( constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "AtrialFlutter" ) ),
                                                                                                                                                                                        ConsesLow.list( constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "AtrialFlutter-Paroxysmal" ) ) ) ) ),
                                                                                                                                                                        ConsesLow.list( constant_handles
                                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                                "EctopicHeartbeat" ) ) ), ConsesLow.list(
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "PrematureAtrialComplex" ) ) ),
                                                                                                                                                                        ConsesLow.list( constant_handles
                                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                                "PrematureEctopicBeats" ) ) ), ConsesLow
                                                                                                                                                                                    .list( constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "WanderingPacemaker" ) ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "AtrialSeptalDefectPrimum" ) ) ), ConsesLow
                                                                                                                                                                        .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                            makeString( "AtrialSeptalDefectSecundum" ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "AtriallyPacedHeartRhythm" ) ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialVentricularFistulaToRightVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "BallooningOrProlapsedCardiacValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "BallooningOrProlapsedCardiacValve-MitralValve" ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "BallooningOrProlapsedCardiacValve-TricuspidValve" ) ) ) ), ConsesLow.list( new SubLObject[]
                      { constant_handles.reader_make_constant_shell( makeString( "Calcification" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnnularCalcification" ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "AnnularCalcification-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "AnnularCalcification-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnnularCalcification-PulmonaryValve" ) ) ), ConsesLow.list(
                                  constant_handles.reader_make_constant_shell( makeString( "AnnularCalcification-TricuspidValve" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "Calcification-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Calcification-Aorta" ) ) ), ConsesLow.list( constant_handles
                                          .reader_make_constant_shell( makeString( "Calcification-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "Calcification-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Calcification-AorticValve" ) ) ), ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "Calcification-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "Calcification-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Calcification-PulmonaryValve" ) ) ), ConsesLow.list(
                                                          constant_handles.reader_make_constant_shell( makeString( "Calcification-ThoracicAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                              makeString( "Calcification-TricuspidValve" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicCondition" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Arthritis" ) ), ConsesLow
                  .list( constant_handles.reader_make_constant_shell( makeString( "RheumatoidArthritis" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicArrhythmia" ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicLungDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "ChronicLungDisease-Mild" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicLungDisease-Moderate" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "ChronicLungDisease-Severe" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicObstructivePulmonaryDisease" ) ),
                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicObstructivePulmonaryDisease-Clinical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                  makeString( "ChronicObstructivePulmonaryDisease-Pharmacologic" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DiabetesMellitus" ) ) ), ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "GeneticCondition" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "GeneticDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LoeysDietzSyndrome" ) ) ), ConsesLow.list( constant_handles
                                              .reader_make_constant_shell( makeString( "MarfansSyndrome" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Hypertension" ) ), ConsesLow
                                                  .list( constant_handles.reader_make_constant_shell( makeString( "Hypertension-Systemic" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "Lupus" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Coarctation" ) ), ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "AorticCoarctation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "AbdominalAortaCoarctation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaArchCoarctation" ) ) ), ConsesLow.list(
                                                                  constant_handles.reader_make_constant_shell( makeString( "DescendingAortaCoarctation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                      makeString( "DescendingThoracicAortaCoarctation" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "CongenitalCondition" ) ), ConsesLow.list( new SubLObject[]
                                                                          { constant_handles.reader_make_constant_shell( makeString( "CongenitalHeartDisease" ) ), ConsesLow.list( constant_handles
                                                                              .reader_make_constant_shell( makeString( "AbsentPulmonaryArtery" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                  makeString( "Aneurysm-diverticulum-MembranousSeptum-SpontaneousClosureOfIVSD" ) ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "AneurysmSinusValsalva" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                          makeString( "AnomalousPulmonaryVenousReturn-Partial" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                              makeString( "AnomalousPulmonaryVenousReturn-Total" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                  makeString( "AnomalyOfSystemicDrainage-PersistentLeftSVC" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "Aorta-rightVentricleCommunication" ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "AortopulmonaryWindow" ) ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "AspleniaSyndrome" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "Atrial-ventricularCanalDefectComplete" ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "AtrialSeptalAnyeurysm-Congenital" ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialSeptalDefectPrimum" ) ) ), ConsesLow.list( constant_handles
                                                                                .reader_make_constant_shell( makeString( "AtrialSeptalDefectSecundum" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                    makeString( "AtrialVentricularFistula" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "AtrialVentricularFistulaToLeftAtrium" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "AtrialVentricularFistulaToLeftVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                "AtrialVentricularFistulaToPulmonaryArtery" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                    "AtrialVentricularFistulaToRightAtrium" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                        "AtrialVentricularFistulaToUndeterminedLocation" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "AtrioventricularMalformations" ) ) ), ConsesLow.list( constant_handles
                                                                                                                .reader_make_constant_shell( makeString( "CommonVentricleTypeAOrTypeC" ) ) ), ConsesLow.list(
                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "CongenitalCoronaryArteryAnomalyOtherOrMultipleCongenitalAnomalies" ) ) ), ConsesLow.list(
                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "CongenitalDoubleOrificeLeftSinus" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "CongenitalDoubleOrificeRightSinus" ) ) ),
                                                                            ConsesLow.list( new SubLObject[]
                                                                            { constant_handles.reader_make_constant_shell( makeString( "CoronaryAnomaly" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                makeString( "CoronaryAnomalyFistulaEctopicOrigin" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "CoronaryArteryAnomaly-CircumflexFromLeftAndRight" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "CoronaryArteryAnomaly-CircumflexFromRight" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "CoronaryArteryAnomaly-LeftAnteriorDescendingAndCircumflexWithCommonOstium" ) ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "CoronaryArteryAnomaly-LeftAnteriorDescendingFromRight" ) ) ), ConsesLow.list(
                                                                                                    constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryAnomaly-LeftCircumflexArteryAbsent" ) ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryAnomaly-LeftCoronaryArteryFromRight" ) ) ), ConsesLow
                                                                                  .list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryAnomaly-LeftFromPulmonaryArtery" ) ) ), ConsesLow.list(
                                                                                      constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryAnomaly-LeftMainTrunkAbsent" ) ) ), ConsesLow.list(
                                                                                          constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryAnomaly-RightFromLeft" ) ) )
                                                                            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Criss-crossHeart" ) ) ), ConsesLow.list( constant_handles
                                                                                .reader_make_constant_shell( makeString( "Dextroversion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "DoubleChamberedRightVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "DoubleOutletLeftVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "DoubleOutletRightVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                "DoubleRightVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                    "EbsteinAnomaly" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                        "EndocardialFibroelastosis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                            "HypertrophicObstructiveCardiomyopathy-Congenital" ) ) ), ConsesLow.list( constant_handles
                                                                                                                .reader_make_constant_shell( makeString( "HypoplasticLeftHeartSyndrome" ) ) ), ConsesLow.list(
                                                                                                                    constant_handles.reader_make_constant_shell( makeString( "HypoplasticRightHeartSyndrome" ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "IsolatedDextrocardia" ) ) ), ConsesLow.list( constant_handles
                                                                                .reader_make_constant_shell( makeString( "IsolatedLevocardiaNoSitusInversus" ) ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "MalpositionOfGreatVessels" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                        makeString( "MalpositionOfTheHeart" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Mapca" ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MultipleVentricularSeptalDefect" ) ) ), ConsesLow.list(
                                                                                constant_handles.reader_make_constant_shell( makeString( "PatentDuctusArteriosus" ) ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "PatentForamenOvale" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                        makeString( "PolyspleniaSyndrome" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "PulmonaryArteryStenosis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                "PulmonaryAtrial-ventricularFistulaPulmonaryArtery-PulmonaryVein" ) ) ), ConsesLow.list( constant_handles
                                                                                                    .reader_make_constant_shell( makeString( "SeptalDefect-CommonAtrium" ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString( "SimpleDextrocardiaWithSitusInversus" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString( "SinusVenosusAtrialSeptalDefect" ) ) ), ConsesLow.list(
                                                                                                                constant_handles.reader_make_constant_shell( makeString( "StorageDiseaseOfTheHeart" ) ) ), ConsesLow.list(
                                                                                                                    constant_handles.reader_make_constant_shell( makeString( "SystemicVenousObstruction" ) ) ), ConsesLow
                                                                                                                        .list( constant_handles.reader_make_constant_shell( makeString( "TetralogyOfFallot" ) ) ), ConsesLow
                                                                                                                            .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "TetralogyOfFallotWithAbsentPulmonaryValve" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                        "TranspositionGreatVessels-Dextro-transpositionOrLevo-transposition" ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TranspositionGreatVesselsCorrected" ) ) ), ConsesLow.list(
                                                                                constant_handles.reader_make_constant_shell( makeString( "TruncusArteriosus" ) ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "VascularRing" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "VentricularInversion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "VentricularSeptalDefect" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                "VentricularSeptalDefect-Atrial-ventricularCanalType" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                    makeString( "VentricularSeptalDefect-Membranous" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                        makeString( "VentricularSeptalDefect-Muscular" ) ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "FistulaCondition-CoronaryArteriovenous" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "FistulaCondition-CoronaryArteriovenousToRightVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "GeneticCondition" ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "GeneticDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LoeysDietzSyndrome" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "MarfansSyndrome" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CongenitalLeftCoronaryArteryFromRight" ) ) ),
              ConsesLow.list( new SubLObject[]
              { constant_handles.reader_make_constant_shell( makeString( "ConnectiveTissueDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Arthritis" ) ), ConsesLow.list(
                  constant_handles.reader_make_constant_shell( makeString( "RheumatoidArthritis" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "BeurgersDisease" ) ) ), ConsesLow.list(
                      constant_handles.reader_make_constant_shell( makeString( "EhlersDanlosSyndrome" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "GiantCellAortitis" ) ) ), ConsesLow
                          .list( constant_handles.reader_make_constant_shell( makeString( "KawasakiDisease" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Lupus" ) ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "PolymyalgiaRheumatica" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RaynaudsDisease" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SjogrensSyndrome" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VasculiticSyndrome" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "WegenersGranulomatosis" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "CoronaryArteryAneurysm" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryDisease-Ischemic" ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "OtherCoronaryArteryAbnormality" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CysticMedialNecrosis" ) ), ConsesLow
                          .list( constant_handles.reader_make_constant_shell( makeString( "CysticMedialNecrisis-Aorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CysticMedialNecrosis-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CysticMedialNecrosis-AortaArch" ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "CysticMedialNecrosis-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "CysticMedialNecrosis-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CysticMedialNecrosis-DescendingThoracicAorta" ) ) ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DigestiveDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DigestiveHepaticFailure" ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HiatalHernia" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RefluxDisease" ) ) ) ), ConsesLow
                      .list( constant_handles.reader_make_constant_shell( makeString( "Dilatation-PhysiologicalCondition" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "Dilatation-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Dilatation-AortaArch" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "Dilatation-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Dilatation-AscendingAorta" ) ) ), ConsesLow
                                  .list( constant_handles.reader_make_constant_shell( makeString( "Dilatation-AscendingAortaRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "Dilatation-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Dilatation-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list(
                                          new SubLObject[]
                                          { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "Aorta-rightVentricleCommunication" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaAneurysmOrDissection" ) ), ConsesLow.list(
                                                  constant_handles.reader_make_constant_shell( makeString( "AortaDissection" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "AcuteAorticDissection" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-AbdominalAorta-Intraoperative" ) ) ), ConsesLow
                                                          .list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-AortaArch" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                              makeString( "AcuteIntraoperativeDissection-AortaArch" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "AcuteDissection-AorticRoot-Intraoperative" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "AcuteDissection-AscendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "AcuteIntraoperativeDissection-AscendingAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "AcuteDissection-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "AcuteDissection-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "ChronicAortaDissection" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "ChronicDissection-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "ChronicDissection-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "ChronicDissection-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "ChronicDissection-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "ChronicDissection-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "ChronicDissection-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "Dissection-AortaArch" ) ), ConsesLow.list( constant_handles
                                                                                                                      .reader_make_constant_shell( makeString( "AcuteDissection-AortaArch" ) ), ConsesLow.list(
                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "AcuteIntraoperativeDissection-AortaArch" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                  .reader_make_constant_shell( makeString( "ChronicDissection-AortaArch" ) ) ) ), ConsesLow
                                                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                          "Dissection-AorticRoot" ) ), ConsesLow.list( constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString( "AcuteDissection-AorticRoot" ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "AcuteDissection-AorticRoot-Intraoperative" ) ) ) ) ), ConsesLow.list(
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "Dissection-AscendingAorta" ) ), ConsesLow.list( constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                  "AcuteDissection-AscendingAorta" ) ), ConsesLow.list(
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "AcuteIntraoperativeDissection-AscendingAorta" ) ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "ChronicDissection-AscendingAorta" ) ) ) ), ConsesLow
                                                                                                                                                              .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString( "Dissection-DescendingAorta" ) ), ConsesLow
                                                                                                                                                                      .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "AcuteIntraoperativeDissection-DescendingAorta" ) ),
                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "AcuteIntraoperativeDissection-DescendingThoracicAorta" ) ) ) ),
                                                                                                                                                                  ConsesLow.list( constant_handles
                                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                                          "Dissection-DescendingThoracicAorta" ) ),
                                                                                                                                                                      ConsesLow.list( constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "AcuteDissection-DescendingThoracicAorta" ) ) ) ) ) ),
                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticAneurysm" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "AortaUnspecifiedAneurysm" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaFistula" ) ), ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "FistulaCondition-DescendingAorta-Bronchial" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                              makeString( "FistulaCondition-DescendingThoracicAorta-Bronchial" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "FistulaCondition-DescendingAorta-Esophageal" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "FistulaCondition-DescendingThoracicAorta-Esophageal" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "FistulaCondition-ThoracicAorta-Bronchial" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "FistulaCondition-ThoracicAorta-Esophageal" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "AorticCoarctation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AbdominalAortaCoarctation" ) ) ),
                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaArchCoarctation" ) ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "DescendingAortaCoarctation" ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "DescendingThoracicAortaCoarctation" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "Aortitis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                  makeString( "AbdominalAortaAortitis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "AortaArchAortitis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "AscendingAortaAortitis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "DescendingAortaAortitis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "DescendingThoracicAortaAortitis" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                      makeString( "Atherosclerosis-Aorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "Calcification-Aorta" ) ) ), ConsesLow.list(
                                                                                                                              constant_handles.reader_make_constant_shell( makeString( "CysticMedialNecrisis-Aorta" ) ) ),
                                            ConsesLow.list( new SubLObject[]
                                            { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheAbdominalAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "AbdominalAortaAortitis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AbdominalAortaCoarctation" ) ) ), ConsesLow.list( constant_handles
                                                    .reader_make_constant_shell( makeString( "AcuteDissection-AbdominalAorta-Intraoperative" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "Aneurysm-AbdominalAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SaccularAneurysm-AbdominalAorta" ) ) ) ), ConsesLow.list(
                                                            constant_handles.reader_make_constant_shell( makeString( "Atherosclerosis-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                makeString( "Calcification-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "ChronicDissection-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "CysticMedialNecrosis-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "Dilatation-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "DissectingAneurysm-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "Fibrosis-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "Pseudoaneurysm-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "Thrombosis-AbdominalAorta" ) ) )
                                            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheAorta-NonAneurysmal" ) ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "DiseaseOfTheAorta-Normal" ) ) ), ConsesLow.list( new SubLObject[]
                                                { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheAorticArch" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "AortaArch-AbnormalConduit" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaArchAortitis" ) ) ), ConsesLow.list( constant_handles
                                                        .reader_make_constant_shell( makeString( "AortaArchCoarctation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "AorticArchAneurysmOrDissection" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aneurysm-AortaArch" ) ), ConsesLow.list(
                                                                constant_handles.reader_make_constant_shell( makeString( "DissectingAneurysm-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                    makeString( "SaccularAneurysm-AortaArch" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticArchAtresia" ) ) ),
                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Atherosclerosis-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "Calcification-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CysticMedialNecrosis-AortaArch" ) ) ),
                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Dilatation-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "Dissection-AortaArch" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-AortaArch" ) ), ConsesLow.list(
                                                          constant_handles.reader_make_constant_shell( makeString( "AcuteIntraoperativeDissection-AortaArch" ) ) ) ), ConsesLow.list( constant_handles
                                                              .reader_make_constant_shell( makeString( "ChronicDissection-AortaArch" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "Fibrosis-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "InfectionOrMycotic-AortaArch" ) ) ), ConsesLow.list(
                                                                      constant_handles.reader_make_constant_shell( makeString( "IntramuralHematoma-AortaArch" ) ) ), ConsesLow.list( constant_handles
                                                                          .reader_make_constant_shell( makeString( "PenetratingUlcer-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                              makeString( "Pseudoaneurysm-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "Trauma-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Trombosis-AortaArch" ) ) )
                                            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheAorticRoot" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                makeString( "Abscess-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aneurysm-AorticRoot" ) ), ConsesLow.list( constant_handles
                                                    .reader_make_constant_shell( makeString( "DissectingAneurysm-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "SaccularAneurysm-AorticRoot" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Calcification-AorticRoot" ) ) ), ConsesLow.list(
                                                            constant_handles.reader_make_constant_shell( makeString( "ChronicDissection-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                makeString( "Dilatation-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Dissection-AorticRoot" ) ), ConsesLow
                                                                    .list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-AorticRoot" ) ), ConsesLow.list( constant_handles
                                                                        .reader_make_constant_shell( makeString( "AcuteDissection-AorticRoot-Intraoperative" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                            .reader_make_constant_shell( makeString( "Fibrosis-AorticRoot" ) ) ) ), ConsesLow.list( new SubLObject[]
                                                                            { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheAscendingAorta" ) ), ConsesLow.list( constant_handles
                                                                                .reader_make_constant_shell( makeString( "AscendingAorta-AbnormalConduit" ) ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "AscendingAorta-NormalConduit" ) ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "AscendingAortaAneurysmOrDissection" ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "Aneurysm-AscendingAorta" ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "DissectingAneurysm-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                    .reader_make_constant_shell( makeString( "SaccularAneurysm-AscendingAorta" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString( "AscendingAortaAortitis" ) ) ), ConsesLow.list( constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "Atherosclerosis-AscendingAorta" ) ) ), ConsesLow.list(
                                                                                                                constant_handles.reader_make_constant_shell( makeString( "Calcification-AscendingAorta" ) ) ), ConsesLow
                                                                                                                    .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "CysticMedialNecrosis-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                                            .reader_make_constant_shell( makeString( "Dilatation-AscendingAorta" ) ) ), ConsesLow.list(
                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "Dilatation-AscendingAortaRoot" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                        .reader_make_constant_shell( makeString( "DiseaseOfTheAscendingAorta-Other" ) ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Dissection-AscendingAorta" ) ), ConsesLow.list( constant_handles
                                                                                  .reader_make_constant_shell( makeString( "AcuteDissection-AscendingAorta" ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "AcuteIntraoperativeDissection-AscendingAorta" ) ) ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "ChronicDissection-AscendingAorta" ) ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "Fibrosis-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "InfectionOrMycotic-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "IntramuralHematoma-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "LeakInEndograftStent-AscendingAorta" ) ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "PenetratingUlcer-AscendingAorta" ) ) ), ConsesLow
                                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString( "Pseudoaneurysm-AscendingAorta" ) ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Thrombosis-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                  .reader_make_constant_shell( makeString( "Trauma-AscendingAorta" ) ) )
                                            } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheDescendingAorta" ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "AcuteDissection-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "AcuteDissection-DescendingThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aneurysm-DescendingAorta" ) ), ConsesLow
                                                        .list( constant_handles.reader_make_constant_shell( makeString( "Aneurysm-DescendingThoracicAorta" ) ) ), ConsesLow.list( constant_handles
                                                            .reader_make_constant_shell( makeString( "DissectingAneurysm-DescendingThoracicAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                makeString( "SaccularAneurysm-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "SaccularAneurysm-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "Atherosclerosis-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "Atherosclerosis-DescendingThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "ChronicDissection-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "ChronicDissection-DescendingThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "CysticMedialNecrosis-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "CysticMedialNecrosis-DescendingThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                "DescendingAorta-AbnormalConduit" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                    "DescendingThoracicAorta-AbnormalConduit" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                        makeString( "DescendingAorta-NormalConduit" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                            makeString( "DescendingThoracicAorta-NormalConduit" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                .reader_make_constant_shell( makeString( "DescendingAortaAortitis" ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "DescendingThoracicAortaAortitis" ) ) ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString( "DescendingAortaCoarctation" ) ), ConsesLow
                                                                                                                            .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "DescendingThoracicAortaCoarctation" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "DescendingAortaThrombosis" ) ), ConsesLow
                                                                                                                                        .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                            "DescendingThoracicAortaThrombosis" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString( "Dilatation-DescendingAorta" ) ),
                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                    "Dilatation-DescendingThoracicAorta" ) ) ) ), ConsesLow.list(
                                                                                                                                                        new SubLObject[]
                                                                                                                                                        { constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "DiseaseOfTheDescendingThoracicAorta" ) ), ConsesLow.list(
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "AcuteIntraoperativeDissection-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "Aneurysm-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "Atherosclerosis-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "ChronicDissection-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString(
                                                                                                                                                                  "CysticMedialNecrosis-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "DescendingThoracicAorta-AbnormalConduit" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "DescendingThoracicAorta-NormalConduit" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "DescendingThoracicAortaAortitis" ) ) ), ConsesLow
                                                                                                                                                                  .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                      makeString(
                                                                                                                                                                          "DescendingThoracicAortaCoarctation" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "DescendingThoracicAortaThrombosis" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "Dilatation-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString(
                                                                                                                                                                  "DissectingAneurysm-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "Dissection-DescendingThoracicAorta" ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "AcuteDissection-DescendingThoracicAorta" ) ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString(
                                                                                                                                                                  "FistulaCondition-DescendingThoracicAorta-Bronchial" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString(
                                                                                                                                                                  "FistulaCondition-DescendingThoracicAorta-Esophageal" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString(
                                                                                                                                                                  "InfectionOrMycotic-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString(
                                                                                                                                                                  "IntramuralHematoma-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "PenetratingUlcer-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "Pseudoaneurysm-ThoracicAorta" ) ) ), ConsesLow
                                                                                                                                                                  .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                      makeString(
                                                                                                                                                                          "SaccularAneurysm-DescendingThoracicAorta" ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "Trauma-DescendingThoracicAorta" ) ) )
                                                                                                                                                        } ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                            makeString( "Dissection-DescendingAorta" ) ), ConsesLow.list(
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "AcuteIntraoperativeDissection-DescendingAorta" ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString(
                                                                                                                                                                        "AcuteIntraoperativeDissection-DescendingThoracicAorta" ) ) ) ),
                                                                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                makeString( "Dissection-DescendingThoracicAorta" ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString(
                                                                                                                                                                        "AcuteDissection-DescendingThoracicAorta" ) ) ) ) ),
                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "FistulaCondition-DescendingAorta-Bronchial" ) ), ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "FistulaCondition-DescendingThoracicAorta-Bronchial" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "FistulaCondition-DescendingAorta-Esophageal" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "FistulaCondition-DescendingThoracicAorta-Esophageal" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "InfectionOrMycotic-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "InfectionOrMycotic-DescendingThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "IntramuralHematoma-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "IntramuralHematoma-DescendingThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "PenetratingUlcer-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "PenetratingUlcer-DescendingThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "Trauma-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "Trauma-DescendingThoracicAorta" ) ) ) )
                                            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheThoracicAbdominalAorta" ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "Aneurysm-ThoracicAbdominalAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "DiseaseOfTheThoracicAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aneurysm-ThoracicAorta" ) ), ConsesLow.list( constant_handles
                                                        .reader_make_constant_shell( makeString( "DissectingAneurysm-ThoracicAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "DissectingAneurysm-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "Calcification-ThoracicAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "DiseaseOfTheThoracicAorta-NonAneurysmal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "Fibrosis-ThoracicAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "FistulaCondition-ThoracicAorta-Bronchial" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "FistulaCondition-ThoracicAorta-Esophageal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "Pseudoaneurysm-ThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Fibrosis-Aorta" ) ) ),
                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Thrombosis-Aorta" ) ) )
                                          } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "EndocrineDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "DiabetesMellitus" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HashimotosThyroiditis" ) ) ), ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "Hyperthyroidism" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Hypothyroidism" ) ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Enlarged-HeartChamberCondition" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "Fibrosis-thickening" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Fibrosis-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                      makeString( "Fibrosis-Aorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Fibrosis-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                          makeString( "Fibrosis-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Fibrosis-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "Fibrosis-CardiacValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Fibrosis-AorticValve" ) ) ), ConsesLow.list(
                                  constant_handles.reader_make_constant_shell( makeString( "Fibrosis-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "Fibrosis-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Fibrosis-TricuspidValve" ) ) ) ), ConsesLow.list( constant_handles
                                          .reader_make_constant_shell( makeString( "Fibrosis-ThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "FistulaCondition" ) ),
                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaFistula" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "FistulaCondition-DescendingAorta-Bronchial" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "FistulaCondition-DescendingThoracicAorta-Bronchial" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "FistulaCondition-DescendingAorta-Esophageal" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "FistulaCondition-DescendingThoracicAorta-Esophageal" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "FistulaCondition-ThoracicAorta-Bronchial" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "FistulaCondition-ThoracicAorta-Esophageal" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "AtrialVentricularFistula" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "AtrialVentricularFistulaToLeftAtrium" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "AtrialVentricularFistulaToLeftVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "AtrialVentricularFistulaToPulmonaryArtery" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "AtrialVentricularFistulaToRightAtrium" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "AtrialVentricularFistulaToUndeterminedLocation" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                  makeString( "FistulaCondition-CoronaryArteriovenous" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                      makeString( "FistulaCondition-CoronaryArteriovenousToRightVentricle" ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                              "PulmonaryAtrial-ventricularFistulaPulmonaryArtery-PulmonaryVein" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "Giant-HeartChamberCondition" ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "HeartChamberCondition_small" ) ) ),
              ConsesLow.list( new SubLObject[]
              { constant_handles.reader_make_constant_shell( makeString( "HeartCondition" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcquiredHeartDisease" ) ), ConsesLow.list(
                  constant_handles.reader_make_constant_shell( makeString( "AcquiredValvularHeartDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "AcquiredNonRheumaticValvularHeartDisease" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Endocarditis-Generic" ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "Endocarditis-Morbidity" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Endocarditis-CardiacValve" ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "Endocarditis-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "Endocarditis-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Endocarditis-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "Endocarditis-TricuspidValve" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "Regurgitation-MitralValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MitralValveRegurgitationFromPapillaryMuscleDysfunction" ) ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RheumaticHeartDisease" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacArrest" ) ) ), ConsesLow.list( new SubLObject[]
                      { constant_handles.reader_make_constant_shell( makeString( "CongenitalHeartDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AbsentPulmonaryArtery" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aneurysm-diverticulum-MembranousSeptum-SpontaneousClosureOfIVSD" ) ) ), ConsesLow.list( constant_handles
                            .reader_make_constant_shell( makeString( "AneurysmSinusValsalva" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnomalousPulmonaryVenousReturn-Partial" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnomalousPulmonaryVenousReturn-Total" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "AnomalyOfSystemicDrainage-PersistentLeftSVC" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aorta-rightVentricleCommunication" ) ) ), ConsesLow.list(
                                constant_handles.reader_make_constant_shell( makeString( "AortopulmonaryWindow" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AspleniaSyndrome" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Atrial-ventricularCanalDefectComplete" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "AtrialSeptalAnyeurysm-Congenital" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialSeptalDefectPrimum" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "AtrialSeptalDefectSecundum" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialVentricularFistula" ) ),
                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialVentricularFistulaToLeftAtrium" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                        makeString( "AtrialVentricularFistulaToLeftVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "AtrialVentricularFistulaToPulmonaryArtery" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialVentricularFistulaToRightAtrium" ) ) ),
                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialVentricularFistulaToUndeterminedLocation" ) ) ) ), ConsesLow.list( constant_handles
                                        .reader_make_constant_shell( makeString( "AtrioventricularMalformations" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "CommonVentricleTypeAOrTypeC" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "CongenitalCoronaryArteryAnomalyOtherOrMultipleCongenitalAnomalies" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "CongenitalDoubleOrificeLeftSinus" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CongenitalDoubleOrificeRightSinus" ) ) ), ConsesLow
                                                        .list( new SubLObject[]
                                                        { constant_handles.reader_make_constant_shell( makeString( "CoronaryAnomaly" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "CoronaryAnomalyFistulaEctopicOrigin" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "CoronaryArteryAnomaly-CircumflexFromLeftAndRight" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "CoronaryArteryAnomaly-CircumflexFromRight" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "CoronaryArteryAnomaly-LeftAnteriorDescendingAndCircumflexWithCommonOstium" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                            makeString( "CoronaryArteryAnomaly-LeftAnteriorDescendingFromRight" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                makeString( "CoronaryArteryAnomaly-LeftCircumflexArteryAbsent" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                    makeString( "CoronaryArteryAnomaly-LeftCoronaryArteryFromRight" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                        makeString( "CoronaryArteryAnomaly-LeftFromPulmonaryArtery" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                            makeString( "CoronaryArteryAnomaly-LeftMainTrunkAbsent" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                makeString( "CoronaryArteryAnomaly-RightFromLeft" ) ) )
                        } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Criss-crossHeart" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "Dextroversion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DoubleChamberedRightVentricle" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "DoubleOutletLeftVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DoubleOutletRightVentricle" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DoubleRightVentricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "EbsteinAnomaly" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "EndocardialFibroelastosis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                makeString( "HypertrophicObstructiveCardiomyopathy-Congenital" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HypoplasticLeftHeartSyndrome" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HypoplasticRightHeartSyndrome" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "IsolatedDextrocardia" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "IsolatedLevocardiaNoSitusInversus" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "MalpositionOfGreatVessels" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MalpositionOfTheHeart" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Mapca" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "MultipleVentricularSeptalDefect" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PatentDuctusArteriosus" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "PatentForamenOvale" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PolyspleniaSyndrome" ) ) ), ConsesLow.list(
                                    constant_handles.reader_make_constant_shell( makeString( "PulmonaryArteryStenosis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "PulmonaryAtrial-ventricularFistulaPulmonaryArtery-PulmonaryVein" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SeptalDefect-CommonAtrium" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SimpleDextrocardiaWithSitusInversus" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "SinusVenosusAtrialSeptalDefect" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "StorageDiseaseOfTheHeart" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "SystemicVenousObstruction" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TetralogyOfFallot" ) ) ), ConsesLow
                                    .list( constant_handles.reader_make_constant_shell( makeString( "TetralogyOfFallotWithAbsentPulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                        makeString( "TranspositionGreatVessels-Dextro-transpositionOrLevo-transposition" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "TranspositionGreatVesselsCorrected" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TruncusArteriosus" ) ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "VascularRing" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularInversion" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularSeptalDefect" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "VentricularSeptalDefect-Atrial-ventricularCanalType" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularSeptalDefect-Membranous" ) ) ), ConsesLow
                                .list( constant_handles.reader_make_constant_shell( makeString( "VentricularSeptalDefect-Muscular" ) ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "CoronaryAbnormality" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "CoronaryArteryAneurysm" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryDilation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                      makeString( "CoronaryArteryEmbolus" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryThrombosis" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "Dissection-CoronaryArtery" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-CoronaryArtery" ) ), ConsesLow
                              .list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-CoronaryArtery-Intraoperative" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                  makeString( "ChronicDissection-CoronaryArtery" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MultipleCoronaryArteryAbnormalities" ) ) ), ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "MyocardialBridging" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "OtherCoronaryArteryAbnormality" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartDisease-NonValvular" ) ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString(
                  "CardiacArrhythmia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "3rdDegreeAVBlock" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "AcuteArrhythmia" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ArrhythmiaOrHeartBlockOrPacemakerInsertion" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "AtrialArrhythmia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillationOrFlutter" ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "AtrialFibrillationOrFlutterRequiringTreatment" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFlutter" ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "AtrialFlutter-Paroxysmal" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialTachycardia" ) ) ),
                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFlutter" ) ),
                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFlutter-Paroxysmal" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "EctopicHeartbeat" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PrematureAtrialComplex" ) ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "PrematureEctopicBeats" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "WanderingPacemaker" ) ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacArrhythmia-Junctional" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "HeartRhythm_junctional_accelerated_junctional_rhythm" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_junctional_junctional_escape_rhythm" ) ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacFibrillation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillation" ) ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacSinusRhythm" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Bradycardia" ) ), ConsesLow
                    .list( constant_handles.reader_make_constant_shell( makeString( "HeartBlock" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AVBlock" ) ), ConsesLow.list(
                        constant_handles.reader_make_constant_shell( makeString( "HeartBlock-CompleteWithJunctionalEscape" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "HeartBlock-CompleteWithVentricularEscape" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartBlock-FirstDegree" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "HeartBlock-SecondDegree" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartBlock-SecondDegree-Type1" ) ) ),
                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartBlock-SecondDegree-Type2" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "ThirdDegreeAvBlock" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CompleteHeartBlock" ) ), ConsesLow.list( constant_handles
                                        .reader_make_constant_shell( makeString( "HeartBlock-CompleteWithJunctionalEscape" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "HeartBlock-CompleteWithVentricularEscape" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_ventricular_complete_heart_block" ) ) ),
                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_ventricular_complete_heart_block_with_junctional_escape" ) ) ), ConsesLow.list(
                                            constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_ventricular_complete_heart_block_with_ventricular_escape" ) ) ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "HeartRhythm_heart_block_complete_heart_block" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "ParoxysmalTachycardia-Sinus" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SickSinusSyndrome" ) ) ), ConsesLow.list(
                                                        constant_handles.reader_make_constant_shell( makeString( "SinusRhythm-Normal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "SinusTachycardia" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicArrhythmia" ) ) ), ConsesLow.list( constant_handles
                                                                .reader_make_constant_shell( makeString( "FibrillationFlutterTachycardiaOrHeartBlock" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                    makeString( "FibrillationOrFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillationOrFlutter" ) ),
                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillation" ) ) ), ConsesLow.list( constant_handles
                                                                            .reader_make_constant_shell( makeString( "AtrialFibrillationOrFlutterRequiringTreatment" ) ) ), ConsesLow.list( constant_handles
                                                                                .reader_make_constant_shell( makeString( "AtrialFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "AtrialFlutter-Paroxysmal" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Tachycardia" ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ParoxysmalTachycardia-Sinus" ) ) ), ConsesLow.list(
                                                                                            constant_handles.reader_make_constant_shell( makeString( "SinusTachycardia" ) ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "SupraventricularTachycardia" ) ), ConsesLow.list( constant_handles
                                                                                                    .reader_make_constant_shell( makeString( "AtrialTachycardia" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString( "VentricularTachycardia" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "HeartBlock-NotComplete" ) ) ), ConsesLow.list( constant_handles
                                                                                                                .reader_make_constant_shell( makeString( "Paced-HeartRhythm" ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "Atrial-ventricular-PacedHeartRhythm" ) ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString( "AtrialPacedRhythm" ) ) ), ConsesLow.list(
                                                                                                                            constant_handles.reader_make_constant_shell( makeString( "AtriallyPacedHeartRhythm" ) ) ),
                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                    "VentricularlyPacedHeartRhythm" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                        makeString( "PermanentCardiacArrhythmia" ) ) ), ConsesLow.list( constant_handles
                                                                                                                            .reader_make_constant_shell( makeString( "PrematureVentricularContraction" ) ) ), ConsesLow
                                                                                                                                .list( constant_handles.reader_make_constant_shell( makeString( "VentricularArrhythmia" ) ),
                                                                                                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                        "PrematureVentricularComplex" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                "VentricularTachycardiaOrFibrillation" ) ), ConsesLow.list( constant_handles
                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                        "VentricularFibrillation" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                "VentricularTachycardia" ) ) ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Cardiomyopathy" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HypertrophicCardiomyopathy" ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HypertrophicCardiomyopathy-Obstructiveness-NOS" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "HypertrophicObstructiveCardiomyopathy" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HypertrophicObstructiveCardiomyopathy-Congenital" ) ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "Non-obstructiveHypertrophicCardiomyopathy" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "IschemicCardiomyopathy" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RestrictiveCardiomyopathyAmyloid" ) ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "Pericarditis" ) ) ) ), ConsesLow.list( new SubLObject[]
                                  { constant_handles.reader_make_constant_shell( makeString( "HeartDisease-Other" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacEnlargement" ) ) ),
                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacEnlargement-Questionable" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                        makeString( "CardiogenicShock" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Cardiomyopathy" ) ), ConsesLow.list( constant_handles
                                            .reader_make_constant_shell( makeString( "HypertrophicCardiomyopathy" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "HypertrophicCardiomyopathy-Obstructiveness-NOS" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "HypertrophicObstructiveCardiomyopathy" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "HypertrophicObstructiveCardiomyopathy-Congenital" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "Non-obstructiveHypertrophicCardiomyopathy" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "IschemicCardiomyopathy" ) ) ),
                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RestrictiveCardiomyopathyAmyloid" ) ) ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "CongestiveHeartFailure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "DrugInducedToxicity" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartCondition-TumorOrMass" ) ) ), ConsesLow.list(
                                                        constant_handles.reader_make_constant_shell( makeString( "HeartDisease-Other-NonTumorNonMyocarditis" ) ) ), ConsesLow.list( constant_handles
                                                            .reader_make_constant_shell( makeString( "HeartDisease-Other-OtherNonCardiacEnlargement" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                makeString( "HeartDisease-OtherOther" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HypertensiveHeartDisease" ) ) ),
                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "IatrogenicInjury" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "LeftVentricleAneurysm" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Myocarditis" ) ) ), ConsesLow.list( constant_handles
                                            .reader_make_constant_shell( makeString( "PericardialDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PericardialEffusion" ) ) ),
                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Pericarditis" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "PrimaryMyocardialDisease" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RadiationInducedToxicity" ) ) ), ConsesLow.list(
                                                    constant_handles.reader_make_constant_shell( makeString( "RheumaticHeartDisease" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "RightVentricleAneurysm" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SeptalHypertrophyNonHOCM" ) ) ), ConsesLow.list(
                                                            constant_handles.reader_make_constant_shell( makeString( "ToxicallyInducediatrogenic" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                makeString( "TraumaticHeartDisease" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularSeptalAneurysm" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartFailure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CongestiveHeartFailure" ) ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartValveRelatedProblem" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "AcquiredValvularHeartDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcquiredNonRheumaticValvularHeartDisease" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "Endocarditis-Generic" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Endocarditis-Morbidity" ) ), ConsesLow.list(
                            constant_handles.reader_make_constant_shell( makeString( "Endocarditis-CardiacValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "Endocarditis-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Endocarditis-MitralValve" ) ) ), ConsesLow.list( constant_handles
                                    .reader_make_constant_shell( makeString( "Endocarditis-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "Endocarditis-TricuspidValve" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Regurgitation-MitralValve" ) ), ConsesLow.list(
                                            constant_handles.reader_make_constant_shell( makeString( "MitralValveRegurgitationFromPapillaryMuscleDysfunction" ) ) ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "RheumaticHeartDisease" ) ) ) ), ConsesLow.list( new SubLObject[]
                                                { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheAorticValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "AbnormalNumberOfCusps-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnnularCalcification-AorticValve" ) ) ), ConsesLow
                                                        .list( constant_handles.reader_make_constant_shell( makeString( "AorticValveAbnormality-NotSpecified" ) ) ), ConsesLow.list( constant_handles
                                                            .reader_make_constant_shell( makeString( "Atresia-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "Calcification-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Endocarditis-AorticValve" ) ) ), ConsesLow
                                                                    .list( constant_handles.reader_make_constant_shell( makeString( "Fibrosis-AorticValve" ) ) ), ConsesLow.list( constant_handles
                                                                        .reader_make_constant_shell( makeString( "ProstheticValveDysfunction-AorticValve" ) ) ), ConsesLow.list( constant_handles
                                                                            .reader_make_constant_shell( makeString( "Regurgitation-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                makeString( "RheumaticValveDisease-AorticValve" ) ) )
                } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheMitralValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "AbnormalNumberOfCusps-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnnularCalcification-MitralValve" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "Atresia-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "BallooningOrProlapsedCardiacValve-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Calcification-MitralValve" ) ) ), ConsesLow.list(
                                constant_handles.reader_make_constant_shell( makeString( "Endocarditis-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "Fibrosis-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MitralValveAbnormality-NotSpecified" ) ) ), ConsesLow.list( constant_handles
                                        .reader_make_constant_shell( makeString( "MyxomatousDegeneration-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "PapillaryMuscleDysfunction-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ProstheticValveDysfunction-MitralValve" ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Regurgitation-MitralValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "MitralValveRegurgitationFromPapillaryMuscleDysfunction" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RheumaticValveDisease-MitralValve" ) ) )
                } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfThePulmonaryValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "AbnormalNumberOfCusps-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnnularCalcification-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "Atresia-PulmonaryValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtresiaWithIntactSeptum-PulmonaryValve" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtresiaWithVentricularSeptalDefect-PulmonaryValve" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                            makeString( "Calcification-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Endocarditis-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "Fibrosis-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "ProstheticValveDysfunction-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PulmonaryValveAbnormality-NotSpecified" ) ) ), ConsesLow
                                        .list( constant_handles.reader_make_constant_shell( makeString( "Regurgitation-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "RheumaticValveDisease-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Stenosis-PulmonaryValve" ) ) )
                } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "DiseaseOfTheTricuspidValve" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "AbnormalNumberOfCusps-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnnularCalcification-TricuspidValve" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "Atresia-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "BallooningOrProlapsedCardiacValve-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Calcification-TricuspidValve" ) ) ), ConsesLow.list(
                                constant_handles.reader_make_constant_shell( makeString( "Endocarditis-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "Fibrosis-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MyxomatousDegeneration-TricuspidValve" ) ) ), ConsesLow.list(
                                        constant_handles.reader_make_constant_shell( makeString( "PapillaryMuscleDysfunction-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "ProstheticValveDysfunction-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Regurgitation-TricuspidValve" ) ) ), ConsesLow
                                                .list( constant_handles.reader_make_constant_shell( makeString( "RheumaticValveDisease-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                    makeString( "Stenosis-TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TricuspidValveAbnormality-NotSpecified" ) ) )
                } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartValveDysfunction" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "CardiacValveStenosis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Stenosis-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                        makeString( "Stenosis-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Stenosis-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles
                            .reader_make_constant_shell( makeString( "Stenosis-TricuspidValve" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RheumaticValveDisease" ) ), ConsesLow
                                .list( constant_handles.reader_make_constant_shell( makeString( "RheumaticValveDisease-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "RheumaticValveDisease-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RheumaticValveDisease-PulmonaryValve" ) ) ), ConsesLow.list(
                                        constant_handles.reader_make_constant_shell( makeString( "RheumaticValveDisease-TricuspidValve" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "IschemicHeartDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryDisease-Ischemic" ) ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "In-stentStenosis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "PostInfarctVentricularSeptalDefect" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RightVentricularInfarction" ) ) ) ), ConsesLow
                                                        .list( constant_handles.reader_make_constant_shell( makeString( "VentricularDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "LeftVentricularDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeftVentricleAneurysm" ) ) ) ), ConsesLow.list(
                                                                constant_handles.reader_make_constant_shell( makeString( "RightVentricularDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                    makeString( "RightVentricleAneurysm" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularAneurysm" ) ),
                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeftVentricleAneurysm" ) ) ), ConsesLow.list( constant_handles
                                                                            .reader_make_constant_shell( makeString( "RightVentricleAneurysm" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                makeString( "VentricularArrhythmia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "PrematureVentricularComplex" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "VentricularTachycardiaOrFibrillation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "VentricularFibrillation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                "VentricularTachycardia" ) ) ) ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_atrial" ) ), ConsesLow
                  .list( constant_handles.reader_make_constant_shell( makeString( "AtrialArrhythmia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillationOrFlutter" ) ),
                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "AtrialFibrillationOrFlutterRequiringTreatment" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFlutter" ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "AtrialFlutter-Paroxysmal" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialTachycardia" ) ) ), ConsesLow
                                  .list( constant_handles.reader_make_constant_shell( makeString( "CardiacFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFlutter" ) ),
                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFlutter-Paroxysmal" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                          makeString( "EctopicHeartbeat" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PrematureAtrialComplex" ) ) ), ConsesLow.list( constant_handles
                                              .reader_make_constant_shell( makeString( "PrematureEctopicBeats" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "WanderingPacemaker" ) ) ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_atrial_other" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "HeartRhythm_atrial_supraventricular_tachycardia" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_cardiac" ) ), ConsesLow.list( new SubLObject[]
                      { constant_handles.reader_make_constant_shell( makeString( "CardiacArrhythmia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "3rdDegreeAVBlock" ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "AcuteArrhythmia" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "ArrhythmiaOrHeartBlockOrPacemakerInsertion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialArrhythmia" ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "AtrialFibrillationOrFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillation" ) ) ), ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillationOrFlutterRequiringTreatment" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                          makeString( "AtrialFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFlutter-Paroxysmal" ) ) ) ) ), ConsesLow.list( constant_handles
                                              .reader_make_constant_shell( makeString( "AtrialTachycardia" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacFlutter" ) ), ConsesLow
                                                  .list( constant_handles.reader_make_constant_shell( makeString( "AtrialFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "AtrialFlutter-Paroxysmal" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "EctopicHeartbeat" ) ) ), ConsesLow.list(
                                                          constant_handles.reader_make_constant_shell( makeString( "PrematureAtrialComplex" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "PrematureEctopicBeats" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "WanderingPacemaker" ) ) ) ), ConsesLow.list(
                                                                  constant_handles.reader_make_constant_shell( makeString( "CardiacArrhythmia-Junctional" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                      makeString( "HeartRhythm_junctional_accelerated_junctional_rhythm" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "HeartRhythm_junctional_junctional_escape_rhythm" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "CardiacFibrillation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillation" ) ) ) ), ConsesLow
                                                                                  .list( constant_handles.reader_make_constant_shell( makeString( "CardiacSinusRhythm" ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "Bradycardia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "HeartBlock" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AVBlock" ) ), ConsesLow.list(
                                                                                              constant_handles.reader_make_constant_shell( makeString( "HeartBlock-CompleteWithJunctionalEscape" ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString( "HeartBlock-CompleteWithVentricularEscape" ) ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "HeartBlock-FirstDegree" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "HeartBlock-SecondDegree" ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "HeartBlock-SecondDegree-Type1" ) ) ), ConsesLow
                                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString( "HeartBlock-SecondDegree-Type2" ) ) ) ),
                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ThirdDegreeAvBlock" ) ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString( "CompleteHeartBlock" ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "HeartBlock-CompleteWithJunctionalEscape" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "HeartBlock-CompleteWithVentricularEscape" ) ) ),
                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "HeartRhythm_ventricular_complete_heart_block" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                          makeString( "HeartRhythm_ventricular_complete_heart_block_with_junctional_escape" ) ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "HeartRhythm_ventricular_complete_heart_block_with_ventricular_escape" ) ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "HeartRhythm_heart_block_complete_heart_block" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString( "ParoxysmalTachycardia-Sinus" ) ) ), ConsesLow.list(
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString( "SickSinusSyndrome" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SinusRhythm-Normal" ) ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "SinusTachycardia" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                              makeString( "ChronicArrhythmia" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "FibrillationFlutterTachycardiaOrHeartBlock" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "FibrillationOrFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "AtrialFibrillationOrFlutter" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "AtrialFibrillation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "AtrialFibrillationOrFlutterRequiringTreatment" ) ) ), ConsesLow.list( constant_handles
                                                                                                                      .reader_make_constant_shell( makeString( "AtrialFlutter" ) ), ConsesLow.list( constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "AtrialFlutter-Paroxysmal" ) ) ) ) ) ), ConsesLow.list(
                                                                                                                              constant_handles.reader_make_constant_shell( makeString( "Tachycardia" ) ), ConsesLow.list(
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "ParoxysmalTachycardia-Sinus" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString( "SinusTachycardia" ) ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "SupraventricularTachycardia" ) ), ConsesLow.list( constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString( "AtrialTachycardia" ) ) ) ),
                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "VentricularTachycardia" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString( "HeartBlock-NotComplete" ) ) ), ConsesLow
                                                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "Paced-HeartRhythm" ) ), ConsesLow.list( constant_handles
                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                      "Atrial-ventricular-PacedHeartRhythm" ) ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "AtrialPacedRhythm" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                      "AtriallyPacedHeartRhythm" ) ) ), ConsesLow.list(
                                                                                                                                                                          constant_handles.reader_make_constant_shell(
                                                                                                                                                                              makeString(
                                                                                                                                                                                  "VentricularlyPacedHeartRhythm" ) ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PermanentCardiacArrhythmia" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "PrematureVentricularContraction" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularArrhythmia" ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "PrematureVentricularComplex" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "VentricularTachycardiaOrFibrillation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularFibrillation" ) ) ), ConsesLow.list( constant_handles
                                        .reader_make_constant_shell( makeString( "VentricularTachycardia" ) ) ) ) )
              } ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_other_pulseless_electrical_activity" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "HeartRhythm_ventricular" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_ventricular_accelerated_idioventricular" ) ) ), ConsesLow.list(
                      constant_handles.reader_make_constant_shell( makeString( "HeartRhythm_ventricular_ventricular_escape" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "VentricularArrhythmia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PrematureVentricularComplex" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "VentricularTachycardiaOrFibrillation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularFibrillation" ) ) ),
                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularTachycardia" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "OtherHeartRhythmType" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Asystole" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                      makeString( "IdioventricularHeartRhythm" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HematologicDisorder" ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "Anemia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HemolyticAnemia" ) ) ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Hernia" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HiatalHernia" ) ) ) ), ConsesLow.list(
                  constant_handles.reader_make_constant_shell( makeString( "InfectedEndocardialPacingLead" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "InfectedEpicardialPacingLead" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Infection" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                          makeString( "InfectionOrMycotic" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "InfectionOrMycotic-AortaArch" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "InfectionOrMycotic-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "InfectionOrMycotic-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "InfectionOrMycotic-DescendingThoracicAorta" ) ) ) ) ) ), ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "InflammationCondition" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "Myocarditis" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Pericarditis" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                              makeString( "IntramuralHematoma" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "IntramuralHematoma-AortaArch" ) ) ), ConsesLow.list(
                                                  constant_handles.reader_make_constant_shell( makeString( "IntramuralHematoma-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "IntramuralHematoma-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "IntramuralHematoma-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "LeakInEndograftStent-AorticArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "LeakInEndograftStent-DescendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LifeThreateningCondition" ) ),
                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Cancer" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                          makeString( "DiabetesMellitus" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Hepatitis" ) ) ), ConsesLow.list(
                                                                              constant_handles.reader_make_constant_shell( makeString( "ImmediatelyLifeThreateningCondition" ) ), ConsesLow.list( constant_handles
                                                                                  .reader_make_constant_shell( makeString( "CardiacArrest" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "Stroke-PhysiologicalCondition" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "StrokeDueToBleed" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "StrokeDueToEmbolus" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "MyxomatousDegeneration" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "MyxomatousDegeneration-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "MyxomatousDegeneration-TricuspidValve" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "NeurologicalAilmentCondition" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                  makeString( "NeurologicalDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                      makeString( "CerebrovascularNeurologicAttack" ) ), ConsesLow.list( constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "Stroke-PhysiologicalCondition" ) ), ConsesLow.list(
                                                                                                                              constant_handles.reader_make_constant_shell( makeString( "StrokeDueToBleed" ) ) ), ConsesLow
                                                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "StrokeDueToEmbolus" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString( "TIAOrRIND" ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "ReversibleIschemicNeurologicDeficit" ) ) ), ConsesLow.list(
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "TransientIschemicAttack" ) ) ) ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "DementiaOrAlzheimersDisease" ) ) ), ConsesLow.list(
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "OtherCentralNervousSystemDisease" ) ) ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Normal-Condition" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "NormalAorticValve-Condition" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "NormalEndograftStent-AorticArch" ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "NormalEndograftStent-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "NormalEndograftStent-DescendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "NormalMitralValve-Condition" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "NormalPulmonaryValve-Condition" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "NormalTricuspidValve-Condition" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OtherDiagnosis" ) ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "OtherDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteRheumaticFever" ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "CollagenDisease" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "ConnectiveTissueDisease-Non-marfan" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Dyslipidemia" ) ) ), ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "Immunosupressed-Condition" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "MarfansSyndrome" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Obesity" ) ), ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "MorbidObesity" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "PapillaryMuscleDysfunction" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PapillaryMuscleDysfunction-MitralValve" ) ) ),
                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PapillaryMuscleDysfunction-TricuspidValve" ) ) ) ), ConsesLow.list( constant_handles
                                                                  .reader_make_constant_shell( makeString( "ProstheticValveDysfunction" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "ProstheticValveDysfunction-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "ProstheticValveDysfunction-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "ProstheticValveDysfunction-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "ProstheticValveDysfunction-TricuspidValve" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "Pseudoaneurysm" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticPseudoaneurysm" ) ), ConsesLow
                                                                                          .list( constant_handles.reader_make_constant_shell( makeString( "Pseudoaneurysm-AbdominalAorta" ) ) ), ConsesLow.list(
                                                                                              constant_handles.reader_make_constant_shell( makeString( "Pseudoaneurysm-AortaArch" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "Pseudoaneurysm-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "Pseudoaneurysm-ThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "Regurgitation-Circulatory" ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "Regurgitation-CardiacValve" ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "Regurgitation-AorticValve" ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "Regurgitation-MitralValve" ) ), ConsesLow
                                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "MitralValveRegurgitationFromPapillaryMuscleDysfunction" ) ) ) ), ConsesLow.list(
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "Regurgitation-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString( "Regurgitation-TricuspidValve" ) ) ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RenalDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RenalFailure" ) ), ConsesLow.list(
                  constant_handles.reader_make_constant_shell( makeString( "RenalFailureRequiringDialysis" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RespiratoryAilment" ) ),
                      ConsesLow.list( new SubLObject[]
                      { constant_handles.reader_make_constant_shell( makeString( "LungDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicLungDisease" ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "ChronicLungDisease-Mild" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "ChronicLungDisease-Moderate" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicLungDisease-Severe" ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "ChronicObstructivePulmonaryDisease" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "ChronicObstructivePulmonaryDisease-Clinical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "ChronicObstructivePulmonaryDisease-Pharmacologic" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "ChronicObstructivePulmonaryDisease-PulmonaryFunctionTest" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PulmonaryEmbolism" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PulmonaryHypertension" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "PulmonaryHypertension-Clinical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PulmonaryHypertension-Primary" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "PulmonaryHypertension-Secondary" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "PulmonaryHypertensionWithNoPaSystolicPressureReading" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "PulmonaryHypertensionWithPaSystolicPressureGt35" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "PulmonaryHypertensionWithRVSystolicPressureGt35" ) ) )
                      } ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SkinAilment" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Scleroderma" ) ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Stenosis-Condition" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Stenosis-AorticValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "Stenosis-MitralValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Stenosis-PulmonaryValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                          makeString( "Stenosis-TricuspidValve" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CarotidArteryStenosisGreaterThan20" ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "CarotidArteryStenosisGreaterThan20LessThanOrEqualTo75" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "CarotidArteryStenosisGreaterThan75" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CarotidArteryStenosisGreaterThan79" ) ) ) ) ), ConsesLow.list(
                                      constant_handles.reader_make_constant_shell( makeString( "PulmonaryArteryStenosis" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SuspectedDissectingAneurysm-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SuspectedDissectingAneurysm-AortaArch" ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SuspectedDissectingAneurysm-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "SuspectedDissectingAneurysm-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SuspectedDissectingAneurysm-ThoracicAorta" ) ) ), ConsesLow.list(
                      constant_handles.reader_make_constant_shell( makeString( "Thrombosis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryThrombosis" ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "DescendingAortaThrombosis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "DescendingThoracicAortaThrombosis" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Thrombosis-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "Thrombosis-Aorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Thrombosis-AscendingAorta" ) ) ), ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "Trombosis-AortaArch" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Trauma" ) ),
                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Trauma-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "Trauma-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Trauma-DescendingAorta" ) ), ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "Trauma-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "TumorCondition" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "UlcerDisease" ) ), ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "AorticUlcer" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "PenetratingUlcer-AortaArch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PenetratingUlcer-AscendingAorta" ) ) ),
                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PenetratingUlcer-DescendingAorta" ) ), ConsesLow.list( constant_handles
                                                              .reader_make_constant_shell( makeString( "PenetratingUlcer-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                  makeString( "PenetratingUlcer" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PenetratingUlcer-AortaArch" ) ) ), ConsesLow
                                                                      .list( constant_handles.reader_make_constant_shell( makeString( "PenetratingUlcer-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                          .reader_make_constant_shell( makeString( "PenetratingUlcer-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                              makeString( "PenetratingUlcer-DescendingThoracicAorta" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "VascularDisorder" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aneurysm_Or_Dissection" ) ), ConsesLow
                                                                                      .list( new SubLObject[]
                                                                                      { constant_handles.reader_make_constant_shell( makeString( "Aneurysm" ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "Aneurysm-AbdominalAorta" ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "SaccularAneurysm-AbdominalAorta" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "Aneurysm-AortaArch" ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "DissectingAneurysm-AortaArch" ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "SaccularAneurysm-AortaArch" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "Aneurysm-AorticRoot" ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "DissectingAneurysm-AorticRoot" ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "SaccularAneurysm-AorticRoot" ) ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aneurysm-AscendingAorta" ) ), ConsesLow.list(
                                                                                            constant_handles.reader_make_constant_shell( makeString( "DissectingAneurysm-AscendingAorta" ) ) ), ConsesLow.list(
                                                                                                constant_handles.reader_make_constant_shell( makeString( "SaccularAneurysm-AscendingAorta" ) ) ) ), ConsesLow.list(
                                                                                                    constant_handles.reader_make_constant_shell( makeString( "Aneurysm-DescendingAorta" ) ), ConsesLow.list(
                                                                                                        constant_handles.reader_make_constant_shell( makeString( "Aneurysm-DescendingThoracicAorta" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString( "DissectingAneurysm-DescendingThoracicAorta" ) ) ),
                                                                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SaccularAneurysm-DescendingAorta" ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                            "SaccularAneurysm-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                .reader_make_constant_shell( makeString( "Aneurysm-ThoracicAbdominalAorta" ) ) ), ConsesLow.list(
                                                                                                                    constant_handles.reader_make_constant_shell( makeString( "Aneurysm-ThoracicAorta" ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString( "DissectingAneurysm-ThoracicAorta" ) ),
                                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                            "DissectingAneurysm-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                .reader_make_constant_shell( makeString( "AorticAneurysm" ) ), ConsesLow.list(
                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                        "AortaUnspecifiedAneurysm" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString( "AtrialSeptalAneurysm" ) ), ConsesLow
                                                                                                                                                .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                    "AtrialSeptalAnyeurysm-Congenital" ) ) ) ), ConsesLow.list(
                                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "CoronaryArteryAneurysm" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "DissectingAneurysm" ) ), ConsesLow.list(
                                                                                                                                                                        constant_handles.reader_make_constant_shell(
                                                                                                                                                                            makeString(
                                                                                                                                                                                "DissectingAneurysm-AbdominalAorta" ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "DissectingAneurysm-AortaArch" ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "DissectingAneurysm-AorticRoot" ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "DissectingAneurysm-AscendingAorta" ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "DissectingAneurysm-ThoracicAorta" ) ),
                                                                                                                                                                    ConsesLow.list( constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "DissectingAneurysm-DescendingThoracicAorta" ) ) ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SaccularAneurysm" ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "SaccularAneurysm-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "SaccularAneurysm-AortaArch" ) ) ), ConsesLow.list( constant_handles
                                                                                                    .reader_make_constant_shell( makeString( "SaccularAneurysm-AorticRoot" ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString( "SaccularAneurysm-AscendingAorta" ) ) ), ConsesLow.list( constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "SaccularAneurysm-DescendingAorta" ) ), ConsesLow.list(
                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                    "SaccularAneurysm-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "VentricularAneurysm" ) ), ConsesLow.list( constant_handles
                                                                                                                            .reader_make_constant_shell( makeString( "LeftVentricleAneurysm" ) ) ), ConsesLow.list(
                                                                                                                                constant_handles.reader_make_constant_shell( makeString( "RightVentricleAneurysm" ) ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularSeptalAneurysm" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaAneurysmOrDissection" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaDissection" ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteAorticDissection" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "AcuteDissection-AbdominalAorta-Intraoperative" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-AortaArch" ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "AcuteIntraoperativeDissection-AortaArch" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "AcuteDissection-AorticRoot-Intraoperative" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-AscendingAorta" ) ), ConsesLow.list(
                                  constant_handles.reader_make_constant_shell( makeString( "AcuteIntraoperativeDissection-AscendingAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "AcuteDissection-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "ChronicAortaDissection" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "ChronicDissection-AbdominalAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicDissection-AortaArch" ) ) ), ConsesLow.list(
                                                  constant_handles.reader_make_constant_shell( makeString( "ChronicDissection-AorticRoot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "ChronicDissection-AscendingAorta" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChronicDissection-DescendingAorta" ) ), ConsesLow
                                                          .list( constant_handles.reader_make_constant_shell( makeString( "ChronicDissection-DescendingThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles
                                                              .reader_make_constant_shell( makeString( "Dissection-AortaArch" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "AcuteDissection-AortaArch" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "AcuteIntraoperativeDissection-AortaArch" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "ChronicDissection-AortaArch" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Dissection-AorticRoot" ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AcuteDissection-AorticRoot" ) ), ConsesLow.list( constant_handles
                                                                                  .reader_make_constant_shell( makeString( "AcuteDissection-AorticRoot-Intraoperative" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "Dissection-AscendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                          makeString( "AcuteDissection-AscendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "AcuteIntraoperativeDissection-AscendingAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                  makeString( "ChronicDissection-AscendingAorta" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                      makeString( "Dissection-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "AcuteIntraoperativeDissection-DescendingAorta" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "AcuteIntraoperativeDissection-DescendingThoracicAorta" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "Dissection-DescendingThoracicAorta" ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "AcuteDissection-DescendingThoracicAorta" ) ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString( "AorticAneurysm" ) ), ConsesLow.list(
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "AortaUnspecifiedAneurysm" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString( "Dissection" ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "AcuteDissection" ) ), ConsesLow.list( constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString( "AcuteAorticDissection" ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "AcuteDissection-AbdominalAorta-Intraoperative" ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "AcuteDissection-AortaArch" ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "AcuteIntraoperativeDissection-AortaArch" ) ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "AcuteDissection-AorticRoot-Intraoperative" ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "AcuteDissection-AscendingAorta" ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "AcuteIntraoperativeDissection-AscendingAorta" ) ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "AcuteDissection-DescendingAorta" ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "AcuteDissection-DescendingThoracicAorta" ) ) ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "AcuteDissection-AorticRoot" ) ), ConsesLow.list( constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                          "AcuteDissection-AorticRoot-Intraoperative" ) ) ) ), ConsesLow
                                                                                                                                                              .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString( "AcuteDissection-CoronaryArtery" ) ),
                                                                                                                                                                  ConsesLow.list( constant_handles
                                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                                          "AcuteDissection-CoronaryArtery-Intraoperative" ) ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "AcuteIntraoperativeDissection" ) ), ConsesLow.list( constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                          "AcuteIntraoperativeDissection-AortaArch" ) ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "AcuteIntraoperativeDissection-AscendingAorta" ) ) ),
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "AcuteIntraoperativeDissection-DescendingAorta" ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "AcuteIntraoperativeDissection-DescendingThoracicAorta" ) ) ) ) ) ),
                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "AortaDissection" ) ), ConsesLow.list( constant_handles
                                                                                                                                                  .reader_make_constant_shell( makeString( "AcuteAorticDissection" ) ),
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "AcuteDissection-AbdominalAorta-Intraoperative" ) ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "AcuteDissection-AortaArch" ) ), ConsesLow.list(
                                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                      "AcuteIntraoperativeDissection-AortaArch" ) ) ) ),
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "AcuteDissection-AorticRoot-Intraoperative" ) ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "AcuteDissection-AscendingAorta" ) ), ConsesLow.list(
                                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                      "AcuteIntraoperativeDissection-AscendingAorta" ) ) ) ),
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "AcuteDissection-DescendingAorta" ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "AcuteDissection-DescendingThoracicAorta" ) ) ) ) ), ConsesLow
                                                                                                                                                                  .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                      makeString( "ChronicAortaDissection" ) ), ConsesLow
                                                                                                                                                                          .list( constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "ChronicDissection-AbdominalAorta" ) ) ),
                                                                                                                                                                      ConsesLow.list( constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "ChronicDissection-AortaArch" ) ) ), ConsesLow
                                                                                                                                                                                  .list( constant_handles
                                                                                                                                                                                      .reader_make_constant_shell(
                                                                                                                                                                                          makeString(
                                                                                                                                                                                              "ChronicDissection-AorticRoot" ) ) ),
                                                                                                                                                                      ConsesLow.list( constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "ChronicDissection-AscendingAorta" ) ) ),
                                                                                                                                                                      ConsesLow.list( constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "ChronicDissection-DescendingAorta" ) ),
                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "ChronicDissection-DescendingThoracicAorta" ) ) ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "Dissection-AortaArch" ) ), ConsesLow.list( constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                          "AcuteDissection-AortaArch" ) ), ConsesLow.list( constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                  "AcuteIntraoperativeDissection-AortaArch" ) ) ) ),
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "ChronicDissection-AortaArch" ) ) ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "Dissection-AorticRoot" ) ), ConsesLow.list( constant_handles
                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                      "AcuteDissection-AorticRoot" ) ), ConsesLow.list(
                                                                                                                                                                          constant_handles.reader_make_constant_shell(
                                                                                                                                                                              makeString(
                                                                                                                                                                                  "AcuteDissection-AorticRoot-Intraoperative" ) ) ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "Dissection-AscendingAorta" ) ), ConsesLow.list( constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                          "AcuteDissection-AscendingAorta" ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "AcuteIntraoperativeDissection-AscendingAorta" ) ) ) ),
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "ChronicDissection-AscendingAorta" ) ) ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "Dissection-DescendingAorta" ) ), ConsesLow.list(
                                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                      "AcuteIntraoperativeDissection-DescendingAorta" ) ),
                                                                                                                                                                  ConsesLow.list( constant_handles
                                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                                          "AcuteIntraoperativeDissection-DescendingThoracicAorta" ) ) ) ),
                                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "Dissection-DescendingThoracicAorta" ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "AcuteDissection-DescendingThoracicAorta" ) ) ) ) ) ),
                                                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "ChronicDissection" ) ), ConsesLow.list( constant_handles
                                                                                                                                                  .reader_make_constant_shell( makeString( "ChronicAortaDissection" ) ),
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "ChronicDissection-AbdominalAorta" ) ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "ChronicDissection-AortaArch" ) ) ), ConsesLow.list(
                                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                      "ChronicDissection-AorticRoot" ) ) ), ConsesLow.list(
                                                                                                                                                                          constant_handles.reader_make_constant_shell(
                                                                                                                                                                              makeString(
                                                                                                                                                                                  "ChronicDissection-AscendingAorta" ) ) ),
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "ChronicDissection-DescendingAorta" ) ), ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "ChronicDissection-DescendingThoracicAorta" ) ) ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "ChronicDissection-CoronaryArtery" ) ) ) ) ) ), ConsesLow.list(
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "ArterioscleroticObliterans" ) ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "CarotidArteryStenosisGreaterThan20" ) ), ConsesLow.list(
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "CarotidArteryStenosisGreaterThan20LessThanOrEqualTo75" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString( "CarotidArteryStenosisGreaterThan75" ) ),
                                                                                                                                                                  ConsesLow.list( constant_handles
                                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                                          "CarotidArteryStenosisGreaterThan79" ) ) ) ) ),
                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Embolus-Systemic" ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "CoronaryArteryEmbolus" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                          makeString( "PulmonaryEmbolism" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "PeripheralVascularDisease" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "PulmonaryArteryStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                      makeString( "DiseaseAfflictingPartFn" ) ), constant_handles.reader_make_constant_shell( makeString( "Liver" ) ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HepaticFailure" ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "DigestiveHepaticFailure" ) ) ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "Hepatitis" ) ) ) )
    } ) ) ) ), ConsesLow.list( ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell( makeString(
        "Debridement-VascularProcedure" ) ) ), constant_handles.reader_make_constant_shell( makeString( "MedicalResearchCAEGuidanceMt" ) ), constant_handles.reader_make_constant_shell( makeString(
            "CCFMedicalResearch-Allotment" ) ) ), ConsesLow.list( ConsesLow.list( ConsesLow.list( TWO_INTEGER ), ConsesLow.list( ConsesLow.list( new SubLObject[]
            { constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Allograft-SurgicalProcedure" ) ) ), ConsesLow
                .list( constant_handles.reader_make_constant_shell( makeString( "AnnulusEnlarging-ValvularProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "AnteriorToAnteriorCardiacValveChordaeTransfer" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AnterolateralCommissuroplasty" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "AnteroseptalCommisuroplasty" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "AortaProcedureOrIABPProcedure-ExceptionSpecification" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AortaProcedure-ExceptionSpecification" ) ) ), ConsesLow
                                .list( constant_handles.reader_make_constant_shell( makeString( "Intra-aorticBalloonPumpRemovalOrInsertion-ExceptionSpecification" ) ) ) ), ConsesLow.list( constant_handles
                                    .reader_make_constant_shell( makeString( "AorticAneurysmRepair-STS" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Biopsy-SurgicalProcedure" ) ),
                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Biopsy-Lung-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                            makeString( "Biopsy-LymphNode-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Biopsy-Myocardium-SurgicalProcedure" ) ) ),
                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Biopsy-Pericardium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                            makeString( "Biopsy-Pleura-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "ChestWallBiopsyOfBoneMarrow-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VascularBiopsy-VascularProcedure" ) ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "BleedingControl-Chest-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "EvacuationOfHematoma-ChestCavity-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PericardialWindow-SurgicalProcedure" ) ) ), ConsesLow.list(
                      constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_pericardium_evacuation_of_hematoma_in_pericardium_or_mediastinum" ) ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "CardiacOrThoracicAortaProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacProcedure-Expanded" ) ) ),
                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ThoracicAortaProcedure-STS" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CardiacOrThoracicAortaProcedure-NonExpanded" ) ), ConsesLow.list( new SubLObject[]
                              { constant_handles.reader_make_constant_shell( makeString( "CardiacProcedure-CCF" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "AssistDeviceProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_assist_device_assist_device_revision" ) ) ), ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_assist_device_extracorporeal_membrane_oxygenation_insertion" ) ) ), ConsesLow.list(
                                          constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_assist_device_extracorporeal_membrane_oxygenation_removal" ) ) ), ConsesLow.list( constant_handles
                                              .reader_make_constant_shell( makeString( "SurgicalProcedure_assist_device_intra-aortic_balloon_pump_insertion" ) ) ), ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "SurgicalProcedure_assist_device_intra-aortic_balloon_pump_removal" ) ) ), ConsesLow.list( constant_handles
                                                      .reader_make_constant_shell( makeString( "SurgicalProcedure_assist_device_ventricular_assist_device_insertion" ) ) ), ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "SurgicalProcedure_assist_device_ventricular_assist_device_removal" ) ) ) ), ConsesLow.list( new SubLObject[]
                                                          { constant_handles.reader_make_constant_shell( makeString( "AtrialProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                              makeString( "AtrialAppendageExclusion-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "LeftAtrialAppendageExclusion-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "LeftAtrialAppendageExclusionUsingStaples-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "LeftAtrialAppendageLigation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "LeftAtrialAppendageSizeReduction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "SurgicalProcedure_atrium_left_atrial_appendage_exclusion_using_clip" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "AtrialEndarterectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "AtrialExcisionOfTumor-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "AtrialExcisionProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "AtrialFibrillationProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "MazeProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "PulmonaryVeinIsolationProcedure-Surgical" ) ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "RadioFrequencyAblationProcedure-Surgical" ) ),
                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "BipolarRadiofrequencyAblation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                      makeString( "UnipolarRadiofrequencyAblation" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "AtrialPlication-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                              .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "AtrialRepairProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString( "AtrialSeptation-SurgicalProcedure" ) ) ),
                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialSeptectomy-SurgicalProcedure" ) ), ConsesLow.list( constant_handles
                                                                .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_closed_atrial_septectomy_blalock-hanlon" ) ) ) ), ConsesLow.list(
                                                                    constant_handles.reader_make_constant_shell( makeString( "AtrialThrombectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                        .reader_make_constant_shell( makeString( "AtrialWallDebridement-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "CardiacSeptumProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "Debridement-AtrialOrVentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "Repair-AtrialSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Repair-PostInfarctIvsd-SurgicalProcedure" ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "Repair-VentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "RepairOrResection-VentricularSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SeptalMyectomy" ) ), ConsesLow.list(
                                  constant_handles.reader_make_constant_shell( makeString( "Myectomy-VentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "SurgicalProcedure_congenital_heart_procedure_septal_myectomy" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SurgicalProcedure_septum_debridement" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_septum_repair_of_atrial_septum" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_septum_repair_of_post_infarct_ventricular_septal_defect" ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "CongenitalHeartProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "AVCanalCompleteCorrectionIncludesASDPatchRepair-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "Aorta-aorticConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticAllograft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "AorticValvuloplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "ArterialSwitch-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AscendingAortaToDescendingAortaGraft-SurgicalProcedure" ) ) ), ConsesLow
                                  .list( constant_handles.reader_make_constant_shell( makeString( "AscendingAortaToPulmonaryArteryShuntWaterson-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "AscendingAortoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "AtrialSeptation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CongenitalSeptalDefectRepairSurgery" ) ), ConsesLow.list(
                                              constant_handles.reader_make_constant_shell( makeString( "AtrialSeptalDefectRepairProcedure-Congenital" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                  makeString( "AtrialSeptalDefectSutureClosure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "SurgicalProcedure_congenital_heart_procedure_atrial_septal_defect_patch_closure" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "VentricularSeptalDefectRepairProcedure-Congenital" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "VsdPatchClosure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "VsdSutureClosure-SurgicalProcedure" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "CorrectionAnomalousVenousReturn-TotalOrPartial-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "CreationOfAorto-pulmonaryWindow-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "CreationPericardialMonocuspValve-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "DamusKayStanselProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "DescendingAortaToPulmonaryArteryShuntPotts-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                          makeString( "DivisionOfAorticArchOrRemoval-VascularRing-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "EnlargementIasd-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "ExcisionCardiacDiverticulum-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "InnominateArteryToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "LeftSubclavianToDescendingAortaGraft-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeftVentricleToAortaConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "LigationAnomalousSystemicVeinsSuperiorVenaCava-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "LigationOfCoronaryArteryOrFistula-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LigationSystemicFistula-SurgicalProcedure" ) ) ), ConsesLow
                            .list( constant_handles.reader_make_constant_shell( makeString( "MeeShuntMelbourne-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "NorwoodProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ObliterationOfAortoPulmonaryArteryCommunication" ) ) ), ConsesLow
                                    .list( constant_handles.reader_make_constant_shell( makeString( "PatchOrAngioplastyOfAortaForCoarctationOrInterrupt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                        .reader_make_constant_shell( makeString( "ProstheticAorto-pulmonaryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "ProstheticGraft-AortaToPulmonaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "PulmonaryArterioplastyOrReconstruction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "PulmonaryArteryAllograft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "PulmonaryArteryBanding-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "PulmonaryValvuloplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "RadicalAtrialSeptectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "RastelliProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "Re-implantationOfCoronaryArteryToAorta-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "ReconstructionOfCoronaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "RepairCleftMitralValveLeaflet-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "ResectionAnd1ReanastomosisForCoarctationOrInterruption-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "ResectionAneurysmSinusOfValsalva-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                            constant_handles.reader_make_constant_shell( makeString( "ResectionDiscreteSubvalvularMuscle-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                .list( constant_handles.reader_make_constant_shell( makeString( "ResectionLeftVentricularMuscle-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ResectionOfLeftAtrialMembraneCortriatrium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                    makeString( "ResectionRightVentricleMuscle-Infundibulectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "RevisionOfBlalock-taussigShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RevisionOfPottsShunt-SurgicalProcedure" ) ) ), ConsesLow.list(
                            constant_handles.reader_make_constant_shell( makeString( "RevisionOfWatersonShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "RightAtriumToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RightVentriclePlication-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RightVentricleToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                    makeString( "RightVentricularOutflowPatch-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RoofingOfCoronarySinus-SurgicalProcedure" ) ) ), ConsesLow
                        .list( constant_handles.reader_make_constant_shell( makeString( "SubaorticStenosis-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "SuperiorVenaCavaToPulmonaryArterGlenn-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Supra-aorticStenosis-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalBandingOfPulmonaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                    makeString( "SurgicalProcedure_congenital_heart_procedure_Da_Silva_valve_repair" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "SurgicalProcedure_congenital_heart_procedure_Danielson_technique" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "SurgicalProcedure_congenital_heart_procedure_aorta-aortic_conduit" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "SurgicalProcedure_congenital_heart_procedure_atrial_re-direction_of_venous_flow_senning_procedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "SurgicalProcedure_congenital_heart_procedure_closed_atrial_septectomy_blalock-hanlon" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "SurgicalProcedure_congenital_heart_procedure_complete_correction_of_atrioventricular_canal_defect" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_congenital_heart_procedure_creation_of_aorto-pulmonary_window" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "SurgicalProcedure_congenital_heart_procedure_creation_of_pulmonary_pericardial_monocusp_valve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                    makeString( "SurgicalProcedure_congenital_heart_procedure_enlargement_intra-atrial_septal_defect" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                        makeString( "SurgicalProcedure_congenital_heart_procedure_intra-atrial_baffle_mustard_procedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                            makeString( "SurgicalProcedure_congenital_heart_procedure_left_subclavian_or_aortic_arch_to_descending_aorta_graft" ) ) ), ConsesLow.list( constant_handles
                                                                .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_ligation_systemic_vessel_fistula" ) ) ), ConsesLow.list(
                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                        "SurgicalProcedure_congenital_heart_procedure_obliteration_or_ligation_of_patent_ductus_arteriosus" ) ) ), ConsesLow.list( constant_handles
                                                                            .reader_make_constant_shell( makeString(
                                                                                "SurgicalProcedure_congenital_heart_procedure_patch_or_angioplasty_for_coarctation_or_interruption_of_aorta" ) ) ), ConsesLow.list(
                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                        "SurgicalProcedure_congenital_heart_procedure_patent_foramen_ovale_closure" ) ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_prosthetic_aorto-pulmonary_shunt" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_re-implantation_of_native_coronary_artery_to_aorta" ) ) ), ConsesLow.list(
                    constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_resection_and_single_reanastomosis_for_aortic_coarctation_or_interruption" ) ) ), ConsesLow.list(
                        constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_resection_atrial_membrane_-_radical_atrial_septectomy" ) ) ), ConsesLow.list(
                            constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_resection_of_supra-aortic_stenosis" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_revision_of_blalock-taussig_shunt" ) ) ), ConsesLow.list( constant_handles
                                    .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_septal_myectomy" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "SurgicalProcedure_congenital_heart_procedure_subclavian_to_pulmonary_artery_shunt_blalock-taussig" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_congenital_heart_procedure_take_down_ascending_aorta_to_pulmonary_artery_shunt" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                makeString( "SurgicalProcedure_congenital_heart_procedure_take_down_descending_aorta_to_pulmonary_artery_shunt" ) ) ), ConsesLow.list( constant_handles
                                                    .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_take_down_subclavian-pulmonary_artery_shunt" ) ) ), ConsesLow.list(
                                                        constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_take_down_superior_vena_cava_-_pulmonary_artery_shunt" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalShunting-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "Take-downAscendingAorta-pulmonaryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "Take-downDescendingAorta-pulmonaryArteryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "Take-downPulmonaryArteryBanding-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "Take-downSubclavian-pulmonaryArteryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "Take-downSuperiorVenaPulmonaryArteryShuntWaterson-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "TricuspidValvuloplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "UnifocalizationOfMapcas-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "UnroofingOfCoronaryOstium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "VentricularSeptation-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CoronaryArteryBypassGraft-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "CABGWithBilateralITAGraft" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CABGWithMultipleGrafts" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                      makeString( "CabgWithSingleITAGraft" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SingleGraftCAGB" ) ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "HeartTransplantProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartValveRepairOrReplacement" ) ),
                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ),
                                  constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ) ), ConsesLow.list( ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                          "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                              "MitralValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                  .reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                  constant_handles.reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ),
                                                      constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "TricuspidValve" ) ) ) ) ),
                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                      "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                          "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list(
                                              constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                  "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell(
                                                      makeString( "AorticValve" ) ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ),
                                                          constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "MitralValve" ) ) ),
                                                          ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list( constant_handles
                                                              .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                  "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                      .reader_make_constant_shell( makeString( "MitralValve" ) ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                          makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                              "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                  .reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                          makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                              "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "TricuspidValve" ) ) ) ) ), ConsesLow.list(
                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "HeartValveRepairOrReplacement" ) ), constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                  makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                      makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                          makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "AorticValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                  .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString( "AorticValve" ) ) ), ConsesLow.list(
                                                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list( constant_handles
                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                              "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                      "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "objectActedOn" ) ), constant_handles
                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                      "AorticValve" ) ) ) ) ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                                                          .list( constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString(
                                                                                                                                                                                      "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString( "objectActedOn" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString( "MitralValve" ) ) ), ConsesLow
                                                                                                                                                                                      .list( ConsesLow.list(
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "objectActedOn" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "MitralValve" ) ) ) ),
                                                                                                                                                                          ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString(
                                                                                                                                                                                      "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString( "objectActedOn" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString( "MitralValve" ) ) ), ConsesLow
                                                                                                                                                                                      .list( ConsesLow.list(
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "objectActedOn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "MitralValve" ) ) ) ) ) ) ),
                              ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                  "HeartValveRepairOrReplacement" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                      "PulmonaryValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                          .reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                              .reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                      .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ) ), ConsesLow.list(
                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                              makeString( "HeartValveRepairOrReplacement" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                  .reader_make_constant_shell( makeString( "TricuspidValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ),
                                                                      constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                          "TricuspidValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                              constant_handles.reader_make_constant_shell( makeString( "TricuspidValve" ) ) ) ) ) ), ConsesLow.list( new SubLObject[]
                                                                              { constant_handles.reader_make_constant_shell( makeString( "HeartVentricleProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                  .reader_make_constant_shell( makeString( "Aneurysmectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "Biopsy-Myocardium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "Cardiomyoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "Cryoablation-VentricularTissue-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString( "Debridement-VentricularWall-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString( "LeftVentricleProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "BatistaProcedure-LeftVentricle-SurgicalProcedure" ) ) ),
                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "DorProcedure-LeftVentricle-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                      "FistulaRepairWithPatch-LeftVentricle-rightAtrium-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "SurgicalProcedure_ventricle_repair_of_left_ventricular_outflow_tract" ) ) ), ConsesLow.list(
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricle" ) ) ), ConsesLow.list(
                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricular_outflow_tract" ) ) ) ),
                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MyocorSplint-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                    constant_handles.reader_make_constant_shell( makeString( "OtherVentricularRemodelingProcedure-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                        constant_handles.reader_make_constant_shell( makeString( "PlacementOfAcornDevice-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                            constant_handles.reader_make_constant_shell( makeString( "Repair-FreeWallVentricularRupture-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                .list( constant_handles.reader_make_constant_shell( makeString( "Resection-Subendocardial-SurgicalProcedure" ) ) ),
                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RightVentricleProcedure-Surgical" ) ), ConsesLow.list(
                                                                                    constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_batista_procedure_on_right_ventricle" ) ) ) ),
                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SkeletalMuscleCellDiacrinTransplant-SurgicalProcedure" ) ) ),
                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "SurgicalProcedure_ventricle_debridement_of_ventricular_outflow_tract" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                        makeString( "SurgicalProcedure_ventricle_debridement_of_left_ventricular_outflow_tract" ) ) ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_excision_of_tumor" ) ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_repair_of_ventricular_wall" ) ) ), ConsesLow.list(
                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                        "SurgicalProcedure_ventricle_resection_of_subendocardium" ) ) ), ConsesLow.list( constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_stem_cell_injection" ) ) ), ConsesLow
                                                                                                                .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                    "SurgicalProcedure_ventricle_thrombectomy_of_ventricular_outflow_tract" ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                            "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricular_outflow_tract" ) ) ) ), ConsesLow
                                                                                                                                .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "TransmyocardialRevascularization-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                            "Tri-svr-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                    "VentricularPlication-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "VentricularRepair-SurgicalProcedure" ) ), ConsesLow.list(
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "Repair-VentricularOutflowTract-SurgicalProcedure" ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString(
                                                                                                                                                                        "SurgicalProcedure_ventricle_repair_of_left_ventricular_outflow_tract" ) ) ) ) ),
                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Ventriculotomy-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "OtherCardiacProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "AnnularReconstruction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacExplorationOnly-SurgicalProcedure" ) ) ), ConsesLow.list(
                      constant_handles.reader_make_constant_shell( makeString( "CardiacPartialAutotransplantation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "CardiopulmonaryBypass-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "EvacuationOfHematoma-PericardiumMediastinumDueToBleed-tamponade-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "NotCardiopulmonaryBypass-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PericardialPatch-Non-congenital-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Repair-AtrioventricularGroove-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "Repair-CoronarySinus-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Repair-FibrousTrigone-SurgicalProcedure" ) ) ), ConsesLow.list(
                        constant_handles.reader_make_constant_shell( makeString( "Repair-SubvalvularApparatus-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "RepairOfHeartWound-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RepairOfSubvalvularArea-SurgicalProcedure" ) ) ), ConsesLow.list(
                                constant_handles.reader_make_constant_shell( makeString( "RepairOrDebridement-CoronaryOstium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                    makeString( "Resection-Subendocardial-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "Revision-PulmonaryArteryAnastomosis-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_other_cardiac_cardiac-thoracic_procedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "SurgicalProcedure_other_cardiac_excision_of_tumor" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "SurgicalProcedure_other_cardiac_excision_of_tumor-mass_in_pulmonary_artery" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "SurgicalProcedure_other_cardiac_other" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "ThrombectomyFromPacingLeads-wires-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "UnspecifiedCardiac-thoracicProcedure-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OtherVascularCoronaryArteryProcedure-Surgical" ) ) ), ConsesLow.list( new SubLObject[] { constant_handles
                  .reader_make_constant_shell( makeString( "PericardialProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "BeckPoudrage-SurgicalProcedure" ) ) ), ConsesLow
                      .list( constant_handles.reader_make_constant_shell( makeString( "Biopsy-Pericardium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "Excision-PericardialCyst-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PericardialWindow-SurgicalProcedure" ) ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "Pericardiectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "Pericardiocentesis-drainageOfPericardialEffusion-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "RepairOrDebridement-Pericardium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SurgicalProcedure_pericardium_evacuation_of_hematoma" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "SurgicalProcedure_pericardium_evacuation_of_hematoma_in_pericardium_or_mediastinum" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "SurgicalProcedure_pericardium_pericardiocentesis" ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_eps" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "DrainageOfPacemakerWound-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Explant-BiventricularPacerCrtIcd-SurgicalProcedure" ) ) ), ConsesLow.list(
                      constant_handles.reader_make_constant_shell( makeString( "Explant-Icd-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "ExplantICDWithSingleChamberOrDualChamberPacing-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ExplantOfEndocardialPacemakerLead" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ExplantOfEpicardialPacemakerLead" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "ExplantOfImplantableCardioverterDefibrillatorPatch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Implant-BiventricularPacerCrtIcd-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Implant-Icd-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "ImplantOrExplant-Icd-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ImplantOrExplant-PermanentPacemaker-SurgicalProcedure" ) ), ConsesLow.list(
                        constant_handles.reader_make_constant_shell( makeString( "ExplantOfPermanentPacemakerSingleChamberOrDualChamber-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                            .reader_make_constant_shell( makeString( "ImplantOfPermanentBiventricularPacemaker-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "ImplantOfPermanentPacemakerSingleChamberOrDualChamber-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "MappingAndAblationOfAccessoryPathways-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PacemakerInsertion-SurgicalProcedure" ) ),
                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ImplantOfPermanentBiventricularPacemaker-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                            .reader_make_constant_shell( makeString( "ImplantOfPermanentPacemakerSingleChamberOrDualChamber-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles
                                                .reader_make_constant_shell( makeString( "Placement-PpmicdEndocardialLead-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "PlacementEpicardialLeadsNotIncludingLeftVentricular-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "PlacementOfRightAtrialEpicardialPacemakerLead" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "PlacementOfRightVentricularEpicardialPacemakerLead" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "RemovalOfEpicardialPacingWires-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "RemovalOfICDLeads-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "RemovalOfTemporaryEpicardialPacingWires-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "RevisionOfPpmicdLeads-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "SurgicalProcedure_eps_explant_of_endocardial_pacemaker_leads" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                    makeString( "SurgicalProcedure_eps_explant_of_epicardial_pacemaker_leads" ) ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "SurgicalProcedure_eps_explant_of_implantable_cardioverter_defibrillator_generator" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_eps_explant_of_implantable_cardioverter_defibrillator_leads" ) ) ), ConsesLow.list( constant_handles
                    .reader_make_constant_shell( makeString( "SurgicalProcedure_eps_explant_of_left_ventricular_epicardial_pacing_lead" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "SurgicalProcedure_eps_explant_of_permanent_pacemaker" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "SurgicalProcedure_eps_explant_of_temporary_epicardial_pacing_leads" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "SurgicalProcedure_eps_implant_of_epicardial_pacing_leads_not_including_left_ventricular" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "SurgicalProcedure_eps_implant_of_left_ventricular_epicardial_pacing_leads" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "SurgicalProcedure_eps_implant_of_permanent_endocardial_pacing_leads" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_eps_implant_of_right_atrial_epicardial_pacing_leads" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "SurgicalProcedure_eps_implant_of_right_ventricular_epicardial_pacing_leads" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "SurgicalProcedure_eps_revision_of_permanent_epicardial_pacing_leads" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "SurgicalProcedure_eps_thrombectomy_from_pacing_leads" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_vascular_Vineberg-Sewell_implant" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "SurgicalProcedure_vascular_pulmonary" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_vascular_vena_cava" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ThoracicAortaProcedure-CSQR" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "ThoracicAortaProcedure-Surgical" ) ) ) ), ConsesLow.list( new SubLObject[]
                  { constant_handles.reader_make_constant_shell( makeString( "CardiacProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "AbortedCardiacProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AssistDeviceProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "SurgicalProcedure_assist_device_assist_device_revision" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "SurgicalProcedure_assist_device_extracorporeal_membrane_oxygenation_insertion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "SurgicalProcedure_assist_device_extracorporeal_membrane_oxygenation_removal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "SurgicalProcedure_assist_device_intra-aortic_balloon_pump_insertion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SurgicalProcedure_assist_device_intra-aortic_balloon_pump_removal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "SurgicalProcedure_assist_device_ventricular_assist_device_insertion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "SurgicalProcedure_assist_device_ventricular_assist_device_removal" ) ) ) ), ConsesLow.list( new SubLObject[]
                                                  { constant_handles.reader_make_constant_shell( makeString( "AtrialProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "AtrialAppendageExclusion-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "LeftAtrialAppendageExclusion-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "LeftAtrialAppendageExclusionUsingStaples-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "LeftAtrialAppendageLigation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "LeftAtrialAppendageSizeReduction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "SurgicalProcedure_atrium_left_atrial_appendage_exclusion_using_clip" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                              makeString( "AtrialEndarterectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "AtrialExcisionOfTumor-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "AtrialExcisionProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "AtrialFibrillationProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "MazeProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "PulmonaryVeinIsolationProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "RadioFrequencyAblationProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                          makeString( "BipolarRadiofrequencyAblation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "UnipolarRadiofrequencyAblation" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "AtrialPlication-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "AtrialRepairProcedure-Surgical" ) ) ),
                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialSeptation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                        .reader_make_constant_shell( makeString( "AtrialSeptectomy-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "SurgicalProcedure_congenital_heart_procedure_closed_atrial_septectomy_blalock-hanlon" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                makeString( "AtrialThrombectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "AtrialWallDebridement-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "CardiacSeptumProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "Debridement-AtrialOrVentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "Repair-AtrialSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Repair-PostInfarctIvsd-SurgicalProcedure" ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "Repair-VentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "RepairOrResection-VentricularSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SeptalMyectomy" ) ), ConsesLow.list(
                                  constant_handles.reader_make_constant_shell( makeString( "Myectomy-VentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "SurgicalProcedure_congenital_heart_procedure_septal_myectomy" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SurgicalProcedure_septum_debridement" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_septum_repair_of_atrial_septum" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_septum_repair_of_post_infarct_ventricular_septal_defect" ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "CongenitalHeartProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "AVCanalCompleteCorrectionIncludesASDPatchRepair-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "Aorta-aorticConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticAllograft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "AorticValvuloplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "ArterialSwitch-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AscendingAortaToDescendingAortaGraft-SurgicalProcedure" ) ) ), ConsesLow
                                  .list( constant_handles.reader_make_constant_shell( makeString( "AscendingAortaToPulmonaryArteryShuntWaterson-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "AscendingAortoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "AtrialSeptation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CongenitalSeptalDefectRepairSurgery" ) ), ConsesLow.list(
                                              constant_handles.reader_make_constant_shell( makeString( "AtrialSeptalDefectRepairProcedure-Congenital" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                  makeString( "AtrialSeptalDefectSutureClosure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "SurgicalProcedure_congenital_heart_procedure_atrial_septal_defect_patch_closure" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "VentricularSeptalDefectRepairProcedure-Congenital" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "VsdPatchClosure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "VsdSutureClosure-SurgicalProcedure" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "CorrectionAnomalousVenousReturn-TotalOrPartial-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "CreationOfAorto-pulmonaryWindow-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "CreationPericardialMonocuspValve-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "DamusKayStanselProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "DescendingAortaToPulmonaryArteryShuntPotts-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                          makeString( "DivisionOfAorticArchOrRemoval-VascularRing-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "EnlargementIasd-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "ExcisionCardiacDiverticulum-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "InnominateArteryToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "LeftSubclavianToDescendingAortaGraft-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeftVentricleToAortaConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "LigationAnomalousSystemicVeinsSuperiorVenaCava-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "LigationOfCoronaryArteryOrFistula-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LigationSystemicFistula-SurgicalProcedure" ) ) ), ConsesLow
                            .list( constant_handles.reader_make_constant_shell( makeString( "MeeShuntMelbourne-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "NorwoodProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ObliterationOfAortoPulmonaryArteryCommunication" ) ) ), ConsesLow
                                    .list( constant_handles.reader_make_constant_shell( makeString( "PatchOrAngioplastyOfAortaForCoarctationOrInterrupt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                        .reader_make_constant_shell( makeString( "ProstheticAorto-pulmonaryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "ProstheticGraft-AortaToPulmonaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "PulmonaryArterioplastyOrReconstruction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "PulmonaryArteryAllograft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "PulmonaryArteryBanding-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "PulmonaryValvuloplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "RadicalAtrialSeptectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "RastelliProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "Re-implantationOfCoronaryArteryToAorta-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "ReconstructionOfCoronaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "RepairCleftMitralValveLeaflet-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "ResectionAnd1ReanastomosisForCoarctationOrInterruption-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "ResectionAneurysmSinusOfValsalva-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                            constant_handles.reader_make_constant_shell( makeString( "ResectionDiscreteSubvalvularMuscle-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                .list( constant_handles.reader_make_constant_shell( makeString( "ResectionLeftVentricularMuscle-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ResectionOfLeftAtrialMembraneCortriatrium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                    makeString( "ResectionRightVentricleMuscle-Infundibulectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "RevisionOfBlalock-taussigShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RevisionOfPottsShunt-SurgicalProcedure" ) ) ), ConsesLow.list(
                            constant_handles.reader_make_constant_shell( makeString( "RevisionOfWatersonShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "RightAtriumToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RightVentriclePlication-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RightVentricleToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                    makeString( "RightVentricularOutflowPatch-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RoofingOfCoronarySinus-SurgicalProcedure" ) ) ), ConsesLow
                        .list( constant_handles.reader_make_constant_shell( makeString( "SubaorticStenosis-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "SuperiorVenaCavaToPulmonaryArterGlenn-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Supra-aorticStenosis-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalBandingOfPulmonaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                    makeString( "SurgicalProcedure_congenital_heart_procedure_Da_Silva_valve_repair" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "SurgicalProcedure_congenital_heart_procedure_Danielson_technique" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "SurgicalProcedure_congenital_heart_procedure_aorta-aortic_conduit" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "SurgicalProcedure_congenital_heart_procedure_atrial_re-direction_of_venous_flow_senning_procedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "SurgicalProcedure_congenital_heart_procedure_closed_atrial_septectomy_blalock-hanlon" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "SurgicalProcedure_congenital_heart_procedure_complete_correction_of_atrioventricular_canal_defect" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_congenital_heart_procedure_creation_of_aorto-pulmonary_window" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "SurgicalProcedure_congenital_heart_procedure_creation_of_pulmonary_pericardial_monocusp_valve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                    makeString( "SurgicalProcedure_congenital_heart_procedure_enlargement_intra-atrial_septal_defect" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                        makeString( "SurgicalProcedure_congenital_heart_procedure_intra-atrial_baffle_mustard_procedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                            makeString( "SurgicalProcedure_congenital_heart_procedure_left_subclavian_or_aortic_arch_to_descending_aorta_graft" ) ) ), ConsesLow.list( constant_handles
                                                                .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_ligation_systemic_vessel_fistula" ) ) ), ConsesLow.list(
                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                        "SurgicalProcedure_congenital_heart_procedure_obliteration_or_ligation_of_patent_ductus_arteriosus" ) ) ), ConsesLow.list( constant_handles
                                                                            .reader_make_constant_shell( makeString(
                                                                                "SurgicalProcedure_congenital_heart_procedure_patch_or_angioplasty_for_coarctation_or_interruption_of_aorta" ) ) ), ConsesLow.list(
                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                        "SurgicalProcedure_congenital_heart_procedure_patent_foramen_ovale_closure" ) ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_prosthetic_aorto-pulmonary_shunt" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_re-implantation_of_native_coronary_artery_to_aorta" ) ) ), ConsesLow.list(
                    constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_resection_and_single_reanastomosis_for_aortic_coarctation_or_interruption" ) ) ), ConsesLow.list(
                        constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_resection_atrial_membrane_-_radical_atrial_septectomy" ) ) ), ConsesLow.list(
                            constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_resection_of_supra-aortic_stenosis" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_revision_of_blalock-taussig_shunt" ) ) ), ConsesLow.list( constant_handles
                                    .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_septal_myectomy" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "SurgicalProcedure_congenital_heart_procedure_subclavian_to_pulmonary_artery_shunt_blalock-taussig" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_congenital_heart_procedure_take_down_ascending_aorta_to_pulmonary_artery_shunt" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                makeString( "SurgicalProcedure_congenital_heart_procedure_take_down_descending_aorta_to_pulmonary_artery_shunt" ) ) ), ConsesLow.list( constant_handles
                                                    .reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_take_down_subclavian-pulmonary_artery_shunt" ) ) ), ConsesLow.list(
                                                        constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_congenital_heart_procedure_take_down_superior_vena_cava_-_pulmonary_artery_shunt" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalShunting-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "Take-downAscendingAorta-pulmonaryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "Take-downDescendingAorta-pulmonaryArteryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "Take-downPulmonaryArteryBanding-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "Take-downSubclavian-pulmonaryArteryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "Take-downSuperiorVenaPulmonaryArteryShuntWaterson-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "TricuspidValvuloplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "UnifocalizationOfMapcas-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "UnroofingOfCoronaryOstium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "VentricularSeptation-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Cryoablation" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "Cryoablation-VentricularTissue-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartTransplantProcedure-Surgical" ) ) ), ConsesLow.list(
                      new SubLObject[]
                      { constant_handles.reader_make_constant_shell( makeString( "HeartValveProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Anuloplasty" ) ), ConsesLow
                          .list( constant_handles.reader_make_constant_shell( makeString( "AnnuloplastyWithRing" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CompleteAnnuloplastyWithRing" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Anuloplasty-WithoutRing-Complete" ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "Anuloplasty-WithoutRing-Incomplete" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Commissuroplasty" ) ),
                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Antero-posteriorCommissuroplasty" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                          makeString( "Commissuroplasty-AccordingToKay-bicuspidization" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "Commissuroplasty-Anteroposterior" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Commissuroplasty-CongenitalBiscupsid" ) ) ), ConsesLow
                                                  .list( constant_handles.reader_make_constant_shell( makeString( "Commissuroplasty-Left-anterior" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                      makeString( "Commissuroplasty-Posteroseptal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "Commissuroplasty-Right-anterior" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "HeartValveRepairReplacementOrExploration" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "Exploration-AorticValve-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "Exploration-MitralValve-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "Exploration-PulmonaryValve-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "Exploration-TricuspidValve-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "HeartValveRepairOrReplacement" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "HeartValveRepair-SurgicalProcedure" ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                              "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                          constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "MitralValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "PulmonaryValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                      makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                          makeString( "TricuspidValve" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ), ConsesLow.list( ConsesLow
                                                                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "objectActedOn" ) ), constant_handles
                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                      "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                                          constant_handles.reader_make_constant_shell(
                                                                                                                                                                              makeString(
                                                                                                                                                                                  "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString(
                                                                                                                                                                                      "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString( "objectActedOn" ) ),
                                                                                                                                                                              constant_handles.reader_make_constant_shell(
                                                                                                                                                                                  makeString( "AorticValve" ) ) ) ) ) ),
                                                                                                                                              ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                  makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                          "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "MitralValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                              "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list(
                                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                      "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                      "objectActedOn" ) ), constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "MitralValve" ) ) ) ) ) ), ConsesLow.list(
                                                                                                                                                                                  ConsesLow.list( constant_handles
                                                                                                                                                                                      .reader_make_constant_shell(
                                                                                                                                                                                          makeString(
                                                                                                                                                                                              "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "objectActedOn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "PulmonaryValve" ) ) ) ),
                                                                                                                                              ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                  makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                          "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "TricuspidValve" ) ) ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                              "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                      "HeartValveRepairOrReplacement" ) ), constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "objectActedOn" ) ), constant_handles
                                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                                      "AorticValve" ) ) ), ConsesLow.list(
                                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "objectActedOn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "AorticValve" ) ) ) ),
                                                                                                                                                          ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "objectActedOn" ) ), constant_handles
                                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                                          "AorticValve" ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                                                              .list( constant_handles
                                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                                      "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                  ConsesLow.list( constant_handles
                                                                                                                                                                                      .reader_make_constant_shell(
                                                                                                                                                                                          makeString(
                                                                                                                                                                                              "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "objectActedOn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "AorticValve" ) ) ) ) ) ) ),
                                                                                  ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                      constant_handles.reader_make_constant_shell( makeString( "HeartValveRepairOrReplacement" ) ), constant_handles
                                                                                          .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                              "MitralValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "MitralValve" ) ) ) ), ConsesLow
                                                                                                              .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                          makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "MitralValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                  .reader_make_constant_shell( makeString( "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow
                                                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "MitralValve" ) ) ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                              "HeartValveRepairOrReplacement" ) ), constant_handles
                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                      "objectActedOn" ) ), constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "PulmonaryValve" ) ) ), ConsesLow.list(
                                                                                                                                                                                  ConsesLow.list( constant_handles
                                                                                                                                                                                      .reader_make_constant_shell(
                                                                                                                                                                                          makeString(
                                                                                                                                                                                              "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "objectActedOn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "PulmonaryValve" ) ) ) ),
                                                                                                                                                  ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "objectActedOn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                                              makeString( "PulmonaryValve" ) ) ) ) ), ConsesLow.list(
                                                                                                                                                                  ConsesLow.list( constant_handles
                                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString( "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "TricuspidValve" ) ) ), ConsesLow.list(
                                                                                                                                                                                      ConsesLow.list( constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "objectActedOn" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "TricuspidValve" ) ) ) ),
                                                                                                                                                                  ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "TricuspidValve" ) ) ) ) ) ) ), ConsesLow
                                                                                                                                                                                      .list( constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "Plication-ValvularProcedure" ) ),
                                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "AtrialPlication-SurgicalProcedure" ) ) ),
                                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "Plication-BicuspidLeaflet" ) ) ),
                                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "RightVentriclePlication-SurgicalProcedure" ) ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Reconstruction-CardiacValveRepair" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "AnnularReconstruction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RootReconstruction" ) ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "Reorientation-CardiacValveRepair" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "SurgicalProcedure_cardiac_valve_aortic_valve_aborted_repair_attempt" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "SurgicalProcedure_cardiac_valve_mitral_valve_aborted_repair_attempt" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_cardiac_valve_pulmonary_valve_aborted_repair_attempt" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "SurgicalProcedure_cardiac_valve_tricuspid_valve_aborted_repair_attempt" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveProcedure-Surgical" ) ), constant_handles
                                                        .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ), ConsesLow.list(
                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                makeString( "HeartValveRepairOrReplacement" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                    .reader_make_constant_shell( makeString( "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ),
                                                                        constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                            "AorticValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                            makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ) ) ) ) ) ), ConsesLow.list(
                                                                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                        constant_handles.reader_make_constant_shell( makeString( "HeartValveProcedure-Surgical" ) ), constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                makeString( "MitralValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "HeartValveRepairOrReplacement" ) ), constant_handles
                                                                                                                            .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                .reader_make_constant_shell( makeString( "MitralValve" ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                    .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                "HeartValveRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                    .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                        constant_handles.reader_make_constant_shell( makeString( "MitralValve" ) ) ) ),
                                                                                                                    ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                            "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "MitralValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                        .reader_make_constant_shell( makeString( "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                            "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                        .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                "MitralValve" ) ) ) ) ) ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                "HeartValveProcedure-Surgical" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "objectActedOn" ) ), constant_handles
                                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                                "PulmonaryValve" ) ) ), ConsesLow.list(
                                                                                                                                                                                    ConsesLow.list( constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "objectActedOn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "PulmonaryValve" ) ) ),
                                                                                                                                                                                    ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "objectActedOn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "PulmonaryValve" ) ) ) ),
                                                                                                                                                                                    ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "objectActedOn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "PulmonaryValve" ) ) ) ) ) ),
                        ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                            "HeartValveProcedure-Surgical" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                "TricuspidValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_cardiac_valve_tricuspid_valvectomy" ) ) ), ConsesLow.list( ConsesLow
                                    .list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                        "HeartValveRepairOrReplacement" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                            "TricuspidValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                .reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                constant_handles.reader_make_constant_shell( makeString( "TricuspidValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                        .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "TricuspidValve" ) ) ) ) ) )
                      } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "HeartVentricleProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                          makeString( "Aneurysmectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Biopsy-Myocardium-SurgicalProcedure" ) ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "Cardiomyoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "Cryoablation-VentricularTissue-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Debridement-VentricularWall-SurgicalProcedure" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeftVentricleProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "BatistaProcedure-LeftVentricle-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DorProcedure-LeftVentricle-SurgicalProcedure" ) ) ),
                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "FistulaRepairWithPatch-LeftVentricle-rightAtrium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_repair_of_left_ventricular_outflow_tract" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                    makeString( "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricular_outflow_tract" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "MyocorSplint-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OtherVentricularRemodelingProcedure-SurgicalProcedure" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PlacementOfAcornDevice-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "Repair-FreeWallVentricularRupture-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Resection-Subendocardial-SurgicalProcedure" ) ) ),
                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RightVentricleProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "SurgicalProcedure_ventricle_batista_procedure_on_right_ventricle" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "SkeletalMuscleCellDiacrinTransplant-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "SurgicalProcedure_ventricle_debridement_of_ventricular_outflow_tract" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "SurgicalProcedure_ventricle_debridement_of_left_ventricular_outflow_tract" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_ventricle_excision_of_tumor" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "SurgicalProcedure_ventricle_repair_of_ventricular_wall" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "SurgicalProcedure_ventricle_resection_of_subendocardium" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "SurgicalProcedure_ventricle_stem_cell_injection" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "SurgicalProcedure_ventricle_thrombectomy_of_ventricular_outflow_tract" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricular_outflow_tract" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                    makeString( "TransmyocardialRevascularization-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "Tri-svr-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "VentricularPlication-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "VentricularRepair-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "Repair-VentricularOutflowTract-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "SurgicalProcedure_ventricle_repair_of_left_ventricular_outflow_tract" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "Ventriculotomy-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "OtherCardiacProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "AnnularReconstruction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacExplorationOnly-SurgicalProcedure" ) ) ), ConsesLow.list(
                      constant_handles.reader_make_constant_shell( makeString( "CardiacPartialAutotransplantation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "CardiopulmonaryBypass-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "EvacuationOfHematoma-PericardiumMediastinumDueToBleed-tamponade-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "NotCardiopulmonaryBypass-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PericardialPatch-Non-congenital-SurgicalProcedure" ) ) ),
                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Repair-AtrioventricularGroove-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "Repair-CoronarySinus-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Repair-FibrousTrigone-SurgicalProcedure" ) ) ), ConsesLow.list(
                        constant_handles.reader_make_constant_shell( makeString( "Repair-SubvalvularApparatus-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "RepairOfHeartWound-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RepairOfSubvalvularArea-SurgicalProcedure" ) ) ), ConsesLow.list(
                                constant_handles.reader_make_constant_shell( makeString( "RepairOrDebridement-CoronaryOstium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                    makeString( "Resection-Subendocardial-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                        "Revision-PulmonaryArteryAnastomosis-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                            "SurgicalProcedure_other_cardiac_cardiac-thoracic_procedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "SurgicalProcedure_other_cardiac_excision_of_tumor" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "SurgicalProcedure_other_cardiac_excision_of_tumor-mass_in_pulmonary_artery" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                        "SurgicalProcedure_other_cardiac_other" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "ThrombectomyFromPacingLeads-wires-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "UnspecifiedCardiac-thoracicProcedure-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "PericardialProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "BeckPoudrage-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Biopsy-Pericardium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "Excision-PericardialCyst-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "PericardialWindow-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Pericardiectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "Pericardiocentesis-drainageOfPericardialEffusion-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "RepairOrDebridement-Pericardium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "SurgicalProcedure_pericardium_evacuation_of_hematoma" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SurgicalProcedure_pericardium_evacuation_of_hematoma_in_pericardium_or_mediastinum" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "SurgicalProcedure_pericardium_pericardiocentesis" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TBLOperativeValveProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "Valvuloplasty-MedicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AorticValvuloplasty-SurgicalProcedure" ) ) ), ConsesLow.list( new SubLObject[]
                  { constant_handles.reader_make_constant_shell( makeString( "Commissurotomy" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Commissurotomy-Anterolateral" ) ) ), ConsesLow
                      .list( constant_handles.reader_make_constant_shell( makeString( "Commissurotomy-Anteroseptal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "Commissurotomy-Left-anterior" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Commissurotomy-Left-noncoronary" ) ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "Commissurotomy-Posteromedial" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Commissurotomy-Posteroseptal" ) ) ),
                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Commissurotomy-Right-anterior" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "Commissurotomy-Right-noncoronary" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Commissurotomy-right-left" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CusaValvuloplasty" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "PulmonaryValvuloplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TricuspidValvuloplasty-SurgicalProcedure" ) ) ) ), ConsesLow.list( ConsesLow
                      .list( constant_handles.reader_make_constant_shell( makeString( "CollectionIntersectionFn" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TheSet" ) ),
                          constant_handles.reader_make_constant_shell( makeString( "CardiacProcedure-Surgical" ) ), constant_handles.reader_make_constant_shell( makeString( "RoboticSurgery" ) ) ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveRepairProcedure_alfieir_leaflet_stitch_anterior-posterior" ) ) ), ConsesLow.list( constant_handles
                  .reader_make_constant_shell( makeString( "CardiacValveRepairProcedure_augmentation_with_pericardium" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "CardiacValveRepairProcedure_cone_repair" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveRepairProcedure_cut_of_leaflet_bridge" ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "CardiacValveRepairProcedure_repair_with_homograft" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "CardiacValveRepairProcedure_replacement" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveRepairProcedure_separation_of_fused_structures" ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveRepairProcedure_shorten" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "CardiacValveRepairProcedure_sling_repair" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CleftRepair" ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "ConduitRelated-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "Aorta-aorticConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "BentallHemashieldValvedConduit-VascularProcedure" ) ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "InnominateArteryToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                  makeString( "LeftVentricleToAortaConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "ReplacementWithConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "RightAtriumToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "RightVentricleToPulmonaryArteryConduit-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "Decalcification-ValvularProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DevegaProcedure" ) ) ), ConsesLow.list(
                                                      constant_handles.reader_make_constant_shell( makeString( "EdgeToEdgeRepair" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "Exclusion-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialAppendageExclusion-SurgicalProcedure" ) ),
                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeftAtrialAppendageExclusion-SurgicalProcedure" ) ), ConsesLow.list(
                                                                  constant_handles.reader_make_constant_shell( makeString( "LeftAtrialAppendageExclusionUsingStaples-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                      constant_handles.reader_make_constant_shell( makeString( "LeftAtrialAppendageLigation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                          .reader_make_constant_shell( makeString( "LeftAtrialAppendageSizeReduction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                              .reader_make_constant_shell( makeString( "SurgicalProcedure_atrium_left_atrial_appendage_exclusion_using_clip" ) ) ) ) ) ), ConsesLow.list(
                                                                                  constant_handles.reader_make_constant_shell( makeString( "Fenestration" ) ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "IsolatedCABGExclusion-NonExpandedGraph" ) ), ConsesLow.list( new SubLObject[]
                                                                                      { constant_handles.reader_make_constant_shell( makeString( "CommonConcomitantExclusion-NonExpandedGraph" ) ), ConsesLow.list(
                                                                                          constant_handles.reader_make_constant_shell( makeString( "Aneurysmectomy-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                              constant_handles.reader_make_constant_shell( makeString( "AorticAneurysmRepair-STSNonExpandedGraph" ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillationProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "MazeProcedure-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "PulmonaryVeinIsolationProcedure-Surgical" ) ) ),
                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RadioFrequencyAblationProcedure-Surgical" ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "BipolarRadiofrequencyAblation" ) ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "UnipolarRadiofrequencyAblation" ) ) ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "BatistaProcedure-LeftVentricle-SurgicalProcedure" ) ) ),
                                                                                        ConsesLow.list( new SubLObject[]
                                                                                        { constant_handles.reader_make_constant_shell( makeString( "CongenitalHeartProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "AVCanalCompleteCorrectionIncludesASDPatchRepair-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                .list( constant_handles.reader_make_constant_shell( makeString( "Aorta-aorticConduit-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                    .list( constant_handles.reader_make_constant_shell( makeString( "AorticAllograft-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                        .list( constant_handles.reader_make_constant_shell( makeString( "AorticValvuloplasty-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ArterialSwitch-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                              constant_handles.reader_make_constant_shell( makeString( "AscendingAortaToDescendingAortaGraft-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "AscendingAortaToPulmonaryArteryShuntWaterson-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "AscendingAortoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "AtrialSeptation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "CongenitalSeptalDefectRepairSurgery" ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "AtrialSeptalDefectRepairProcedure-Congenital" ) ),
                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "AtrialSeptalDefectSutureClosure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                          "SurgicalProcedure_congenital_heart_procedure_atrial_septal_defect_patch_closure" ) ) ) ),
                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "VentricularSeptalDefectRepairProcedure-Congenital" ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "VsdPatchClosure-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "VsdSutureClosure-SurgicalProcedure" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                  "CorrectionAnomalousVenousReturn-TotalOrPartial-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                          "CreationOfAorto-pulmonaryWindow-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "CreationPericardialMonocuspValve-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "DamusKayStanselProcedure-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                              .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "DescendingAortaToPulmonaryArteryShuntPotts-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "DivisionOfAorticArchOrRemoval-VascularRing-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "EnlargementIasd-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "ExcisionCardiacDiverticulum-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "InnominateArteryToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "LeftSubclavianToDescendingAortaGraft-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeftVentricleToAortaConduit-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "LigationAnomalousSystemicVeinsSuperiorVenaCava-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "LigationOfCoronaryArteryOrFistula-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "LigationSystemicFistula-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString( "MeeShuntMelbourne-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "NorwoodProcedure-SurgicalProcedure" ) ) ), ConsesLow
                                                                                              .list( constant_handles.reader_make_constant_shell( makeString( "ObliterationOfAortoPulmonaryArteryCommunication" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "PatchOrAngioplastyOfAortaForCoarctationOrInterrupt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "ProstheticAorto-pulmonaryShunt-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "ProstheticGraft-AortaToPulmonaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "PulmonaryArterioplastyOrReconstruction-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PulmonaryArteryAllograft-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PulmonaryArteryBanding-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PulmonaryValvuloplasty-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RadicalAtrialSeptectomy-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RastelliProcedure-SurgicalProcedure" ) ) ), ConsesLow
                                                                                              .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "Re-implantationOfCoronaryArteryToAorta-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "ReconstructionOfCoronaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "RepairCleftMitralValveLeaflet-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "ResectionAnd1ReanastomosisForCoarctationOrInterruption-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "ResectionAneurysmSinusOfValsalva-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "ResectionDiscreteSubvalvularMuscle-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ResectionLeftVentricularMuscle-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "ResectionOfLeftAtrialMembraneCortriatrium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "ResectionRightVentricleMuscle-Infundibulectomy-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RevisionOfBlalock-taussigShunt-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RevisionOfPottsShunt-SurgicalProcedure" ) ) ), ConsesLow
                                                                                              .list( constant_handles.reader_make_constant_shell( makeString( "RevisionOfWatersonShunt-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "RightAtriumToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "RightVentriclePlication-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "RightVentricleToPulmonaryArteryConduit-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                      .reader_make_constant_shell( makeString( "RightVentricularOutflowPatch-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RoofingOfCoronarySinus-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubaorticStenosis-SurgicalProcedure" ) ) ), ConsesLow
                                                                                              .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "SuperiorVenaCavaToPulmonaryArterGlenn-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "Supra-aorticStenosis-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "SurgicalBandingOfPulmonaryArtery-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                      "SurgicalProcedure_congenital_heart_procedure_Da_Silva_valve_repair" ) ) ), ConsesLow.list(
                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "SurgicalProcedure_congenital_heart_procedure_Danielson_technique" ) ) ), ConsesLow.list(
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "SurgicalProcedure_congenital_heart_procedure_aorta-aortic_conduit" ) ) ), ConsesLow
                                                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "SurgicalProcedure_congenital_heart_procedure_atrial_re-direction_of_venous_flow_senning_procedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "SurgicalProcedure_congenital_heart_procedure_closed_atrial_septectomy_blalock-hanlon" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                      "SurgicalProcedure_congenital_heart_procedure_complete_correction_of_atrioventricular_canal_defect" ) ) ), ConsesLow
                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "SurgicalProcedure_congenital_heart_procedure_creation_of_aorto-pulmonary_window" ) ) ), ConsesLow.list(
                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "SurgicalProcedure_congenital_heart_procedure_creation_of_pulmonary_pericardial_monocusp_valve" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "SurgicalProcedure_congenital_heart_procedure_enlargement_intra-atrial_septal_defect" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                      "SurgicalProcedure_congenital_heart_procedure_intra-atrial_baffle_mustard_procedure" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "SurgicalProcedure_congenital_heart_procedure_left_subclavian_or_aortic_arch_to_descending_aorta_graft" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "SurgicalProcedure_congenital_heart_procedure_ligation_systemic_vessel_fistula" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                      "SurgicalProcedure_congenital_heart_procedure_obliteration_or_ligation_of_patent_ductus_arteriosus" ) ) ), ConsesLow
                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "SurgicalProcedure_congenital_heart_procedure_patch_or_angioplasty_for_coarctation_or_interruption_of_aorta" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "SurgicalProcedure_congenital_heart_procedure_patent_foramen_ovale_closure" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                      "SurgicalProcedure_congenital_heart_procedure_prosthetic_aorto-pulmonary_shunt" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "SurgicalProcedure_congenital_heart_procedure_re-implantation_of_native_coronary_artery_to_aorta" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "SurgicalProcedure_congenital_heart_procedure_resection_and_single_reanastomosis_for_aortic_coarctation_or_interruption" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "SurgicalProcedure_congenital_heart_procedure_resection_atrial_membrane_-_radical_atrial_septectomy" ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "SurgicalProcedure_congenital_heart_procedure_resection_of_supra-aortic_stenosis" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "SurgicalProcedure_congenital_heart_procedure_revision_of_blalock-taussig_shunt" ) ) ), ConsesLow.list(
                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "SurgicalProcedure_congenital_heart_procedure_septal_myectomy" ) ) ), ConsesLow.list( constant_handles
                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                              "SurgicalProcedure_congenital_heart_procedure_subclavian_to_pulmonary_artery_shunt_blalock-taussig" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "SurgicalProcedure_congenital_heart_procedure_take_down_ascending_aorta_to_pulmonary_artery_shunt" ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "SurgicalProcedure_congenital_heart_procedure_take_down_descending_aorta_to_pulmonary_artery_shunt" ) ) ), ConsesLow
                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "SurgicalProcedure_congenital_heart_procedure_take_down_subclavian-pulmonary_artery_shunt" ) ) ), ConsesLow
                                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "SurgicalProcedure_congenital_heart_procedure_take_down_superior_vena_cava_-_pulmonary_artery_shunt" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalShunting-SurgicalProcedure" ) ) ), ConsesLow
                                                                                              .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "Take-downAscendingAorta-pulmonaryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "Take-downDescendingAorta-pulmonaryArteryShunt-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "Take-downPulmonaryArteryBanding-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                  makeString( "Take-downSubclavian-pulmonaryArteryShunt-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "Take-downSuperiorVenaPulmonaryArteryShuntWaterson-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TricuspidValvuloplasty-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "UnifocalizationOfMapcas-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "UnroofingOfCoronaryOstium-SurgicalProcedure" ) ) ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VentricularSeptation-SurgicalProcedure" ) ) )
                                                                                        } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "DorProcedure-LeftVentricle-SurgicalProcedure" ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartTransplantProcedure-Surgical" ) ) ), ConsesLow.list(
                                                                                            constant_handles.reader_make_constant_shell( makeString( "Myectomy-VentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                constant_handles.reader_make_constant_shell( makeString( "OtherNonCardiacProcedure-STSNonExpandedGraph" ) ), ConsesLow.list(
                                                                                                    constant_handles.reader_make_constant_shell( makeString( "OtherNonCardiacOther-STSNonExpandedGraph" ) ), ConsesLow.list(
                                                                                                        constant_handles.reader_make_constant_shell( makeString( "KidneyTransplantProcedure-Surgical" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString( "LiverTransplantProcedure-Surgical" ) ) ), ConsesLow
                                                                                                                .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                    "OtherNoncardiothoracicProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "Resection-KommerellsDiverticulum-SurgicalProcedure" ) ) ),
                                                                                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "SurgicalProcedure_other_noncardiothoracic_other" ) ) ), ConsesLow.list( constant_handles
                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                "SurgicalProcedure_other_noncardiothoracic_repair_of_leg_wound" ) ) ) ), ConsesLow.list(
                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                        "PancreasTransplantProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                "SurgicalProcedure_abdominal_drainage_of_ascites" ) ) ) ), ConsesLow.list(
                                                                                                                                                    new SubLObject[]
                                                                                                                                                    { constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                        "OtherNonCardiacOtherThoracic-STSNonExpandedGraph" ) ), ConsesLow
                                                                                                                                                            .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "Decortication-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                        "DiaphragmProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString(
                                                                                                                                                                                    "Repair-DiaphragmaticHernia-SurgicalProcedure" ) ) ),
                                                                                                                                                                    ConsesLow.list( constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "SurgicalProcedure_diaphragm_excision_of_diaphragm" ) ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "LungTransplantProcedure-Surgical" ) ) ), ConsesLow
                                                                                                                                                              .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "MediastinumNeckThymectomy-SurgicalProcedure" ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "Pleurodesis-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "PulmonaryProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString( "Biopsy-Lung-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString( "Excision-LungBulla-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "PericardialPatchToLungs-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "PulmonaryEmbolectomy-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString( "Resection-Lung-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "SurgicalProcedure_cardiac_valve_pulmonary_valvectomy" ) ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString( "SurgicalProcedure_thoracic_chest_open" ) ) ),
                                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                          makeString(
                                                                                                                                                              "SurgicalProcedure_thoracic_excision_of_tumor-mass_in_thoracic_cavity" ) ) )
                                                                                                                                                    } ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                        makeString( "OtherVascularProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "SurgicalProcedure_vascular_pulmonary" ) ) ), ConsesLow
                                                                                                                                                                    .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                        makeString(
                                                                                                                                                                            "SurgicalProcedure_vascular_vena_cava" ) ) ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "OtherVentricularRemodelingProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                makeString( "Pericardiectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                    makeString( "RepairOfHeartWound-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                        makeString( "SurgicalProcedure_septum_repair_of_post_infarct_ventricular_septal_defect" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "TransmyocardialRevascularization-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "Tri-svr-SurgicalProcedure" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartValveRepairOrReplacement" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "HeartValveRepair-SurgicalProcedure" ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                      .reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                          .reader_make_constant_shell( makeString( "AorticValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell(
                                  makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "MitralValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ),
                                      constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ), ConsesLow.list(
                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                              "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell(
                                                  makeString( "TricuspidValve" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), ConsesLow
                                                      .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                          .reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                              "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                  .reader_make_constant_shell( makeString( "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                      "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                      constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                          "AorticValve" ) ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                              constant_handles.reader_make_constant_shell( makeString( "MitralValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                  .reader_make_constant_shell( makeString( "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                          makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                              "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "MitralValve" ) ) ) ) ) ), ConsesLow.list(
                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "TricuspidValve" ) ) ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "HeartValveRepairOrReplacement" ) ),
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                      makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString( "AorticValve" ) ) ) ), ConsesLow
                                                                                                                                                  .list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                      makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list(
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "AorticValve" ) ) ) ) ) ) ), ConsesLow
                                                                                                                                                                                      .list( ConsesLow.list(
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "objectActedOn" ) ),
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "MitralValve" ) ) ),
                                                                                                                                                                                          ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "objectActedOn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "MitralValve" ) ) ) ),
                                                                                                                                                                                          ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "objectActedOn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "MitralValve" ) ) ),
                                                                                                                                                                                              ConsesLow.list( ConsesLow
                                                                                                                                                                                                  .list( constant_handles
                                                                                                                                                                                                      .reader_make_constant_shell(
                                                                                                                                                                                                          makeString(
                                                                                                                                                                                                              "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                                      ConsesLow.list(
                                                                                                                                                                                                          constant_handles
                                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                                          constant_handles
                                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                                      "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                                          constant_handles
                                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                                      "objectActedOn" ) ),
                                                                                                                                                                                                          constant_handles
                                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                                      "MitralValve" ) ) ) ) ) ) ),
                  ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                      "HeartValveRepairOrReplacement" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ),
                      ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                          "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                              "PulmonaryValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                  .reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                      .reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveRepairOrReplacement" ) ), constant_handles
                                              .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "TricuspidValve" ) ) ), ConsesLow.list( ConsesLow.list(
                                                  constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                      "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell(
                                                          makeString( "TricuspidValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ),
                                                              constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                  "TricuspidValve" ) ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "IsolatedCABGProcedure-NonExpandedGraph" ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeafletPatching" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Left-RightCommissuroplasty" ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MycorAnuloplastySystemPlacement" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Myectomy" ) ),
                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SeptalMyectomy" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "Myectomy-VentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "SurgicalProcedure_congenital_heart_procedure_septal_myectomy" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Non-coronary-LeftCommissuroplasty" ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "NoncardiacProcedure-NonExpanded" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "PartialResection" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PericardialPatch" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                      "PericardialPatch-Non-congenital-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PlacementOfArtificialChordae" ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "PlacementOfSubannularSuturesInTheLvot" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "PosteromedialCommissuroplasty" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PrimaryProcedure" ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "ProcedurePerformedDuringReop" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "ProstheticValveRingRemoval" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RedoProcedure" ) ) ), ConsesLow.list( constant_handles
                                          .reader_make_constant_shell( makeString( "Reimplantation" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Remodeling-5" ) ) ), ConsesLow.list(
                                              constant_handles.reader_make_constant_shell( makeString( "RemovalOfPreviousAlfieriStitch" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "ResectionOfStenosis" ) ) ), ConsesLow.list( new SubLObject[]
                                                  { constant_handles.reader_make_constant_shell( makeString( "ResectionProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "CardiacValveRepairProcedure_resection_of_retained_leaflet" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CompleteResection" ) ) ),
                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Resection-CardiacValve" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                        makeString( "Resection-KommerellsDiverticulum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                            "Resection-Lung-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                "Resection-Subendocardial-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "ResectionAneurysmSinusOfValsalva-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "ResectionOfPannus" ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Resuspension" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "ResuturingPre-existingRing" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Right-Non-coronaryCommissuroplasty" ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "Shaving-ValvularProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SlidingRepair" ) ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "SurgicalCardiacAssistDeviceInsertion" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "SurgicalProcedure_assist_device_extracorporeal_membrane_oxygenation_insertion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "SurgicalProcedure_assist_device_intra-aortic_balloon_pump_insertion" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                      "SurgicalProcedure_assist_device_ventricular_assist_device_insertion" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "SurgicalCardiacAssistDeviceRemoval" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "SurgicalProcedure_assist_device_extracorporeal_membrane_oxygenation_removal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "SurgicalProcedure_assist_device_intra-aortic_balloon_pump_removal" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                      "SurgicalProcedure_assist_device_ventricular_assist_device_removal" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                          "SurgicalProcedure-Abdominal" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Nephrectomy-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                              constant_handles.reader_make_constant_shell( makeString( "Repair-Ventral-incisionalHernia-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                  .reader_make_constant_shell( makeString( "RepairOfSpleen-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                      makeString( "Splenectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "SurgicalProcedure_abdominal_drainage_of_ascites" ) ) ) ), ConsesLow.list( new SubLObject[]
                                                                          { constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedureNonCongenital" ) ), ConsesLow.list( constant_handles
                                                                              .reader_make_constant_shell( makeString( "AirwayProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                  makeString( "SurgicalProcedure_airway_resection_of_bronchus" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                      makeString( "Tracheostomy-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "AorticProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "AbdominalAortaProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "Aortoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "BentallHemashieldValvedConduit-VascularProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                          makeString( "ElephantTrunkAortaReplacementStage1-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "ThoracicAortaProcedure-Surgical" ) ) ) ), ConsesLow.list(
                                                                                                                  constant_handles.reader_make_constant_shell( makeString( "ArterioscleroticPlaqueRemoval-Procedure" ) ),
                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "Endarterectomy-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                          makeString( "AtrialEndarterectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString( "EndarterectomyLaser-SurgicalProcedure" ) ) ),
                                                                                                                      ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                              makeString( "Endarterectomy-SurgicalProcedure" ) ), constant_handles
                                                                                                                                  .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString( "CommonCarotidArtery" ) ) ) ) ) ), ConsesLow
                                                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "AssistDeviceProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                      "SurgicalProcedure_assist_device_assist_device_revision" ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "SurgicalProcedure_assist_device_extracorporeal_membrane_oxygenation_insertion" ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "SurgicalProcedure_assist_device_extracorporeal_membrane_oxygenation_removal" ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "SurgicalProcedure_assist_device_intra-aortic_balloon_pump_insertion" ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "SurgicalProcedure_assist_device_intra-aortic_balloon_pump_removal" ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "SurgicalProcedure_assist_device_ventricular_assist_device_insertion" ) ) ),
                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "SurgicalProcedure_assist_device_ventricular_assist_device_removal" ) ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialExcisionProcedure-Surgical" ) ) ), ConsesLow.list(
                                                                                constant_handles.reader_make_constant_shell( makeString( "AtrialFibrillationProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "MazeProcedure-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "PulmonaryVeinIsolationProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "RadioFrequencyAblationProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "BipolarRadiofrequencyAblation" ) ) ), ConsesLow.list( constant_handles
                                                                                                    .reader_make_constant_shell( makeString( "UnipolarRadiofrequencyAblation" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString( "AtrialWallDebridement-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString( "BalloonDilatation-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                .list( constant_handles.reader_make_constant_shell( makeString( "BypassGraft-SurgicalProcedure" ) ),
                                                                                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "BypassGraftWithSaphenousVein-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                            .reader_make_constant_shell( makeString( "CoronaryArteryBypassGraft-SurgicalProcedure" ) ),
                                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "CABGWithBilateralITAGraft" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "CABGWithMultipleGrafts" ) ) ), ConsesLow.list(
                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                            "CabgWithSingleITAGraft" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString( "SingleGraftCAGB" ) ) ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "BypassGraftWithHemashield-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                constant_handles.reader_make_constant_shell( makeString( "CabrolFistula-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "ChestWallProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                        makeString( "ChestWallBiopsyOfBoneMarrow-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                            makeString( "Debridement-RewireOfSternum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                makeString( "RepairLungOrChestWall-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                    makeString( "SternalFractureRepair-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString( "SurgicalProcedure_chest_wall_pectus_repair" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "SurgicalProcedure_chest_wall_repair_of_lung-chest_wall" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "CongenitalIntervention-MedicalProcedure" ) ) ), ConsesLow
                                                                                                                        .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                            "CoronaryArteryProcedureNonCongenital-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                                                                .reader_make_constant_shell( makeString( "CoronaryArteryBypassGraft-SurgicalProcedure" ) ),
                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "CABGWithBilateralITAGraft" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                        .reader_make_constant_shell( makeString( "CABGWithMultipleGrafts" ) ) ), ConsesLow
                                                                                                                                            .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                "CabgWithSingleITAGraft" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                    .reader_make_constant_shell( makeString( "SingleGraftCAGB" ) ) ) ),
                                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "OtherVascularCoronaryArteryProcedure-Surgical" ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                    constant_handles.reader_make_constant_shell( makeString( "CollectionDifferenceFn" ) ),
                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                        "CoronaryArteryProcedureNonCongenital-Surgical" ) ), constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                "CoronaryArteryBypassGraft-SurgicalProcedure" ) ) ) ) ), ConsesLow.list(
                                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                        "CoronaryLaserProcedure-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "Cryoablation" ) ), ConsesLow.list( constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "Cryoablation-VentricularTissue-SurgicalProcedure" ) ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Debridement-AtrialOrVentricularSeptum-SurgicalProcedure" ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Debridement-VascularProcedure" ) ), ConsesLow.list( constant_handles
                                                                                .reader_make_constant_shell( makeString( "ProstheticValveDebridement" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                    makeString( "DiaphragmProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "Repair-DiaphragmaticHernia-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "SurgicalProcedure_diaphragm_excision_of_diaphragm" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                makeString( "EndovascularProcedure-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                    makeString( "EndovascularStentProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                        makeString( "EndovascularStentGraft-SurgicalProcedure" ) ), ConsesLow.list( constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "Debranching_with_endovascular_stent_graft" ) ) ), ConsesLow.list(
                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                    "EndovascularStentGraftPlacementAfterLeak-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                            "VascularProcedureName_endovascular_stent_graft_antegrade" ) ) ), ConsesLow.list(
                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "VascularProcedureName_endovascular_stent_graft_retrograde" ) ) ) ) ) ), ConsesLow.list(
                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                            "EsophagogastricProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                    "GiUnspecified-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "SurgicalProcedure_esophagogastric_control_bleeding" ) ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Excision-Aneurysm-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                constant_handles.reader_make_constant_shell( makeString( "Exploration-SurgicalProcedure" ) ) ), ConsesLow.list( new SubLObject[]
                                                                                { constant_handles.reader_make_constant_shell( makeString( "HeartValveProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "Anuloplasty" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "AnnuloplastyWithRing" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "CompleteAnnuloplastyWithRing" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                "Anuloplasty-WithoutRing-Complete" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                    "Anuloplasty-WithoutRing-Incomplete" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                        "Commissuroplasty" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                            "Antero-posteriorCommissuroplasty" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                makeString( "Commissuroplasty-AccordingToKay-bicuspidization" ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "Commissuroplasty-Anteroposterior" ) ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                            "Commissuroplasty-CongenitalBiscupsid" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                .reader_make_constant_shell( makeString( "Commissuroplasty-Left-anterior" ) ) ), ConsesLow
                                                                                                                                    .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                        "Commissuroplasty-Posteroseptal" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                "Commissuroplasty-Right-anterior" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                        "HeartValveRepairReplacementOrExploration" ) ), ConsesLow.list(
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "Exploration-AorticValve-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                                    .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                        makeString(
                                                                                                                                                                            "Exploration-MitralValve-SurgicalProcedure" ) ) ),
                                                                                                                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                        "Exploration-PulmonaryValve-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                            .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "Exploration-TricuspidValve-SurgicalProcedure" ) ) ),
                                                                                                                                                    ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                        "HeartValveRepairOrReplacement" ) ), ConsesLow.list(
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "HeartValveRepair-SurgicalProcedure" ) ), ConsesLow.list(
                                                                                                                                                                    ConsesLow.list( constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                        constant_handles.reader_make_constant_shell(
                                                                                                                                                                            makeString(
                                                                                                                                                                                "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                        constant_handles.reader_make_constant_shell(
                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                        constant_handles.reader_make_constant_shell(
                                                                                                                                                                            makeString( "AorticValve" ) ) ) ), ConsesLow
                                                                                                                                                                                .list( ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "MitralValve" ) ) ) ),
                                                                                                                                                            ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "objectActedOn" ) ), constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "PulmonaryValve" ) ) ) ), ConsesLow.list(
                                                                                                                                                                                ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "TricuspidValve" ) ) ) ) ),
                                                                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                            makeString( "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                            ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "objectActedOn" ) ), constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "AorticValve" ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                                                                .list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                    ConsesLow.list( constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "objectActedOn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "AorticValve" ) ) ) ) ) ),
                                                                                                                                                            ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "objectActedOn" ) ), constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "MitralValve" ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                                                                .list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                    ConsesLow.list( constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "objectActedOn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "MitralValve" ) ) ) ) ) ),
                                                                                                                                                            ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "objectActedOn" ) ), constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "PulmonaryValve" ) ) ) ), ConsesLow.list(
                                                                                                                                                                                ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "TricuspidValve" ) ) ) ) ),
                                                                                                                                                        ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "objectActedOn" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString(
                                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString(
                                                                                                                                                                                    "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString( "objectActedOn" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString( "AorticValve" ) ) ) ), ConsesLow
                                                                                                                                                                                    .list( ConsesLow.list( constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "objectActedOn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "AorticValve" ) ) ),
                                                                                                                                                                                        ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                            constant_handles
                                                                                                                                                                                                .reader_make_constant_shell(
                                                                                                                                                                                                    makeString(
                                                                                                                                                                                                        "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                            ConsesLow.list( constant_handles
                                                                                                                                                                                                .reader_make_constant_shell(
                                                                                                                                                                                                    makeString(
                                                                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                                constant_handles
                                                                                                                                                                                                    .reader_make_constant_shell(
                                                                                                                                                                                                        makeString(
                                                                                                                                                                                                            "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                                constant_handles
                                                                                                                                                                                                    .reader_make_constant_shell(
                                                                                                                                                                                                        makeString(
                                                                                                                                                                                                            "objectActedOn" ) ),
                                                                                                                                                                                                constant_handles
                                                                                                                                                                                                    .reader_make_constant_shell(
                                                                                                                                                                                                        makeString(
                                                                                                                                                                                                            "AorticValve" ) ) ) ) ) ) ),
                                                                                                                                                        ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "objectActedOn" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "MitralValve" ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString(
                                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString(
                                                                                                                                                                                    "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString( "objectActedOn" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString( "MitralValve" ) ) ) ), ConsesLow
                                                                                                                                                                                    .list( ConsesLow.list( constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "objectActedOn" ) ),
                                                                                                                                                                                        constant_handles
                                                                                                                                                                                            .reader_make_constant_shell(
                                                                                                                                                                                                makeString(
                                                                                                                                                                                                    "MitralValve" ) ) ),
                                                                                                                                                                                        ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                            constant_handles
                                                                                                                                                                                                .reader_make_constant_shell(
                                                                                                                                                                                                    makeString(
                                                                                                                                                                                                        "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                            ConsesLow.list( constant_handles
                                                                                                                                                                                                .reader_make_constant_shell(
                                                                                                                                                                                                    makeString(
                                                                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                                constant_handles
                                                                                                                                                                                                    .reader_make_constant_shell(
                                                                                                                                                                                                        makeString(
                                                                                                                                                                                                            "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                                constant_handles
                                                                                                                                                                                                    .reader_make_constant_shell(
                                                                                                                                                                                                        makeString(
                                                                                                                                                                                                            "objectActedOn" ) ),
                                                                                                                                                                                                constant_handles
                                                                                                                                                                                                    .reader_make_constant_shell(
                                                                                                                                                                                                        makeString(
                                                                                                                                                                                                            "MitralValve" ) ) ) ) ) ) ),
                                                                                                                                                        ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "objectActedOn" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "PulmonaryValve" ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                                                            .list( constant_handles
                                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                constant_handles.reader_make_constant_shell(
                                                                                                                                                                                    makeString(
                                                                                                                                                                                        "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                constant_handles.reader_make_constant_shell(
                                                                                                                                                                                    makeString( "objectActedOn" ) ),
                                                                                                                                                                                constant_handles.reader_make_constant_shell(
                                                                                                                                                                                    makeString( "PulmonaryValve" ) ) ) ),
                                                                                                                                                            ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                    "objectActedOn" ) ), constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "PulmonaryValve" ) ) ) ) ), ConsesLow.list(
                                                                                                                                                                                ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "TricuspidValve" ) ) ),
                                                                                                                                                                                ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "TricuspidValve" ) ) ) ),
                                                                                                                                                                                ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "TricuspidValve" ) ) ) ) ) ) ),
                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Plication-ValvularProcedure" ) ), ConsesLow.list(
                                                                                      constant_handles.reader_make_constant_shell( makeString( "AtrialPlication-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "Plication-BicuspidLeaflet" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "RightVentriclePlication-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "Reconstruction-CardiacValveRepair" ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "AnnularReconstruction-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "RootReconstruction" ) ) ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "Reorientation-CardiacValveRepair" ) ) ), ConsesLow
                                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "SurgicalProcedure_cardiac_valve_aortic_valve_aborted_repair_attempt" ) ) ), ConsesLow.list(
                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "SurgicalProcedure_cardiac_valve_mitral_valve_aborted_repair_attempt" ) ) ), ConsesLow.list(
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "SurgicalProcedure_cardiac_valve_pulmonary_valve_aborted_repair_attempt" ) ) ),
                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "SurgicalProcedure_cardiac_valve_tricuspid_valve_aborted_repair_attempt" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                              makeString( "HeartValveProcedure-Surgical" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                          constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "HeartValveRepairOrReplacement" ) ), constant_handles.reader_make_constant_shell(
                                                                                                      makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ),
                                                                                              ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "AorticValve" ) ) ) ), ConsesLow
                                                                                                              .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                          makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                  .reader_make_constant_shell( makeString( "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow
                                                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "AorticValve" ) ) ) ) ) ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                              "HeartValveProcedure-Surgical" ) ), constant_handles
                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                      "objectActedOn" ) ), constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "MitralValve" ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                                                                  .list( constant_handles
                                                                                                                                                                                      .reader_make_constant_shell(
                                                                                                                                                                                          makeString(
                                                                                                                                                                                              "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "HeartValveRepairOrReplacement" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "objectActedOn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "MitralValve" ) ) ),
                                                                                                                                                                                  ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "objectActedOn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "MitralValve" ) ) ) ),
                                                                                                                                                                                  ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "objectActedOn" ) ),
                                                                                                                                                                                      constant_handles
                                                                                                                                                                                          .reader_make_constant_shell(
                                                                                                                                                                                              makeString(
                                                                                                                                                                                                  "MitralValve" ) ) ),
                                                                                                                                                                                      ConsesLow.list( ConsesLow.list(
                                                                                                                                                                                          constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                                              .reader_make_constant_shell(
                                                                                                                                                                                                  makeString(
                                                                                                                                                                                                      "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "objectActedOn" ) ),
                                                                                                                                                                                              constant_handles
                                                                                                                                                                                                  .reader_make_constant_shell(
                                                                                                                                                                                                      makeString(
                                                                                                                                                                                                          "MitralValve" ) ) ) ) ) ) ) ),
                                                                                  ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                      constant_handles.reader_make_constant_shell( makeString( "HeartValveProcedure-Surgical" ) ), constant_handles
                                                                                          .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                              "PulmonaryValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "HeartValveRepairOrReplacement" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                  constant_handles.reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                  makeString( "PulmonaryValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                      .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ) ) ), ConsesLow.list( ConsesLow
                                                                                                                              .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                      makeString( "HeartValveProcedure-Surgical" ) ), constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString( "TricuspidValve" ) ) ), ConsesLow
                                                                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "SurgicalProcedure_cardiac_valve_tricuspid_valvectomy" ) ) ),
                                                                                                                              ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                      makeString( "HeartValveRepairOrReplacement" ) ), constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString( "TricuspidValve" ) ) ), ConsesLow
                                                                                                                                                  .list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                      makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "HeartValveRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                              .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "TricuspidValve" ) ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "objectActedOn" ) ), constant_handles
                                                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                                                          "TricuspidValve" ) ) ) ) ) )
                                                                            } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "HeartVentricleProcedure-Surgical" ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Aneurysmectomy-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                  constant_handles.reader_make_constant_shell( makeString( "Biopsy-Myocardium-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "Cardiomyoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "Cryoablation-VentricularTissue-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                              constant_handles.reader_make_constant_shell( makeString( "Debridement-VentricularWall-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString( "LeftVentricleProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "BatistaProcedure-LeftVentricle-SurgicalProcedure" ) ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "DorProcedure-LeftVentricle-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "FistulaRepairWithPatch-LeftVentricle-rightAtrium-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "SurgicalProcedure_ventricle_repair_of_left_ventricular_outflow_tract" ) ) ), ConsesLow.list(
                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                              "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricle" ) ) ), ConsesLow.list(
                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricular_outflow_tract" ) ) ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MyocorSplint-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                  constant_handles.reader_make_constant_shell( makeString( "OtherVentricularRemodelingProcedure-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                      constant_handles.reader_make_constant_shell( makeString( "PlacementOfAcornDevice-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                          constant_handles.reader_make_constant_shell( makeString( "Repair-FreeWallVentricularRupture-SurgicalProcedure" ) ) ), ConsesLow
                                                                                              .list( constant_handles.reader_make_constant_shell( makeString( "Resection-Subendocardial-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString( "RightVentricleProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "SurgicalProcedure_ventricle_batista_procedure_on_right_ventricle" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "SkeletalMuscleCellDiacrinTransplant-SurgicalProcedure" ) ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "SurgicalProcedure_ventricle_debridement_of_ventricular_outflow_tract" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                      makeString( "SurgicalProcedure_ventricle_debridement_of_left_ventricular_outflow_tract" ) ) ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_excision_of_tumor" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_repair_of_ventricular_wall" ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_resection_of_subendocardium" ) ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_stem_cell_injection" ) ) ), ConsesLow
                                                                                  .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "SurgicalProcedure_ventricle_thrombectomy_of_ventricular_outflow_tract" ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricular_outflow_tract" ) ) ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TransmyocardialRevascularization-SurgicalProcedure" ) ) ), ConsesLow
                                                                                  .list( constant_handles.reader_make_constant_shell( makeString( "Tri-svr-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                      .reader_make_constant_shell( makeString( "VentricularPlication-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                          .reader_make_constant_shell( makeString( "VentricularRepair-SurgicalProcedure" ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "Repair-VentricularOutflowTract-SurgicalProcedure" ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "SurgicalProcedure_ventricle_repair_of_left_ventricular_outflow_tract" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                                          .reader_make_constant_shell( makeString( "Ventriculotomy-SurgicalProcedure" ) ) )
                                                                            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "LeftAtrialAppendageProcedure-Surgical" ) ), ConsesLow.list(
                                                                                constant_handles.reader_make_constant_shell( makeString( "LeftAtrialAppendageExclusion-SurgicalProcedure" ) ), ConsesLow.list(
                                                                                    constant_handles.reader_make_constant_shell( makeString( "LeftAtrialAppendageExclusionUsingStaples-SurgicalProcedure" ) ) ), ConsesLow
                                                                                        .list( constant_handles.reader_make_constant_shell( makeString( "LeftAtrialAppendageLigation-SurgicalProcedure" ) ) ), ConsesLow
                                                                                            .list( constant_handles.reader_make_constant_shell( makeString( "LeftAtrialAppendageSizeReduction-SurgicalProcedure" ) ) ),
                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "SurgicalProcedure_atrium_left_atrial_appendage_exclusion_using_clip" ) ) ) ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "MediastinumOrNeckProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "Biopsy-LymphNode-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "EvacuationOfHematoma-ChestCavity-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                    constant_handles.reader_make_constant_shell( makeString( "EvacuationOfHematoma-Subclavicular-SurgicalProcedure" ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MediastinumNeckThymectomy-SurgicalProcedure" ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PatchPlacement-Mediastinum-SurgicalProcedure" ) ) ),
                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "SurgicalProcedure_mediastinum-neck_evacuation_of_hematoma_in_subclavicular" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "Myectomy-VentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                    constant_handles.reader_make_constant_shell( makeString( "Nephrectomy-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                        constant_handles.reader_make_constant_shell( makeString( "Omentopexy-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString( "OtherNoncardiothoracicProcedure-Surgical" ) ),
                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "Resection-KommerellsDiverticulum-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "SurgicalProcedure_other_noncardiothoracic_other" ) ) ),
                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "SurgicalProcedure_other_noncardiothoracic_repair_of_leg_wound" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "OtherSurgicalProcedure" ) ), ConsesLow.list( constant_handles
                                                                                                                        .reader_make_constant_shell( makeString( "ControlBleeding-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                            new SubLObject[]
                                                                                                                            { constant_handles.reader_make_constant_shell( makeString( "OtherCardiacProcedure-Surgical" ) ),
                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "AnnularReconstruction-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                          "CardiacExplorationOnly-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                  "CardiacPartialAutotransplantation-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "CardiopulmonaryBypass-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "EvacuationOfHematoma-PericardiumMediastinumDueToBleed-tamponade-SurgicalProcedure" ) ) ),
                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "NotCardiopulmonaryBypass-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                          "PericardialPatch-Non-congenital-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "Repair-AtrioventricularGroove-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "Repair-CoronarySinus-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "Repair-FibrousTrigone-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                                      .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "Repair-SubvalvularApparatus-SurgicalProcedure" ) ) ),
                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "RepairOfHeartWound-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                          "RepairOfSubvalvularArea-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "RepairOrDebridement-CoronaryOstium-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "Resection-Subendocardial-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                              .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "Revision-PulmonaryArteryAnastomosis-SurgicalProcedure" ) ) ),
                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "SurgicalProcedure_other_cardiac_cardiac-thoracic_procedure" ) ) ), ConsesLow.list(
                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                          "SurgicalProcedure_other_cardiac_excision_of_tumor" ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "SurgicalProcedure_other_cardiac_excision_of_tumor-mass_in_pulmonary_artery" ) ) ) ),
                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "SurgicalProcedure_other_cardiac_other" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                          "ThrombectomyFromPacingLeads-wires-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "UnspecifiedCardiac-thoracicProcedure-SurgicalProcedure" ) ) )
                                                                                                                            } ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "OtherVascularProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "SurgicalProcedure_vascular_pulmonary" ) ) ),
                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "SurgicalProcedure_vascular_vena_cava" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                                        .reader_make_constant_shell( makeString( "Oversewing" ) ) ), ConsesLow.list(
                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                "PatchGraft-SaphenousVein-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                        "PatchGraft-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                            new SubLObject[]
                                                                                                                                                            { constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "PericardialProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                        "BeckPoudrage-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                                                            .list( constant_handles
                                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                                    "Biopsy-Pericardium-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "Excision-PericardialCyst-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString( "PericardialWindow-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString( "Pericardiectomy-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "Pericardiocentesis-drainageOfPericardialEffusion-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "RepairOrDebridement-Pericardium-SurgicalProcedure" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "SurgicalProcedure_pericardium_evacuation_of_hematoma" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "SurgicalProcedure_pericardium_evacuation_of_hematoma_in_pericardium_or_mediastinum" ) ) ),
                                                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                  makeString(
                                                                                                                                                                      "SurgicalProcedure_pericardium_pericardiocentesis" ) ) )
                                                                                                                                                            } ), ConsesLow.list( constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "PleuraProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                                                                                        constant_handles.reader_make_constant_shell(
                                                                                                                                                                            makeString(
                                                                                                                                                                                "Biopsy-Pleura-SurgicalProcedure" ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "Decortication-SurgicalProcedure" ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "OtherPleuraProcedure-Surgical" ) ) ),
                                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                    makeString( "Pleurodesis-SurgicalProcedure" ) ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PulmonaryProcedure-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                .reader_make_constant_shell( makeString( "Biopsy-Lung-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                    makeString( "Excision-LungBulla-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                        "PericardialPatchToLungs-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                            "PulmonaryEmbolectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                "Resection-Lung-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                    "SurgicalProcedure_cardiac_valve_pulmonary_valvectomy" ) ) ) ), ConsesLow.list( new SubLObject[]
                                                                                                    { constant_handles.reader_make_constant_shell( makeString( "RepairProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                        constant_handles.reader_make_constant_shell( makeString( "AtrialRepairProcedure-Surgical" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString( "HeartValveRepair-SurgicalProcedure" ) ), ConsesLow
                                                                                                                .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "HeartValveRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                            "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "AorticValve" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                        "HeartValveRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString( "MitralValve" ) ) ) ), ConsesLow
                                                                                                                                                    .list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                        makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "HeartValveRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "objectActedOn" ) ), constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "PulmonaryValve" ) ) ) ), ConsesLow.list(
                                                                                                                                                                                ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "HeartValveRepair-SurgicalProcedure" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "TricuspidValve" ) ) ) ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "HerniaRepairProcedure-Surgical" ) ),
                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "Repair-DiaphragmaticHernia-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "Repair-Ventral-incisionalHernia-SurgicalProcedure" ) ) ),
                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "ThoracicHerniaRepair-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                  makeString( "NonHerniaRepairThoracic-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                      .reader_make_constant_shell( makeString( "Repair-AtrioventricularGroove-SurgicalProcedure" ) ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "Repair-CoronarySinus-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "Repair-FibrousTrigone-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "Repair-FreeWallVentricularRupture-SurgicalProcedure" ) ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "Repair-PostInfarctIvsd-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "Repair-SubvalvularApparatus-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "Repair-VentricularSeptum-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "RepairLungOrChestWall-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString( "RepairOfHeartWound-SurgicalProcedure" ) ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RepairOfPerivalvularLeak" ) ) ), ConsesLow
                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString( "RepairOfSpleen-SurgicalProcedure" ) ) ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "RepairOfSubvalvularArea-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "RepairWithRe-implantationOfAorticValve-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "VascularRepairProcedure-Surgical" ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString( "AneurysmRepair-SurgicalProcedure" ) ),
                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "Repair-AtrialSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                  "RepairOrResection-VentricularSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                  "AneurysmRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                      .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                          constant_handles.reader_make_constant_shell( makeString( "AbdominalAorta" ) ) ) ),
                                                                                                                      ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                              makeString( "AneurysmRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                  .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString( "ThoracicAorta" ) ) ) ) ), ConsesLow.list(
                                                                                                                                          constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "Aortoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                      "RepairAfterPercutaneousValveReplacement-VascularProcedure" ) ) ),
                                                                                                                  ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "RepairByButton-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                          makeString( "RepairByPatchGraft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString( "RepairByStitch-SurgicalProcedure" ) ) ) ), ConsesLow
                                                                                                                                  .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                      "VentricularRepair-SurgicalProcedure" ) ), ConsesLow.list( constant_handles
                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                              "Repair-VentricularOutflowTract-SurgicalProcedure" ) ), ConsesLow.list(
                                                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                      "SurgicalProcedure_ventricle_repair_of_left_ventricular_outflow_tract" ) ) ) ) )
                                                                            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Replacement-SurgicalProcedure" ) ), ConsesLow.list(
                                                                                constant_handles.reader_make_constant_shell( makeString( "BentallHemashieldValvedConduit-VascularProcedure" ) ) ), ConsesLow.list(
                                                                                    constant_handles.reader_make_constant_shell( makeString( "ElephantTrunkAortaReplacementStage1-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                        constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), ConsesLow.list( ConsesLow
                                                                                            .list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                .reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                    .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                        "AorticValve" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                            "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                                            "AorticValve" ) ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                .reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                        .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString( "MitralValve" ) ) ), ConsesLow.list(
                                                                                                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                    "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list( constant_handles
                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                            "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "objectActedOn" ) ), constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "MitralValve" ) ) ) ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                                                        .list( constant_handles.reader_make_constant_shell(
                                                                                                                                                                            makeString(
                                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString(
                                                                                                                                                                                    "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString( "objectActedOn" ) ),
                                                                                                                                                                            constant_handles.reader_make_constant_shell(
                                                                                                                                                                                makeString( "PulmonaryValve" ) ) ) ),
                                                                                        ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                            constant_handles.reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                                                    "TricuspidValve" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                        "OrganTransplantProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                            "HeartTransplantProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                makeString( "KidneyTransplantProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "LiverTransplantProcedure-Surgical" ) ) ), ConsesLow.list(
                                                                                                                        constant_handles.reader_make_constant_shell( makeString( "LungTransplantProcedure-Surgical" ) ) ),
                                                                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                            "PancreasTransplantProcedure-Surgical" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                makeString( "ReplacementWithConduit-SurgicalProcedure" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                                    .reader_make_constant_shell( makeString( "ReplacementSurgicalProcedure" ) ), ConsesLow.list( ConsesLow
                                                                                                                        .list( constant_handles.reader_make_constant_shell( makeString( "ReplacingFn" ) ), constant_handles
                                                                                                                            .reader_make_constant_shell( makeString( "HeartValve" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                .reader_make_constant_shell( makeString( "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                        makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString( "AorticValve" ) ) ), ConsesLow
                                                                                                                                                    .list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                        makeString( "IsolatedIndividualTypeOfTypeFn" ) ), ConsesLow.list(
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                "objectActedOn" ) ), constant_handles
                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                        "AorticValve" ) ) ) ) ) ), ConsesLow.list( ConsesLow
                                                                                                                                                                            .list( constant_handles
                                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                constant_handles.reader_make_constant_shell(
                                                                                                                                                                                    makeString(
                                                                                                                                                                                        "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                constant_handles.reader_make_constant_shell(
                                                                                                                                                                                    makeString( "objectActedOn" ) ),
                                                                                                                                                                                constant_handles.reader_make_constant_shell(
                                                                                                                                                                                    makeString( "MitralValve" ) ) ),
                                                                                                                                                                            ConsesLow.list( ConsesLow.list( constant_handles
                                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                                    "IsolatedIndividualTypeOfTypeFn" ) ),
                                                                                                                                                                                ConsesLow.list( constant_handles
                                                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                                                        "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "HeartValveReplacement-SurgicalProcedure" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString( "objectActedOn" ) ),
                                                                                                                                                                                    constant_handles
                                                                                                                                                                                        .reader_make_constant_shell(
                                                                                                                                                                                            makeString(
                                                                                                                                                                                                "MitralValve" ) ) ) ) ) ),
                                                                                                                                ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                    "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                                                                                                        makeString( "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                            .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                                                                                                .reader_make_constant_shell( makeString( "PulmonaryValve" ) ) ) ), ConsesLow
                                                                                                                                                    .list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                                                                        makeString( "SubcollectionOfWithRelationToTypeFn" ) ),
                                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "HeartValveReplacement-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "objectActedOn" ) ), constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "TricuspidValve" ) ) ) ) ) ) ), ConsesLow.list(
                                                                                                                                                                                constant_handles.reader_make_constant_shell(
                                                                                                                                                                                    makeString(
                                                                                                                                                                                        "Resection-CardiacValve" ) ) ),
                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ResectionOfPannus" ) ) ), ConsesLow.list( constant_handles
                                                                                .reader_make_constant_shell( makeString( "Shunt-bypassGraft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "SurgicalProcedure-Noncardiac" ) ) ), ConsesLow.list( new SubLObject[]
                                                                                    { constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_eps" ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "DrainageOfPacemakerWound-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "Explant-BiventricularPacerCrtIcd-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                constant_handles.reader_make_constant_shell( makeString( "Explant-Icd-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                        "ExplantICDWithSingleChamberOrDualChamberPacing-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                            .reader_make_constant_shell( makeString( "ExplantOfEndocardialPacemakerLead" ) ) ), ConsesLow.list(
                                                                                                                constant_handles.reader_make_constant_shell( makeString( "ExplantOfEpicardialPacemakerLead" ) ) ), ConsesLow
                                                                                                                    .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "ExplantOfImplantableCardioverterDefibrillatorPatch" ) ) ), ConsesLow.list( constant_handles
                                                                                                                            .reader_make_constant_shell( makeString(
                                                                                                                                "Implant-BiventricularPacerCrtIcd-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString( "Implant-Icd-SurgicalProcedure" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ImplantOrExplant-Icd-SurgicalProcedure" ) ) ), ConsesLow
                                                                                          .list( constant_handles.reader_make_constant_shell( makeString( "ImplantOrExplant-PermanentPacemaker-SurgicalProcedure" ) ),
                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "ExplantOfPermanentPacemakerSingleChamberOrDualChamber-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                      .reader_make_constant_shell( makeString( "ImplantOfPermanentBiventricularPacemaker-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                              "ImplantOfPermanentPacemakerSingleChamberOrDualChamber-SurgicalProcedure" ) ) ) ), ConsesLow.list(
                                                                                                                  constant_handles.reader_make_constant_shell( makeString(
                                                                                                                      "MappingAndAblationOfAccessoryPathways-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "PacemakerInsertion-SurgicalProcedure" ) ), ConsesLow
                                                                                                                              .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "ImplantOfPermanentBiventricularPacemaker-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                          "ImplantOfPermanentPacemakerSingleChamberOrDualChamber-SurgicalProcedure" ) ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Placement-PpmicdEndocardialLead-SurgicalProcedure" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "PlacementEpicardialLeadsNotIncludingLeftVentricular-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "PlacementOfRightAtrialEpicardialPacemakerLead" ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString( "PlacementOfRightVentricularEpicardialPacemakerLead" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RemovalOfEpicardialPacingWires-SurgicalProcedure" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RemovalOfICDLeads-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                          constant_handles.reader_make_constant_shell( makeString( "RemovalOfTemporaryEpicardialPacingWires-SurgicalProcedure" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RevisionOfPpmicdLeads-SurgicalProcedure" ) ) ), ConsesLow
                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "SurgicalProcedure_eps_explant_of_endocardial_pacemaker_leads" ) ) ), ConsesLow.list( constant_handles
                                                                                                  .reader_make_constant_shell( makeString( "SurgicalProcedure_eps_explant_of_epicardial_pacemaker_leads" ) ) ), ConsesLow
                                                                                                      .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "SurgicalProcedure_eps_explant_of_implantable_cardioverter_defibrillator_generator" ) ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                  "SurgicalProcedure_eps_explant_of_implantable_cardioverter_defibrillator_leads" ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "SurgicalProcedure_eps_explant_of_left_ventricular_epicardial_pacing_lead" ) ) ), ConsesLow.list(
                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "SurgicalProcedure_eps_explant_of_permanent_pacemaker" ) ) ), ConsesLow.list(
                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                          "SurgicalProcedure_eps_explant_of_temporary_epicardial_pacing_leads" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "SurgicalProcedure_eps_implant_of_epicardial_pacing_leads_not_including_left_ventricular" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "SurgicalProcedure_eps_implant_of_left_ventricular_epicardial_pacing_leads" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "SurgicalProcedure_eps_implant_of_permanent_endocardial_pacing_leads" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "SurgicalProcedure_eps_implant_of_right_atrial_epicardial_pacing_leads" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "SurgicalProcedure_eps_implant_of_right_ventricular_epicardial_pacing_leads" ) ) ), ConsesLow.list( constant_handles
                                                                                              .reader_make_constant_shell( makeString( "SurgicalProcedure_eps_revision_of_permanent_epicardial_pacing_leads" ) ) ),
                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_eps_thrombectomy_from_pacing_leads" ) ) )
                                                                            } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "SurgicalWoundTreatment-SurgicalProcedure" ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ChestClosure-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                  constant_handles.reader_make_constant_shell( makeString( "DebridementOfOperativeWoundNotSternal-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                      constant_handles.reader_make_constant_shell( makeString( "HematomaRemovalFromGraftHarvestSite-SurgicalProcedure" ) ) ), ConsesLow
                                                                                          .list( constant_handles.reader_make_constant_shell( makeString( "RemovalOfSternalWires-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                              constant_handles.reader_make_constant_shell( makeString( "SternalRe-wire-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                  constant_handles.reader_make_constant_shell( makeString( "SternalResection-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "SurgicalProcedure_surgical_wound_treatment_debridement_or_rewire_of_sternum" ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "SternalDebridement-SurgicalProcedure" ) ) ) ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_surgical_wound_treatment_sternal_fixation" ) ) )
                                                                            } ), ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "ThoracicProcedure-Surgical" ) ), ConsesLow
                                                                                .list( constant_handles.reader_make_constant_shell( makeString( "NonHerniaRepairThoracic-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                    constant_handles.reader_make_constant_shell( makeString( "OtherThoracicProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "RemovalOfForeignBodyMaterials-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "RepairThoracicWound-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                .reader_make_constant_shell( makeString( "SurgicalProcedure_thoracic_chest_closure" ) ) ), ConsesLow.list( constant_handles
                                                                                                    .reader_make_constant_shell( makeString( "SurgicalProcedure_thoracic_chest_open" ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString( "SurgicalProcedure_thoracic_control_bleeding" ) ) ), ConsesLow.list(
                                                                                                            constant_handles.reader_make_constant_shell( makeString(
                                                                                                                "SurgicalProcedure_thoracic_excision_of_tumor-mass_in_thoracic_cavity" ) ) ), ConsesLow.list(
                                                                                                                    constant_handles.reader_make_constant_shell( makeString(
                                                                                                                        "SurgicalProcedure_thoracic_not_transplant" ) ) ), ConsesLow.list( constant_handles
                                                                                                                            .reader_make_constant_shell( makeString( "ThoracicHerniaRepair-SurgicalProcedure" ) ) )
                                                                            } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ThrombectomyOrTumorExcision-SurgicalProcedure" ) ) ), ConsesLow
                                                                                .list( constant_handles.reader_make_constant_shell( makeString( "TumorExcision" ) ), ConsesLow.list( constant_handles
                                                                                    .reader_make_constant_shell( makeString( "AtrialExcisionOfTumor-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                        .reader_make_constant_shell( makeString( "Excision-ValvularTumor" ) ) ), ConsesLow.list( constant_handles
                                                                                            .reader_make_constant_shell( makeString( "SurgicalProcedure_other_cardiac_excision_of_tumor" ) ), ConsesLow.list(
                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                    "SurgicalProcedure_other_cardiac_excision_of_tumor-mass_in_pulmonary_artery" ) ) ) ), ConsesLow.list( constant_handles
                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                            "SurgicalProcedure_thoracic_excision_of_tumor-mass_in_thoracic_cavity" ) ) ), ConsesLow.list( constant_handles
                                                                                                                .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_excision_of_tumor" ) ) ) ), ConsesLow
                                                                                                                    .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "RepairingFn" ) ),
                                                                                                                        constant_handles.reader_make_constant_shell( makeString( "BloodVessel" ) ) ), ConsesLow.list(
                                                                                                                            constant_handles.reader_make_constant_shell( makeString( "AneurysmRepair-SurgicalProcedure" ) ),
                                                                                                                            ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                "Repair-AtrialSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                        "RepairOrResection-VentricularSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow
                                                                                                                                            .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                    .reader_make_constant_shell( makeString(
                                                                                                                                                        "AneurysmRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                            .reader_make_constant_shell( makeString( "objectActedOn" ) ),
                                                                                                                                                constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                    "AbdominalAorta" ) ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                                                        constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                            "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles
                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                    "AneurysmRepair-SurgicalProcedure" ) ), constant_handles
                                                                                                                                                                        .reader_make_constant_shell( makeString(
                                                                                                                                                                            "objectActedOn" ) ), constant_handles
                                                                                                                                                                                .reader_make_constant_shell( makeString(
                                                                                                                                                                                    "ThoracicAorta" ) ) ) ) ) )
              } ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SuturingProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "SuturingProcedure-FigureOf8" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TestCollectionForMV" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                      makeString( "Thrombectomy" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AtrialThrombectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricle" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "SurgicalProcedure_ventricle_thrombectomy_of_ventricular_outflow_tract" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "SurgicalProcedure_ventricle_thrombectomy_of_left_ventricular_outflow_tract" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Transfer" ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "TransferPosteriorToAnterior" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                  "TransferPosteriorToPosterior" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VascularProcedure-OtherOrAorta" ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "AorticProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AbdominalAortaProcedure-Surgical" ) ) ), ConsesLow
                          .list( constant_handles.reader_make_constant_shell( makeString( "Aortoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                              "BentallHemashieldValvedConduit-VascularProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "ElephantTrunkAortaReplacementStage1-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ThoracicAortaProcedure-Surgical" ) ) ) ),
                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OtherVascularProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                          "SurgicalProcedure_vascular_pulmonary" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_vascular_vena_cava" ) ) ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "ThoracicAortaProcedure-STS" ) ) ) ), ConsesLow.list( new SubLObject[]
                              { constant_handles.reader_make_constant_shell( makeString( "VascularProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                  "AorticProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AbdominalAortaProcedure-Surgical" ) ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "Aortoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "BentallHemashieldValvedConduit-VascularProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                              "ElephantTrunkAortaReplacementStage1-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                  "ThoracicAortaProcedure-Surgical" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ArterioscleroticPlaqueRemoval-Procedure" ) ),
                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Endarterectomy-SurgicalProcedure" ) ), ConsesLow.list( constant_handles
                                                          .reader_make_constant_shell( makeString( "AtrialEndarterectomy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                              "EndarterectomyLaser-SurgicalProcedure" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                  "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "Endarterectomy-SurgicalProcedure" ) ),
                                                                  constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                      "CommonCarotidArtery" ) ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                          "BalloonDilatation-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                              "BypassGraft-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                  "BypassGraftWithSaphenousVein-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "CoronaryArteryBypassGraft-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                          "CABGWithBilateralITAGraft" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "CABGWithMultipleGrafts" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                  "CabgWithSingleITAGraft" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                      "SingleGraftCAGB" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                          "BypassGraftWithHemashield-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                                                              makeString( "CabrolFistula-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "CongenitalIntervention-MedicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "CoronaryArteryProcedureNonCongenital-Surgical" ) ), ConsesLow.list( constant_handles
                                                                                                                              .reader_make_constant_shell( makeString( "CoronaryArteryBypassGraft-SurgicalProcedure" ) ),
                                                                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "CABGWithBilateralITAGraft" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString( "CABGWithMultipleGrafts" ) ) ), ConsesLow
                                                                                                                                          .list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                              "CabgWithSingleITAGraft" ) ) ), ConsesLow.list( constant_handles
                                                                                                                                                  .reader_make_constant_shell( makeString( "SingleGraftCAGB" ) ) ) ),
                                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                                                          "OtherVascularCoronaryArteryProcedure-Surgical" ) ) ), ConsesLow.list( ConsesLow.list(
                                                                                                                              constant_handles.reader_make_constant_shell( makeString( "CollectionDifferenceFn" ) ),
                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                  "CoronaryArteryProcedureNonCongenital-Surgical" ) ), constant_handles
                                                                                                                                      .reader_make_constant_shell( makeString(
                                                                                                                                          "CoronaryArteryBypassGraft-SurgicalProcedure" ) ) ) ) ), ConsesLow.list(
                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                  "CoronaryLaserProcedure-SurgicalProcedure" ) ) ), ConsesLow.list(
                                                                                                                                                      constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                          "Debridement-VascularProcedure" ) ), ConsesLow.list(
                                                                                                                                                              constant_handles.reader_make_constant_shell( makeString(
                                                                                                                                                                  "ProstheticValveDebridement" ) ) ) ), ConsesLow.list(
                                                                                                                                                                      constant_handles.reader_make_constant_shell(
                                                                                                                                                                          makeString(
                                                                                                                                                                              "EndovascularProcedure-SurgicalProcedure" ) ),
                                                                                                                                                                      ConsesLow.list( constant_handles
                                                                                                                                                                          .reader_make_constant_shell( makeString(
                                                                                                                                                                              "EndovascularStentProcedure-Surgical" ) ),
                                                                                                                                                                          ConsesLow.list( constant_handles
                                                                                                                                                                              .reader_make_constant_shell( makeString(
                                                                                                                                                                                  "EndovascularStentGraft-SurgicalProcedure" ) ),
                                                                                                                                                                              ConsesLow.list( constant_handles
                                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                                      "Debranching_with_endovascular_stent_graft" ) ) ),
                                                                                                                                                                              ConsesLow.list( constant_handles
                                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                                      "EndovascularStentGraftPlacementAfterLeak-SurgicalProcedure" ) ) ),
                                                                                                                                                                              ConsesLow.list( constant_handles
                                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                                      "VascularProcedureName_endovascular_stent_graft_antegrade" ) ) ),
                                                                                                                                                                              ConsesLow.list( constant_handles
                                                                                                                                                                                  .reader_make_constant_shell( makeString(
                                                                                                                                                                                      "VascularProcedureName_endovascular_stent_graft_retrograde" ) ) ) ) ) ),
                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "GraftInsertion" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "EndovascularStentGraft-SurgicalProcedure" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Debranching_with_endovascular_stent_graft" ) ) ), ConsesLow
                                        .list( constant_handles.reader_make_constant_shell( makeString( "EndovascularStentGraftPlacementAfterLeak-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles
                                            .reader_make_constant_shell( makeString( "VascularProcedureName_endovascular_stent_graft_antegrade" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                makeString( "VascularProcedureName_endovascular_stent_graft_retrograde" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "Omentopexy-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OtherVascularProcedure-Surgical" ) ), ConsesLow.list(
                                                        constant_handles.reader_make_constant_shell( makeString( "SurgicalProcedure_vascular_pulmonary" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                            makeString( "SurgicalProcedure_vascular_vena_cava" ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Oversewing" ) ) ),
                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "PatchGraft-SaphenousVein-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                    makeString( "PatchGraft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ReplacementWithConduit-SurgicalProcedure" ) ) ), ConsesLow
                                        .list( constant_handles.reader_make_constant_shell( makeString( "RoofingOfCoronarySinus-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                            makeString( "Shunt-bypassGraft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "ThrombectomyOrTumorExcision-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Unroofing-SurgicalProcedure" ) ) ),
                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "VascularBiopsy-VascularProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "VascularRepairProcedure-Surgical" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "AneurysmRepair-SurgicalProcedure" ) ), ConsesLow.list(
                                        constant_handles.reader_make_constant_shell( makeString( "Repair-AtrialSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                                            makeString( "RepairOrResection-VentricularSeptalAneurysm-SurgicalProcedure" ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "AneurysmRepair-SurgicalProcedure" ) ), constant_handles
                                                    .reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles.reader_make_constant_shell( makeString( "AbdominalAorta" ) ) ) ), ConsesLow.list(
                                                        ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SubcollectionOfWithRelationToTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                            makeString( "AneurysmRepair-SurgicalProcedure" ) ), constant_handles.reader_make_constant_shell( makeString( "objectActedOn" ) ), constant_handles
                                                                .reader_make_constant_shell( makeString( "ThoracicAorta" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                    "Aortoplasty-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                        "RepairAfterPercutaneousValveReplacement-VascularProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                            "RepairByButton-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                "RepairByPatchGraft-SurgicalProcedure" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                    "RepairByStitch-SurgicalProcedure" ) ) ) )
              } )
    } ) ) ) ) ) );
  }

  private static SubLObject _constant_285_initializer()
  {
    return ConsesLow.list( new SubLObject[] { ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
        makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?PERSON" ) ), ConsesLow.list( TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T,
        NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ) ) ),
      ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Person" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ),
          makeSymbol( "?Y" ) ), ConsesLow.list( TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles
              .reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell( makeString( "Person" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                  .reader_make_constant_shell( makeString( "Android" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?AGENT" ) ),
                  ConsesLow.list( TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), NIL, NIL, NIL ), NIL ), ConsesLow.list( ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "Android" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?AGENT" ) ),
                      ConsesLow.list( TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "and" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?ROBOT" ) ),
                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?ROBOT" ), constant_handles.reader_make_constant_shell( makeString( "Android" ) ) ) ) ),
      ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ),
          makeSymbol( "?Y" ) ), ConsesLow.list( TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), NIL, NIL, NIL ), NIL ), ConsesLow.list( ConsesLow.list(
              constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), makeSymbol( "?Y" ) ),
              ConsesLow.list( TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                  makeString( "equals" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "and" ) ), ConsesLow.list( constant_handles
                          .reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), makeSymbol( "?Y" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ),
                              makeSymbol( "?EVENT" ), makeSymbol( "?X" ) ) ), ConsesLow.list( ONE_INTEGER, TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ),
                      T, NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), constant_handles.reader_make_constant_shell( makeString(
                          "OsamaBinLaden" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "and" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), makeSymbol( "?Y" ) ), ConsesLow
                                  .list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?X" ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "dateOfEvent" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?DATE" ) ) ), ConsesLow.list( ONE_INTEGER, TWO_INTEGER ), NIL, constant_handles
                                          .reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "and" ) ),
                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), constant_handles.reader_make_constant_shell( makeString(
                                                  "OsamaBinLaden" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "dateOfEvent" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?DATE" ) ) ) ),
      ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "dateOfEvent" ) ), makeSymbol(
          "?EVENT" ), makeSymbol( "?DATE" ) ), ConsesLow.list( ONE_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), NIL ), ConsesLow.list(
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "dateOfEvent" ) ), makeSymbol(
                  "?EVENT" ), makeSymbol( "?DATE" ) ), ConsesLow.list( TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), NIL ), ConsesLow.list(
                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Person" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "dateOfEvent" ) ), makeSymbol(
                          "?EVENT" ), makeSymbol( "?DATE" ) ), ConsesLow.list( ONE_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), NIL ),
      ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Person" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "dateOfEvent" ) ), makeSymbol(
          "?EVENT" ), makeSymbol( "?DATE" ) ), ConsesLow.list( TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), NIL ), ConsesLow.list(
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list(
                  constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell( makeString( "Cat" ) ) ), ConsesLow.list( constant_handles
                      .reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), makeSymbol( "?Y" ) ) ), ConsesLow.list( TWO_INTEGER, TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell(
                          makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list( constant_handles
                              .reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell( makeString( "Cat" ) ) ), ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "equals" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ) ) ) ), ConsesLow.list( ConsesLow
                                      .list( constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow
                                          .list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?WHO" ), constant_handles.reader_make_constant_shell( makeString( "Cat" ) ) ), ConsesLow
                                              .list( constant_handles.reader_make_constant_shell( makeString( "and" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol(
                                                  "?WHO" ), makeSymbol( "?Y" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), makeSymbol(
                                                      "?WHO" ) ) ) ), ConsesLow.list( TWO_INTEGER, ONE_INTEGER, TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString(
                                                          "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list(
                                                              constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?WHO" ), constant_handles.reader_make_constant_shell( makeString(
                                                                  "Cat" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?EVENT" ), constant_handles
                                                                      .reader_make_constant_shell( makeString( "OsamaBinLaden" ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                          makeString( "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "thereExists" ) ), makeSymbol( "?X" ),
                                                                              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), makeSymbol( "?Y" ) ) ), ConsesLow
                                                                                  .list( TWO_INTEGER, TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T,
                                                                          NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "thereExists" ) ), makeSymbol( "?X" ), ConsesLow.list(
                                                                              constant_handles.reader_make_constant_shell( makeString( "equals" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell(
                                                                                  makeString( "OsamaBinLaden" ) ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                      "OsamaBinLaden" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "thereExists" ) ), makeSymbol( "?Y" ),
                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), makeSymbol( "?Y" ) ) ),
                                                                                      ConsesLow.list( TWO_INTEGER, TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString(
                                                                                          "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                                                              "equals" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ) ) ), ConsesLow
                                                                                                  .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "OsamaBinLaden" ) ), ConsesLow.list(
                                                                                                      constant_handles.reader_make_constant_shell( makeString( "thereExists" ) ), makeSymbol( "?Y" ), ConsesLow.list(
                                                                                                          constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list( constant_handles
                                                                                                              .reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?X" ), makeSymbol( "?Y" ) ), ConsesLow.list(
                                                                                                                  constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?Z" ), makeSymbol(
                                                                                                                      "?Y" ) ) ) ), ConsesLow.list( TWO_INTEGER, ONE_INTEGER, TWO_INTEGER ), NIL, constant_handles
                                                                                                                          .reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ),
                                                                                                      ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "thereExists" ) ), makeSymbol( "?Y" ),
                                                                                                          ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list(
                                                                                                              constant_handles.reader_make_constant_shell( makeString( "equals" ) ), makeSymbol( "?X" ), constant_handles
                                                                                                                  .reader_make_constant_shell( makeString( "OsamaBinLaden" ) ) ), ConsesLow.list( constant_handles
                                                                                                                      .reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?Z" ), makeSymbol( "?Y" ) ) ) ) ),
      ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Person" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list(
          constant_handles.reader_make_constant_shell( makeString( "beneficiary" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?WHO" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
              "maleficiary" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?WHO" ) ) ), ConsesLow.list( ONE_INTEGER, TWO_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString(
                  "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell(
                      makeString( "and" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "beneficiary" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?BENEFICIARY" ) ), ConsesLow.list(
                          constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?BENEFICIARY" ), constant_handles.reader_make_constant_shell( makeString( "Person" ) ) ) ), ConsesLow.list(
                              constant_handles.reader_make_constant_shell( makeString( "maleficiary" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?WHO" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles
                                  .reader_make_constant_shell( makeString( "Person" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list( constant_handles
                                      .reader_make_constant_shell( makeString( "beneficiary" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?WHO" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                          "maleficiary" ) ), makeSymbol( "?EVENT" ), makeSymbol( "?WHO" ) ) ), ConsesLow.list( ONE_INTEGER, TWO_INTEGER ), T, constant_handles.reader_make_constant_shell( makeString(
                                              "TKBSourceSpindleCollectorMt" ) ), T, NIL, NIL ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "and" ) ), ConsesLow.list( constant_handles
                                                  .reader_make_constant_shell( makeString( "or" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "beneficiary" ) ), makeSymbol( "?EVENT" ),
                                                      makeSymbol( "?MALEFICIARY" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "maleficiary" ) ), makeSymbol( "?EVENT" ), makeSymbol(
                                                          "?MALEFICIARY" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "isa" ) ), makeSymbol( "?MALEFICIARY" ), constant_handles
                                                              .reader_make_constant_shell( makeString( "Person" ) ) ) ) )
    } );
  }

  @Override
  public void declareFunctions()
  {
    declare_gke_main_file();
  }

  @Override
  public void initializeVariables()
  {
    init_gke_main_file();
  }

  @Override
  public void runTopLevelForms()
  {
    setup_gke_main_file();
  }
  static
  {
    me = new gke_main();
    $gke_isas_filtered_term_caching_state$ = null;
    $gke_overly_general_non_predicate_types$ = null;
    $gke_filtered_termP_caching_state$ = null;
    $gke_overly_general_predicate_types$ = null;
    $gke_predicate_filteredP_caching_state$ = null;
    $use_rbp_wff_in_gkeP$ = null;
    $gke_memoization_state_caching_state$ = null;
    $generate_gke_gloss_wrt_mt_cached_caching_state$ = null;
    $candidate_replacements_for_sentence_cached_caching_state$ = null;
    $gke_get_elements_caching_state$ = null;
    $omit_suggestion_stumpsP$ = null;
    $dtp_replacement_tree$ = null;
    $use_tva_for_suggestionsP$ = null;
    $default_patience_wait_time$ = null;
    $gke_query_threads$ = null;
    $daemon_should_run_inference_statuses$ = null;
    $gke_run_inference_with_adjusted_dynamic_propertiesP$ = null;
    $inference_done_statuses$ = null;
    $sym0$GET_GKE_ARG_OPTIONS = makeSymbol( "GET-GKE-ARG-OPTIONS" );
    $str1$Got_unknown_arg_type_for___A__ = makeString( "Got unknown arg type for: ~A~%" );
    $kw2$PARENTS = makeKeyword( "PARENTS" );
    $str3$Natural_language_processing_has_d = makeString( "Natural language processing has deleted an entry.~%Wrong sizes ~A and ~A" );
    $kw4$CHILDREN = makeKeyword( "CHILDREN" );
    $kw5$SIBLINGS = makeKeyword( "SIBLINGS" );
    $sym6$GET_GKE_EXPANDED_ITEMS = makeSymbol( "GET-GKE-EXPANDED-ITEMS" );
    $kw7$ANY = makeKeyword( "ANY" );
    $list8 = ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "forAll" ) ), constant_handles.reader_make_constant_shell( makeString( "thereExists" ) ), constant_handles.reader_make_constant_shell(
        makeString( "thereExistExactly" ) ), constant_handles.reader_make_constant_shell( makeString( "thereExistAtLeast" ) ), constant_handles.reader_make_constant_shell( makeString( "thereExistAtMost" ) ),
        constant_handles.reader_make_constant_shell( makeString( "thereExistRange" ) ) );
    $list9 = ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "AFew-Quant" ) ), constant_handles.reader_make_constant_shell( makeString( "Few-Quant" ) ), constant_handles
        .reader_make_constant_shell( makeString( "Many-Quant" ) ), constant_handles.reader_make_constant_shell( makeString( "Most-Quant" ) ), constant_handles.reader_make_constant_shell( makeString( "Tens-Quant" ) ),
      constant_handles.reader_make_constant_shell( makeString( "Dozens-Quant" ) ), constant_handles.reader_make_constant_shell( makeString( "Hundreds-Quant" ) ), constant_handles.reader_make_constant_shell( makeString(
          "Thousands-Quant" ) ), constant_handles.reader_make_constant_shell( makeString( "Millions-Quant" ) ), constant_handles.reader_make_constant_shell( makeString( "Billions-Quant" ) )
    } );
    $sym10$GET_GKE_QUANTIFIER_RANGES = makeSymbol( "GET-GKE-QUANTIFIER-RANGES" );
    $str11$Get_the_quantifier_ranges = makeString( "Get the quantifier ranges" );
    $sym12$STRING_LESSP = makeSymbol( "STRING-LESSP" );
    $sym13$NULL = makeSymbol( "NULL" );
    $sym14$NART_SUBSTITUTE = makeSymbol( "NART-SUBSTITUTE" );
    $int15$200 = makeInteger( 200 );
    $kw16$NEW = makeKeyword( "NEW" );
    $sym17$GKE_LIST_ITEM_COMPARATOR = makeSymbol( "GKE-LIST-ITEM-COMPARATOR" );
    $int18$175 = makeInteger( 175 );
    $sym19$GKE_FILTERED_TERM_ = makeSymbol( "GKE-FILTERED-TERM?" );
    $sym20$RKF_MAX_SPECS = makeSymbol( "RKF-MAX-SPECS" );
    $sym21$RKF_INSTANTIATIONS = makeSymbol( "RKF-INSTANTIATIONS" );
    $const22$Collection = constant_handles.reader_make_constant_shell( makeString( "Collection" ) );
    $sym23$GKE_ISAS_FILTERED_TERM = makeSymbol( "GKE-ISAS-FILTERED-TERM" );
    $sym24$ALL_GENLS = makeSymbol( "ALL-GENLS" );
    $sym25$RKF_ALL_GENLS = makeSymbol( "RKF-ALL-GENLS" );
    $sym26$_GKE_ISAS_FILTERED_TERM_CACHING_STATE_ = makeSymbol( "*GKE-ISAS-FILTERED-TERM-CACHING-STATE*" );
    $list27 = ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "Collection" ) ), constant_handles.reader_make_constant_shell( makeString( "ConventionalClassificationType" ) ),
      constant_handles.reader_make_constant_shell( makeString( "SiblingDisjointSetOrCollectionType" ) ), constant_handles.reader_make_constant_shell( makeString( "SetOrCollectionType" ) ), constant_handles
          .reader_make_constant_shell( makeString( "DisjointSetOrCollectionType" ) ), constant_handles.reader_make_constant_shell( makeString( "SecondOrderCollection" ) ), ConsesLow.list( constant_handles
              .reader_make_constant_shell( makeString( "GroupFn" ) ), constant_handles.reader_make_constant_shell( makeString( "PartiallyTangible" ) ) ), constant_handles.reader_make_constant_shell( makeString(
                  "ObjectType" ) ), constant_handles.reader_make_constant_shell( makeString( "Group" ) ), constant_handles.reader_make_constant_shell( makeString( "Entity" ) ), constant_handles
                      .reader_make_constant_shell( makeString( "PublicConstant-DefinitionalGAFsOK" ) ), constant_handles.reader_make_constant_shell( makeString( "ExistingStuffType" ) ), constant_handles
                          .reader_make_constant_shell( makeString( "StuffType" ) ), constant_handles.reader_make_constant_shell( makeString( "PublicConstant-CommentOK" ) ), constant_handles.reader_make_constant_shell(
                              makeString( "ReformulatorIrrelevantFORT" ) ), constant_handles.reader_make_constant_shell( makeString( "ExistingObjectType" ) ), constant_handles.reader_make_constant_shell( makeString(
                                  "Individual" ) )
    } );
    $sym28$_GKE_FILTERED_TERM__CACHING_STATE_ = makeSymbol( "*GKE-FILTERED-TERM?-CACHING-STATE*" );
    $list29 = ConsesLow.list( new SubLObject[] { constant_handles.reader_make_constant_shell( makeString( "SetOrCollectionPredicate" ) ), constant_handles.reader_make_constant_shell( makeString(
        "EvaluatablePredicate" ) ), constant_handles.reader_make_constant_shell( makeString( "AsymmetricBinaryPredicate" ) ), constant_handles.reader_make_constant_shell( makeString( "ReflexiveBinaryPredicate" ) ),
      constant_handles.reader_make_constant_shell( makeString( "TransitiveBinaryPredicate" ) ), constant_handles.reader_make_constant_shell( makeString( "RuleMacroPredicate" ) ), constant_handles
          .reader_make_constant_shell( makeString( "OpenCycDefinitionalPredicate" ) ), constant_handles.reader_make_constant_shell( makeString( "VocabularyDefiningPredicate" ) ), constant_handles
              .reader_make_constant_shell( makeString( "DefaultMonotonicPredicate" ) )
    } );
    $sym30$GKE_PREDICATE_FILTERED_ = makeSymbol( "GKE-PREDICATE-FILTERED?" );
    $kw31$TRUE = makeKeyword( "TRUE" );
    $list32 = ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "arg1Isa" ) ), constant_handles.reader_make_constant_shell( makeString( "arg1Genl" ) ), constant_handles.reader_make_constant_shell(
        makeString( "arg1NotIsa" ) ), constant_handles.reader_make_constant_shell( makeString( "arg1NotGenl" ) ), constant_handles.reader_make_constant_shell( makeString( "arg1Format" ) ) );
    $sym33$_GKE_PREDICATE_FILTERED__CACHING_STATE_ = makeSymbol( "*GKE-PREDICATE-FILTERED?-CACHING-STATE*" );
    $sym34$LISTP = makeSymbol( "LISTP" );
    $sym35$TREE_POSITION_P = makeSymbol( "TREE-POSITION-P" );
    $sym36$CYCL_FORMULA_ = makeSymbol( "CYCL-FORMULA?" );
    $sym37$HLMT_P = makeSymbol( "HLMT-P" );
    $str38$OPERATOR_TERMS_PASS_CONSTRAINTS_r = makeString( "OPERATOR-TERMS-PASS-CONSTRAINTS requires an operator arg position. Got ~S" );
    $str39$OPERATOR_TERMS_PASS_CONSTRAINTS_r = makeString( "OPERATOR-TERMS-PASS-CONSTRAINTS requires an argument arg position. Got ~S" );
    $sym40$GET_GKE_NAUT_ARG_POSITION = makeSymbol( "GET-GKE-NAUT-ARG-POSITION" );
    $sym41$GET_GKE_IS_KNOWN = makeSymbol( "GET-GKE-IS-KNOWN" );
    $kw42$HTML = makeKeyword( "HTML" );
    $const43$GenericIntelligenceAnalysis_CAE_A = constant_handles.reader_make_constant_shell( makeString( "GenericIntelligenceAnalysis-CAE-Allotment" ) );
    $kw44$TEXT = makeKeyword( "TEXT" );
    $const45$GenericMedicalResearchTask_Allotm = constant_handles.reader_make_constant_shell( makeString( "GenericMedicalResearchTask-Allotment" ) );
    $kw46$UNKNOWN = makeKeyword( "UNKNOWN" );
    $kw47$DEFAULT = makeKeyword( "DEFAULT" );
    $kw48$DECLARATIVE = makeKeyword( "DECLARATIVE" );
    $kw49$NONE = makeKeyword( "NONE" );
    $str50$Show_all_values_of_ = makeString( "Show all values of " );
    $str51$_such_that__ = makeString( " such that~%" );
    $str52$Is_it_true_that__ = makeString( "Is it true that~%" );
    $const53$TheCoordinationSet = constant_handles.reader_make_constant_shell( makeString( "TheCoordinationSet" ) );
    $sym54$PPH_ANCHOR_TAGS_FOR_TERM = makeSymbol( "PPH-ANCHOR-TAGS-FOR-TERM" );
    $const55$thereExists = constant_handles.reader_make_constant_shell( makeString( "thereExists" ) );
    $list56 = ConsesLow.list( makeKeyword( "NOR" ), makeKeyword( "NOT" ) );
    $kw57$NOR = makeKeyword( "NOR" );
    $kw58$IGNORE = makeKeyword( "IGNORE" );
    $const59$and = constant_handles.reader_make_constant_shell( makeString( "and" ) );
    $kw60$AND = makeKeyword( "AND" );
    $list61 = ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "unknownSentence" ) ), constant_handles.reader_make_constant_shell( makeString( "not" ) ) );
    $list62 = ConsesLow.list( ONE_INTEGER, ZERO_INTEGER );
    $const63$or = constant_handles.reader_make_constant_shell( makeString( "or" ) );
    $kw64$NOT = makeKeyword( "NOT" );
    $kw65$OR = makeKeyword( "OR" );
    $str66$All_of_the_following_are_true = makeString( "All of the following are true" );
    $str67$At_least_one_of_the_following_is_ = makeString( "At least one of the following is true" );
    $str68$None_of_the_following_is_true = makeString( "None of the following is true" );
    $sym69$GKE_ADD_CLONED_LITERAL = makeSymbol( "GKE-ADD-CLONED-LITERAL" );
    $list70 = ConsesLow.list( makeKeyword( "AND" ), makeKeyword( "OR" ) );
    $str71$_S_must_be_one_of__S = makeString( "~S must be one of ~S" );
    $kw72$ERROR = makeKeyword( "ERROR" );
    $sym73$GKE_REMOVE_LITERAL = makeSymbol( "GKE-REMOVE-LITERAL" );
    $str74$GKEReformulationRuleHoldingMt = makeString( "GKEReformulationRuleHoldingMt" );
    $sym75$EL_SENTENCE_P = makeSymbol( "EL-SENTENCE-P" );
    $kw76$LOOSEN = makeKeyword( "LOOSEN" );
    $kw77$STRENGTHEN = makeKeyword( "STRENGTHEN" );
    $str78$useReformulationRuleForGuidedKnow = makeString( "useReformulationRuleForGuidedKnowledgeEntry" );
    $kw79$META_PREDICATES = makeKeyword( "META-PREDICATES" );
    $list80 = ConsesLow.list( makeKeyword( "ANYTHING" ) );
    $list81 = ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "thereExists" ) ), makeKeyword( "EL-VARIABLE" ), makeKeyword( "ANYTHING" ) );
    $sym82$POSSIBLE_SENTENCE_SUBSTITUTIONS = makeSymbol( "POSSIBLE-SENTENCE-SUBSTITUTIONS" );
    $const83$EnglishMt = constant_handles.reader_make_constant_shell( makeString( "EnglishMt" ) );
    $const84$nonPlural_Generic = constant_handles.reader_make_constant_shell( makeString( "nonPlural-Generic" ) );
    $list85 = ConsesLow.list( makeKeyword( "CASE-INSENSITIVE" ), makeKeyword( "TRUE" ), makeKeyword( "REGULAR-EXPRESSIONS" ), makeKeyword( "FALSE" ) );
    $sym86$STRINGP = makeSymbol( "STRINGP" );
    $const87$Thing = constant_handles.reader_make_constant_shell( makeString( "Thing" ) );
    $sym88$GENERALITY_ESTIMATE_ = makeSymbol( "GENERALITY-ESTIMATE<" );
    $sym89$SUBSTITUTE_TERM_INTO_SENTENCE = makeSymbol( "SUBSTITUTE-TERM-INTO-SENTENCE" );
    $sym90$NART_P = makeSymbol( "NART-P" );
    $sym91$NART_EL_FORMULA = makeSymbol( "NART-EL-FORMULA" );
    $str92$_S_does_not_have_arg_position__S = makeString( "~S does not have arg-position ~S" );
    $sym93$EL_FORMULA_P = makeSymbol( "EL-FORMULA-P" );
    $const94$isa = constant_handles.reader_make_constant_shell( makeString( "isa" ) );
    $list95 = ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "and" ) ) );
    $sym96$EL_VAR_ = makeSymbol( "EL-VAR?" );
    $sym97$EL_VAR_NAME = makeSymbol( "EL-VAR-NAME" );
    $const98$Individual = constant_handles.reader_make_constant_shell( makeString( "Individual" ) );
    $const99$TheSet = constant_handles.reader_make_constant_shell( makeString( "TheSet" ) );
    $kw100$EL_VARIABLE = makeKeyword( "EL-VARIABLE" );
    $const101$equals = constant_handles.reader_make_constant_shell( makeString( "equals" ) );
    $sym102$GKE_MEMOIZATION_STATE = makeSymbol( "GKE-MEMOIZATION-STATE" );
    $str103$GKE_Memoization_State = makeString( "GKE Memoization State" );
    $sym104$_GKE_MEMOIZATION_STATE_CACHING_STATE_ = makeSymbol( "*GKE-MEMOIZATION-STATE-CACHING-STATE*" );
    $sym105$CLEAR_GKE_MEMOIZATION_STATE = makeSymbol( "CLEAR-GKE-MEMOIZATION-STATE" );
    $sym106$GKE_GLOSS_FOR_LITERAL = makeSymbol( "GKE-GLOSS-FOR-LITERAL" );
    $sym107$ATOMIC_SENTENCE_ = makeSymbol( "ATOMIC-SENTENCE?" );
    $sym108$RELEVANT_MT_IS_EQ = makeSymbol( "RELEVANT-MT-IS-EQ" );
    $const109$gkeGlossWrtDomainMt = constant_handles.reader_make_constant_shell( makeString( "gkeGlossWrtDomainMt" ) );
    $kw110$GAF = makeKeyword( "GAF" );
    $sym111$GENERATE_GKE_GLOSS_WRT_MT_CACHED = makeSymbol( "GENERATE-GKE-GLOSS-WRT-MT-CACHED" );
    $sym112$_GENERATE_GKE_GLOSS_WRT_MT_CACHED_CACHING_STATE_ = makeSymbol( "*GENERATE-GKE-GLOSS-WRT-MT-CACHED-CACHING-STATE*" );
    $int113$256 = makeInteger( 256 );
    $sym114$CANDIDATE_REPLACEMENT_RENDERERS_FOR_SENTENCE = makeSymbol( "CANDIDATE-REPLACEMENT-RENDERERS-FOR-SENTENCE" );
    $list115 = ConsesLow.cons( makeSymbol( "KEY" ), makeSymbol( "TERMS" ) );
    $kw116$NOT_FOUND = makeKeyword( "NOT-FOUND" );
    $sym117$CANDIDATE_REPLACEMENTS_FOR_VARIABLES = makeSymbol( "CANDIDATE-REPLACEMENTS-FOR-VARIABLES" );
    $sym118$CANDIDATE_REPLACEMENTS_FOR_ARG = makeSymbol( "CANDIDATE-REPLACEMENTS-FOR-ARG" );
    $sym119$CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED = makeSymbol( "CANDIDATE-REPLACEMENTS-FOR-SENTENCE-CACHED" );
    $list120 = ConsesLow.list( makeKeyword( "INFERENCE-MODE" ), makeKeyword( "MINIMAL" ), makeKeyword( "ANSWER-LANGUAGE" ), makeKeyword( "HL" ) );
    $list121 = ConsesLow.cons( makeSymbol( "KEY" ), makeSymbol( "REPLACEMENTS" ) );
    $list122 = ConsesLow.list( makeSymbol( "?REP-COLL" ), makeSymbol( "?REP-POS" ), makeSymbol( "?CON-COLL" ), makeSymbol( "?CON-POS" ) );
    $const123$suggestionsForPredRelativeToIsaIn = constant_handles.reader_make_constant_shell( makeString( "suggestionsForPredRelativeToIsaInArg" ) );
    $list124 = ConsesLow.list( makeSymbol( "REPLACEMENT-COLL" ), makeSymbol( "REPLACEMENT-POS" ), makeSymbol( "CONSTRAINT-COLL" ), makeSymbol( "CONSTRAINT-POS" ) );
    $const125$suggestionsForPredRelativeToGenls = constant_handles.reader_make_constant_shell( makeString( "suggestionsForPredRelativeToGenlsInArg" ) );
    $sym126$_CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED_CACHING_STATE_ = makeSymbol( "*CANDIDATE-REPLACEMENTS-FOR-SENTENCE-CACHED-CACHING-STATE*" );
    $int127$2048 = makeInteger( 2048 );
    $sym128$CLEAR_CANDIDATE_REPLACEMENTS_FOR_SENTENCE_CACHED = makeSymbol( "CLEAR-CANDIDATE-REPLACEMENTS-FOR-SENTENCE-CACHED" );
    $sym129$INTERSECTION = makeSymbol( "INTERSECTION" );
    $sym130$UNION = makeSymbol( "UNION" );
    $sym131$GKE_GET_ELEMENTS = makeSymbol( "GKE-GET-ELEMENTS" );
    $sym132$HL_PROTOTYPICAL_INSTANCE_ = makeSymbol( "HL-PROTOTYPICAL-INSTANCE?" );
    $sym133$_X = makeSymbol( "?X" );
    $const134$elementOf = constant_handles.reader_make_constant_shell( makeString( "elementOf" ) );
    $sym135$_GKE_GET_ELEMENTS_CACHING_STATE_ = makeSymbol( "*GKE-GET-ELEMENTS-CACHING-STATE*" );
    $sym136$CLEAR_GKE_GET_ELEMENTS = makeSymbol( "CLEAR-GKE-GET-ELEMENTS" );
    $sym137$NEW_REPLACEMENT_TREE = makeSymbol( "NEW-REPLACEMENT-TREE" );
    $list138 = ConsesLow.cons( makeSymbol( "BIN-PRED" ), makeSymbol( "ARGNUM" ) );
    $str139$__Conflating__S_to__S_____ = makeString( "~&Conflating ~S to ~S...~%" );
    $sym140$_OMIT_SUGGESTION_STUMPS__ = makeSymbol( "*OMIT-SUGGESTION-STUMPS?*" );
    $sym141$REPLACEMENT_TREE = makeSymbol( "REPLACEMENT-TREE" );
    $sym142$REPLACEMENT_TREE_P = makeSymbol( "REPLACEMENT-TREE-P" );
    $list143 = ConsesLow.list( makeSymbol( "ROOT" ), makeSymbol( "CHILDREN" ) );
    $list144 = ConsesLow.list( makeKeyword( "ROOT" ), makeKeyword( "CHILDREN" ) );
    $list145 = ConsesLow.list( makeSymbol( "R-TREE-ROOT" ), makeSymbol( "R-TREE-CHILDREN" ) );
    $list146 = ConsesLow.list( makeSymbol( "_CSETF-R-TREE-ROOT" ), makeSymbol( "_CSETF-R-TREE-CHILDREN" ) );
    $sym147$PRINT_REPLACEMENT_TREE = makeSymbol( "PRINT-REPLACEMENT-TREE" );
    $sym148$REPLACEMENT_TREE_PRINT_FUNCTION_TRAMPOLINE = makeSymbol( "REPLACEMENT-TREE-PRINT-FUNCTION-TRAMPOLINE" );
    $list149 = ConsesLow.list( makeSymbol( "OPTIMIZE-FUNCALL" ), makeSymbol( "REPLACEMENT-TREE-P" ) );
    $sym150$R_TREE_ROOT = makeSymbol( "R-TREE-ROOT" );
    $sym151$_CSETF_R_TREE_ROOT = makeSymbol( "_CSETF-R-TREE-ROOT" );
    $sym152$R_TREE_CHILDREN = makeSymbol( "R-TREE-CHILDREN" );
    $sym153$_CSETF_R_TREE_CHILDREN = makeSymbol( "_CSETF-R-TREE-CHILDREN" );
    $kw154$ROOT = makeKeyword( "ROOT" );
    $str155$Invalid_slot__S_for_construction_ = makeString( "Invalid slot ~S for construction function" );
    $kw156$BEGIN = makeKeyword( "BEGIN" );
    $sym157$MAKE_REPLACEMENT_TREE = makeSymbol( "MAKE-REPLACEMENT-TREE" );
    $kw158$SLOT = makeKeyword( "SLOT" );
    $kw159$END = makeKeyword( "END" );
    $sym160$VISIT_DEFSTRUCT_OBJECT_REPLACEMENT_TREE_METHOD = makeSymbol( "VISIT-DEFSTRUCT-OBJECT-REPLACEMENT-TREE-METHOD" );
    $str161$_REPLACEMENT_TREE__S_ = makeString( "<REPLACEMENT-TREE ~S>" );
    $sym162$NON_DOTTED_LIST_P = makeSymbol( "NON-DOTTED-LIST-P" );
    $str163$Unable_to_place__D_renderers = makeString( "Unable to place ~D renderers" );
    $str164$Hit_max_depth_of__D__Pruning__D_r = makeString( "Hit max depth of ~D. Pruning ~D remaining renderers." );
    $str165$__Placing__S_under_superiors___S_ = makeString( "~&Placing ~S under superiors: ~S~%" );
    $sym166$SECOND = makeSymbol( "SECOND" );
    $str167$__Found__S_on_level__D___ = makeString( "~&Found ~S on level ~D.~%" );
    $str168$__Not_in_subtree__so_adding__S_un = makeString( "~&Not in subtree, so adding ~S under ~S on level ~D.~%" );
    $str169$___Tree_level__D_is_now__S___ = makeString( "~& Tree level ~D is now ~S.~%" );
    $str170$Found_it_ = makeString( "Found it." );
    $str171$__Postponing__S_because__S_is_not = makeString( "~&Postponing ~S because ~S is not yet in the tree.~%" );
    $sym172$_COL = makeSymbol( "?COL" );
    $const173$suggestionGenlClassOrderedBy = constant_handles.reader_make_constant_shell( makeString( "suggestionGenlClassOrderedBy" ) );
    $list174 = ConsesLow.list( makeSymbol( "?PRED" ), makeSymbol( "?N" ) );
    $list175 = ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "suggestionIsaClassOrderedBy" ) ), makeSymbol( "?COL" ), makeSymbol( "?PRED" ), makeSymbol( "?N" ) );
    $list176 = ConsesLow.list( makeSymbol( "?COL" ) );
    $list177 = ConsesLow.cons( makeSymbol( "?PRED" ), makeSymbol( "?N" ) );
    $kw178$PROBLEM_STORE = makeKeyword( "PROBLEM-STORE" );
    $kw179$INFERENCE_MODE = makeKeyword( "INFERENCE-MODE" );
    $kw180$MINIMAL = makeKeyword( "MINIMAL" );
    $kw181$ANSWER_LANGUAGE = makeKeyword( "ANSWER-LANGUAGE" );
    $kw182$HL = makeKeyword( "HL" );
    $list183 = ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "conflateMembersOfSetWhenGeneratingHierarchicalOrderingsForSpecs" ) ), makeSymbol( "?COL" ), makeSymbol( "?SET" ) );
    $const184$genls = constant_handles.reader_make_constant_shell( makeString( "genls" ) );
    $list185 = ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "conflateMembersOfSetWhenGeneratingHierarchicalOrderingsForInstances" ) ), makeSymbol( "?COL" ), makeSymbol( "?SET" ) );
    $sym186$_SET = makeSymbol( "?SET" );
    $str187$__Filtered_renderers___S__ = makeString( "~&Filtered renderers: ~S~%" );
    $sym188$_USE_TVA_FOR_SUGGESTIONS__ = makeSymbol( "*USE-TVA-FOR-SUGGESTIONS?*" );
    $kw189$X = makeKeyword( "X" );
    $kw190$ALLOWED_MODULES = makeKeyword( "ALLOWED-MODULES" );
    $list191 = ConsesLow.list( makeKeyword( "NOT" ), makeKeyword( "REMOVAL-TVA-UNIFY" ) );
    $list192 = ConsesLow.cons( makeSymbol( "VARIABLE" ), makeSymbol( "VALUE" ) );
    $list193 = ConsesLow.list( ConsesLow.cons( makeSymbol( "?TRUTH" ), makeString( "Yes" ) ) );
    $str194$_ = makeString( " " );
    $str195$_ = makeString( "-" );
    $sym196$POSSIBLY_MT_P = makeSymbol( "POSSIBLY-MT-P" );
    $sym197$QUERY_PROPERTIES_P = makeSymbol( "QUERY-PROPERTIES-P" );
    $kw198$CONDITIONAL_SENTENCE_ = makeKeyword( "CONDITIONAL-SENTENCE?" );
    $list199 = ConsesLow.list( makeSymbol( "*THE-CYCLIST*" ) );
    $sym200$GKE_START_CONTINUABLE_QUERY = makeSymbol( "GKE-START-CONTINUABLE-QUERY" );
    $list201 = ConsesLow.list( makeSymbol( "SENTENCE" ), makeSymbol( "MT" ), makeSymbol( "&OPTIONAL" ), makeSymbol( "PROPERTIES" ) );
    $str202$Setup_a_query__and_immediately_re = makeString( "Setup a query, and immediately return the query identifiers.  A separate java\n   thread will start up the query and check up on it for new results." );
    $list203 = ConsesLow.list( ConsesLow.list( makeSymbol( "SENTENCE" ), makeSymbol( "EL-FORMULA-P" ) ), ConsesLow.list( makeSymbol( "MT" ), makeSymbol( "POSSIBLY-MT-P" ) ), ConsesLow.list( makeSymbol( "PROPERTIES" ),
        makeSymbol( "QUERY-PROPERTIES-P" ) ) );
    $sym204$INTEGERP = makeSymbol( "INTEGERP" );
    $kw205$QUEUE = makeKeyword( "QUEUE" );
    $kw206$DAEMON = makeKeyword( "DAEMON" );
    $str207$Error_with_query___A__ = makeString( "Error with query: ~A~%" );
    $sym208$GKE_CONTINUE_QUERY = makeSymbol( "GKE-CONTINUE-QUERY" );
    $list209 = ConsesLow.list( makeSymbol( "PROBLEM-STORE-ID" ), makeSymbol( "INFERENCE-ID" ), makeSymbol( "PROPERTIES" ), makeSymbol( "&OPTIONAL" ), makeSymbol( "SPECIAL-STATE" ) );
    $str210$Continue_an_existing_query__ident = makeString(
        "Continue an existing query (identified by PROBLEM-STORE-ID and INFERENCE-ID), \n   using PROPERTIES and immediately return the query identifiers.  A separate thread\n   will be started to keep track of the results and provide them to any other tools \n   (e.g. the Query Library) that need them." );
    $list211 = ConsesLow.list( ConsesLow.list( makeSymbol( "PROBLEM-STORE-ID" ), makeSymbol( "INTEGERP" ) ), ConsesLow.list( makeSymbol( "INFERENCE-ID" ), makeSymbol( "INTEGERP" ) ), ConsesLow.list( makeSymbol(
        "PROPERTIES" ), makeSymbol( "LISTP" ) ) );
    $str212$gke_query_thread__A__A = makeString( "gke query thread ~A ~A" );
    $sym213$GKE_RUN_INFERENCE = makeSymbol( "GKE-RUN-INFERENCE" );
    $str214$results_daemon__A__A = makeString( "results daemon ~A ~A" );
    $sym215$RESULTS_DAEMON = makeSymbol( "RESULTS-DAEMON" );
    $kw216$IGNORE_ERRORS_TARGET = makeKeyword( "IGNORE-ERRORS-TARGET" );
    $sym217$IGNORE_ERRORS_HANDLER = makeSymbol( "IGNORE-ERRORS-HANDLER", "SUBLISP" );
    $kw218$BINDINGS = makeKeyword( "BINDINGS" );
    $kw219$SOURCE_ICONS = makeKeyword( "SOURCE-ICONS" );
    $list220 = ConsesLow.list( makeKeyword( "RUNNING" ), makeKeyword( "NEW" ), makeKeyword( "PREPARED" ), makeKeyword( "READY" ) );
    $kw221$MAX_TIME = makeKeyword( "MAX-TIME" );
    $kw222$MAX_TRANSFORMATION_DEPTH = makeKeyword( "MAX-TRANSFORMATION-DEPTH" );
    $sym223$SPECIAL_VARIABLE_STATE_P = makeSymbol( "SPECIAL-VARIABLE-STATE-P" );
    $sym224$GKE_GET_ONE_INFERENCE_RESULT = makeSymbol( "GKE-GET-ONE-INFERENCE-RESULT" );
    $list225 = ConsesLow.list( makeSymbol( "PROBLEM-STORE-ID" ), makeSymbol( "INFERENCE-ID" ) );
    $str226$Get_one_inference_result = makeString( "Get one inference result" );
    $list227 = ConsesLow.list( ConsesLow.list( makeSymbol( "PROBLEM-STORE-ID" ), makeSymbol( "INTEGERP" ) ), ConsesLow.list( makeSymbol( "INFERENCE-ID" ), makeSymbol( "INTEGERP" ) ) );
    $sym228$ID_OF_VALID_PROBLEM_STORE_P = makeSymbol( "ID-OF-VALID-PROBLEM-STORE-P" );
    $kw229$SKIP = makeKeyword( "SKIP" );
    $sym230$GKE_GET_INFERENCE_RESULTS = makeSymbol( "GKE-GET-INFERENCE-RESULTS" );
    $str231$get_all_the_inference_results_so_ = makeString(
        "get all the inference results so far.\n@return LISTP of LISTP of triples of the form\n  - string-paraphrase of EL variable\n  - javalist-paraphrase of the variable's value\n  - CycL term to which the variable is bound\none list of triples for each set of bindings for the specified inference." );
    $list232 = ConsesLow.list( ConsesLow.list( makeSymbol( "PROBLEM-STORE-ID" ), makeSymbol( "ID-OF-VALID-PROBLEM-STORE-P" ) ), ConsesLow.list( makeSymbol( "INFERENCE-ID" ), makeSymbol( "INTEGERP" ) ) );
    $list233 = ConsesLow.list( makeKeyword( "SUSPENDED" ), makeKeyword( "DEAD" ), makeKeyword( "TAUTOLOGY" ), makeKeyword( "CONTRADICTION" ) );
    $sym234$GKE_INFERENCE_COMPLETE_ = makeSymbol( "GKE-INFERENCE-COMPLETE?" );
    $str235$ret_t_iff_inference_is_suspended_ = makeString( "ret t iff inference is suspended || dead || tautology || contradiction\n&& queue is empty && daemon is :completed" );
    $sym236$GKE_GET_INFERENCE_STATUS = makeSymbol( "GKE-GET-INFERENCE-STATUS" );
    $str237$get_the_status_of_the_inference = makeString( "get the status of the inference" );
    $sym238$GKE_GET_INFERENCE_SUSPEND_STATUS = makeSymbol( "GKE-GET-INFERENCE-SUSPEND-STATUS" );
    $str239$get_the_suspend_status_of_the_inf = makeString( "get the suspend-status of the inference" );
    $sym240$NULL_OR_INTEGERP = makeSymbol( "NULL-OR-INTEGERP" );
    $sym241$GKE_STOP_CONTINUABLE_QUERY = makeSymbol( "GKE-STOP-CONTINUABLE-QUERY" );
    $list242 = ConsesLow.list( makeSymbol( "PROBLEM-STORE-ID" ), makeSymbol( "INFERENCE-ID" ), makeSymbol( "&OPTIONAL" ), makeSymbol( "PATIENCE" ) );
    $str243$Find_and_stop_the_inference_ = makeString( "Find and stop the inference." );
    $list244 = ConsesLow.list( ConsesLow.list( makeSymbol( "PROBLEM-STORE-ID" ), makeSymbol( "INTEGERP" ) ), ConsesLow.list( makeSymbol( "INFERENCE-ID" ), makeSymbol( "INTEGERP" ) ), ConsesLow.list( makeSymbol(
        "PATIENCE" ), makeSymbol( "NULL-OR-INTEGERP" ) ) );
    $sym245$GKE_RELEASE_INFERENCE_RESOURCES = makeSymbol( "GKE-RELEASE-INFERENCE-RESOURCES" );
    $str246$Destroy_problem_store_and_inferen = makeString( "Destroy problem store and inference" );
    $sym247$GKE_TEST_QUERIES = makeSymbol( "GKE-TEST-QUERIES" );
    $sym248$_SENT = makeSymbol( "?SENT" );
    $sym249$_QUERY = makeSymbol( "?QUERY" );
    $list250 = ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "sentenceParameterValueInSpecification" ) ), makeSymbol( "?SENT" ), ConsesLow.list( constant_handles
        .reader_make_constant_shell( makeString( "TestQueryFn" ) ), makeSymbol( "?QUERY" ) ) ) );
    $const251$TestVocabularyMt = constant_handles.reader_make_constant_shell( makeString( "TestVocabularyMt" ) );
    $str252$GKE_Query_Sentence_Literal_Manipu = makeString( "GKE Query Sentence Literal Manipulation" );
    $str253$GKE_Main_Test_Suite = makeString( "GKE Main Test Suite" );
    $list254 = ConsesLow.list( makeString( "GKE Query Sentence Literal Manipulation" ) );
    $sym255$TEST_CANDIDATE_REPLACEMENTS = makeSymbol( "TEST-CANDIDATE-REPLACEMENTS" );
    $kw256$TEST = makeKeyword( "TEST" );
    $sym257$CANDIDATE_REPLACEMENTS_EQUAL_ = makeSymbol( "CANDIDATE-REPLACEMENTS-EQUAL?" );
    $kw258$OWNER = makeKeyword( "OWNER" );
    $kw259$CLASSES = makeKeyword( "CLASSES" );
    $list260 = ConsesLow.list( makeSymbol( "GKE-TEST-CASE-TABLES" ) );
    $kw261$KB = makeKeyword( "KB" );
    $kw262$FULL = makeKeyword( "FULL" );
    $kw263$WORKING_ = makeKeyword( "WORKING?" );
    $list264 = ConsesLow.list( ConsesLow.list( ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "dataForValveOfEventRecordsStenosisSeverity" ) ), makeSymbol(
        "?CARDIAC-VALVE-DATA" ), makeSymbol( "?MEDICALLY-RELATED-EVENT" ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles
            .reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), constant_handles.reader_make_constant_shell( makeString( "CCF-CAE-QueryMt" ) ) ), ConsesLow.list( ConsesLow.list( new SubLObject[]
            { ConsesLow.list( THREE_INTEGER ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis_unknown" ) ), constant_handles.reader_make_constant_shell( makeString(
                "CardiacValveStenosis_critical" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis_trivial" ) ), constant_handles.reader_make_constant_shell( makeString(
                    "CardiacValveStenosis_present" ) ), constant_handles.reader_make_constant_shell( makeString( "None-CardiacValveStenosis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                        "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ), ConsesLow.list( constant_handles
                            .reader_make_constant_shell( makeString( "SeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ), constant_handles
                                .reader_make_constant_shell( makeString( "ModerateToModerate-SevereToSevereCardiacValveStenosis" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                    "MildPhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ), ConsesLow.list( constant_handles
                                        .reader_make_constant_shell( makeString( "MildToModeratePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ),
              ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModeratePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ),
              constant_handles.reader_make_constant_shell( makeString( "Moderate-SevereToSevereCardiacValveStenosis" ) )
    } ) ) ) );
    $sym265$FORT_P = makeSymbol( "FORT-P" );
    $sym266$_EXIT = makeSymbol( "%EXIT" );
    $sym267$SORT_RESULT = makeSymbol( "SORT-RESULT" );
    $sym268$REMOVE_JAVALIST_DETAIL = makeSymbol( "REMOVE-JAVALIST-DETAIL" );
    $list269 = ConsesLow.cons( makeSymbol( "ARG-POSITION" ), makeSymbol( "GROVES" ) );
    $sym270$SORT_GROVE = makeSymbol( "SORT-GROVE" );
    $sym271$TERM___WITH_CONSTANT_BY_NAME = makeSymbol( "TERM-<-WITH-CONSTANT-BY-NAME" );
    $sym272$CAR = makeSymbol( "CAR" );
    $sym273$SORT_TREE = makeSymbol( "SORT-TREE" );
    $list274 = ConsesLow.cons( makeSymbol( "ROOT" ), makeSymbol( "SUBTREES" ) );
    $list275 = ConsesLow.listS( makeSymbol( "ARG-POSITION" ), makeSymbol( "FLAT-LIST" ), makeSymbol( "GROVES" ) );
    $list276 = ConsesLow.list( makeSymbol( "JAVALIST" ), makeSymbol( "TERM" ) );
    $sym277$TEST_CANDIDATE_REPLACEMENT_RENDERERS_FOR_VARS = makeSymbol( "TEST-CANDIDATE-REPLACEMENT-RENDERERS-FOR-VARS" );
    $list278 = ConsesLow.list( ConsesLow.list( ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "medicalTestRelevantToPhysiologicalConditionType" ) ), constant_handles
        .reader_make_constant_shell( makeString( "DiastolicBloodPressureTest" ) ), constant_handles.reader_make_constant_shell( makeString( "RenalDisease" ) ) ), ConsesLow.list( constant_handles
            .reader_make_constant_shell( makeString( "medicalTestRelevantToPhysiologicalConditionType" ) ), makeSymbol( "?X" ), constant_handles.reader_make_constant_shell( makeString( "RenalDisease" ) ) ), ConsesLow
                .list( constant_handles.reader_make_constant_shell( makeString( "DocumentReaderFollowupsForTaskMtFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                    "GenericMedicalResearchTask-Allotment" ) ) ) ), T ) );
    $sym279$TEST_CANDIDATE_REPLACEMENT_RENDERERS_STUMPS = makeSymbol( "TEST-CANDIDATE-REPLACEMENT-RENDERERS-STUMPS" );
    $list280 = ConsesLow.list( ConsesLow.list( ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "dataForValveOfEventRecordsStenosisSeverity" ) ), makeSymbol(
        "?CARDIAC-VALVE-DATA" ), makeSymbol( "?MEDICALLY-RELATED-EVENT" ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles
            .reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), constant_handles.reader_make_constant_shell( makeString( "MedicalResearchCAEGuidanceMt" ) ) ), ConsesLow.list( ConsesLow.list(
                ConsesLow.list( ConsesLow.list( THREE_INTEGER ), ConsesLow.list( new SubLObject[]
                { ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis_critical" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "CardiacValveStenosis_present" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis_trivial" ) ) ), ConsesLow.list( constant_handles
                        .reader_make_constant_shell( makeString( "CardiacValveStenosis_unknown" ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "Moderate-SevereToSevereCardiacValveStenosis" ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list(
                                    constant_handles.reader_make_constant_shell( makeString( "SeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                        "CardiacValveStenosis" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModerateToModerate-SevereToSevereCardiacValveStenosis" ) ), ConsesLow
                                            .list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModeratePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell(
                                                makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                                                    "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow
                                                        .list( constant_handles.reader_make_constant_shell( makeString( "SeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                            "CardiacValveStenosis" ) ) ) ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "None-CardiacValveStenosis" ) ) ), ConsesLow.list(
                                                                ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "MildPhysiologicalConditionOfTypeFn" ) ), constant_handles
                                                                    .reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                                                        makeString( "MildToModeratePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                                                            "CardiacValveStenosis" ) ) ) )
                } ) ) ), ConsesLow.list( ConsesLow.list( ConsesLow.list( THREE_INTEGER ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                    "Moderate-SevereToSevereCardiacValveStenosis" ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ),
                        constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
                            "SeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ) ), ConsesLow.list( constant_handles
                                .reader_make_constant_shell( makeString( "ModerateToModerate-SevereToSevereCardiacValveStenosis" ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell(
                                    makeString( "ModeratePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list(
                                        constant_handles.reader_make_constant_shell( makeString( "ModerateToSeverePhysiologicalConditionOfTypeFn" ) ), constant_handles.reader_make_constant_shell( makeString(
                                            "CardiacValveStenosis" ) ) ) ), ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "SeverePhysiologicalConditionOfTypeFn" ) ),
                                                constant_handles.reader_make_constant_shell( makeString( "CardiacValveStenosis" ) ) ) ) ) ) ) ) ) ) );
    $sym281$TEST_CANDIDATE_REPLACEMENT_RENDERERS = makeSymbol( "TEST-CANDIDATE-REPLACEMENT-RENDERERS" );
    $list282 = _constant_282_initializer();
    $sym283$NARTIFY_AND_SUBSTITUTE_TERM_INTO_SENTENCE = makeSymbol( "NARTIFY-AND-SUBSTITUTE-TERM-INTO-SENTENCE" );
    $list284 = ConsesLow.list( ConsesLow.list( ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "Italy" ) ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString(
        "performedBy" ) ), makeSymbol( "?ACT" ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "GovernmentFn" ) ), constant_handles.reader_make_constant_shell( makeString( "France" ) ) ) ),
        ConsesLow.list( TWO_INTEGER, ONE_INTEGER ), NIL, constant_handles.reader_make_constant_shell( makeString( "TKBSourceSpindleCollectorMt" ) ), NIL, NIL, NIL ), ConsesLow.list( constant_handles
            .reader_make_constant_shell( makeString( "performedBy" ) ), makeSymbol( "?ACT" ), ConsesLow.list( constant_handles.reader_make_constant_shell( makeString( "GovernmentFn" ) ), constant_handles
                .reader_make_constant_shell( makeString( "Italy" ) ) ) ) ) );
    $list285 = _constant_285_initializer();
  }

  public static final class $replacement_tree_native
      extends
        SubLStructNative
  {
    public SubLObject $root;
    public SubLObject $children;
    private static final SubLStructDeclNative structDecl;

    public $replacement_tree_native()
    {
      this.$root = CommonSymbols.NIL;
      this.$children = CommonSymbols.NIL;
    }

    @Override
    public SubLStructDecl getStructDecl()
    {
      return $replacement_tree_native.structDecl;
    }

    @Override
    public SubLObject getField2()
    {
      return this.$root;
    }

    @Override
    public SubLObject getField3()
    {
      return this.$children;
    }

    @Override
    public SubLObject setField2(final SubLObject value)
    {
      return this.$root = value;
    }

    @Override
    public SubLObject setField3(final SubLObject value)
    {
      return this.$children = value;
    }
    static
    {
      structDecl = Structures.makeStructDeclNative( $replacement_tree_native.class, $sym141$REPLACEMENT_TREE, $sym142$REPLACEMENT_TREE_P, $list143, $list144, new String[] { "$root", "$children"
      }, $list145, $list146, $sym147$PRINT_REPLACEMENT_TREE );
    }
  }

  public static final class $replacement_tree_p$UnaryFunction
      extends
        UnaryFunction
  {
    public $replacement_tree_p$UnaryFunction()
    {
      super( SubLTranslatedFile.extractFunctionNamed( "REPLACEMENT-TREE-P" ) );
    }

    @Override
    public SubLObject processItem(final SubLObject arg1)
    {
      return replacement_tree_p( arg1 );
    }
  }
}
/*
 * 
 * Total time: 6984 ms
 * 
 */