/* For LarKC */
package com.cyc.tool.subl.jrtl.nativeCode.subLisp;

import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.*;

import org.armedbear.lisp.*;

import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.*;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLNil;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLT;

public interface CommonSymbols extends CommonSymbolKWs {

    public static final Object commonSymbolsCheck = new Object() {
	{
	    if (!SubLMain.commonSymbolsOK) {
		if (true) {
		    throw new Error("!commonSymbolsOK!");
		}
	    }
	}
    };

    public static SubLT T = SubLT.T;
    public static SubLObject RET_T = CommonSymbols.T;
    public static SubLNil NIL = SubLNil.NIL;
    public static SubLObject RET_NIL = SubLNil.NIL;
    public static SubLSymbol EQ = makeSublispSymbol("EQ");
    public static SubLSymbol EQL = makeSublispSymbol("EQL");
    public static SubLSymbol EQUAL = makeSublispSymbol("EQUAL");
    public static SubLSymbol EQUALP = makeSublispSymbol("EQUALP");
    public static SubLFixnum MINUS_ONE_INTEGER = makeFixnum(-1);
    public static SubLDoubleFloat ZERO_DOUBLE = makeDouble(0.0);
    public static SubLFixnum ZERO_INTEGER = makeFixnum(0);
    public static SubLFixnum ONE_INTEGER = makeFixnum(1);
    public static SubLFixnum TWO_INTEGER = makeFixnum(2);
    public static SubLFixnum THREE_INTEGER = makeFixnum(3);
    public static SubLFixnum FOUR_INTEGER = makeFixnum(4);
    public static SubLFixnum FIVE_INTEGER = makeFixnum(5);
    public static SubLFixnum SIX_INTEGER = makeFixnum(6);
    public static SubLFixnum SEVEN_INTEGER = makeFixnum(7);
    public static SubLFixnum EIGHT_INTEGER = makeFixnum(8);
    public static SubLFixnum NINE_INTEGER = makeFixnum(9);
    public static SubLFixnum TEN_INTEGER = makeFixnum(10);
    public static SubLFixnum ELEVEN_INTEGER = makeFixnum(11);
    public static SubLFixnum TWELVE_INTEGER = makeFixnum(12);
    public static SubLFixnum THIRTEEN_INTEGER = makeFixnum(13);
    public static SubLFixnum FOURTEEN_INTEGER = makeFixnum(14);
    public static SubLFixnum FIFTEEN_INTEGER = makeFixnum(15);
    public static SubLFixnum SIXTEEN_INTEGER = makeFixnum(16);
    public static SubLFixnum SEVENTEEN_INTEGER = makeFixnum(17);
    public static SubLFixnum EIGHTEEN_INTEGER = makeFixnum(18);
    public static SubLFixnum NINETEEN_INTEGER = makeFixnum(19);
    public static SubLFixnum TWENTY_INTEGER = makeFixnum(20);
    public static SubLFixnum THIRTY_TWO_INTEGER = makeFixnum(32);
    public static SubLFixnum THIRTY_THREE_INTEGER = makeFixnum(33);
    public static SubLFixnum THIRTY_FOUR_INTEGER = makeFixnum(34);
    public static SubLFixnum SIXTY_FOUR_INTEGER = makeFixnum(64);
    public static SubLFixnum ONE_HUNDRED_TWENTY_SEVEN_INTEGER = makeFixnum(127);
    public static SubLFixnum ONE_HUNDRED_THIRTY_SEVEN_INTEGER = makeFixnum(137);
    public static SubLFixnum TWO_HUNDRED_FORTY_FOUR_INTEGER = makeFixnum(244);
    public static SubLFixnum TWO_HUNDRED_FIFTY_FOUR_INTEGER = makeFixnum(254);
    public static SubLFixnum ONE_THOUSAND_INTEGER = makeFixnum(1000);
    
    public static SubLSymbol BINDING_TYPE_KEYWORD = makeKeyword("BINDING-TYPE");
    public static SubLSymbol LEXICAL_KEYWORD = makeKeyword("LEXICAL");
    public static SubLSymbol CONSTANT_KEYWORD = makeKeyword("CONSTANT");
    public static SubLSymbol DYNAMIC_KEYWORD = makeKeyword("DYNAMIC");
    public static SubLSymbol UNDECLARED_KEYWORD = makeKeyword("UNDECLARED");
    public static SubLSymbol INITIALIZATION_TYPE_KEYWORD = makeKeyword("INITIALIZATION-TYPE");
    public static SubLSymbol INITIALIZER_KEYWORD = makeKeyword("INITIALIZER");
    public static SubLSymbol WORLD_KEYWORD = makeKeyword("WORLD");
    
    public static SubLObject UNPROVIDED = makeSublispSymbol("&UNPROVIDED-SUBLISP-ARGUMENT&");
    public static SubLSymbol UNPROVIDED_SYM = makeSublispSymbol("&UNPROVIDED-SUBLISP-ARGUMENT&");
    public static SubLSymbol OPTIONAL_SYMBOL = makeSublispSymbol("&OPTIONAL");
    public static SubLSymbol REST_SYMBOL = makeSublispSymbol("&REST");
    public static SubLSymbol RETURN_TAG = makeSublispSymbol("%RET");
    public static SubLSymbol ANSWER_TAG = makeSublispSymbol("%ANSWER");
    public static SubLSymbol SUSPEND_TYPE_CHECKING = makeSublispSymbol("*SUSPEND-TYPE-CHECKING?*");
    public static SubLSymbol OTHERWISE = makeSublispSymbol("OTHERWISE");
    public static SubLSymbol CDESTRUCTURING_BIND = makeSublispSymbol("CDESTRUCTURING-BIND");
    public static SubLSymbol MACRO_FORM = makeSublispSymbol("%MACRO-FORM");
    public static SubLSymbol MACRO_ENV = makeSublispSymbol("%ENV");
    public static SubLSymbol APPEND_STACK_TRACES_TO_ERROR_MESSAGES = makeSublispSymbol("*APPEND-STACK-TRACES-TO-ERROR-MESSAGES?*");
    public static SubLSymbol FORCE_ERROR_MESSAGE_OUTPUT = makeSublispSymbol("*FORCE-ERROR-MESSAGE-OUTPUT?*");
    public static SubLSymbol EXTERNAL_KEYWORD = makeKeyword("EXTERNAL");
    public static SubLSymbol INTERNAL_KEYWORD = makeKeyword("INTERNAL");
    public static SubLSymbol INHERITED_KEYWORD = makeKeyword("INHERITED");
    public static SubLSymbol ERROR = makeSublispSymbol("ERROR");
    public static SubLSymbol NCONC = makeSublispSymbol("NCONC");
    public static SubLSymbol CAAR = makeSublispSymbol("CAAR");
    public static SubLSymbol CADR = makeSublispSymbol("CADR");
    public static SubLSymbol VALUES = makeSublispSymbol("VALUES");
    public static SubLSymbol TRUE = makeSublispSymbol("TRUE");
    public static SubLSymbol KILL_KEYWORD = makeKeyword("KILL");
    public static SubLSymbol LIST = makeSublispSymbol("LIST");
    public static SubLSymbol LISTS = makeSublispSymbol("LIST*");
    public static SubLSymbol SSS = makeSublispSymbol("***");
    public static SubLSymbol IDENTITY = makeSublispSymbol("IDENTITY");
    public static SubLSymbol MEMBER = makeSublispSymbol("MEMBER");
    public static SubLSymbol SYMBOL_FUNCTION = makeSublispSymbol("SYMBOL-FUNCTION");
    public static SubLSymbol LAMBDA_SYMBOL = makeSublispSymbol("LAMBDA");
    public static SubLSymbol NUM_E_SYMBOL = makeSublispSymbol("=");
    public static SubLSymbol NUM_NE_SYMBOL = makeSublispSymbol("/=");
    public static SubLSymbol NUM_GT_SYMBOL = makeSublispSymbol(">");
    public static SubLSymbol NUM_LT_SYMBOL = makeSublispSymbol("<");
    public static SubLSymbol NUM_GTE_SYMBOL = makeSublispSymbol(">=");
    public static SubLSymbol NUM_LTE_SYMBOL = makeSublispSymbol("<=");
    public static SubLSymbol STRING_E_SYMBOL = makeSublispSymbol("STRING=");
    public static SubLSymbol STRING_NE_SYMBOL = makeSublispSymbol("STRING/=");
    public static SubLSymbol STRING_GT_SYMBOL = makeSublispSymbol("STRING>");
    public static SubLSymbol STRING_LT_SYMBOL = makeSublispSymbol("STRING<");
    public static SubLSymbol STRING_GTE_SYMBOL = makeSublispSymbol("STRING>=");
    public static SubLSymbol STRING_LTE_SYMBOL = makeSublispSymbol("STRING<=");
    public static SubLSymbol STRING_EQUAL_SYMBOL = makeSublispSymbol("STRING-EQUAL");
    public static SubLSymbol STRING_NOT_EQUAL_SYMBOL = makeSublispSymbol("STRING-NOT-EQUAL");
    public static SubLSymbol STRING_GREATER_THAN_SYMBOL = makeSublispSymbol("STRING-GREATERP");
    public static SubLSymbol STRING_LESS_THAN_SYMBOL = makeSublispSymbol("STRING-LESSP");
    public static SubLSymbol STRING_GREATER_THAN_OR_EQUAL_SYMBOL = makeSublispSymbol("STRING-NOT-LESSP");
    public static SubLSymbol STRING_LESS_THAN_OR_EQUAL_SYMBOL = makeSublispSymbol("STRING-NOT-GREATERP");
    public static SubLSymbol CHAR_EQUAL_SYMBOL = makeSublispSymbol("CHAR-EQUAL");
    public static SubLSymbol CHAR_NOT_EQUAL_SYMBOL = makeSublispSymbol("CHAR-NOT-EQUAL");
    public static SubLSymbol CHAR_GREATER_THAN_SYMBOL = makeSublispSymbol("CHAR-GREATERP");
    public static SubLSymbol CHAR_LESS_THAN_SYMBOL = makeSublispSymbol("CHAR-LESSP");
    public static SubLSymbol CHAR_GREATER_THAN_OR_EQUAL_SYMBOL = makeSublispSymbol("CHAR-NOT-LESSP");
    public static SubLSymbol CHAR_LESS_THAN_OR_EQUAL_SYMBOL = makeSublispSymbol("CHAR-NOT-GREATERP");
    public static SubLSymbol CHAR_E_SYMBOL = makeSublispSymbol("CHAR=");
    public static SubLSymbol CHAR_NE_SYMBOL = makeSublispSymbol("CHAR/=");
    public static SubLSymbol CHAR_GT_SYMBOL = makeSublispSymbol("CHAR>");
    public static SubLSymbol CHAR_LT_SYMBOL = makeSublispSymbol("CHAR<");
    public static SubLSymbol CHAR_GTE_SYMBOL = makeSublispSymbol("CHAR>=");
    public static SubLSymbol CHAR_LTE_SYMBOL = makeSublispSymbol("CHAR<=");
    public static SubLSymbol CAR = makeSublispSymbol("CAR");
    public static SubLSymbol CDR = makeSublispSymbol("CDR");
    public static SubLSymbol NTH = makeSublispSymbol("NTH");
    public static SubLSymbol GETHASH = makeSublispSymbol("GETHASH");
    public static SubLSymbol GETHASH_WITHOUT_VALUES = makeSublispSymbol("GETHASH-WITHOUT-VALUES");
    public static SubLSymbol FIRST = makeSublispSymbol("FIRST");
    public static SubLSymbol SECOND = makeSublispSymbol("SECOND");
    public static SubLSymbol REVERSE = makeSublispSymbol("REVERSE");
    public static SubLSymbol NREVERSE = makeSublispSymbol("NREVERSE");
    public static SubLSymbol EVAL = makeSublispSymbol("EVAL");
    public static SubLSymbol CONS = makeSublispSymbol("CONS");
    public static SubLSymbol CHAR = makeSublispSymbol("CHAR");
    public static SubLSymbol AREF = makeSublispSymbol("AREF");
    public static SubLSymbol GET = makeSublispSymbol("GET");
    public static SubLSymbol VECTOR = makeSublispSymbol("VECTOR");
    public static SubLSymbol SYMBOL_VALUE = makeSublispSymbol("SYMBOL-VALUE");
    public static SubLSymbol ASSEMBLE_FIXNUMS_TO_INTEGER = makeSublispSymbol("ASSEMBLE-FIXNUMS-TO-INTEGER");
    public static SubLSymbol SORT = makeSublispSymbol("SORT");
    public static SubLSymbol DEFINE = makeSublispSymbol("DEFINE");
    public static SubLSymbol DEFMACRO = makeSublispSymbol("DEFMACRO");
    public static SubLSymbol DEFCONSTANT = makeSublispSymbol("DEFCONSTANT");
    public static SubLSymbol DEFPARAMETER = makeSublispSymbol("DEFPARAMETER");
    public static SubLSymbol DEFVAR = makeSublispSymbol("DEFVAR");
    public static SubLSymbol DEFLEXICAL = makeSublispSymbol("DEFLEXICAL");
    public static SubLSymbol PROGN = makeSublispSymbol("PROGN");
    public static SubLSymbol PIF = makeSublispSymbol("PIF");
    public static SubLSymbol PWHEN = makeSublispSymbol("PWHEN");
    public static SubLSymbol PUNLESS = makeSublispSymbol("PUNLESS");
    public static SubLSymbol PCOND = makeSublispSymbol("PCOND");
    public static SubLSymbol PCASE = makeSublispSymbol("PCASE");
    public static SubLSymbol CSETQ = makeSublispSymbol("CSETQ");
    public static SubLSymbol CSETF = makeSublispSymbol("CSETF");
    public static SubLSymbol CINC = makeSublispSymbol("CINC");
    public static SubLSymbol CDEC = makeSublispSymbol("CDEC");
    public static SubLSymbol CPUSH = makeSublispSymbol("CPUSH");
    public static SubLSymbol CPUSHNEW = makeSublispSymbol("CPUSHNEW");
    public static SubLSymbol CPOP = makeSublispSymbol("CPOP");
    public static SubLSymbol CLET = makeSublispSymbol("CLET");
    public static SubLSymbol CPROGV = makeSublispSymbol("CPROGV");
    public static SubLSymbol CMULTIPLE_VALUE_BIND = makeSublispSymbol("CMULTIPLE-VALUE-BIND");
    public static SubLSymbol MULTIPLE_VALUE_LIST = makeSublispSymbol("MULTIPLE-VALUE-LIST");
    public static SubLSymbol NTH_VALUE = makeSublispSymbol("NTH-VALUE");
    public static SubLSymbol CDO = makeSublispSymbol("CDO");    
    public static SubLSymbol CDOTIMES = makeSublispSymbol("CDOTIMES");
    public static SubLSymbol CDOLIST = makeSublispSymbol("CDOLIST");
    public static SubLSymbol CSOME = makeSublispSymbol("CSOME");
    public static SubLSymbol CDOHASH = makeSublispSymbol("CDOHASH");
    public static SubLSymbol CDO_SYMBOLS = makeSublispSymbol("CDO-SYMBOLS");
    public static SubLSymbol CDO_ALL_SYMBOLS = makeSublispSymbol("CDO-ALL-SYMBOLS");
    public static SubLSymbol CDO_EXTERNAL_SYMBOLS = makeSublispSymbol("CDO-EXTERNAL-SYMBOLS");
    public static SubLSymbol CCATCH = makeSublispSymbol("CCATCH");
    public static SubLSymbol CUNWIND_PROTECT = makeSublispSymbol("CUNWIND-PROTECT");
    public static SubLSymbol CTIME = makeSublispSymbol("CTIME");
    public static SubLSymbol RET = makeSublispSymbol("RET");
    public static SubLSymbol ENFORCE_TYPE = makeSublispSymbol("ENFORCE-TYPE");
    public static SubLSymbol CHECK_TYPE = makeSublispSymbol("CHECK-TYPE");
    public static SubLSymbol ENFORCE_MUST = makeSublispSymbol("ENFORCE-MUST");
    public static SubLSymbol MUST = makeSublispSymbol("MUST");
    public static SubLSymbol CNOT = makeSublispSymbol("CNOT");
    public static SubLSymbol CAND = makeSublispSymbol("CAND");
    public static SubLSymbol COR = makeSublispSymbol("COR");
    public static SubLSymbol FIF = makeSublispSymbol("FIF");
    public static SubLSymbol FWHEN = makeSublispSymbol("FWHEN");
    public static SubLSymbol FUNLESS = makeSublispSymbol("FUNLESS");
    public static SubLSymbol IGNORE = makeSublispSymbol("IGNORE");
    public static SubLSymbol CVS_ID = makeSublispSymbol("CVS-ID");
    public static SubLSymbol DECLARE = makeSublispSymbol("DECLARE");
    public static SubLSymbol DECLAIM = makeSublispSymbol("DECLAIM");
    public static SubLSymbol PROCLAIM = makeSublispSymbol("PROCLAIM");
    public static SubLSymbol QUOTE = makeSublispSymbol("QUOTE");
    public static SubLSymbol FUNCTION = makeSublispSymbol("FUNCTION");
    public static SubLSymbol WITH_ERROR_HANDLER = makeSublispSymbol("WITH-ERROR-HANDLER");
    public static SubLSymbol WITH_STATIC_AREA = makeSublispSymbol("WITH-STATIC-AREA");
    public static SubLSymbol WITH_THREAD_PRIVATE_AREA = makeSublispSymbol("WITH-THREAD-PRIVATE-AREA");
    public static SubLSymbol WITH_WORKING_AREA = makeSublispSymbol("WITH-WORKING-AREA");
    public static SubLSymbol QUIT = makeSublispSymbol("QUIT");
    public static SubLSymbol NULL = makeSublispSymbol("NULL");
    public static SubLSymbol BOOLEANP = makeCycSymbol("BOOLEANP");
    public static SubLSymbol SYMBOLP = makeSublispSymbol("SYMBOLP");
    public static SubLSymbol ATOM = makeSublispSymbol("ATOM");
    public static SubLSymbol CONSP = makeSublispSymbol("CONSP");
    public static SubLSymbol LISTP = makeSublispSymbol("LISTP");
    public static SubLSymbol SEQUENCEP = makeSublispSymbol("SEQUENCEP");
    public static SubLSymbol NUMBERP = makeSublispSymbol("NUMBERP");
    public static SubLSymbol FIXNUMP = makeSublispSymbol("FIXNUMP");
    public static SubLSymbol BIGNUMP = makeSublispSymbol("BIGNUMP");
    public static SubLSymbol SHORT_BIGNUM_P = makeSublispSymbol("SHORT-BIGNUM-P");
    public static SubLSymbol MEDIUM_BIGNUM_P = makeSublispSymbol("MEDIUM-BIGNUM-P");
    public static SubLSymbol LONG_BIGNUM_P = makeSublispSymbol("LONG-BIGNUM-P");
    public static SubLSymbol INTEGERP = makeSublispSymbol("INTEGERP");
    public static SubLSymbol FLOATP = makeSublispSymbol("FLOATP");
    public static SubLSymbol CHARACTERP = makeSublispSymbol("CHARACTERP");
    public static SubLSymbol STRINGP = makeSublispSymbol("STRINGP");
    public static SubLSymbol VECTORP = makeSublispSymbol("VECTORP");
    public static SubLSymbol FUNCTIONP = makeSublispSymbol("FUNCTIONP");
    public static SubLSymbol FUNCTION_SPEC_P = makeSublispSymbol("FUNCTION-SPEC-P");
    public static SubLSymbol PROCESSP = makeSublispSymbol("PROCESSP");
    public static SubLSymbol LOCK_P = makeSublispSymbol("LOCK-P");
    public static SubLSymbol RW_LOCK_P = makeSublispSymbol("RW-LOCK-P");
    public static SubLSymbol HASH_TABLE_P = makeSublispSymbol("HASH-TABLE-P");
    public static SubLSymbol STRUCTURE_P = makeSublispSymbol("STRUCTURE-P");
    public static SubLSymbol PACKAGEP = makeSublispSymbol("PACKAGEP");
    public static SubLSymbol GUID_P = makeSublispSymbol("GUID-P");
    public static SubLSymbol HASH_TABLE_ITERATOR_P = makeSublispSymbol("HASH-TABLE-ITERATOR-P");
    public static SubLSymbol PACKAGE_ITERATOR_P = makeSublispSymbol("PACKAGE-ITERATOR-P");
    public static SubLSymbol STREAMP = makeSublispSymbol("STREAMP");
    public static SubLSymbol INPUT_STREAM_P = makeSublispSymbol("INPUT-STREAM-P");
    public static SubLSymbol OUTPUT_STREAM_P = makeSublispSymbol("OUTPUT-STREAM-P");
    public static SubLSymbol KEYWORDP = makeSublispSymbol("KEYWORDP");

    public static SubLSymbol NON_NEGATIVE_NUMBER_P = makeCycSymbol("NON-NEGATIVE-NUMBER-P");

    public static SubLSymbol ELEMENT_TYPE_KEYWORD = makeKeyword("ELEMENT-TYPE");
    public static SubLSymbol TEXT_KEYWORD = makeKeyword("TEXT");
    public static SubLSymbol BINARY_KEYWORD = makeKeyword("BINARY");
    public static SubLSymbol DIRECTION_KEYWORD = makeKeyword("DIRECTION");
    public static SubLSymbol INPUT_KEYWORD = makeKeyword("INPUT");
    public static SubLSymbol OUTPUT_KEYWORD = makeKeyword("OUTPUT");
    public static SubLSymbol IO_KEYWORD = makeKeyword("IO");
    public static SubLSymbol PROBE_KEYWORD = makeKeyword("PROBE");
    public static SubLSymbol IF_EXISTS_KEYWORD = makeKeyword("IF-EXISTS");
    public static SubLSymbol IF_DOES_NOT_EXIST_KEYWORD = makeKeyword("IF-DOES-NOT-EXIST");
    public static SubLSymbol ERROR_KEYWORD = makeKeyword("ERROR");
    public static SubLSymbol NEW_VERSION_KEYWORD = makeKeyword("NEW-VERSION");
    public static SubLSymbol RENAME_AND_DELETE_KEYWORD = makeKeyword("RENAME-AND-DELETE");
    public static SubLSymbol OVERWRITE_KEYWORD = makeKeyword("OVERWRITE");
    public static SubLSymbol APPEND_KEYWORD = makeKeyword("APPEND");
    public static SubLSymbol SUPERSEDE_KEYWORD = makeKeyword("SUPERSEDE");
    public static SubLSymbol CREATE_KEYWORD = makeKeyword("CREATE");
    public static SubLSymbol EXTERNAL_FORMAT_KEYWORD = makeKeyword("EXTERNAL-FORMAT");
    public static SubLSymbol START_KEYWORD = makeKeyword("START");
    public static SubLSymbol END_KEYWORD = makeKeyword("END");

    public static SubLSymbol TERMINAL_IO = makeSublispSymbol("*TERMINAL-IO*");
    public static SubLSymbol STANDARD_INPUT = makeSublispSymbol("*STANDARD-INPUT*");
    public static SubLSymbol STANDARD_OUTPUT = makeSublispSymbol("*STANDARD-OUTPUT*");
    public static SubLSymbol ERROR_OUTPUT = makeSublispSymbol("*ERROR-OUTPUT*");
    public static SubLSymbol DEBUG_IO = makeSublispSymbol("*DEBUG-IO*");
    public static SubLSymbol NULL_INPUT = makeSublispSymbol("*NULL-INPUT*");
    public static SubLSymbol NULL_OUTPUT = makeSublispSymbol("*NULL-OUTPUT*");
    public static SubLSymbol QUERY_IO = makeSublispSymbol("*QUERY-IO*");
    public static SubLSymbol TRACE_OUTPUT = makeSublispSymbol("*TRACE-OUTPUT*");
    
    public static SubLInteger $int$100 = makeInteger(100);
    public static SubLInteger $int$1000 = makeInteger(1000);
    public static SubLInteger $int$_1 = makeInteger(-1);
    public static SubLInteger $int$_2 = makeInteger(-2);
    public static SubLInteger $int$32 = makeInteger(32);
    public static SubLInteger $int$64 = makeInteger(64);
    public static SubLInteger $int$255 = makeInteger(255);
    public static SubLInteger $int$256 = makeInteger(256);
    public static SubLInteger $int$512 = makeInteger(512);
    public static SubLInteger $int$4095 = makeInteger(4095);
    public static SubLInteger $int$4096 = makeInteger(4096);
    
    public static int PROCESS_TO_END = Integer.MAX_VALUE;
}
