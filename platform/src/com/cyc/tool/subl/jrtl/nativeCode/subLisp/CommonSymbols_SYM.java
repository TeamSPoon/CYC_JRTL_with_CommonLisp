/* For LarKC */
package com.cyc.tool.subl.jrtl.nativeCode.subLisp;

import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.*;

import org.armedbear.lisp.*;

import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.*;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLNil;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLT;

public interface CommonSymbols_SYM {
    SubLSymbol times = makeSymbol("*");
    SubLSymbol minus = makeSymbol("-");
    SubLSymbol oneminus = makeSymbol("1-");
    SubLSymbol oneplus = makeSymbol("1+");
    SubLSymbol qA = makeSymbol("?A");

    SubLSymbol A = makeSymbol("A");
    SubLSymbol ABSTRACT_LEXICON_P = makeSymbol("ABSTRACT-LEXICON-P");
    SubLSymbol ABSTRACT_PASSAGE_P = makeSymbol("ABSTRACT-PASSAGE-P");
    SubLSymbol ACCUMULATOR = makeSymbol("ACCUMULATOR");
    SubLSymbol ACKNOWLEDGE_APPLICATION_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-APPLICATION-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_CYC_APPLICATION_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-CYC-APPLICATION-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_CYC_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-CYC-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_EVENT_ROOT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-EVENT-ROOT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_INFERENCE_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-INFERENCE-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_KB_STORE_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-KB-STORE-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_NL_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-NL-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_SBHL_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-SBHL-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_SUBLISP_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-SUBLISP-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_SYSTEM_EVENT_STIMULATION_PROPOSAL = makeSymbol("ACKNOWLEDGE-SYSTEM-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol qACTION = makeSymbol("?ACTION");
    SubLSymbol ACTION = makeSymbol("ACTION");
    SubLSymbol ACTION_HEAD = makeSymbol("ACTION-HEAD");
    SubLSymbol ACTION_QUALIFIERS = makeSymbol("ACTION-QUALIFIERS");
    SubLSymbol ACTION_TYPE = makeSymbol("ACTION-TYPE");
    SubLSymbol ACTIVATE_POSTING = makeSymbol("ACTIVATE-POSTING");
    SubLSymbol ACTIVATION_PATTERN = makeSymbol("ACTIVATION-PATTERN");
    SubLSymbol ACTIVATION_PATTERNS = makeSymbol("ACTIVATION-PATTERNS");
    SubLSymbol ACTIVATIONS = makeSymbol("ACTIVATIONS");
    SubLSymbol ACTIVE = makeSymbol("ACTIVE");
    SubLSymbol ACTIVE_LEARNERS = makeSymbol("ACTIVE-LEARNERS");
    SubLSymbol ACTIVE_P = makeSymbol("ACTIVE-P");
    SubLSymbol ACTIVE_PROPOSALS = makeSymbol("ACTIVE-PROPOSALS");
    SubLSymbol ACTUAL_IPC_QUEUE = makeSymbol("ACTUAL-IPC-QUEUE");
    SubLSymbol ACTUAL_POSTING = makeSymbol("ACTUAL-POSTING");
    SubLSymbol ADD = makeSymbol("ADD");
    SubLSymbol ADD_CHILD = makeSymbol("ADD-CHILD");
    SubLSymbol ADD_DIRECT_KNOWLEDGE_SOURCE = makeSymbol("ADD-DIRECT-KNOWLEDGE-SOURCE");
    SubLSymbol ADD_DIRECT_POSTING = makeSymbol("ADD-DIRECT-POSTING");
    SubLSymbol ADD_DIRECT_POSTINGS = makeSymbol("ADD-DIRECT-POSTINGS");
    SubLSymbol ADDED_DECLARATIONS_FOR_KS_CLASS = makeSymbol("ADDED-DECLARATIONS-FOR-KS-CLASS");
    SubLSymbol ADD_KNOWLEDGE_SOURCES_AT_WILL = makeSymbol("ADD-KNOWLEDGE-SOURCES-AT-WILL");
    SubLSymbol ADD_LEARNER = makeSymbol("ADD-LEARNER");
    SubLSymbol ADD_LITERALS = makeSymbol("ADD-LITERALS");
    SubLSymbol ADD_MARK = makeSymbol("ADD-MARK");
    SubLSymbol ADD_PANELS_AT_WILL = makeSymbol("ADD-PANELS-AT-WILL");
    SubLSymbol ADD_PARENT_LINK = makeSymbol("ADD-PARENT-LINK");
    SubLSymbol ADD_POSTING = makeSymbol("ADD-POSTING");
    SubLSymbol ADD_POSTING_CLASSES_AT_WILL = makeSymbol("ADD-POSTING-CLASSES-AT-WILL");
    SubLSymbol ADD_POSTING_DAEMON = makeSymbol("ADD-POSTING-DAEMON");
    SubLSymbol ADDRESS = makeSymbol("ADDRESS");
    SubLSymbol ADDS = makeSymbol("ADDS");
    SubLSymbol ADD_SUB_PANEL = makeSymbol("ADD-SUB-PANEL");
    SubLSymbol ADD_SUPER_PANEL = makeSymbol("ADD-SUPER-PANEL");
    SubLSymbol ADD_SUPPORT_NOTIFY = makeSymbol("ADD-SUPPORT-NOTIFY");
    SubLSymbol ADD_TASK = makeSymbol("ADD-TASK");
    SubLSymbol ADD_TO_LOG = makeSymbol("ADD-TO-LOG");
    SubLSymbol ADJECTIVE_LINK_WORD = makeSymbol("ADJECTIVE-LINK-WORD");
    SubLSymbol ADVERB_LINK_WORD = makeSymbol("ADVERB-LINK-WORD");
    SubLSymbol AFTER_STARTUP = makeSymbol("AFTER-STARTUP");
    SubLSymbol AFTER_STIMULATION = makeSymbol("AFTER-STIMULATION");
    SubLSymbol AGENDA = makeSymbol("AGENDA");
    SubLSymbol AGENDA_CLASS = makeSymbol("AGENDA-CLASS");
    SubLSymbol AGENDA_EXPRESSION = makeSymbol("AGENDA-EXPRESSION");
    SubLSymbol ALIGN = makeSymbol("ALIGN");
    SubLSymbol ALIST = makeSymbol("ALIST");
    SubLSymbol ALIST_P = makeSymbol("ALIST-P");
    SubLSymbol ALL = makeSymbol("ALL");
    SubLSymbol ALL_ARGS = makeSymbol("ALL-ARGS");
    SubLSymbol ALL_CONJUNCTION_CYCLS = makeSymbol("ALL-CONJUNCTION-CYCLS");
    SubLSymbol ALL_GENLS = makeSymbol("ALL-GENLS");
    SubLSymbol ALL_HEAD_CYCLS = makeSymbol("ALL-HEAD-CYCLS");
    SubLSymbol ALLOCATE = makeSymbol("ALLOCATE");
    SubLSymbol ALLOCATE_ENUMERATOR = makeSymbol("ALLOCATE-ENUMERATOR");
    SubLSymbol ALLOWED_MTS = makeSymbol("ALLOWED-MTS");
    SubLSymbol ALLOW_FABRICATIONq = makeSymbol("ALLOW-FABRICATION?");
    SubLSymbol ALLOW_MT = makeSymbol("ALLOW-MT");
    SubLSymbol ALLOW_PREDICATE = makeSymbol("ALLOW-PREDICATE");
    SubLSymbol ALLOW_STEMMING = makeSymbol("ALLOW-STEMMING");
    SubLSymbol ALL_RLE_CYCLS = makeSymbol("ALL-RLE-CYCLS");
    SubLSymbol ALL_SUBJECTS_WITH_OBJECTS_CYCLS = makeSymbol("ALL-SUBJECTS-WITH-OBJECTS-CYCLS");
    SubLSymbol ALL_TYPES = makeSymbol("ALL-TYPES");
    SubLSymbol ALPHA_CHAR_P = makeSymbol("ALPHA-CHAR-P");
    SubLSymbol ALPHANUMERICP = makeSymbol("ALPHANUMERICP");
    SubLSymbol AMT = makeSymbol("AMT");
    SubLSymbol ANCESTOR = makeSymbol("ANCESTOR");
    SubLSymbol AND = makeSymbol("AND");
    SubLSymbol ANS1 = makeSymbol("ANS1");
    SubLSymbol ANS2 = makeSymbol("ANS2");
    SubLSymbol ANSWER = makeSymbol("ANSWER");
    SubLSymbol ANSWER_CARDINALITY = makeSymbol("ANSWER-CARDINALITY");
    SubLSymbol ANSWERS = makeSymbol("ANSWERS");
    SubLSymbol ANSWER_TO = makeSymbol("ANSWER-TO");
    SubLSymbol ANSWER_TO_SINGLETON = makeSymbol("ANSWER-TO-SINGLETON");
    SubLSymbol ANSWER_TYPES = makeSymbol("ANSWER-TYPES");
    SubLSymbol ANTECEDENT = makeSymbol("ANTECEDENT");
    SubLSymbol ANTE_PREV_NE = makeSymbol("ANTE-PREV-NE");
    SubLSymbol APP = makeSymbol("APP");
    SubLSymbol APP_BODY = makeSymbol("APP-BODY");
    SubLSymbol APP_CLASS = makeSymbol("APP-CLASS");
    SubLSymbol APPEND = makeSymbol("APPEND");
    SubLSymbol APPEND_TEXT_FILE = makeSymbol("APPEND-TEXT-FILE");
    SubLSymbol APPLICATION = makeSymbol("APPLICATION");
    SubLSymbol APPLICATION_ID = makeSymbol("APPLICATION-ID");
    SubLSymbol APPLICATION_NAME = makeSymbol("APPLICATION-NAME");
    SubLSymbol APPLICATION_PROCESS = makeSymbol("APPLICATION-PROCESS");
    SubLSymbol APPLICATION_VAR = makeSymbol("APPLICATION-VAR");
    SubLSymbol APPLY = makeSymbol("APPLY");
    SubLSymbol APPLY_LEX_RENAMING = makeSymbol("APPLY-LEX-RENAMING");
    SubLSymbol APRIORI_P = makeSymbol("APRIORI-P");
    SubLSymbol AREF = makeSymbol("AREF");
    SubLSymbol qARG = makeSymbol("?ARG");
    SubLSymbol ARG = makeSymbol("ARG");
    SubLSymbol qARG1 = makeSymbol("?ARG1");
    SubLSymbol ARG1 = makeSymbol("ARG1");
    SubLSymbol qARG2 = makeSymbol("?ARG2");
    SubLSymbol ARG2 = makeSymbol("ARG2");
    SubLSymbol ARG2RANGE = makeSymbol("ARG2RANGE");
    SubLSymbol ARG3 = makeSymbol("ARG3");
    SubLSymbol ARG_IF_ON_STARTUP = makeSymbol("ARG-IF-ON-STARTUP");
    SubLSymbol ARG_LIST = makeSymbol("ARG-LIST");
    SubLSymbol ARGLIST = makeSymbol("ARGLIST");
    SubLSymbol ARG_NUM = makeSymbol("ARG-NUM");
    SubLSymbol ARGNUM = makeSymbol("ARGNUM");
    SubLSymbol ARGNUM_VAR = makeSymbol("ARGNUM-VAR");
    SubLSymbol ARG_POS = makeSymbol("ARG-POS");
    SubLSymbol ARGPOS = makeSymbol("ARGPOS");
    SubLSymbol ARG_POSITION = makeSymbol("ARG-POSITION");
    SubLSymbol qARGS = makeSymbol("?ARGS");
    SubLSymbol ARGS = makeSymbol("ARGS");
    SubLSymbol ARG_STRING = makeSymbol("ARG-STRING");
    SubLSymbol ARGTYPE_LIST = makeSymbol("ARGTYPE-LIST");
    SubLSymbol ARGTYPES = makeSymbol("ARGTYPES");
    SubLSymbol ARGUMENT = makeSymbol("ARGUMENT");
    SubLSymbol ARGUMENT_P = makeSymbol("ARGUMENT-P");
    SubLSymbol ARGUMENTS = makeSymbol("ARGUMENTS");
    SubLSymbol ARITY = makeSymbol("ARITY");
    SubLSymbol qASENT = makeSymbol("?ASENT");
    SubLSymbol ASENT = makeSymbol("ASENT");
    SubLSymbol ASENT_HAS_INDEXED_TERM_ARG_P = makeSymbol("ASENT-HAS-INDEXED-TERM-ARG-P");
    SubLSymbol ASK = makeSymbol("ASK");
    SubLSymbol ASK_GENERIC_BOOLEAN = makeSymbol("ASK-GENERIC-BOOLEAN");
    SubLSymbol ASK_GENERIC_ENUMERATED = makeSymbol("ASK-GENERIC-ENUMERATED");
    SubLSymbol ASK_MT = makeSymbol("ASK-MT");
    SubLSymbol ASK_PART_OF_SPEECH = makeSymbol("ASK-PART-OF-SPEECH");
    SubLSymbol ASK_PHRASE = makeSymbol("ASK-PHRASE");
    SubLSymbol ASK_TERM = makeSymbol("ASK-TERM");
    SubLSymbol ASSERTED_ARGUMENT_P = makeSymbol("ASSERTED-ARGUMENT-P");
    SubLSymbol ASSERTED_ASSERTIONq = makeSymbol("ASSERTED-ASSERTION?");
    SubLSymbol ASSERTED_WHEN = makeSymbol("ASSERTED-WHEN");
    SubLSymbol ASSERTION = makeSymbol("ASSERTION");
    SubLSymbol ASSERTION_FORM = makeSymbol("ASSERTION-FORM");
    SubLSymbol ASSERTION_FORMULA = makeSymbol("ASSERTION-FORMULA");
    SubLSymbol ASSERTION_ID = makeSymbol("ASSERTION-ID");
    SubLSymbol ASSERTION_LIST = makeSymbol("ASSERTION-LIST");
    SubLSymbol ASSERTION_MT = makeSymbol("ASSERTION-MT");
    SubLSymbol ASSERTION_P = makeSymbol("ASSERTION-P");
    SubLSymbol ASSERTIONS = makeSymbol("ASSERTIONS");
    SubLSymbol ASSERTION_VAR = makeSymbol("ASSERTION-VAR");
    SubLSymbol ASSERT_TYPE = makeSymbol("ASSERT-TYPE");
    SubLSymbol ASSIGNMENTS = makeSymbol("ASSIGNMENTS");
    SubLSymbol ASSIMILATE = makeSymbol("ASSIMILATE");
    SubLSymbol ASSISTANT = makeSymbol("ASSISTANT");
    SubLSymbol ASSOC = makeSymbol("ASSOC");
    SubLSymbol ASSOCIATE_COMMON_IDS = makeSymbol("ASSOCIATE-COMMON-IDS");
    SubLSymbol ASSOCIATED_KNOWLEDGE_SOURCE = makeSymbol("ASSOCIATED-KNOWLEDGE-SOURCE");
    SubLSymbol ASSOCIATION = makeSymbol("ASSOCIATION");
    SubLSymbol ASYNCH_BASIC_DOUBLY_LINKED_QUEUE = makeSymbol("ASYNCH-BASIC-DOUBLY-LINKED-QUEUE");
    SubLSymbol ATOM = makeSymbol("ATOM");
    SubLSymbol ATOMIC_SENTENCEq = makeSymbol("ATOMIC-SENTENCE?");
    SubLSymbol ATOMIC_SENTENCE_PREDICATE = makeSymbol("ATOMIC-SENTENCE-PREDICATE");
    SubLSymbol AT_SIGN_P = makeSymbol("AT-SIGN-P");
    SubLSymbol ATT = makeSymbol("ATT");
    SubLSymbol qATTACK = makeSymbol("?ATTACK");
    SubLSymbol ATTRIBUTE = makeSymbol("ATTRIBUTE");
    SubLSymbol ATTRIBUTE_DICTIONARY = makeSymbol("ATTRIBUTE-DICTIONARY");
    SubLSymbol ATTRIBUTE_PLIST = makeSymbol("ATTRIBUTE-PLIST");
    SubLSymbol ATTRIBUTES = makeSymbol("ATTRIBUTES");
    SubLSymbol AUGMENTATION_TERMS = makeSymbol("AUGMENTATION-TERMS");
    SubLSymbol AUGMENT_TERMS = makeSymbol("AUGMENT-TERMS");
    SubLSymbol AUTHOR_NAMES = makeSymbol("AUTHOR-NAMES");
    SubLSymbol AUTO_GENERATED_KS_ASSISTENT = makeSymbol("AUTO-GENERATED-KS-ASSISTENT");
    SubLSymbol AUX = makeSymbol("AUX");
    SubLSymbol AUX_VERB_LINK_WORD = makeSymbol("AUX-VERB-LINK-WORD");
    SubLSymbol AUX_VERB_TREE_P = makeSymbol("AUX-VERB-TREE-P");
    SubLSymbol AVAILABLE_RMS = makeSymbol("AVAILABLE-RMS");
    SubLSymbol AVERAGE_SLEEP_INTERVAL = makeSymbol("AVERAGE-SLEEP-INTERVAL");
    SubLSymbol qB = makeSymbol("?B");
    SubLSymbol B = makeSymbol("B");
    SubLSymbol BACKCHAIN = makeSymbol("BACKCHAIN");
    SubLSymbol BAG = makeSymbol("BAG");
    SubLSymbol BASE_MT = makeSymbol("BASE-MT");
    SubLSymbol BASE_NAME = makeSymbol("BASE-NAME");
    SubLSymbol BASE_PANEL = makeSymbol("BASE-PANEL");
    SubLSymbol BASE_SUFFIX_COUNTER = makeSymbol("BASE-SUFFIX-COUNTER");
    SubLSymbol BASE_TYPE = makeSymbol("BASE-TYPE");
    SubLSymbol BASIC_BAG = makeSymbol("BASIC-BAG");
    SubLSymbol BASIC_BAG_ENUMERATOR = makeSymbol("BASIC-BAG-ENUMERATOR");
    SubLSymbol BASIC_BAG_P = makeSymbol("BASIC-BAG-P");
    SubLSymbol BASIC_DOUBLY_LINKED_LIST = makeSymbol("BASIC-DOUBLY-LINKED-LIST");
    SubLSymbol BASIC_DOUBLY_LINKED_LIST_ENUMERATOR = makeSymbol("BASIC-DOUBLY-LINKED-LIST-ENUMERATOR");
    SubLSymbol BASIC_DOUBLY_LINKED_QUEUE = makeSymbol("BASIC-DOUBLY-LINKED-QUEUE");
    SubLSymbol BASIC_END_POINTER_LIST = makeSymbol("BASIC-END-POINTER-LIST");
    SubLSymbol BASIC_MULTI_TASK_SCHEDULER = makeSymbol("BASIC-MULTI-TASK-SCHEDULER");
    SubLSymbol BASIC_SUBLOOP_PROCESS = makeSymbol("BASIC-SUBLOOP-PROCESS");
    SubLSymbol BASIC_TAG = makeSymbol("BASIC-TAG");
    SubLSymbol BASIS = makeSymbol("BASIS");
    SubLSymbol BB_SUBSET_NAME = makeSymbol("BB-SUBSET-NAME");
    SubLSymbol BETTER_TAG = makeSymbol("BETTER-TAG");
    SubLSymbol BETTER_TAG_SUMMAND = makeSymbol("BETTER-TAG-SUMMAND");
    SubLSymbol BGCOLOR = makeSymbol("BGCOLOR");
    SubLSymbol BIG_STRING = makeSymbol("BIG-STRING");
    SubLSymbol BINDING = makeSymbol("BINDING");
    SubLSymbol BINDING_LIST = makeSymbol("BINDING-LIST");
    SubLSymbol BINDINGS = makeSymbol("BINDINGS");
    SubLSymbol BIND_VAR = makeSymbol("BIND-VAR");
    SubLSymbol BIN_PRED = makeSymbol("BIN-PRED");
    SubLSymbol BI_STREAM = makeSymbol("BI-STREAM");
    SubLSymbol BLACKBOARD = makeSymbol("BLACKBOARD");
    SubLSymbol BLACKBOARD_CLASS = makeSymbol("BLACKBOARD-CLASS");
    SubLSymbol BLACKBOARD_CLASS_NAME = makeSymbol("BLACKBOARD-CLASS-NAME");
    SubLSymbol BLACKBOARD_EXPRESSION = makeSymbol("BLACKBOARD-EXPRESSION");
    SubLSymbol BLACKBOARD_IDENTIFIER = makeSymbol("BLACKBOARD-IDENTIFIER");
    SubLSymbol $BLACKBOARD_INPUT_FILE$ = makeSymbol("*BLACKBOARD-INPUT-FILE*");
    SubLSymbol $BLACKBOARD_LOG_FILE$ = makeSymbol("*BLACKBOARD-LOG-FILE*");
    SubLSymbol BLACKBOARD_VAR = makeSymbol("BLACKBOARD-VAR");
    SubLSymbol qBLOOD_TEST = makeSymbol("?BLOOD-TEST");
    SubLSymbol aBODY = makeSymbol("&BODY");
    SubLSymbol BODY = makeSymbol("BODY");
    SubLSymbol BOOKKEEPING_PREDICATE_HL_STORAGE_MODULE_UNASSERT = makeSymbol("BOOKKEEPING-PREDICATE-HL-STORAGE-MODULE-UNASSERT");
    SubLSymbol BOOLEAN = makeSymbol("BOOLEAN");
    SubLSymbol BOOLEANP = makeSymbol("BOOLEANP");
    SubLSymbol BORDER = makeSymbol("BORDER");
    SubLSymbol BOUND_BINDINGS = makeSymbol("BOUND-BINDINGS");
    SubLSymbol BOUNDP = makeSymbol("BOUNDP");
    SubLSymbol BQ_APPEND = makeSymbol("BQ-APPEND");
    SubLSymbol BQ_CONS = makeSymbol("BQ-CONS");
    SubLSymbol BQ_LIST = makeSymbol("BQ-LIST");
    SubLSymbol BQ_LIST$ = makeSymbol("BQ-LIST*");
    SubLSymbol BUNGE = makeSymbol("BUNGE");
    SubLSymbol BUT_LAST = makeSymbol("BUT-LAST");
    SubLSymbol qC = makeSymbol("?C");
    SubLSymbol C = makeSymbol("C");
    SubLSymbol CAAR = makeSymbol("CAAR");
    SubLSymbol CACHE = makeSymbol("CACHE");
    SubLSymbol CACHED_BLACKBOARD = makeSymbol("CACHED-BLACKBOARD");
    SubLSymbol CACHED_DATATYPE_DICTIONARY = makeSymbol("CACHED-DATATYPE-DICTIONARY");
    SubLSymbol CACHED_DOMAIN = makeSymbol("CACHED-DOMAIN");
    SubLSymbol CACHED_EXTERNAL_CONNECTION = makeSymbol("CACHED-EXTERNAL-CONNECTION");
    SubLSymbol CACHED_EXTERNAL_MODULE = makeSymbol("CACHED-EXTERNAL-MODULE");
    SubLSymbol CACHED_KSI_CLASS = makeSymbol("CACHED-KSI-CLASS");
    SubLSymbol CACHED_MESSAGE_BROKER = makeSymbol("CACHED-MESSAGE-BROKER");
    SubLSymbol CACHED_PROPOSAL_CLASS = makeSymbol("CACHED-PROPOSAL-CLASS");
    SubLSymbol CADR = makeSymbol("CADR");
    SubLSymbol CALCULATED_TAG = makeSymbol("CALCULATED-TAG");
    SubLSymbol CALCULATED_TAG_SUMMAND = makeSymbol("CALCULATED-TAG-SUMMAND");
    SubLSymbol CALLBACK_FUNCTION = makeSymbol("CALLBACK-FUNCTION");
    SubLSymbol CANCEL_MESSAGE = makeSymbol("CANCEL-MESSAGE");
    SubLSymbol CAND = makeSymbol("CAND");
    SubLSymbol CANDIDATE = makeSymbol("CANDIDATE");
    SubLSymbol CANDIDATE_ANSWER_P = makeSymbol("CANDIDATE-ANSWER-P");
    SubLSymbol CANDIDATES = makeSymbol("CANDIDATES");
    SubLSymbol CANONICALIZE_TERM = makeSymbol("CANONICALIZE-TERM");
    SubLSymbol CAPACITY = makeSymbol("CAPACITY");
    SubLSymbol CAR = makeSymbol("CAR");
    SubLSymbol CARDINALITY = makeSymbol("CARDINALITY");
    SubLSymbol CASES = makeSymbol("CASES");
    SubLSymbol CASE_SENSITIVEq = makeSymbol("CASE-SENSITIVE?");
    SubLSymbol CASE_SENSITIVITY = makeSymbol("CASE-SENSITIVITY");
    SubLSymbol CAST = makeSymbol("CAST");
    SubLSymbol CAT = makeSymbol("CAT");
    SubLSymbol CATCH_ERROR_MESSAGE = makeSymbol("CATCH-ERROR-MESSAGE");
    SubLSymbol CATCH_ERROR_MESSAGE_HANDLER = makeSymbol("CATCH-ERROR-MESSAGE-HANDLER");
    SubLSymbol CATEGORIES = makeSymbol("CATEGORIES");
    SubLSymbol CATEGORY = makeSymbol("CATEGORY");
    SubLSymbol CAUSE = makeSymbol("CAUSE");
    SubLSymbol CB_FORM = makeSymbol("CB-FORM");
    SubLSymbol CCATCH = makeSymbol("CCATCH");
    SubLSymbol qCCF_DATA_SOURCE = makeSymbol("?CCF-DATA-SOURCE");
    SubLSymbol qCCF_EVENT = makeSymbol("?CCF-EVENT");
    SubLSymbol qCCF_HOSPITAL_ADMIT_REASON_TYPE = makeSymbol("?CCF-HOSPITAL-ADMIT-REASON-TYPE");
    SubLSymbol CCONCATENATE = makeSymbol("CCONCATENATE");
    SubLSymbol CDAR = makeSymbol("CDAR");
    SubLSymbol CDDR = makeSymbol("CDDR");
    SubLSymbol CDEC = makeSymbol("CDEC");
    SubLSymbol CDESTRUCTURING_BIND = makeSymbol("CDESTRUCTURING-BIND");
    SubLSymbol CDO = makeSymbol("CDO");
    SubLSymbol CDO_ESSENTIAL_SLOTS = makeSymbol("CDO-ESSENTIAL-SLOTS");
    SubLSymbol CDOHASH = makeSymbol("CDOHASH");
    SubLSymbol CDOLIST = makeSymbol("CDOLIST");
    SubLSymbol CDOLIST_APPENDING = makeSymbol("CDOLIST-APPENDING");
    SubLSymbol CDOLIST_COLLECTING = makeSymbol("CDOLIST-COLLECTING");
    SubLSymbol CDOLIST_NUMBERED = makeSymbol("CDOLIST-NUMBERED");
    SubLSymbol CDOTIMES = makeSymbol("CDOTIMES");
    SubLSymbol CDOVECTOR = makeSymbol("CDOVECTOR");
    SubLSymbol CDR = makeSymbol("CDR");
    SubLSymbol CENTROID = makeSymbol("CENTROID");
    SubLSymbol CERROR = makeSymbol("CERROR");
    SubLSymbol CFASL_INPUT = makeSymbol("CFASL-INPUT");
    SubLSymbol CFASL_OUTPUT = makeSymbol("CFASL-OUTPUT");
    SubLSymbol CHANNEL = makeSymbol("CHANNEL");
    SubLSymbol CHAR = makeSymbol("CHAR");
    SubLSymbol CHAR1 = makeSymbol("CHAR1");
    SubLSymbol CHAR2 = makeSymbol("CHAR2");
    SubLSymbol CHARACTERP = makeSymbol("CHARACTERP");
    SubLSymbol CHAR_EQUAL = makeSymbol("CHAR-EQUAL");
    SubLSymbol $CHEAP_HL_MODULE_CHECK_COST$ = makeSymbol("*CHEAP-HL-MODULE-CHECK-COST*");
    SubLSymbol CHECKER = makeSymbol("CHECKER");
    SubLSymbol CHECK_PART_OF_SPEECH = makeSymbol("CHECK-PART-OF-SPEECH");
    SubLSymbol CHECK_PHRASE = makeSymbol("CHECK-PHRASE");
    SubLSymbol CHECK_TERM = makeSymbol("CHECK-TERM");
    SubLSymbol CHECK_TYPE = makeSymbol("CHECK-TYPE");
    SubLSymbol CHECK_TYPE_IF_PRESENT = makeSymbol("CHECK-TYPE-IF-PRESENT");
    SubLSymbol CHILD = makeSymbol("CHILD");
    SubLSymbol CHILDREN = makeSymbol("CHILDREN");
    SubLSymbol CHOICE = makeSymbol("CHOICE");
    SubLSymbol CHOICE_NUM = makeSymbol("CHOICE-NUM");
    SubLSymbol CHOICES = makeSymbol("CHOICES");
    SubLSymbol CHUNKER = makeSymbol("CHUNKER");
    SubLSymbol CINC = makeSymbol("CINC");
    SubLSymbol CLASS = makeSymbol("CLASS");
    SubLSymbol CLASSES = makeSymbol("CLASSES");
    SubLSymbol CLASSES_GETF = makeSymbol("CLASSES-GETF");
    SubLSymbol CLASSES_IMPLEMENTS_P = makeSymbol("CLASSES-IMPLEMENTS-P");
    SubLSymbol CLASSES_RETRIEVE_CLASS = makeSymbol("CLASSES-RETRIEVE-CLASS");
    SubLSymbol CLASS_NAME = makeSymbol("CLASS-NAME");
    SubLSymbol CLASS_NAME_OR_CLASS = makeSymbol("CLASS-NAME-OR-CLASS");
    SubLSymbol CLASS_OF = makeSymbol("CLASS-OF");
    SubLSymbol CLASS_OR_INSTANCE = makeSymbol("CLASS-OR-INSTANCE");
    SubLSymbol CLASS_P = makeSymbol("CLASS-P");
    SubLSymbol CLASS_REFERENCE = makeSymbol("CLASS-REFERENCE");
    SubLSymbol CLASS_TYPE = makeSymbol("CLASS-TYPE");
    SubLSymbol CLAUSE = makeSymbol("CLAUSE");
    SubLSymbol CLAUSES = makeSymbol("CLAUSES");
    SubLSymbol CL_COMPLEMENT = makeSymbol("CL-COMPLEMENT");
    SubLSymbol CL_CYCL = makeSymbol("CL-CYCL");
    SubLSymbol CLEANUP = makeSymbol("CLEANUP");
    SubLSymbol CLEAR = makeSymbol("CLEAR");
    SubLSymbol CLEAR_ALL_MARKS = makeSymbol("CLEAR-ALL-MARKS");
    SubLSymbol CLET = makeSymbol("CLET");
    SubLSymbol CLET_BIND = makeSymbol("CLET-BIND");
    SubLSymbol CLIENT_DATA = makeSymbol("CLIENT-DATA");
    SubLSymbol CLIENT_INTERACTION = makeSymbol("CLIENT-INTERACTION");
    SubLSymbol CLIENT_KEY = makeSymbol("CLIENT-KEY");
    SubLSymbol CLONE = makeSymbol("CLONE");
    SubLSymbol CLOSE = makeSymbol("CLOSE");
    SubLSymbol CLOSURE = makeSymbol("CLOSURE");
    SubLSymbol CLRHASH = makeSymbol("CLRHASH");
    SubLSymbol CLUSTER = makeSymbol("CLUSTER");
    SubLSymbol CMULTIPLE_VALUE_BIND = makeSymbol("CMULTIPLE-VALUE-BIND");
    SubLSymbol CMULTIPLE_VALUE_SETQ = makeSymbol("CMULTIPLE-VALUE-SETQ");
    SubLSymbol CNF = makeSymbol("CNF");
    SubLSymbol CNF_P = makeSymbol("CNF-P");
    SubLSymbol CNOT = makeSymbol("CNOT");
    SubLSymbol CODE = makeSymbol("CODE");
    SubLSymbol qCOL = makeSymbol("?COL");
    SubLSymbol COL = makeSymbol("COL");
    SubLSymbol qCOL1 = makeSymbol("?COL1");
    SubLSymbol COL1 = makeSymbol("COL1");
    SubLSymbol qCOL2 = makeSymbol("?COL2");
    SubLSymbol COL2 = makeSymbol("COL2");
    SubLSymbol qCOLL = makeSymbol("?COLL");
    SubLSymbol COLLECTED_PANELS = makeSymbol("COLLECTED-PANELS");
    SubLSymbol COLLECTED_POSTINGS = makeSymbol("COLLECTED-POSTINGS");
    SubLSymbol COLLECTION = makeSymbol("COLLECTION");
    SubLSymbol COLLECTIONq = makeSymbol("COLLECTION?");
    SubLSymbol COLLECTION_OR_INDIVIDUALq = makeSymbol("COLLECTION-OR-INDIVIDUAL?");
    SubLSymbol COLLECTION_P = makeSymbol("COLLECTION-P");
    SubLSymbol COLLECTION_TEMPLATE_P = makeSymbol("COLLECTION-TEMPLATE-P");
    SubLSymbol COLONP = makeSymbol("COLONP");
    SubLSymbol COLOR = makeSymbol("COLOR");
    SubLSymbol COLS = makeSymbol("COLS");
    SubLSymbol COLUMN = makeSymbol("COLUMN");
    SubLSymbol COMMENT = makeSymbol("COMMENT");
    SubLSymbol COMMON_NOUN_LINK_WORD = makeSymbol("COMMON-NOUN-LINK-WORD");
    SubLSymbol COMP_CYCL = makeSymbol("COMP-CYCL");
    SubLSymbol COMP_CYCLS = makeSymbol("COMP-CYCLS");
    SubLSymbol COMPILED_INHERITANCE_PATH = makeSymbol("COMPILED-INHERITANCE-PATH");
    SubLSymbol COMPILED_INSTANCE_SLOT_ACCESS_ALIST = makeSymbol("COMPILED-INSTANCE-SLOT-ACCESS-ALIST");
    SubLSymbol COMPLEMENT = makeSymbol("COMPLEMENT");
    SubLSymbol COMPLEMENTIZER_LINK_WORD = makeSymbol("COMPLEMENTIZER-LINK-WORD");
    SubLSymbol COMPLEMENTS = makeSymbol("COMPLEMENTS");
    SubLSymbol COMPLETE_CYCL_FOR_ONE_SUBJECT = makeSymbol("COMPLETE-CYCL-FOR-ONE-SUBJECT");
    SubLSymbol COMPLETENESS = makeSymbol("COMPLETENESS");
    SubLSymbol COMPLEX_FORMULA = makeSymbol("COMPLEX-FORMULA");
    SubLSymbol COMPLEX_FORMULA_ARG0 = makeSymbol("COMPLEX-FORMULA-ARG0");
    SubLSymbol COMPLEX_FORMULAS = makeSymbol("COMPLEX-FORMULAS");
    SubLSymbol COMPLEX_NOUN = makeSymbol("COMPLEX-NOUN");
    SubLSymbol COMPLEX_NOUNS = makeSymbol("COMPLEX-NOUNS");
    SubLSymbol COMPLEX_NOUNS_FILE = makeSymbol("COMPLEX-NOUNS-FILE");
    SubLSymbol COMP_MOD_CYCLS = makeSymbol("COMP-MOD-CYCLS");
    SubLSymbol COMPONENT = makeSymbol("COMPONENT");
    SubLSymbol COMPONENT_CLASS = makeSymbol("COMPONENT-CLASS");
    SubLSymbol COMPOSITE_VERBAL_CYCLS = makeSymbol("COMPOSITE-VERBAL-CYCLS");
    SubLSymbol COMP_REF = makeSymbol("COMP-REF");
    SubLSymbol COMPUTE_INDEX_ENTRIES = makeSymbol("COMPUTE-INDEX-ENTRIES");
    SubLSymbol CONCEPT = makeSymbol("CONCEPT");
    SubLSymbol CONCEPT_FILTER_SPECS = makeSymbol("CONCEPT-FILTER-SPECS");
    SubLSymbol CONDITION = makeSymbol("CONDITION");
    SubLSymbol CONDITIONAL_EFFECTS = makeSymbol("CONDITIONAL-EFFECTS");
    SubLSymbol CONDITIONS = makeSymbol("CONDITIONS");
    SubLSymbol COND_OPERATORS = makeSymbol("COND-OPERATORS");
    SubLSymbol CONF = makeSymbol("CONF");
    SubLSymbol CONFIDENCE = makeSymbol("CONFIDENCE");
    SubLSymbol CONFIDENCE_EXPRESSION = makeSymbol("CONFIDENCE-EXPRESSION");
    SubLSymbol CONJECTURES = makeSymbol("CONJECTURES");
    SubLSymbol CONJUNCTION = makeSymbol("CONJUNCTION");
    SubLSymbol CONJUNCTION_LINK_WORD = makeSymbol("CONJUNCTION-LINK-WORD");
    SubLSymbol CONJUNCTS = makeSymbol("CONJUNCTS");
    SubLSymbol CONNECTED = makeSymbol("CONNECTED");
    SubLSymbol CONNECTION = makeSymbol("CONNECTION");
    SubLSymbol CONNECTION_CLASS = makeSymbol("CONNECTION-CLASS");
    SubLSymbol CONS = makeSymbol("CONS");
    SubLSymbol CONSP = makeSymbol("CONSP");
    SubLSymbol CONSTANT = makeSymbol("CONSTANT");
    SubLSymbol CONSTANT_EXTERNAL_ID_P = makeSymbol("CONSTANT-EXTERNAL-ID-P");
    SubLSymbol CONSTANT_NAME = makeSymbol("CONSTANT-NAME");
    SubLSymbol CONSTANT_P = makeSymbol("CONSTANT-P");
    SubLSymbol CONSTANTS = makeSymbol("CONSTANTS");
    SubLSymbol CONSTRAINT = makeSymbol("CONSTRAINT");
    SubLSymbol CONSTRAINTS = makeSymbol("CONSTRAINTS");
    SubLSymbol qCONTAINER_UNDERSPECIFIED = makeSymbol("?CONTAINER-UNDERSPECIFIED");
    SubLSymbol CONTENT = makeSymbol("CONTENT");
    SubLSymbol CONTENTS = makeSymbol("CONTENTS");
    SubLSymbol CONTENTS_POINTER = makeSymbol("CONTENTS-POINTER");
    SubLSymbol CONTENT_TERMS = makeSymbol("CONTENT-TERMS");
    SubLSymbol CONTEXT = makeSymbol("CONTEXT");
    SubLSymbol CONTINUE = makeSymbol("CONTINUE");
    SubLSymbol CONTINUE_P = makeSymbol("CONTINUE-P");
    SubLSymbol CONTRIBUTIONS = makeSymbol("CONTRIBUTIONS");
    SubLSymbol CONTROL_VERB = makeSymbol("CONTROL-VERB");
    SubLSymbol CONTROL_VERB_P = makeSymbol("CONTROL-VERB-P");
    SubLSymbol CONVERT_TO_ELq = makeSymbol("CONVERT-TO-EL?");
    SubLSymbol COORDINATE_KEYWORD_RENAMING = makeSymbol("COORDINATE-KEYWORD-RENAMING");
    SubLSymbol COORDINATE_PHRASE_P = makeSymbol("COORDINATE-PHRASE-P");
    SubLSymbol COPULA = makeSymbol("COPULA");
    SubLSymbol COPULA_P = makeSymbol("COPULA-P");
    SubLSymbol COPY = makeSymbol("COPY");
    SubLSymbol COPY_LIST = makeSymbol("COPY-LIST");
    SubLSymbol COPY_OF_ENVIRONMENT = makeSymbol("COPY-OF-ENVIRONMENT");
    SubLSymbol COPY_TREE = makeSymbol("COPY-TREE");
    SubLSymbol COR = makeSymbol("COR");
    SubLSymbol CORE = makeSymbol("CORE");
    SubLSymbol COREF_DISCOURSE = makeSymbol("COREF-DISCOURSE");
    SubLSymbol COREFERENCE_RESOLVER = makeSymbol("COREFERENCE-RESOLVER");
    SubLSymbol CORPORA = makeSymbol("CORPORA");
    SubLSymbol CORPUS = makeSymbol("CORPUS");
    SubLSymbol CORRESPONDENCE = makeSymbol("CORRESPONDENCE");
    SubLSymbol COST = makeSymbol("COST");
    SubLSymbol COUNT = makeSymbol("COUNT");
    SubLSymbol COUNT_AS_OBJECT_BY_VERB = makeSymbol("COUNT-AS-OBJECT-BY-VERB");
    SubLSymbol COUNT_AS_SUBJECT_BY_VERB = makeSymbol("COUNT-AS-SUBJECT-BY-VERB");
    SubLSymbol COUNTER = makeSymbol("COUNTER");
    SubLSymbol qCOUNTRY = makeSymbol("?COUNTRY");
    SubLSymbol CPOP = makeSymbol("CPOP");
    SubLSymbol CPUSH = makeSymbol("CPUSH");
    SubLSymbol CPUSHNEW = makeSymbol("CPUSHNEW");
    SubLSymbol CREATE_DATATYPE_BAG = makeSymbol("CREATE-DATATYPE-BAG");
    SubLSymbol CREATE_LEX_ENTRIES = makeSymbol("CREATE-LEX-ENTRIES");
    SubLSymbol CREATE_POSTING = makeSymbol("CREATE-POSTING");
    SubLSymbol CREATE_PROPOSAL = makeSymbol("CREATE-PROPOSAL");
    SubLSymbol CREATE_PROPOSALS = makeSymbol("CREATE-PROPOSALS");
    SubLSymbol CREATE_QUEUE = makeSymbol("CREATE-QUEUE");
    SubLSymbol CREATE_STACK = makeSymbol("CREATE-STACK");
    SubLSymbol CREATOR = makeSymbol("CREATOR");
    SubLSymbol CROSS_PRODUCTS = makeSymbol("CROSS-PRODUCTS");
    SubLSymbol CSETF = makeSymbol("CSETF");
    SubLSymbol CSETQ = makeSymbol("CSETQ");
    SubLSymbol CSOME = makeSymbol("CSOME");
    SubLSymbol CTIME = makeSymbol("CTIME");
    SubLSymbol CUNWIND_PROTECT = makeSymbol("CUNWIND-PROTECT");
    SubLSymbol CUR_METHOD = makeSymbol("CUR-METHOD");
    SubLSymbol CUR_NAME = makeSymbol("CUR-NAME");
    SubLSymbol CUR_NUM = makeSymbol("CUR-NUM");
    SubLSymbol CUR_OP = makeSymbol("CUR-OP");
    SubLSymbol CURRENT = makeSymbol("CURRENT");
    SubLSymbol CURRENT_ARG = makeSymbol("CURRENT-ARG");
    SubLSymbol CURRENT_COLLECTION = makeSymbol("CURRENT-COLLECTION");
    SubLSymbol CURRENT_ENVIRONMENT = makeSymbol("CURRENT-ENVIRONMENT");
    SubLSymbol CURRENT_INDEX = makeSymbol("CURRENT-INDEX");
    SubLSymbol CURRENT_INTERACTION = makeSymbol("CURRENT-INTERACTION");
    SubLSymbol CURRENT_KS = makeSymbol("CURRENT-KS");
    SubLSymbol CURRENT_LINK = makeSymbol("CURRENT-LINK");
    SubLSymbol CURRENT_PANEL = makeSymbol("CURRENT-PANEL");
    SubLSymbol CURRENT_PARENT = makeSymbol("CURRENT-PARENT");
    SubLSymbol CURRENT_POSTING = makeSymbol("CURRENT-POSTING");
    SubLSymbol CURRENT_PROCESS = makeSymbol("CURRENT-PROCESS");
    SubLSymbol CURRENT_SESSION = makeSymbol("CURRENT-SESSION");
    SubLSymbol CURRENT_SLEEP_INTERVAL = makeSymbol("CURRENT-SLEEP-INTERVAL");
    SubLSymbol CURRENT_SLICE = makeSymbol("CURRENT-SLICE");
    SubLSymbol CURRENT_SMALL_LIST = makeSymbol("CURRENT-SMALL-LIST");
    SubLSymbol CURRENT_SUB_PANELS = makeSymbol("CURRENT-SUB-PANELS");
    SubLSymbol CURRENT_TOKEN = makeSymbol("CURRENT-TOKEN");
    SubLSymbol CURRENT_TYPE = makeSymbol("CURRENT-TYPE");
    SubLSymbol CURRENT_VAR = makeSymbol("CURRENT-VAR");
    SubLSymbol CUR_SCOND = makeSymbol("CUR-SCOND");
    SubLSymbol CUR_TASK = makeSymbol("CUR-TASK");
    SubLSymbol CUR_VAR = makeSymbol("CUR-VAR");
    SubLSymbol CUTOFF = makeSymbol("CUTOFF");
    SubLSymbol CWITH_OUTPUT_TO_STRING = makeSymbol("CWITH-OUTPUT-TO-STRING");
    SubLSymbol CYBLACK_ACTIVATION_PATTERN = makeSymbol("CYBLACK-ACTIVATION-PATTERN");
    SubLSymbol CYBLACK_AGENDA = makeSymbol("CYBLACK-AGENDA");
    SubLSymbol CYBLACK_APPLICATION_GET_BLACKBOARD = makeSymbol("CYBLACK-APPLICATION-GET-BLACKBOARD");
    SubLSymbol CYBLACK_APPLICATION_GET_DATATYPE_DICTIONARY = makeSymbol("CYBLACK-APPLICATION-GET-DATATYPE-DICTIONARY");
    SubLSymbol CYBLACK_APPLICATION_P = makeSymbol("CYBLACK-APPLICATION-P");
    SubLSymbol CYBLACK_AUTO_GENERATED_INTERNAL_KSI = makeSymbol("CYBLACK-AUTO-GENERATED-INTERNAL-KSI");
    SubLSymbol CYBLACK_AUTO_GENERATED_INTERNAL_PROPOSAL = makeSymbol("CYBLACK-AUTO-GENERATED-INTERNAL-PROPOSAL");
    SubLSymbol CYBLACK_AUTO_GENERATED_KS_ASSISTANT = makeSymbol("CYBLACK-AUTO-GENERATED-KS-ASSISTANT");
    SubLSymbol CYBLACK_BASIC_APPLICATION = makeSymbol("CYBLACK-BASIC-APPLICATION");
    SubLSymbol CYBLACK_BASIC_BLACKBOARD = makeSymbol("CYBLACK-BASIC-BLACKBOARD");
    SubLSymbol CYBLACK_BASIC_DATATYPE = makeSymbol("CYBLACK-BASIC-DATATYPE");
    SubLSymbol CYBLACK_BASIC_KNOWLEDGE_SOURCE_BATTERY = makeSymbol("CYBLACK-BASIC-KNOWLEDGE-SOURCE-BATTERY");
    SubLSymbol CYBLACK_BASIC_KNOWLEDGE_SOURCE_LIST = makeSymbol("CYBLACK-BASIC-KNOWLEDGE-SOURCE-LIST");
    SubLSymbol CYBLACK_BASIC_KSI = makeSymbol("CYBLACK-BASIC-KSI");
    SubLSymbol CYBLACK_BASIC_LOCKABLE = makeSymbol("CYBLACK-BASIC-LOCKABLE");
    SubLSymbol CYBLACK_BASIC_PANEL = makeSymbol("CYBLACK-BASIC-PANEL");
    SubLSymbol CYBLACK_BASIC_POSTING = makeSymbol("CYBLACK-BASIC-POSTING");
    SubLSymbol CYBLACK_BASIC_PROPOSAL = makeSymbol("CYBLACK-BASIC-PROPOSAL");
    SubLSymbol CYBLACK_BASIC_SEQUENCE_PANEL = makeSymbol("CYBLACK-BASIC-SEQUENCE-PANEL");
    SubLSymbol CYBLACK_BASIC_SUPPORT = makeSymbol("CYBLACK-BASIC-SUPPORT");
    SubLSymbol CYBLACK_BINDING = makeSymbol("CYBLACK-BINDING");
    SubLSymbol CYBLACK_BINDING_ASSOC = makeSymbol("CYBLACK-BINDING-ASSOC");
    SubLSymbol CYBLACK_BLACKBOARD_POST = makeSymbol("CYBLACK-BLACKBOARD-POST");
    SubLSymbol CYBLACK_CANCEL_MESSAGE = makeSymbol("CYBLACK-CANCEL-MESSAGE");
    SubLSymbol CYBLACK_CEM_EVENT_ROOT_POSTING = makeSymbol("CYBLACK-CEM-EVENT-ROOT-POSTING");
    SubLSymbol CYBLACK_COMPONENT = makeSymbol("CYBLACK-COMPONENT");
    SubLSymbol CYBLACK_CONSTRAINED_UNIFICATION_ROBOT = makeSymbol("CYBLACK-CONSTRAINED-UNIFICATION-ROBOT");
    SubLSymbol CYBLACK_CONSTRAINED_UNIFICATION_ROBOT_SATISFIED_BY_ANY_SOLUTION = makeSymbol("CYBLACK-CONSTRAINED-UNIFICATION-ROBOT-SATISFIED-BY-ANY-SOLUTION");
    SubLSymbol $CYBLACK_CYC_EVENT_BB_AGENDA$ = makeSymbol("*CYBLACK-CYC-EVENT-BB-AGENDA*");
    SubLSymbol CYBLACK_CYC_EVENT_BB_LAZY_AGENDA = makeSymbol("CYBLACK-CYC-EVENT-BB-LAZY-AGENDA");
    SubLSymbol CYBLACK_DATATYPE_DICTIONARY_INTERN = makeSymbol("CYBLACK-DATATYPE-DICTIONARY-INTERN");
    SubLSymbol CYBLACK_DATATYPE_GET_PANEL = makeSymbol("CYBLACK-DATATYPE-GET-PANEL");
    SubLSymbol CYBLACK_DATATYPE_P = makeSymbol("CYBLACK-DATATYPE-P");
    SubLSymbol CYBLACK_DEFAPP_BODY = makeSymbol("CYBLACK-DEFAPP-BODY");
    SubLSymbol CYBLACK_DEFAPP_EXPRESSION = makeSymbol("CYBLACK-DEFAPP-EXPRESSION");
    SubLSymbol CYBLACK_DEFBB_TYPE_RELATION = makeSymbol("CYBLACK-DEFBB-TYPE-RELATION");
    SubLSymbol CYBLACK_DEFKS_EXPRESSION = makeSymbol("CYBLACK-DEFKS-EXPRESSION");
    SubLSymbol CYBLACK_ENVIRONMENT = makeSymbol("CYBLACK-ENVIRONMENT");
    SubLSymbol CYBLACK_ENVIRONMENT_P = makeSymbol("CYBLACK-ENVIRONMENT-P");
    SubLSymbol CYBLACK_EQUAL_PREDICATE = makeSymbol("CYBLACK-EQUAL-PREDICATE");
    SubLSymbol CYBLACK_EXECUTE_MESSAGE = makeSymbol("CYBLACK-EXECUTE-MESSAGE");
    SubLSymbol CYBLACK_EXTERNAL_KNOWLEDGE_SOURCE = makeSymbol("CYBLACK-EXTERNAL-KNOWLEDGE-SOURCE");
    SubLSymbol CYBLACK_EXTERNAL_KNOWLEDGE_SOURCE_P = makeSymbol("CYBLACK-EXTERNAL-KNOWLEDGE-SOURCE-P");
    SubLSymbol CYBLACK_EXTERNAL_PROPOSAL = makeSymbol("CYBLACK-EXTERNAL-PROPOSAL");
    SubLSymbol CYBLACK_FORMAT = makeSymbol("CYBLACK-FORMAT");
    SubLSymbol CYBLACK_GUID_INFO = makeSymbol("CYBLACK-GUID-INFO");
    SubLSymbol CYBLACK_GUID_MANAGER = makeSymbol("CYBLACK-GUID-MANAGER");
    SubLSymbol CYBLACK_INVITATION_MESSAGE = makeSymbol("CYBLACK-INVITATION-MESSAGE");
    SubLSymbol $CYBLACK_IO_LOOP_CONTINUE$ = makeSymbol("*CYBLACK-IO-LOOP-CONTINUE*");
    SubLSymbol $CYBLACK_IO_STREAM_MONITOR$ = makeSymbol("*CYBLACK-IO-STREAM-MONITOR*");
    SubLSymbol CYBLACK_KNOWLEDGE_SOURCE_P = makeSymbol("CYBLACK-KNOWLEDGE-SOURCE-P");
    SubLSymbol CYBLACK_KS = makeSymbol("CYBLACK-KS");
    SubLSymbol CYBLACK_MESSAGE = makeSymbol("CYBLACK-MESSAGE");
    SubLSymbol CYBLACK_MESSAGE_BROKER = makeSymbol("CYBLACK-MESSAGE-BROKER");
    SubLSymbol CYBLACK_MESSAGE_P = makeSymbol("CYBLACK-MESSAGE-P");
    SubLSymbol CYBLACK_MONITOR = makeSymbol("CYBLACK-MONITOR");
    SubLSymbol CYBLACK_MONITORING_PATTERN = makeSymbol("CYBLACK-MONITORING-PATTERN");
    SubLSymbol CYBLACK_MONITORING_PATTERN_P = makeSymbol("CYBLACK-MONITORING-PATTERN-P");
    SubLSymbol CYBLACK_MUST = makeSymbol("CYBLACK-MUST");
    SubLSymbol CYBLACK_OBJECT = makeSymbol("CYBLACK-OBJECT");
    SubLSymbol CYBLACK_ORDINAL_POSTING = makeSymbol("CYBLACK-ORDINAL-POSTING");
    SubLSymbol CYBLACK_PANEL = makeSymbol("CYBLACK-PANEL");
    SubLSymbol CYBLACK_PANEL_P = makeSymbol("CYBLACK-PANEL-P");
    SubLSymbol CYBLACK_PATTERN = makeSymbol("CYBLACK-PATTERN");
    SubLSymbol CYBLACK_PORT = makeSymbol("CYBLACK-PORT");
    SubLSymbol CYBLACK_PORT_MANAGER = makeSymbol("CYBLACK-PORT-MANAGER");
    SubLSymbol CYBLACK_POSTING = makeSymbol("CYBLACK-POSTING");
    SubLSymbol CYBLACK_POSTING_ACTIVE_P = makeSymbol("CYBLACK-POSTING-ACTIVE-P");
    SubLSymbol CYBLACK_POSTING_GET_DATATYPE = makeSymbol("CYBLACK-POSTING-GET-DATATYPE");
    SubLSymbol CYBLACK_POSTING_P = makeSymbol("CYBLACK-POSTING-P");
    SubLSymbol CYBLACK_POSTING_VISITOR_P = makeSymbol("CYBLACK-POSTING-VISITOR-P");
    SubLSymbol CYBLACK_PRECON_PATTERN = makeSymbol("CYBLACK-PRECON-PATTERN");
    SubLSymbol CYBLACK_PROPOSAL_P = makeSymbol("CYBLACK-PROPOSAL-P");
    SubLSymbol CYBLACK_SILENCE = makeSymbol("CYBLACK-SILENCE");
    SubLSymbol CYBLACK_STATE_CHANGE_MESSAGE = makeSymbol("CYBLACK-STATE-CHANGE-MESSAGE");
    SubLSymbol CYBLACK_SYMBOL = makeSymbol("CYBLACK-SYMBOL");
    SubLSymbol CYBLACK_TERMINATE_MESSAGE = makeSymbol("CYBLACK-TERMINATE-MESSAGE");
    SubLSymbol CYBLACK_TRACING_FORMAT = makeSymbol("CYBLACK-TRACING-FORMAT");
    SubLSymbol $CYBLACK_UNBOUND_VALUE$ = makeSymbol("*CYBLACK-UNBOUND-VALUE*");
    SubLSymbol CYBLACK_UNIFICATION_ROBOT = makeSymbol("CYBLACK-UNIFICATION-ROBOT");
    SubLSymbol CYBLACK_VARIABLE_REFERENCE = makeSymbol("CYBLACK-VARIABLE-REFERENCE");
    SubLSymbol CYBLACK_VERIFY_MESSAGE = makeSymbol("CYBLACK-VERIFY-MESSAGE");
    SubLSymbol $CYBLACK_VIRTUAL_POSTING_ERROR_MSG$ = makeSymbol("*CYBLACK-VIRTUAL-POSTING-ERROR-MSG*");
    SubLSymbol CYC_ANSWERS = makeSymbol("CYC-ANSWERS");
    SubLSymbol CYC_ENTITY = makeSymbol("CYC-ENTITY");
    SubLSymbol CYC_FOCUSES = makeSymbol("CYC-FOCUSES");
    SubLSymbol CYC_FORT = makeSymbol("CYC-FORT");
    SubLSymbol CYC_FUNCTION = makeSymbol("CYC-FUNCTION");
    SubLSymbol CYC_IMAGE_ID = makeSymbol("CYC-IMAGE-ID");
    SubLSymbol qCYCL = makeSymbol("?CYCL");
    SubLSymbol CYCL = makeSymbol("CYCL");
    SubLSymbol CYCL_BINDING = makeSymbol("CYCL-BINDING");
    SubLSymbol CYCL_DATE = makeSymbol("CYCL-DATE");
    SubLSymbol CYCL_DENOTATIONAL_TERM_P = makeSymbol("CYCL-DENOTATIONAL-TERM-P");
    SubLSymbol CYCL_DENOTATIONS = makeSymbol("CYCL-DENOTATIONS");
    SubLSymbol CYCL_DIRECTION = makeSymbol("CYCL-DIRECTION");
    SubLSymbol CYCL_EXPRESSION_P = makeSymbol("CYCL-EXPRESSION-P");
    SubLSymbol CYCL_FORMULAS = makeSymbol("CYCL-FORMULAS");
    SubLSymbol CYCL_FUNCTION = makeSymbol("CYCL-FUNCTION");
    SubLSymbol CYCLIFIABLE_VERB_PHRASE = makeSymbol("CYCLIFIABLE-VERB-PHRASE");
    SubLSymbol CYCLIFICATION = makeSymbol("CYCLIFICATION");
    SubLSymbol $CYCLIFICATION_IN_PROGRESS$ = makeSymbol("*CYCLIFICATION-IN-PROGRESS*");
    SubLSymbol CYCLIFIER = makeSymbol("CYCLIFIER");
    SubLSymbol CYCLIFIER_LEXICON = makeSymbol("CYCLIFIER-LEXICON");
    SubLSymbol CYCLIFY = makeSymbol("CYCLIFY");
    SubLSymbol CYCLIFY_INT = makeSymbol("CYCLIFY-INT");
    SubLSymbol CYCLIFY_INT_VP = makeSymbol("CYCLIFY-INT-VP");
    SubLSymbol CYCLIFY_INT_VP_COORDINATION = makeSymbol("CYCLIFY-INT-VP-COORDINATION");
    SubLSymbol CYCLIFY_NUCLEUS = makeSymbol("CYCLIFY-NUCLEUS");
    SubLSymbol CYCL_INFERENCE_ANSWER = makeSymbol("CYCL-INFERENCE-ANSWER");
    SubLSymbol qCYCLIST = makeSymbol("?CYCLIST");
    SubLSymbol CYCLIST = makeSymbol("CYCLIST");
    SubLSymbol CYCL_PROBLEM = makeSymbol("CYCL-PROBLEM");
    SubLSymbol CYCL_PROBLEM_STORE_ENCODE = makeSymbol("CYCL-PROBLEM-STORE-ENCODE");
    SubLSymbol CYCL_PROOF = makeSymbol("CYCL-PROOF");
    SubLSymbol CYCLS = makeSymbol("CYCLS");
    SubLSymbol CYCLS0 = makeSymbol("CYCLS0");
    SubLSymbol CYCLS_CONJ = makeSymbol("CYCLS-CONJ");
    SubLSymbol CYCLS_DISJ = makeSymbol("CYCLS-DISJ");
    SubLSymbol CYCL_SENTENCE = makeSymbol("CYCL-SENTENCE");
    SubLSymbol CYCL_SENTENCE_P = makeSymbol("CYCL-SENTENCE-P");
    SubLSymbol CYCL_STORE = makeSymbol("CYCL-STORE");
    SubLSymbol CYCL_STRENGTH = makeSymbol("CYCL-STRENGTH");
    SubLSymbol CYCL_TERM = makeSymbol("CYCL-TERM");
    SubLSymbol CYCL_TERM_P = makeSymbol("CYCL-TERM-P");
    SubLSymbol CYCL_TRUTH = makeSymbol("CYCL-TRUTH");
    SubLSymbol CYCL_VAR = makeSymbol("CYCL-VAR");
    SubLSymbol CYCML_PRIMITIVE_INDENTED_ELEMENT = makeSymbol("CYCML-PRIMITIVE-INDENTED-ELEMENT");
    SubLSymbol CYC_TERM = makeSymbol("CYC-TERM");
    SubLSymbol CYC_TEST_KB_P = makeSymbol("CYC-TEST-KB-P");
    SubLSymbol CYC_VARq = makeSymbol("CYC-VAR?");
    SubLSymbol D = makeSymbol("D");
    SubLSymbol DAEMON = makeSymbol("DAEMON");
    SubLSymbol DAEMON_VISITOR = makeSymbol("DAEMON-VISITOR");
    SubLSymbol DATA = makeSymbol("DATA");
    SubLSymbol DATATYPE = makeSymbol("DATATYPE");
    SubLSymbol DATATYPE_BAG = makeSymbol("DATATYPE-BAG");
    SubLSymbol DATATYPE_DICTIONARY = makeSymbol("DATATYPE-DICTIONARY");
    SubLSymbol DATATYPE_LIST = makeSymbol("DATATYPE-LIST");
    SubLSymbol DATATYPE_NAME = makeSymbol("DATATYPE-NAME");
    SubLSymbol DATATYPE_NAMES = makeSymbol("DATATYPE-NAMES");
    SubLSymbol DATATYPES = makeSymbol("DATATYPES");
    SubLSymbol DATATYPE_STRING = makeSymbol("DATATYPE-STRING");
    SubLSymbol DATATYPE_VAR = makeSymbol("DATATYPE-VAR");
    SubLSymbol qDATE = makeSymbol("?DATE");
    SubLSymbol DATE = makeSymbol("DATE");
    SubLSymbol DATE1 = makeSymbol("DATE1");
    SubLSymbol DATE2 = makeSymbol("DATE2");
    SubLSymbol DATE_INTERVAL = makeSymbol("DATE-INTERVAL");
    SubLSymbol DATE_P = makeSymbol("DATE-P");
    SubLSymbol DATE_P_INTERNAL = makeSymbol("DATE-P-INTERNAL");
    SubLSymbol DATES = makeSymbol("DATES");
    SubLSymbol DATE_STRING = makeSymbol("DATE-STRING");
    SubLSymbol DATUM = makeSymbol("DATUM");
    SubLSymbol DAUGHTER = makeSymbol("DAUGHTER");
    SubLSymbol DAUGHTER_COUNT = makeSymbol("DAUGHTER-COUNT");
    SubLSymbol DAUGHTERS = makeSymbol("DAUGHTERS");
    SubLSymbol DAY = makeSymbol("DAY");
    SubLSymbol DAY_NUMBER = makeSymbol("DAY-NUMBER");
    SubLSymbol $DBMS_SERVER$ = makeSymbol("*DBMS-SERVER*");
    SubLSymbol DBMS_SERVER = makeSymbol("DBMS-SERVER");
    SubLSymbol DEACTIVATE_POSTING = makeSymbol("DEACTIVATE-POSTING");
    SubLSymbol DEALLOCATE_ENUMERATOR = makeSymbol("DEALLOCATE-ENUMERATOR");
    SubLSymbol qDEATH = makeSymbol("?DEATH");
    SubLSymbol DEC_ELEMENT_COUNT = makeSymbol("DEC-ELEMENT-COUNT");
    SubLSymbol DECL = makeSymbol("DECL");
    SubLSymbol DECLARE_SUBTYPE = makeSymbol("DECLARE-SUBTYPE");
    SubLSymbol DECOMPOSITION = makeSymbol("DECOMPOSITION");
    SubLSymbol DEDUCTION = makeSymbol("DEDUCTION");
    SubLSymbol DEDUCTION_P = makeSymbol("DEDUCTION-P");
    SubLSymbol DEFAULT = makeSymbol("DEFAULT");
    SubLSymbol $DEFAULT_ALL_TEMPORAL_RELATION_COST$ = makeSymbol("*DEFAULT-ALL-TEMPORAL-RELATION-COST*");
    SubLSymbol $DEFAULT_ALL_TEMPORAL_RELATION_INVERSE_COST$ = makeSymbol("*DEFAULT-ALL-TEMPORAL-RELATION-INVERSE-COST*");
    SubLSymbol DEFAULT_BASE_MT = makeSymbol("DEFAULT-BASE-MT");
    SubLSymbol DEFAULT_EXCLUDE_MTS = makeSymbol("DEFAULT-EXCLUDE-MTS");
    SubLSymbol DEFAULT_EXCLUDE_PREDICATES = makeSymbol("DEFAULT-EXCLUDE-PREDICATES");
    SubLSymbol DEFAULT_KB_SPEC = makeSymbol("DEFAULT-KB-SPEC");
    SubLSymbol $DEFAULT_MATH_MODULE_COST$ = makeSymbol("*DEFAULT-MATH-MODULE-COST*");
    SubLSymbol $DEFAULT_NOT_TEMPORAL_RELATION_CHECK_COST$ = makeSymbol("*DEFAULT-NOT-TEMPORAL-RELATION-CHECK-COST*");
    SubLSymbol $DEFAULT_REGEX_STRING_MATCH_COST$ = makeSymbol("*DEFAULT-REGEX-STRING-MATCH-COST*");
    SubLSymbol DEFAULT_STRUCT_PRINT_FUNCTION = makeSymbol("DEFAULT-STRUCT-PRINT-FUNCTION");
    SubLSymbol $DEFAULT_TEMPORAL_RELATION_CHECK_COST$ = makeSymbol("*DEFAULT-TEMPORAL-RELATION-CHECK-COST*");
    SubLSymbol $DEFAULT_TERM_PHRASES_COST$ = makeSymbol("*DEFAULT-TERM-PHRASES-COST*");
    SubLSymbol DEFAULT_VALUE = makeSymbol("DEFAULT-VALUE");
    SubLSymbol DEF_CLASS_METHOD = makeSymbol("DEF-CLASS-METHOD");
    SubLSymbol DEFCONSTANT = makeSymbol("DEFCONSTANT");
    SubLSymbol DEFINE = makeSymbol("DEFINE");
    SubLSymbol DEFINE_CLASS = makeSymbol("DEFINE-CLASS");
    SubLSymbol DEFINE_PRIVATE = makeSymbol("DEFINE-PRIVATE");
    SubLSymbol DEFINE_PROTECTED = makeSymbol("DEFINE-PROTECTED");
    SubLSymbol DEFINE_PUBLIC = makeSymbol("DEFINE-PUBLIC");
    SubLSymbol qDEFINING_COLL = makeSymbol("?DEFINING-COLL");
    SubLSymbol qDEFINING_PRED = makeSymbol("?DEFINING-PRED");
    SubLSymbol DEFINITE_DESCRIPTION_P = makeSymbol("DEFINITE-DESCRIPTION-P");
    SubLSymbol DEFINITE_RMS = makeSymbol("DEFINITE-RMS");
    SubLSymbol DEF_INSTANCE_METHOD = makeSymbol("DEF-INSTANCE-METHOD");
    SubLSymbol DEFLEXICAL = makeSymbol("DEFLEXICAL");
    SubLSymbol DEFLEXICAL_PRIVATE = makeSymbol("DEFLEXICAL-PRIVATE");
    SubLSymbol qDEFN = makeSymbol("?DEFN");
    SubLSymbol DEFPARAMETER = makeSymbol("DEFPARAMETER");
    SubLSymbol DEFVAR = makeSymbol("DEFVAR");
    SubLSymbol DEGENERATE_DIAGNOSIS = makeSymbol("DEGENERATE-DIAGNOSIS");
    SubLSymbol qDEGREE = makeSymbol("?DEGREE");
    SubLSymbol DELETE = makeSymbol("DELETE");
    SubLSymbol DELETE_CATEGORY = makeSymbol("DELETE-CATEGORY");
    SubLSymbol DELETE_FILE = makeSymbol("DELETE-FILE");
    SubLSymbol DELETE_LINK = makeSymbol("DELETE-LINK");
    SubLSymbol DELETE_LITERALS = makeSymbol("DELETE-LITERALS");
    SubLSymbol DELETE_PARENT_LINK = makeSymbol("DELETE-PARENT-LINK");
    SubLSymbol DELETES = makeSymbol("DELETES");
    SubLSymbol DELETE_SELF_FROM_ALL_COLLECTIONS = makeSymbol("DELETE-SELF-FROM-ALL-COLLECTIONS");
    SubLSymbol DELETE_SELF_FROM_COLLECTION = makeSymbol("DELETE-SELF-FROM-COLLECTION");
    SubLSymbol DEN = makeSymbol("DEN");
    SubLSymbol DENOMINATOR = makeSymbol("DENOMINATOR");
    SubLSymbol qDENOT = makeSymbol("?DENOT");
    SubLSymbol DENOT = makeSymbol("DENOT");
    SubLSymbol DENOTS = makeSymbol("DENOTS");
    SubLSymbol qDEP_COL = makeSymbol("?DEP-COL");
    SubLSymbol DEPTH = makeSymbol("DEPTH");
    SubLSymbol DEPTH_CUTOFF = makeSymbol("DEPTH-CUTOFF");
    SubLSymbol DEQUEUE = makeSymbol("DEQUEUE");
    SubLSymbol DEQUEUED_ITEM = makeSymbol("DEQUEUED-ITEM");
    SubLSymbol DEQUEUE_NOTIFY = makeSymbol("DEQUEUE-NOTIFY");
    SubLSymbol DESCRIBE_INSTANCE = makeSymbol("DESCRIBE-INSTANCE");
    SubLSymbol DESCRIBE_TERM = makeSymbol("DESCRIBE-TERM");
    SubLSymbol DESCRIPTION = makeSymbol("DESCRIPTION");
    SubLSymbol DESCRIPTIONS = makeSymbol("DESCRIPTIONS");
    SubLSymbol DESTINATION = makeSymbol("DESTINATION");
    SubLSymbol DESTRUCTURING_PREDICATION_GENERATOR = makeSymbol("DESTRUCTURING-PREDICATION-GENERATOR");
    SubLSymbol DET = makeSymbol("DET");
    SubLSymbol DETERMINER = makeSymbol("DETERMINER");
    SubLSymbol DIAGN = makeSymbol("DIAGN");
    SubLSymbol DIAGNOSE = makeSymbol("DIAGNOSE");
    SubLSymbol DIAGNOSIS = makeSymbol("DIAGNOSIS");
    SubLSymbol DICTIONARY = makeSymbol("DICTIONARY");
    SubLSymbol DICTIONARY_ENTER = makeSymbol("DICTIONARY-ENTER");
    SubLSymbol DICTIONARY_INDEX = makeSymbol("DICTIONARY-INDEX");
    SubLSymbol DICTIONARY_LOOKUP = makeSymbol("DICTIONARY-LOOKUP");
    SubLSymbol DICTIONARY_OF_NOUNS = makeSymbol("DICTIONARY-OF-NOUNS");
    SubLSymbol DICTIONARY_P = makeSymbol("DICTIONARY-P");
    SubLSymbol DICTIONARY_VALUES = makeSymbol("DICTIONARY-VALUES");
    SubLSymbol DIGIT_CHAR_P = makeSymbol("DIGIT-CHAR-P");
    SubLSymbol DIRECT_CLASS = makeSymbol("DIRECT-CLASS");
    SubLSymbol DIRECTION = makeSymbol("DIRECTION");
    SubLSymbol DIRECTION_P = makeSymbol("DIRECTION-P");
    SubLSymbol DIRECTIVE = makeSymbol("DIRECTIVE");
    SubLSymbol DIRECTIVE_ARG = makeSymbol("DIRECTIVE-ARG");
    SubLSymbol DIRECT_KNOWLEDGE_SOURCES = makeSymbol("DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol DIRECT_OBJECT = makeSymbol("DIRECT-OBJECT");
    SubLSymbol DIRECTORY = makeSymbol("DIRECTORY");
    SubLSymbol DIRECTORY_P = makeSymbol("DIRECTORY-P");
    SubLSymbol DISABLEq = makeSymbol("DISABLE?");
    SubLSymbol DISAMBIGUATOR = makeSymbol("DISAMBIGUATOR");
    SubLSymbol DISJUNCTIVE_KEYWORD_RENAMINGS = makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS");
    SubLSymbol DISJUNCTS = makeSymbol("DISJUNCTS");
    SubLSymbol DISPLAY_QUESTION = makeSymbol("DISPLAY-QUESTION");
    SubLSymbol DISTANCE = makeSymbol("DISTANCE");
    SubLSymbol DISTR_COMP_CYCLS = makeSymbol("DISTR-COMP-CYCLS");
    SubLSymbol DISTRIBUTE_BINDING_INFO = makeSymbol("DISTRIBUTE-BINDING-INFO");
    SubLSymbol DLC_CONTENTS = makeSymbol("DLC-CONTENTS");
    SubLSymbol DLC_NEXT = makeSymbol("DLC-NEXT");
    SubLSymbol DLC_OWNER = makeSymbol("DLC-OWNER");
    SubLSymbol DLC_PREVIOUS = makeSymbol("DLC-PREVIOUS");
    SubLSymbol DLL_ELEMENT_COUNT = makeSymbol("DLL-ELEMENT-COUNT");
    SubLSymbol DLL_ELEMENT_EQUALITY_PREDICATE = makeSymbol("DLL-ELEMENT-EQUALITY-PREDICATE");
    SubLSymbol DLL_FIRST_LINK = makeSymbol("DLL-FIRST-LINK");
    SubLSymbol DLL_LAST_LINK = makeSymbol("DLL-LAST-LINK");
    SubLSymbol DO_ALIST = makeSymbol("DO-ALIST");
    SubLSymbol DOC_ID = makeSymbol("DOC-ID");
    SubLSymbol DOCNO = makeSymbol("DOCNO");
    SubLSymbol qDOCUMENT = makeSymbol("?DOCUMENT");
    SubLSymbol DOCUMENT = makeSymbol("DOCUMENT");
    SubLSymbol DOCUMENTATION = makeSymbol("DOCUMENTATION");
    SubLSymbol DO_DICTIONARY = makeSymbol("DO-DICTIONARY");
    SubLSymbol DO_GAF_ARG_INDEX = makeSymbol("DO-GAF-ARG-INDEX");
    SubLSymbol DO_GAF_ARG_INDEX_GP = makeSymbol("DO-GAF-ARG-INDEX-GP");
    SubLSymbol DO_HASH_TABLE = makeSymbol("DO-HASH-TABLE");
    SubLSymbol DO_ID_INDEX = makeSymbol("DO-ID-INDEX");
    SubLSymbol DO_ITERATOR = makeSymbol("DO-ITERATOR");
    SubLSymbol DO_KB_SUID_TABLE = makeSymbol("DO-KB-SUID-TABLE");
    SubLSymbol DO_LIST = makeSymbol("DO-LIST");
    SubLSymbol DOMAIN = makeSymbol("DOMAIN");
    SubLSymbol DOMAIN_MT = makeSymbol("DOMAIN-MT");
    SubLSymbol DOMAIN_TUPLE = makeSymbol("DOMAIN-TUPLE");
    SubLSymbol DONE = makeSymbol("DONE");
    SubLSymbol DONEq = makeSymbol("DONE?");
    SubLSymbol DONE_VAR = makeSymbol("DONE-VAR");
    SubLSymbol DO_PREDICATE_EXTENT_INDEX = makeSymbol("DO-PREDICATE-EXTENT-INDEX");
    SubLSymbol DO_SET = makeSymbol("DO-SET");
    SubLSymbol DO_SET_CONTENTS = makeSymbol("DO-SET-CONTENTS");
    SubLSymbol DOTTED_ASSOC_PUSH = makeSymbol("DOTTED-ASSOC-PUSH");
    SubLSymbol DOUBLE_FLOAT = makeSymbol("DOUBLE-FLOAT");
    SubLSymbol DOUBLE_LINK_CELL_P = makeSymbol("DOUBLE-LINK-CELL-P");
    SubLSymbol DOUBLY_LINKED_LIST_TEMPLATE = makeSymbol("DOUBLY-LINKED-LIST-TEMPLATE");
    SubLSymbol DO_VECTOR = makeSymbol("DO-VECTOR");
    SubLSymbol DRT_TRACE_PROGN = makeSymbol("DRT-TRACE-PROGN");
    SubLSymbol DRT_WARN = makeSymbol("DRT-WARN");
    SubLSymbol DRS = makeSymbol("DRS");
    SubLSymbol DRT = makeSymbol("DRT");
    SubLSymbol E = makeSymbol("E");
    SubLSymbol EDGE = makeSymbol("EDGE");
    SubLSymbol EDGES = makeSymbol("EDGES");
    SubLSymbol EDGES_SOURCE = makeSymbol("EDGES-SOURCE");
    SubLSymbol EDGES_TARGET = makeSymbol("EDGES-TARGET");
    SubLSymbol EFFECTS = makeSymbol("EFFECTS");
    SubLSymbol EKSC = makeSymbol("EKSC");
    SubLSymbol EKS_CLASS = makeSymbol("EKS-CLASS");
    SubLSymbol EKSC_TO_PORT_ID_MAP = makeSymbol("EKSC-TO-PORT-ID-MAP");
    SubLSymbol ELAPSED_TIME = makeSymbol("ELAPSED-TIME");
    SubLSymbol ELEMENT = makeSymbol("ELEMENT");
    SubLSymbol ELEMENT1 = makeSymbol("ELEMENT1");
    SubLSymbol ELEMENT2 = makeSymbol("ELEMENT2");
    SubLSymbol ELEMENT_COUNT = makeSymbol("ELEMENT-COUNT");
    SubLSymbol ELEMENT_EQUALITY_PREDICATE = makeSymbol("ELEMENT-EQUALITY-PREDICATE");
    SubLSymbol ELEMENT_EQUAL_P = makeSymbol("ELEMENT-EQUAL-P");
    SubLSymbol ELEMENTS = makeSymbol("ELEMENTS");
    SubLSymbol ELEMENT_VAR = makeSymbol("ELEMENT-VAR");
    SubLSymbol EL_FORMULA = makeSymbol("EL-FORMULA");
    SubLSymbol EL_FORMULA_P = makeSymbol("EL-FORMULA-P");
    SubLSymbol EL_FORT_P = makeSymbol("EL-FORT-P");
    SubLSymbol EL_IMPLICATION_P = makeSymbol("EL-IMPLICATION-P");
    SubLSymbol EL_LIST_ITEMS = makeSymbol("EL-LIST-ITEMS");
    SubLSymbol EL_LIST_P = makeSymbol("EL-LIST-P");
    SubLSymbol ELMT = makeSymbol("ELMT");
    SubLSymbol EL_SENTENCE_P = makeSymbol("EL-SENTENCE-P");
    SubLSymbol EL_STRENGTH_P = makeSymbol("EL-STRENGTH-P");
    SubLSymbol ELT = makeSymbol("ELT");
    SubLSymbol EL_VAR = makeSymbol("EL-VAR");
    SubLSymbol EL_VARq = makeSymbol("EL-VAR?");
    SubLSymbol EL_VARIABLE_P = makeSymbol("EL-VARIABLE-P");
    SubLSymbol EMID = makeSymbol("EMID");
    SubLSymbol EMNAME = makeSymbol("EMNAME");
    SubLSymbol EMPTY_LIST_P = makeSymbol("EMPTY-LIST-P");
    SubLSymbol EMPTY_P = makeSymbol("EMPTY-P");
    SubLSymbol EMPTY_STRING_P = makeSymbol("EMPTY-STRING-P");
    SubLSymbol ENABLED = makeSymbol("ENABLED");
    SubLSymbol ENCODING = makeSymbol("ENCODING");
    SubLSymbol END = makeSymbol("END");
    SubLSymbol END1 = makeSymbol("END1");
    SubLSymbol END2 = makeSymbol("END2");
    SubLSymbol END_INDEX = makeSymbol("END-INDEX");
    SubLSymbol END_INTERACTION = makeSymbol("END-INTERACTION");
    SubLSymbol ENDS_WITH = makeSymbol("ENDS-WITH");
    SubLSymbol END_TAG = makeSymbol("END-TAG");
    SubLSymbol ENGINE = makeSymbol("ENGINE");
    SubLSymbol ENQUEUE = makeSymbol("ENQUEUE");
    SubLSymbol ENQUEUED_P = makeSymbol("ENQUEUED-P");
    SubLSymbol ENQUEUE_NOTIFY = makeSymbol("ENQUEUE-NOTIFY");
    SubLSymbol ENQUEUE_SERIALIZED_EVENT = makeSymbol("ENQUEUE-SERIALIZED-EVENT");
    SubLSymbol ENTITIES = makeSymbol("ENTITIES");
    SubLSymbol ENTITY = makeSymbol("ENTITY");
    SubLSymbol qENTITY_MENTION = makeSymbol("?ENTITY-MENTION");
    SubLSymbol ENTRIES = makeSymbol("ENTRIES");
    SubLSymbol ENTRY = makeSymbol("ENTRY");
    SubLSymbol ENUMERATOR = makeSymbol("ENUMERATOR");
    SubLSymbol ENV = makeSymbol("ENV");
    SubLSymbol ENVIRONMENT = makeSymbol("ENVIRONMENT");
    SubLSymbol ENVIRONMENTS = makeSymbol("ENVIRONMENTS");
    SubLSymbol ENVIRONMENT_TAG = makeSymbol("ENVIRONMENT-TAG");
    SubLSymbol ENVIRONMENT_VAR = makeSymbol("ENVIRONMENT-VAR");
    SubLSymbol ENV_VAR = makeSymbol("ENV-VAR");
    SubLSymbol EQUALITY_PRED = makeSymbol("EQUALITY-PRED");
    SubLSymbol EQUAL_P = makeSymbol("EQUAL-P");
    SubLSymbol EQUALS_ELq = makeSymbol("EQUALS-EL?");
    SubLSymbol EQUATION = makeSymbol("EQUATION");
    SubLSymbol ERROR = makeSymbol("ERROR");
    SubLSymbol ERRORq = makeSymbol("ERROR?");
    SubLSymbol ERROR_DATA = makeSymbol("ERROR-DATA");
    SubLSymbol ERROR_HANDLING = makeSymbol("ERROR-HANDLING");
    SubLSymbol ERROR_MESSAGE = makeSymbol("ERROR-MESSAGE");
    SubLSymbol EVAL = makeSymbol("EVAL");
    SubLSymbol EVALUATORS = makeSymbol("EVALUATORS");
    SubLSymbol EVAL_VAR = makeSymbol("EVAL-VAR");
    SubLSymbol qEVENT = makeSymbol("?EVENT");
    SubLSymbol EVENT = makeSymbol("EVENT");
    SubLSymbol qEVENT_1 = makeSymbol("?EVENT-1");
    SubLSymbol EVENT_TYPE = makeSymbol("EVENT-TYPE");
    SubLSymbol qEVT = makeSymbol("?EVT");
    SubLSymbol EXCLUDED_MTS = makeSymbol("EXCLUDED-MTS");
    SubLSymbol EXCLUDED_PANELS = makeSymbol("EXCLUDED-PANELS");
    SubLSymbol EXCLUDED_POS_LIST = makeSymbol("EXCLUDED-POS-LIST");
    SubLSymbol EXCLUDED_PREDS = makeSymbol("EXCLUDED-PREDS");
    SubLSymbol EXCLUDE_POS = makeSymbol("EXCLUDE-POS");
    SubLSymbol EXCLUDE_PREDICATE = makeSymbol("EXCLUDE-PREDICATE");
    SubLSymbol $EXCLUDE_SLANGq$ = makeSymbol("*EXCLUDE-SLANG?*");
    SubLSymbol $EXCLUDE_VULGARITIESq$ = makeSymbol("*EXCLUDE-VULGARITIES?*");
    SubLSymbol EXCUSES = makeSymbol("EXCUSES");
    SubLSymbol EXECUTABLE_KSI_QUEUE = makeSymbol("EXECUTABLE-KSI-QUEUE");
    SubLSymbol EXECUTE = makeSymbol("EXECUTE");
    SubLSymbol EXECUTE_DEF = makeSymbol("EXECUTE-DEF");
    SubLSymbol EXECUTE_MESSAGE = makeSymbol("EXECUTE-MESSAGE");
    SubLSymbol EXECUTION_MODE = makeSymbol("EXECUTION-MODE");
    SubLSymbol EXISTING_BINDING = makeSymbol("EXISTING-BINDING");
    SubLSymbol EXISTING_ENTRIES = makeSymbol("EXISTING-ENTRIES");
    SubLSymbol $EXPENSIVE_HL_MODULE_CHECK_COST$ = makeSymbol("*EXPENSIVE-HL-MODULE-CHECK-COST*");
    SubLSymbol EXPIRATION_DELTA = makeSymbol("EXPIRATION-DELTA");
    SubLSymbol EXPLANATION = makeSymbol("EXPLANATION");
    SubLSymbol EXPRESSION = makeSymbol("EXPRESSION");
    SubLSymbol EXPRESSION1 = makeSymbol("EXPRESSION1");
    SubLSymbol EXPRESSION2 = makeSymbol("EXPRESSION2");
    SubLSymbol EXPRESSION_INDEX = makeSymbol("EXPRESSION-INDEX");
    SubLSymbol EXTENSION = makeSymbol("EXTENSION");
    SubLSymbol EXTERNAL_CONNECTION = makeSymbol("EXTERNAL-CONNECTION");
    SubLSymbol EXTERNAL_ID = makeSymbol("EXTERNAL-ID");
    SubLSymbol EXTERNAL_KNOWLEDGE_SOURCE = makeSymbol("EXTERNAL-KNOWLEDGE-SOURCE");
    SubLSymbol EXTERNAL_KNOWLEDGE_SOURCE_EXPRESSIONS = makeSymbol("EXTERNAL-KNOWLEDGE-SOURCE-EXPRESSIONS");
    SubLSymbol EXTERNAL_MESSAGE = makeSymbol("EXTERNAL-MESSAGE");
    SubLSymbol EXTERNAL_MODULE = makeSymbol("EXTERNAL-MODULE");
    SubLSymbol EXTERNAL_MODULE_GUID = makeSymbol("EXTERNAL-MODULE-GUID");
    SubLSymbol EXTERNAL_MODULE_GUID_ID = makeSymbol("EXTERNAL-MODULE-GUID-ID");
    SubLSymbol EXTERNAL_MODULE_GUID_INFO = makeSymbol("EXTERNAL-MODULE-GUID-INFO");
    SubLSymbol EXTERNAL_MODULE_ID = makeSymbol("EXTERNAL-MODULE-ID");
    SubLSymbol EXTERNAL_MODULE_INSTANCE = makeSymbol("EXTERNAL-MODULE-INSTANCE");
    SubLSymbol EXTERNAL_MODULE_INSTANCES = makeSymbol("EXTERNAL-MODULE-INSTANCES");
    SubLSymbol EXTERNAL_MODULE_NAME = makeSymbol("EXTERNAL-MODULE-NAME");
    SubLSymbol EXTERNAL_MODULE_PORT = makeSymbol("EXTERNAL-MODULE-PORT");
    SubLSymbol EXTERNAL_MODULE_TABLE = makeSymbol("EXTERNAL-MODULE-TABLE");
    SubLSymbol EXTERNAL_P = makeSymbol("EXTERNAL-P");
    SubLSymbol EXTERNAL_POSTING = makeSymbol("EXTERNAL-POSTING");
    SubLSymbol EXTERNAL_POSTING_REPRESENTATION = makeSymbol("EXTERNAL-POSTING-REPRESENTATION");
    SubLSymbol EXTERNAL_PROPOSAL = makeSymbol("EXTERNAL-PROPOSAL");
    SubLSymbol EXTERNAL_REPRESENTATION = makeSymbol("EXTERNAL-REPRESENTATION");
    SubLSymbol EXTRACT = makeSymbol("EXTRACT");
    SubLSymbol qF = makeSymbol("?F");
    SubLSymbol F = makeSymbol("F");
    SubLSymbol FABRICATE = makeSymbol("FABRICATE");
    SubLSymbol FACCESS = makeSymbol("FACCESS");
    SubLSymbol FACTOR = makeSymbol("FACTOR");
    SubLSymbol $FACT_SHEET_LOG_FILE$ = makeSymbol("*FACT-SHEET-LOG-FILE*");
    SubLSymbol FAIL = makeSymbol("FAIL");
    SubLSymbol FALSE = makeSymbol("FALSE");
    SubLSymbol FBOUNDP = makeSymbol("FBOUNDP");
    SubLSymbol FCM = makeSymbol("FCM");
    SubLSymbol FCOND = makeSymbol("FCOND");
    SubLSymbol FHT = makeSymbol("FHT");
    SubLSymbol FI_ASSERT = makeSymbol("FI-ASSERT");
    SubLSymbol FI_BLAST = makeSymbol("FI-BLAST");
    SubLSymbol FIELD = makeSymbol("FIELD");
    SubLSymbol FIELD_LABELS = makeSymbol("FIELD-LABELS");
    SubLSymbol FIELD_NAME = makeSymbol("FIELD-NAME");
    SubLSymbol FIELDS = makeSymbol("FIELDS");
    SubLSymbol FIELD_WIDTH = makeSymbol("FIELD-WIDTH");
    SubLSymbol FIF = makeSymbol("FIF");
    SubLSymbol FIFTH = makeSymbol("FIFTH");
    SubLSymbol FILE = makeSymbol("FILE");
    SubLSymbol FILE_EXISTSq = makeSymbol("FILE-EXISTS?");
    SubLSymbol FILENAME = makeSymbol("FILENAME");
    SubLSymbol FILL = makeSymbol("FILL");
    SubLSymbol qFILLER = makeSymbol("?FILLER");
    SubLSymbol FILTER_CONSTRAINED_CYCLS = makeSymbol("FILTER-CONSTRAINED-CYCLS");
    SubLSymbol FILTERED = makeSymbol("FILTERED");
    SubLSymbol FILTERS = makeSymbol("FILTERS");
    SubLSymbol FIM = makeSymbol("FIM");
    SubLSymbol FIMPLIES = makeSymbol("FIMPLIES");
    SubLSymbol FIND = makeSymbol("FIND");
    SubLSymbol FIND_ASSERTION_BY_ID = makeSymbol("FIND-ASSERTION-BY-ID");
    SubLSymbol FIND_CONSTANT = makeSymbol("FIND-CONSTANT");
    SubLSymbol FIND_CONSTANT_BY_INTERNAL_ID = makeSymbol("FIND-CONSTANT-BY-INTERNAL-ID");
    SubLSymbol FIND_FIRST = makeSymbol("FIND-FIRST");
    SubLSymbol FIND_LAST = makeSymbol("FIND-LAST");
    SubLSymbol FIND_LINK = makeSymbol("FIND-LINK");
    SubLSymbol FIND_NART = makeSymbol("FIND-NART");
    SubLSymbol FIND_NOUN = makeSymbol("FIND-NOUN");
    SubLSymbol FIND_NTH_LINK = makeSymbol("FIND-NTH-LINK");
    SubLSymbol FIND_OBJECT_BY_HL_EXTERNAL_ID_STRING = makeSymbol("FIND-OBJECT-BY-HL-EXTERNAL-ID-STRING");
    SubLSymbol FIND_PACKAGE = makeSymbol("FIND-PACKAGE");
    SubLSymbol FIRST = makeSymbol("FIRST");
    SubLSymbol FIRST_ELEMENT = makeSymbol("FIRST-ELEMENT");
    SubLSymbol FIRST_INDEX = makeSymbol("FIRST-INDEX");
    SubLSymbol FIRST_LINK = makeSymbol("FIRST-LINK");
    SubLSymbol FIRST_OF = makeSymbol("FIRST-OF");
    SubLSymbol FIRST_OUTPUT = makeSymbol("FIRST-OUTPUT");
    SubLSymbol FIRST_P = makeSymbol("FIRST-P");
    SubLSymbol FIRST_PRINTED = makeSymbol("FIRST-PRINTED");
    SubLSymbol FI_UNASSERT = makeSymbol("FI-UNASSERT");
    SubLSymbol FIXNUMP = makeSymbol("FIXNUMP");
    SubLSymbol FLAG = makeSymbol("FLAG");
    SubLSymbol FLOATP = makeSymbol("FLOATP");
    SubLSymbol FN = makeSymbol("FN");
    SubLSymbol FOCUS = makeSymbol("FOCUS");
    SubLSymbol FOCUS_STRING = makeSymbol("FOCUS-STRING");
    SubLSymbol FOCUS_TREE = makeSymbol("FOCUS-TREE");
    SubLSymbol FOO = makeSymbol("FOO");
    SubLSymbol FORBID_MT = makeSymbol("FORBID-MT");
    SubLSymbol FORCE = makeSymbol("FORCE");
    SubLSymbol FORCE_OUTPUT = makeSymbol("FORCE-OUTPUT");
    SubLSymbol FORGE_AHEADq = makeSymbol("FORGE-AHEAD?");
    SubLSymbol FORM = makeSymbol("FORM");
    SubLSymbol FORMAT = makeSymbol("FORMAT");
    SubLSymbol FORMAT_NIL = makeSymbol("FORMAT-NIL");
    SubLSymbol FORMAT_STR = makeSymbol("FORMAT-STR");
    SubLSymbol FORMAT_STRING = makeSymbol("FORMAT-STRING");
    SubLSymbol FORMAT_TO_STRING = makeSymbol("FORMAT-TO-STRING");
    SubLSymbol FORMS = makeSymbol("FORMS");
    SubLSymbol qFORMULA = makeSymbol("?FORMULA");
    SubLSymbol FORMULA = makeSymbol("FORMULA");
    SubLSymbol FORMULA_ARG = makeSymbol("FORMULA-ARG");
    SubLSymbol FORMULA_ARG0 = makeSymbol("FORMULA-ARG0");
    SubLSymbol FORMULA_ARG1 = makeSymbol("FORMULA-ARG1");
    SubLSymbol FORMULA_ARG2 = makeSymbol("FORMULA-ARG2");
    SubLSymbol FORMULA_ARGS = makeSymbol("FORMULA-ARGS");
    SubLSymbol FORMULA_KEYWORDS = makeSymbol("FORMULA-KEYWORDS");
    SubLSymbol FORMULA_OPERATOR = makeSymbol("FORMULA-OPERATOR");
    SubLSymbol FORT = makeSymbol("FORT");
    SubLSymbol FORT_NAME = makeSymbol("FORT-NAME");
    SubLSymbol FORT_P = makeSymbol("FORT-P");
    SubLSymbol FORTS = makeSymbol("FORTS");
    SubLSymbol FOUND = makeSymbol("FOUND");
    SubLSymbol FOURTH = makeSymbol("FOURTH");
    SubLSymbol FRACTION = makeSymbol("FRACTION");
    SubLSymbol FRAME = makeSymbol("FRAME");
    SubLSymbol FRAME_FILTER_LEXES = makeSymbol("FRAME-FILTER-LEXES");
    SubLSymbol qFROM = makeSymbol("?FROM");
    SubLSymbol FROM = makeSymbol("FROM");
    SubLSymbol FROM_NODE = makeSymbol("FROM-NODE");
    SubLSymbol FROM_NODE_ID = makeSymbol("FROM-NODE-ID");
    SubLSymbol FUDGE_FACTOR = makeSymbol("FUDGE-FACTOR");
    SubLSymbol FULLY_BOUND_P = makeSymbol("FULLY-BOUND-P");
    SubLSymbol qFUNC = makeSymbol("?FUNC");
    SubLSymbol FUNC = makeSymbol("FUNC");
    SubLSymbol FUNCALL = makeSymbol("FUNCALL");
    SubLSymbol FUNCALL_CLASS_METHOD = makeSymbol("FUNCALL-CLASS-METHOD");
    SubLSymbol FUNCALL_INSTANCE_METHOD = makeSymbol("FUNCALL-INSTANCE-METHOD");
    SubLSymbol FUNCTION = makeSymbol("FUNCTION");
    SubLSymbol FUNCTION_NAME = makeSymbol("FUNCTION-NAME");
    SubLSymbol FUNCTIONP = makeSymbol("FUNCTIONP");
    SubLSymbol FUNCTION_SPEC_P = makeSymbol("FUNCTION-SPEC-P");
    SubLSymbol FWHEN = makeSymbol("FWHEN");
    SubLSymbol G = makeSymbol("G");
    SubLSymbol GAF = makeSymbol("GAF");
    SubLSymbol GAF_ARG1 = makeSymbol("GAF-ARG1");
    SubLSymbol GAF_ARG2 = makeSymbol("GAF-ARG2");
    SubLSymbol GAF_ASSERTIONq = makeSymbol("GAF-ASSERTION?");
    SubLSymbol GAF_FORMULA = makeSymbol("GAF-FORMULA");
    SubLSymbol GAF_SENTENCE = makeSymbol("GAF-SENTENCE");
    SubLSymbol GATHER_ARG = makeSymbol("GATHER-ARG");
    SubLSymbol GENDER = makeSymbol("GENDER");
    SubLSymbol GENDERS = makeSymbol("GENDERS");
    SubLSymbol qGENERAL = makeSymbol("?GENERAL");
    SubLSymbol GENERALITY_ESTIMATE = makeSymbol("GENERALITY-ESTIMATE");
    SubLSymbol GENERATED_KSI = makeSymbol("GENERATED-KSI");
    SubLSymbol GENERATED_ON_SHUTDOWN = makeSymbol("GENERATED-ON-SHUTDOWN");
    SubLSymbol GENERATED_ON_STARTUP = makeSymbol("GENERATED-ON-STARTUP");
    SubLSymbol GENERATE_FROM_BINDINGS_CODE = makeSymbol("GENERATE-FROM-BINDINGS-CODE");
    SubLSymbol GENERATE_KSI = makeSymbol("GENERATE-KSI");
    SubLSymbol GENERATE_PHRASE = makeSymbol("GENERATE-PHRASE");
    SubLSymbol GENERATE_TO_BINDINGS_CODE = makeSymbol("GENERATE-TO-BINDINGS-CODE");
    SubLSymbol GENERATION_MT = makeSymbol("GENERATION-MT");
    SubLSymbol GENERATOR = makeSymbol("GENERATOR");
    SubLSymbol GENERIC_ARG_P = makeSymbol("GENERIC-ARG-P");
    SubLSymbol GENERIC_DLLT_ADD_PARENT_LINK_FUNCTION = makeSymbol("GENERIC-DLLT-ADD-PARENT-LINK-FUNCTION");
    SubLSymbol GENERIC_DLLT_DELETE_LINK_FUNCTION = makeSymbol("GENERIC-DLLT-DELETE-LINK-FUNCTION");
    SubLSymbol qGENL = makeSymbol("?GENL");
    SubLSymbol GENL = makeSymbol("GENL");
    SubLSymbol GENLq = makeSymbol("GENL?");
    SubLSymbol GENL_IN_ANY_MTq = makeSymbol("GENL-IN-ANY-MT?");
    SubLSymbol $GENL_INVERSE_MODE_P$ = makeSymbol("*GENL-INVERSE-MODE-P*");
    SubLSymbol GENL_MT = makeSymbol("GENL-MT");
    SubLSymbol GENL_PRED = makeSymbol("GENL-PRED");
    SubLSymbol GENLS = makeSymbol("GENLS");
    SubLSymbol GENLS_OR_ISA = makeSymbol("GENLS-OR-ISA");
    SubLSymbol GET = makeSymbol("GET");
    SubLSymbol GET_ACTION = makeSymbol("GET-ACTION");
    SubLSymbol GET_ACTION_QUALIFIERS = makeSymbol("GET-ACTION-QUALIFIERS");
    SubLSymbol GET_ACTIVATION_PATTERN = makeSymbol("GET-ACTIVATION-PATTERN");
    SubLSymbol GET_ACTIVE_PROPOSALS = makeSymbol("GET-ACTIVE-PROPOSALS");
    SubLSymbol GET_ADJECTIVAL_COMPLEMENT = makeSymbol("GET-ADJECTIVAL-COMPLEMENT");
    SubLSymbol GET_AGENDA = makeSymbol("GET-AGENDA");
    SubLSymbol GET_AGENDA_CLASS = makeSymbol("GET-AGENDA-CLASS");
    SubLSymbol GET_ALL_ACTIVE_POSTINGS = makeSymbol("GET-ALL-ACTIVE-POSTINGS");
    SubLSymbol GET_ALL_KNOWLEDGE_SOURCES = makeSymbol("GET-ALL-KNOWLEDGE-SOURCES");
    SubLSymbol GET_ALL_POSTINGS = makeSymbol("GET-ALL-POSTINGS");
    SubLSymbol GET_ALL_SUB_PANELS = makeSymbol("GET-ALL-SUB-PANELS");
    SubLSymbol GET_ANCESTOR_OBJECTS = makeSymbol("GET-ANCESTOR-OBJECTS");
    SubLSymbol GET_ANCESTORS = makeSymbol("GET-ANCESTORS");
    SubLSymbol GET_ANSWER = makeSymbol("GET-ANSWER");
    SubLSymbol GET_ANTECEDENT = makeSymbol("GET-ANTECEDENT");
    SubLSymbol GET_APPLICATION = makeSymbol("GET-APPLICATION");
    SubLSymbol GET_APPLICATION_NAME = makeSymbol("GET-APPLICATION-NAME");
    SubLSymbol GET_ARG = makeSymbol("GET-ARG");
    SubLSymbol GET_ARG1 = makeSymbol("GET-ARG1");
    SubLSymbol GET_ARGN = makeSymbol("GET-ARGN");
    SubLSymbol GET_ARGS = makeSymbol("GET-ARGS");
    SubLSymbol GET_ARITY = makeSymbol("GET-ARITY");
    SubLSymbol GET_AUTO_GENERATED_KS_ASSISTANT = makeSymbol("GET-AUTO-GENERATED-KS-ASSISTANT");
    SubLSymbol GET_AUX_VERB = makeSymbol("GET-AUX-VERB");
    SubLSymbol GET_BASE_PANEL = makeSymbol("GET-BASE-PANEL");
    SubLSymbol GET_BINDING_LIST = makeSymbol("GET-BINDING-LIST");
    SubLSymbol GET_BLACKBOARD = makeSymbol("GET-BLACKBOARD");
    SubLSymbol GET_CATEGORIES = makeSymbol("GET-CATEGORIES");
    SubLSymbol GET_CATEGORY = makeSymbol("GET-CATEGORY");
    SubLSymbol GET_CAUSE = makeSymbol("GET-CAUSE");
    SubLSymbol GET_CHILDREN = makeSymbol("GET-CHILDREN");
    SubLSymbol GET_COLLECTIONS = makeSymbol("GET-COLLECTIONS");
    SubLSymbol GET_COMPLEMENTS = makeSymbol("GET-COMPLEMENTS");
    SubLSymbol GET_CONFIDENCE = makeSymbol("GET-CONFIDENCE");
    SubLSymbol GET_CONFIDENCE_LEVEL = makeSymbol("GET-CONFIDENCE-LEVEL");
    SubLSymbol GET_CONJUNCTION = makeSymbol("GET-CONJUNCTION");
    SubLSymbol GET_CONTENT = makeSymbol("GET-CONTENT");
    SubLSymbol GET_CONTENTS = makeSymbol("GET-CONTENTS");
    SubLSymbol GET_CONTENTS_POINTER = makeSymbol("GET-CONTENTS-POINTER");
    SubLSymbol GET_CONTEXT = makeSymbol("GET-CONTEXT");
    SubLSymbol GET_CONTROLLER = makeSymbol("GET-CONTROLLER");
    SubLSymbol GET_CONTROL_VERB = makeSymbol("GET-CONTROL-VERB");
    SubLSymbol GET_CYC = makeSymbol("GET-CYC");
    SubLSymbol GET_CYCLIFIER = makeSymbol("GET-CYCLIFIER");
    SubLSymbol GET_DATATYPE = makeSymbol("GET-DATATYPE");
    SubLSymbol GET_DATATYPE_BAG = makeSymbol("GET-DATATYPE-BAG");
    SubLSymbol GET_DATATYPE_DICTIONARY = makeSymbol("GET-DATATYPE-DICTIONARY");
    SubLSymbol GET_DAUGHTER = makeSymbol("GET-DAUGHTER");
    SubLSymbol GET_DEFAULT_VALUE = makeSymbol("GET-DEFAULT-VALUE");
    SubLSymbol GET_DESCENDANT = makeSymbol("GET-DESCENDANT");
    SubLSymbol GET_DETERMINER = makeSymbol("GET-DETERMINER");
    SubLSymbol GET_DICTIONARY = makeSymbol("GET-DICTIONARY");
    SubLSymbol GET_DIRECT_ACTIVE_POSTINGS = makeSymbol("GET-DIRECT-ACTIVE-POSTINGS");
    SubLSymbol GET_DIRECTION = makeSymbol("GET-DIRECTION");
    SubLSymbol GET_DIRECT_KNOWLEDGE_SOURCES = makeSymbol("GET-DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol GET_DIRECTLY_RELATED = makeSymbol("GET-DIRECTLY-RELATED");
    SubLSymbol GET_DIRECT_OBJECT = makeSymbol("GET-DIRECT-OBJECT");
    SubLSymbol GET_DIRECT_POSTINGS = makeSymbol("GET-DIRECT-POSTINGS");
    SubLSymbol GET_DOC = makeSymbol("GET-DOC");
    SubLSymbol GET_DOMAIN = makeSymbol("GET-DOMAIN");
    SubLSymbol GET_ELEMENT_COUNT = makeSymbol("GET-ELEMENT-COUNT");
    SubLSymbol GET_ELEMENT_EQUALITY_PREDICATE = makeSymbol("GET-ELEMENT-EQUALITY-PREDICATE");
    SubLSymbol GET_END_POINTER = makeSymbol("GET-END-POINTER");
    SubLSymbol GET_EXECUTABLE_KSI_QUEUE = makeSymbol("GET-EXECUTABLE-KSI-QUEUE");
    SubLSymbol GET_EXECUTION_ERROR_MESSAGE = makeSymbol("GET-EXECUTION-ERROR-MESSAGE");
    SubLSymbol GET_EXISTENTIAL_NULL_DETERMINER = makeSymbol("GET-EXISTENTIAL-NULL-DETERMINER");
    SubLSymbol GET_EXTERNAL_CONNECTION = makeSymbol("GET-EXTERNAL-CONNECTION");
    SubLSymbol GET_EXTERNAL_KNOWLEDGE_SOURCE = makeSymbol("GET-EXTERNAL-KNOWLEDGE-SOURCE");
    SubLSymbol GET_EXTERNAL_MODULE_ID = makeSymbol("GET-EXTERNAL-MODULE-ID");
    SubLSymbol GET_EXTERNAL_MODULE_NAME = makeSymbol("GET-EXTERNAL-MODULE-NAME");
    SubLSymbol GETF = makeSymbol("GETF");
    SubLSymbol GET_FINAL_STATE = makeSymbol("GET-FINAL-STATE");
    SubLSymbol GET_FIRST = makeSymbol("GET-FIRST");
    SubLSymbol GET_FIRST_CONS = makeSymbol("GET-FIRST-CONS");
    SubLSymbol GET_FIRST_LINK = makeSymbol("GET-FIRST-LINK");
    SubLSymbol GET_FOCUS = makeSymbol("GET-FOCUS");
    SubLSymbol GET_FORMULA = makeSymbol("GET-FORMULA");
    SubLSymbol GET_GENDER = makeSymbol("GET-GENDER");
    SubLSymbol GET_GROWTH_FACTOR = makeSymbol("GET-GROWTH-FACTOR");
    SubLSymbol GET_GUID = makeSymbol("GET-GUID");
    SubLSymbol GET_GUID_INFO = makeSymbol("GET-GUID-INFO");
    SubLSymbol GETHASH = makeSymbol("GETHASH");
    SubLSymbol GETHASH_WITHOUT_VALUES = makeSymbol("GETHASH-WITHOUT-VALUES");
    SubLSymbol GET_HEAD = makeSymbol("GET-HEAD");
    SubLSymbol GET_HEAD_DAUGHTER = makeSymbol("GET-HEAD-DAUGHTER");
    SubLSymbol GET_HEAD_DAUGHTERS = makeSymbol("GET-HEAD-DAUGHTERS");
    SubLSymbol GET_HEADS = makeSymbol("GET-HEADS");
    SubLSymbol GET_ID = makeSymbol("GET-ID");
    SubLSymbol GET_INCOMING_MESSAGE_QUEUE = makeSymbol("GET-INCOMING-MESSAGE-QUEUE");
    SubLSymbol GET_INDEX = makeSymbol("GET-INDEX");
    SubLSymbol GET_INDIRECT_OBJECT = makeSymbol("GET-INDIRECT-OBJECT");
    SubLSymbol GET_INFO = makeSymbol("GET-INFO");
    SubLSymbol GET_INTERLOCUTOR_AGENT = makeSymbol("GET-INTERLOCUTOR-AGENT");
    SubLSymbol GET_INTERNAL_REAL_TIME = makeSymbol("GET-INTERNAL-REAL-TIME");
    SubLSymbol GET_INTERNAL_REPRESENTATION = makeSymbol("GET-INTERNAL-REPRESENTATION");
    SubLSymbol GET_INTERNAL_STORAGE = makeSymbol("GET-INTERNAL-STORAGE");
    SubLSymbol GET_KEYSTRINGS = makeSymbol("GET-KEYSTRINGS");
    SubLSymbol GET_KEYWORD_RENAMINGS = makeSymbol("GET-KEYWORD-RENAMINGS");
    SubLSymbol GET_KEYWORDS = makeSymbol("GET-KEYWORDS");
    SubLSymbol GET_KNOWLEDGE_SOURCE = makeSymbol("GET-KNOWLEDGE-SOURCE");
    SubLSymbol GET_KNOWLEDGE_SOURCE_BATTERY = makeSymbol("GET-KNOWLEDGE-SOURCE-BATTERY");
    SubLSymbol GET_KNOWLEDGE_SOURCE_CLASS = makeSymbol("GET-KNOWLEDGE-SOURCE-CLASS");
    SubLSymbol GET_KS = makeSymbol("GET-KS");
    SubLSymbol GET_KSB_INFO = makeSymbol("GET-KSB-INFO");
    SubLSymbol GET_KSI = makeSymbol("GET-KSI");
    SubLSymbol GET_KSI_INDEX = makeSymbol("GET-KSI-INDEX");
    SubLSymbol GET_LARGEST_INDEX = makeSymbol("GET-LARGEST-INDEX");
    SubLSymbol GET_LAST_LINK = makeSymbol("GET-LAST-LINK");
    SubLSymbol GET_LEFT_LINKS = makeSymbol("GET-LEFT-LINKS");
    SubLSymbol GET_LENGTH = makeSymbol("GET-LENGTH");
    SubLSymbol GET_LEXES = makeSymbol("GET-LEXES");
    SubLSymbol GET_LINKAGE = makeSymbol("GET-LINKAGE");
    SubLSymbol GET_LINK_PHRASE = makeSymbol("GET-LINK-PHRASE");
    SubLSymbol GET_LIST = makeSymbol("GET-LIST");
    SubLSymbol GET_LIST_INTERNAL = makeSymbol("GET-LIST-INTERNAL");
    SubLSymbol GET_LOCAL_BINDINGS = makeSymbol("GET-LOCAL-BINDINGS");
    SubLSymbol GET_LOCK = makeSymbol("GET-LOCK");
    SubLSymbol GET_MARKS_INTERNAL = makeSymbol("GET-MARKS-INTERNAL");
    SubLSymbol GET_MATRIX_CLAUSE = makeSymbol("GET-MATRIX-CLAUSE");
    SubLSymbol GET_MESSAGE_BROKER = makeSymbol("GET-MESSAGE-BROKER");
    SubLSymbol GET_MODIFIEDS = makeSymbol("GET-MODIFIEDS");
    SubLSymbol GET_MODIFIERS = makeSymbol("GET-MODIFIERS");
    SubLSymbol GET_MOTHER = makeSymbol("GET-MOTHER");
    SubLSymbol GET_MT = makeSymbol("GET-MT");
    SubLSymbol GET_NAME = makeSymbol("GET-NAME");
    SubLSymbol GET_NTH = makeSymbol("GET-NTH");
    SubLSymbol GET_NUMBER = makeSymbol("GET-NUMBER");
    SubLSymbol GET_OBJECTS = makeSymbol("GET-OBJECTS");
    SubLSymbol GET_OBLIQUE_OBJECT = makeSymbol("GET-OBLIQUE-OBJECT");
    SubLSymbol GET_ORD = makeSymbol("GET-ORD");
    SubLSymbol GET_OUTPUT_STREAM_STRING = makeSymbol("GET-OUTPUT-STREAM-STRING");
    SubLSymbol GET_OVERT_QUANTIFIER = makeSymbol("GET-OVERT-QUANTIFIER");
    SubLSymbol GET_PANEL = makeSymbol("GET-PANEL");
    SubLSymbol GET_PANELS = makeSymbol("GET-PANELS");
    SubLSymbol GET_PARENT = makeSymbol("GET-PARENT");
    SubLSymbol GET_PARENT_LINKS = makeSymbol("GET-PARENT-LINKS");
    SubLSymbol GET_PARSER = makeSymbol("GET-PARSER");
    SubLSymbol GET_PARTICLE = makeSymbol("GET-PARTICLE");
    SubLSymbol GET_PENDING_ACTIONS = makeSymbol("GET-PENDING-ACTIONS");
    SubLSymbol GET_PERSON = makeSymbol("GET-PERSON");
    SubLSymbol GET_PHRASE_TREE_DAUGHTERS = makeSymbol("GET-PHRASE-TREE-DAUGHTERS");
    SubLSymbol GET_PORT_ID = makeSymbol("GET-PORT-ID");
    SubLSymbol GET_POSSESSED = makeSymbol("GET-POSSESSED");
    SubLSymbol GET_POSSESSOR = makeSymbol("GET-POSSESSOR");
    SubLSymbol GET_POSTING_DAEMONS = makeSymbol("GET-POSTING-DAEMONS");
    SubLSymbol GET_PP_COMPLEMENT = makeSymbol("GET-PP-COMPLEMENT");
    SubLSymbol GET_PPS = makeSymbol("GET-PPS");
    SubLSymbol GET_PRECONDITION_DATATYPES = makeSymbol("GET-PRECONDITION-DATATYPES");
    SubLSymbol GET_PRECONDITION_PATTERN = makeSymbol("GET-PRECONDITION-PATTERN");
    SubLSymbol GET_PREDICATE = makeSymbol("GET-PREDICATE");
    SubLSymbol GET_PRIORITIZER = makeSymbol("GET-PRIORITIZER");
    SubLSymbol GET_PRIORITIZER_INTERNAL = makeSymbol("GET-PRIORITIZER-INTERNAL");
    SubLSymbol GET_PROPOSAL_CLASS = makeSymbol("GET-PROPOSAL-CLASS");
    SubLSymbol GET_PROPOSAL_INDEX = makeSymbol("GET-PROPOSAL-INDEX");
    SubLSymbol GET_PUBLICATION_DATE = makeSymbol("GET-PUBLICATION-DATE");
    SubLSymbol GET_QUANTIFIED = makeSymbol("GET-QUANTIFIED");
    SubLSymbol GET_QUANTIFIER = makeSymbol("GET-QUANTIFIER");
    SubLSymbol GET_RANKED_LEXES = makeSymbol("GET-RANKED-LEXES");
    SubLSymbol GET_REASONS = makeSymbol("GET-REASONS");
    SubLSymbol GET_REFERENCE = makeSymbol("GET-REFERENCE");
    SubLSymbol GET_REFINED_TAG = makeSymbol("GET-REFINED-TAG");
    SubLSymbol GET_REFS = makeSymbol("GET-REFS");
    SubLSymbol GET_RELATED = makeSymbol("GET-RELATED");
    SubLSymbol GET_RESULT = makeSymbol("GET-RESULT");
    SubLSymbol GET_RIGHT_LINKS = makeSymbol("GET-RIGHT-LINKS");
    SubLSymbol GET_SBHL_MODULE = makeSymbol("GET-SBHL-MODULE");
    SubLSymbol GET_SCORE = makeSymbol("GET-SCORE");
    SubLSymbol GET_SECOND = makeSymbol("GET-SECOND");
    SubLSymbol GET_SELF_DELETION_MODE = makeSymbol("GET-SELF-DELETION-MODE");
    SubLSymbol GET_SEMANTIC_COMPLEMENTS = makeSymbol("GET-SEMANTIC-COMPLEMENTS");
    SubLSymbol GET_SEMANTIC_DIRECT_OBJECT = makeSymbol("GET-SEMANTIC-DIRECT-OBJECT");
    SubLSymbol GET_SEMANTIC_HEAD = makeSymbol("GET-SEMANTIC-HEAD");
    SubLSymbol GET_SEMANTIC_HEADS = makeSymbol("GET-SEMANTIC-HEADS");
    SubLSymbol GET_SEMANTIC_INDIRECT_OBJECT = makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT");
    SubLSymbol GET_SEMANTIC_OBJECTS = makeSymbol("GET-SEMANTIC-OBJECTS");
    SubLSymbol GET_SEMANTIC_SUBJECT = makeSymbol("GET-SEMANTIC-SUBJECT");
    SubLSymbol GET_SEQUENCE_CLASS = makeSymbol("GET-SEQUENCE-CLASS");
    SubLSymbol GET_SESSION_ID = makeSymbol("GET-SESSION-ID");
    SubLSymbol GET_SISTER = makeSymbol("GET-SISTER");
    SubLSymbol GET_SLOT = makeSymbol("GET-SLOT");
    SubLSymbol GET_SOURCE = makeSymbol("GET-SOURCE");
    SubLSymbol GET_SPECIFIER = makeSymbol("GET-SPECIFIER");
    SubLSymbol GET_STATE_CHANGE_LISTENER = makeSymbol("GET-STATE-CHANGE-LISTENER");
    SubLSymbol GET_STATES = makeSymbol("GET-STATES");
    SubLSymbol GET_STATUS_IN_CYC = makeSymbol("GET-STATUS-IN-CYC");
    SubLSymbol GET_STORAGE_SIZE = makeSymbol("GET-STORAGE-SIZE");
    SubLSymbol GET_STRING = makeSymbol("GET-STRING");
    SubLSymbol GET_STRINGS_OF_TYPE = makeSymbol("GET-STRINGS-OF-TYPE");
    SubLSymbol GET_SUBJECT = makeSymbol("GET-SUBJECT");
    SubLSymbol GET_SUB_PANELS = makeSymbol("GET-SUB-PANELS");
    SubLSymbol GET_SUBSEQUENCE = makeSymbol("GET-SUBSEQUENCE");
    SubLSymbol GET_SUPER_PANELS = makeSymbol("GET-SUPER-PANELS");
    SubLSymbol GET_SUPERTYPES = makeSymbol("GET-SUPERTYPES");
    SubLSymbol GET_SUSPENDED_PROPOSALS = makeSymbol("GET-SUSPENDED-PROPOSALS");
    SubLSymbol GET_TAG = makeSymbol("GET-TAG");
    SubLSymbol GET_TENSE = makeSymbol("GET-TENSE");
    SubLSymbol GET_TEST_CASES = makeSymbol("GET-TEST-CASES");
    SubLSymbol GET_TEST_CATEGORY_BY_NAME = makeSymbol("GET-TEST-CATEGORY-BY-NAME");
    SubLSymbol GET_TIMESTAMP = makeSymbol("GET-TIMESTAMP");
    SubLSymbol GET_TOTAL_COUNT = makeSymbol("GET-TOTAL-COUNT");
    SubLSymbol GET_TOTAL_COUNT_AS_WHOLE_NOUN = makeSymbol("GET-TOTAL-COUNT-AS-WHOLE-NOUN");
    SubLSymbol GET_TYPE = makeSymbol("GET-TYPE");
    SubLSymbol GET_TYPENAME = makeSymbol("GET-TYPENAME");
    SubLSymbol GET_UNIQUE_BINDINGS = makeSymbol("GET-UNIQUE-BINDINGS");
    SubLSymbol GET_UNIQUE_ELEMENTS = makeSymbol("GET-UNIQUE-ELEMENTS");
    SubLSymbol GET_UNIVERSAL_TIME = makeSymbol("GET-UNIVERSAL-TIME");
    SubLSymbol GET_VALUE = makeSymbol("GET-VALUE");
    SubLSymbol GET_VALUES = makeSymbol("GET-VALUES");
    SubLSymbol GET_VARIABLE = makeSymbol("GET-VARIABLE");
    SubLSymbol GET_VARIABLES = makeSymbol("GET-VARIABLES");
    SubLSymbol GET_VECTOR = makeSymbol("GET-VECTOR");
    SubLSymbol GET_VERBAL_COMPLEMENT = makeSymbol("GET-VERBAL-COMPLEMENT");
    SubLSymbol GET_WORD = makeSymbol("GET-WORD");
    SubLSymbol GLOBAL = makeSymbol("GLOBAL");
    SubLSymbol GLOSS = makeSymbol("GLOSS");
    SubLSymbol GOAL_PATTERN = makeSymbol("GOAL-PATTERN");
    SubLSymbol GOAL_POSTING = makeSymbol("GOAL-POSTING");
    SubLSymbol GOALS = makeSymbol("GOALS");
    SubLSymbol GOLEM = makeSymbol("GOLEM");
    SubLSymbol GOLEM_MT = makeSymbol("GOLEM-MT");
    SubLSymbol GOOGLE_COUNT = makeSymbol("GOOGLE-COUNT");
    SubLSymbol GRANDMOTHER = makeSymbol("GRANDMOTHER");
    SubLSymbol GRANDMOTHER_HEAD = makeSymbol("GRANDMOTHER-HEAD");
    SubLSymbol GRAPH = makeSymbol("GRAPH");
    SubLSymbol GRAPHING_MT = makeSymbol("GRAPHING-MT");
    SubLSymbol GRAPH_NODE_P = makeSymbol("GRAPH-NODE-P");
    SubLSymbol GROW_BY = makeSymbol("GROW-BY");
    SubLSymbol GROWTH_FACTOR = makeSymbol("GROWTH-FACTOR");
    SubLSymbol GT_TERM_P = makeSymbol("GT-TERM-P");
    SubLSymbol GUID = makeSymbol("GUID");
    SubLSymbol GUID_AS_STRING = makeSymbol("GUID-AS-STRING");
    SubLSymbol GUID_AS_STRING_OR_REFERENCE = makeSymbol("GUID-AS-STRING-OR-REFERENCE");
    SubLSymbol GUID_HASHTABLE = makeSymbol("GUID-HASHTABLE");
    SubLSymbol GUID_INFO = makeSymbol("GUID-INFO");
    SubLSymbol GUID_MANAGER = makeSymbol("GUID-MANAGER");
    SubLSymbol GUID_P = makeSymbol("GUID-P");
    SubLSymbol GUID_STRING_OR_MESSAGE = makeSymbol("GUID-STRING-OR-MESSAGE");
    SubLSymbol GUID_TO_STRING = makeSymbol("GUID-TO-STRING");
    SubLSymbol HALT = makeSymbol("HALT");
    SubLSymbol HALTED_P = makeSymbol("HALTED-P");
    SubLSymbol HALT_REASON = makeSymbol("HALT-REASON");
    SubLSymbol HALT_STATUS = makeSymbol("HALT-STATUS");
    SubLSymbol HANDLE_ERROR = makeSymbol("HANDLE-ERROR");
    SubLSymbol HANDLER = makeSymbol("HANDLER");
    SubLSymbol HAS_CACHED_DOMAIN_P = makeSymbol("HAS-CACHED-DOMAIN-P");
    SubLSymbol HASH_TABLE_P = makeSymbol("HASH-TABLE-P");
    SubLSymbol HAS_MARK_P = makeSymbol("HAS-MARK-P");
    SubLSymbol HAS_NEXTq = makeSymbol("HAS-NEXT?");
    SubLSymbol HEAD = makeSymbol("HEAD");
    SubLSymbol HEAD_DAUGHTER = makeSymbol("HEAD-DAUGHTER");
    SubLSymbol HEAD_DAUGHTERS = makeSymbol("HEAD-DAUGHTERS");
    SubLSymbol qHEAD_DENOT = makeSymbol("?HEAD-DENOT");
    SubLSymbol HEAD_DTR = makeSymbol("HEAD-DTR");
    SubLSymbol HEADS = makeSymbol("HEADS");
    SubLSymbol qHEAD_STRING = makeSymbol("?HEAD-STRING");
    SubLSymbol HEAD_STRING = makeSymbol("HEAD-STRING");
    SubLSymbol HEAD_STRING_WITH_SUFFIX = makeSymbol("HEAD-STRING-WITH-SUFFIX");
    SubLSymbol HEADWORD = makeSymbol("HEADWORD");
    SubLSymbol HEADWORD_POSITION = makeSymbol("HEADWORD-POSITION");
    SubLSymbol qHEART_VALVE_REPLACEMENT = makeSymbol("?HEART-VALVE-REPLACEMENT");
    SubLSymbol HEIGHT = makeSymbol("HEIGHT");
    SubLSymbol HEURISTIC_EVALUATOR = makeSymbol("HEURISTIC-EVALUATOR");
    SubLSymbol HEURISTIC_EVALUATOR_REGISTRY = makeSymbol("HEURISTIC-EVALUATOR-REGISTRY");
    SubLSymbol HIERARCHY = makeSymbol("HIERARCHY");
    SubLSymbol HIGH = makeSymbol("HIGH");
    SubLSymbol HL_JUSTIFICATION_P = makeSymbol("HL-JUSTIFICATION-P");
    SubLSymbol HL_MODULE = makeSymbol("HL-MODULE");
    SubLSymbol $HL_MODULE_CHECK_COST$ = makeSymbol("*HL-MODULE-CHECK-COST*");
    SubLSymbol HL_MODULE_P = makeSymbol("HL-MODULE-P");
    SubLSymbol HLMT = makeSymbol("HLMT");
    SubLSymbol HLMTq = makeSymbol("HLMT?");
    SubLSymbol HLMT_EQUAL = makeSymbol("HLMT-EQUAL");
    SubLSymbol HLMT_P = makeSymbol("HLMT-P");
    SubLSymbol HL_SUPPORT_P = makeSymbol("HL-SUPPORT-P");
    SubLSymbol HL_TERM_P = makeSymbol("HL-TERM-P");
    SubLSymbol HL_TO_EL = makeSymbol("HL-TO-EL");
    SubLSymbol HL_VAR = makeSymbol("HL-VAR");
    SubLSymbol HL_VARq = makeSymbol("HL-VAR?");
    SubLSymbol HL_VARIABLE_P = makeSymbol("HL-VARIABLE-P");
    SubLSymbol qHOSPITAL_ADMIT_REASON = makeSymbol("?HOSPITAL-ADMIT-REASON");
    SubLSymbol qHOSPITAL_CARE = makeSymbol("?HOSPITAL-CARE");
    SubLSymbol HOST = makeSymbol("HOST");
    SubLSymbol HOUR = makeSymbol("HOUR");
    SubLSymbol HREF = makeSymbol("HREF");
    SubLSymbol HTML_CHAR = makeSymbol("HTML-CHAR");
    SubLSymbol HTML_DISPLAY = makeSymbol("HTML-DISPLAY");
    SubLSymbol HTML_DOCUMENT = makeSymbol("HTML-DOCUMENT");
    SubLSymbol HTML_FANCY_ANCHOR = makeSymbol("HTML-FANCY-ANCHOR");
    SubLSymbol HTML_FANCY_BODY = makeSymbol("HTML-FANCY-BODY");
    SubLSymbol HTML_FANCY_TABLE_DATA = makeSymbol("HTML-FANCY-TABLE-DATA");
    SubLSymbol HTML_FORMAT = makeSymbol("HTML-FORMAT");
    SubLSymbol HTML_INDENT = makeSymbol("HTML-INDENT");
    SubLSymbol HTML_INDENT_BY = makeSymbol("HTML-INDENT-BY");
    SubLSymbol HTML_MARKUP = makeSymbol("HTML-MARKUP");
    SubLSymbol HTML_NEWLINE = makeSymbol("HTML-NEWLINE");
    SubLSymbol HTML_PRINC = makeSymbol("HTML-PRINC");
    SubLSymbol HTML_SIMPLE_ATTRIBUTE = makeSymbol("HTML-SIMPLE-ATTRIBUTE");
    SubLSymbol HTML_STRONG = makeSymbol("HTML-STRONG");
    SubLSymbol HTML_SUBMIT_INPUT = makeSymbol("HTML-SUBMIT-INPUT");
    SubLSymbol HTML_TABLE_DATA = makeSymbol("HTML-TABLE-DATA");
    SubLSymbol HTML_TABLE_ROW = makeSymbol("HTML-TABLE-ROW");
    SubLSymbol I = makeSymbol("I");
    SubLSymbol qID = makeSymbol("?ID");
    SubLSymbol ID = makeSymbol("ID");
    SubLSymbol ID_STRING = makeSymbol("ID-STRING");
    SubLSymbol IDX = makeSymbol("IDX");
    SubLSymbol IGNORE = makeSymbol("IGNORE");
    SubLSymbol IGNORE_CACHE = makeSymbol("IGNORE-CACHE");
    SubLSymbol IGNORE_CACHEq = makeSymbol("IGNORE-CACHE?");
    SubLSymbol IGNORE_ME = makeSymbol("IGNORE-ME");
    SubLSymbol IGNORE_NULL_VALUES = makeSymbol("IGNORE-NULL-VALUES");
    SubLSymbol IMMUTABLE = makeSymbol("IMMUTABLE");
    SubLSymbol IMMUTABLE_P = makeSymbol("IMMUTABLE-P");
    SubLSymbol IMPLICIT_PROGN = makeSymbol("IMPLICIT-PROGN");
    SubLSymbol INC_ELEMENT_COUNT = makeSymbol("INC-ELEMENT-COUNT");
    SubLSymbol INCLUDED_BB_SUBSETS = makeSymbol("INCLUDED-BB-SUBSETS");
    SubLSymbol INCOMING_MESSAGE_QUEUE = makeSymbol("INCOMING-MESSAGE-QUEUE");
    SubLSymbol INCOMING_POSTING_QUEUE = makeSymbol("INCOMING-POSTING-QUEUE");
    SubLSymbol INCOMING_QUEUE_REFERENCE = makeSymbol("INCOMING-QUEUE-REFERENCE");
    SubLSymbol INCOMING_RAW_QUEUE = makeSymbol("INCOMING-RAW-QUEUE");
    SubLSymbol IN_CYCL = makeSymbol("IN-CYCL");
    SubLSymbol INDENT = makeSymbol("INDENT");
    SubLSymbol INDENT_NUM = makeSymbol("INDENT-NUM");
    SubLSymbol qINDEP_COL = makeSymbol("?INDEP-COL");
    SubLSymbol INDEPENDENT_MODS = makeSymbol("INDEPENDENT-MODS");
    SubLSymbol INDEX = makeSymbol("INDEX");
    SubLSymbol INDEX_ARG = makeSymbol("INDEX-ARG");
    SubLSymbol INDEXED_ITEMS = makeSymbol("INDEXED-ITEMS");
    SubLSymbol INDEXED_PRODUCTS = makeSymbol("INDEXED-PRODUCTS");
    SubLSymbol INDEXED_TERM_P = makeSymbol("INDEXED-TERM-P");
    SubLSymbol INDEX_ENTRY = makeSymbol("INDEX-ENTRY");
    SubLSymbol INDEX_ENTRY_COMPUTER = makeSymbol("INDEX-ENTRY-COMPUTER");
    SubLSymbol INDEXICAL = makeSymbol("INDEXICAL");
    SubLSymbol INDEX_OF_NEXT_NON_NIL_ELEMENT = makeSymbol("INDEX-OF-NEXT-NON-NIL-ELEMENT");
    SubLSymbol INDEX_SPEC = makeSymbol("INDEX-SPEC");
    SubLSymbol INDICES = makeSymbol("INDICES");
    SubLSymbol INDIRECT_OBJECT = makeSymbol("INDIRECT-OBJECT");
    SubLSymbol INFERENCE = makeSymbol("INFERENCE");
    SubLSymbol INFERENCE_ANSWER = makeSymbol("INFERENCE-ANSWER");
    SubLSymbol INFERENCE_ANSWER_P = makeSymbol("INFERENCE-ANSWER-P");
    SubLSymbol INFERENCE_ID = makeSymbol("INFERENCE-ID");
    SubLSymbol INFERENCE_ID_STRING = makeSymbol("INFERENCE-ID-STRING");
    SubLSymbol INFERENCE_P = makeSymbol("INFERENCE-P");
    SubLSymbol INFERENCE_PREDICATE_P = makeSymbol("INFERENCE-PREDICATE-P");
    SubLSymbol INFERENCES = makeSymbol("INFERENCES");
    SubLSymbol INFERENCE_SOME_GENL_PRED_OR_INVERSEq = makeSymbol("INFERENCE-SOME-GENL-PRED-OR-INVERSE?");
    SubLSymbol INFERIOR = makeSymbol("INFERIOR");
    SubLSymbol INFLECTIONS = makeSymbol("INFLECTIONS");
    SubLSymbol INFO = makeSymbol("INFO");
    SubLSymbol INFO_REQUEST = makeSymbol("INFO-REQUEST");
    SubLSymbol INFORMATION_REQUEST = makeSymbol("INFORMATION-REQUEST");
    SubLSymbol INIT = makeSymbol("INIT");
    SubLSymbol INITIALIZATION = makeSymbol("INITIALIZATION");
    SubLSymbol INITIALIZE = makeSymbol("INITIALIZE");
    SubLSymbol INIT_MTS = makeSymbol("INIT-MTS");
    SubLSymbol INLINE_GET_SLOT = makeSymbol("INLINE-GET-SLOT");
    SubLSymbol INLINE_METHOD = makeSymbol("INLINE-METHOD");
    SubLSymbol INLINE_SET_SLOT = makeSymbol("INLINE-SET-SLOT");
    SubLSymbol IN_PACKAGE = makeSymbol("IN-PACKAGE");
    SubLSymbol INPUT = makeSymbol("INPUT");
    SubLSymbol INPUT_LIST_POINTER = makeSymbol("INPUT-LIST-POINTER");
    SubLSymbol INPUT_STREAM = makeSymbol("INPUT-STREAM");
    SubLSymbol qINSTANCE = makeSymbol("?INSTANCE");
    SubLSymbol INSTANCE = makeSymbol("INSTANCE");
    SubLSymbol INSTANCE_CLASS = makeSymbol("INSTANCE-CLASS");
    SubLSymbol INSTANCE_COUNT = makeSymbol("INSTANCE-COUNT");
    SubLSymbol INSTANCE_INDEX = makeSymbol("INSTANCE-INDEX");
    SubLSymbol INSTANCE_NUMBER = makeSymbol("INSTANCE-NUMBER");
    SubLSymbol INSTANCE_OF_P = makeSymbol("INSTANCE-OF-P");
    SubLSymbol INSTANCE_OR_CLASS = makeSymbol("INSTANCE-OR-CLASS");
    SubLSymbol INSTANCE_P = makeSymbol("INSTANCE-P");
    SubLSymbol INSTANCES = makeSymbol("INSTANCES");
    SubLSymbol INSTANCE_SLOTS = makeSymbol("INSTANCE-SLOTS");
    SubLSymbol INSTANTIATED_PANEL = makeSymbol("INSTANTIATED-PANEL");
    SubLSymbol INSTANTIATE_SCOPE = makeSymbol("INSTANTIATE-SCOPE");
    SubLSymbol INTEGER = makeSymbol("INTEGER");
    SubLSymbol INTEGERP = makeSymbol("INTEGERP");
    SubLSymbol INTERACTION = makeSymbol("INTERACTION");
    SubLSymbol INTERACTION_MT = makeSymbol("INTERACTION-MT");
    SubLSymbol INTERFACE = makeSymbol("INTERFACE");
    SubLSymbol INTERFACE_NAME = makeSymbol("INTERFACE-NAME");
    SubLSymbol INTERFACE_NAMES = makeSymbol("INTERFACE-NAMES");
    SubLSymbol INTERLOCUTOR_AGENT = makeSymbol("INTERLOCUTOR-AGENT");
    SubLSymbol INTERN = makeSymbol("INTERN");
    SubLSymbol INTERNALIZE_ATTRIBUTES = makeSymbol("INTERNALIZE-ATTRIBUTES");
    SubLSymbol INTERNALIZE_CONTENT = makeSymbol("INTERNALIZE-CONTENT");
    SubLSymbol INTERNAL_KNOWLEDGE_SOURCE_EXPRESSIONS = makeSymbol("INTERNAL-KNOWLEDGE-SOURCE-EXPRESSIONS");
    SubLSymbol INTERNAL_OR_EXTERNAL_POSTING_REPRESENTATION = makeSymbol("INTERNAL-OR-EXTERNAL-POSTING-REPRESENTATION");
    SubLSymbol INTERNAL_PID = makeSymbol("INTERNAL-PID");
    SubLSymbol INTERNAL_STORAGE = makeSymbol("INTERNAL-STORAGE");
    SubLSymbol $INTERNAL_TIME_UNITS_PER_SECOND$ = makeSymbol("*INTERNAL-TIME-UNITS-PER-SECOND*");
    SubLSymbol INTERP = makeSymbol("INTERP");
    SubLSymbol INTERSECTION = makeSymbol("INTERSECTION");
    SubLSymbol INTERVAL = makeSymbol("INTERVAL");
    SubLSymbol INTRODUCED_VAR = makeSymbol("INTRODUCED-VAR");
    SubLSymbol INVALIDATE = makeSymbol("INVALIDATE");
    SubLSymbol INVALID_CONSTANTq = makeSymbol("INVALID-CONSTANT?");
    SubLSymbol INVALID_FORTq = makeSymbol("INVALID-FORT?");
    SubLSymbol INVERT_BOOLEAN_ANSWER = makeSymbol("INVERT-BOOLEAN-ANSWER");
    SubLSymbol INVERTED_INDEX = makeSymbol("INVERTED-INDEX");
    SubLSymbol INVERTED_P = makeSymbol("INVERTED-P");
    SubLSymbol INVITATION_TRANSACTION_ID = makeSymbol("INVITATION-TRANSACTION-ID");
    SubLSymbol INVITE_MESSAGE = makeSymbol("INVITE-MESSAGE");
    SubLSymbol IN_WORDNETq = makeSymbol("IN-WORDNET?");
    SubLSymbol ISA = makeSymbol("ISA");
    SubLSymbol ISAq = makeSymbol("ISA?");
    SubLSymbol ISA_COLLECTIONq = makeSymbol("ISA-COLLECTION?");
    SubLSymbol IS_ACTIVE = makeSymbol("IS-ACTIVE");
    SubLSymbol ISA_FILTERS = makeSymbol("ISA-FILTERS");
    SubLSymbol ISA_IN_ANY_MTq = makeSymbol("ISA-IN-ANY-MT?");
    SubLSymbol IS_A_MONITOR = makeSymbol("IS-A-MONITOR");
    SubLSymbol ISA_OR_GENLS = makeSymbol("ISA-OR-GENLS");
    SubLSymbol ISAS = makeSymbol("ISAS");
    SubLSymbol ISA_VAR = makeSymbol("ISA-VAR");
    SubLSymbol IS_CONNECTED_P = makeSymbol("IS-CONNECTED-P");
    SubLSymbol ISG = makeSymbol("ISG");
    SubLSymbol ISI_PROBLEM = makeSymbol("ISI-PROBLEM");
    SubLSymbol IS_METHOD = makeSymbol("IS-METHOD");
    SubLSymbol ISOLATE = makeSymbol("ISOLATE");
    SubLSymbol ISOLATED_P = makeSymbol("ISOLATED-P");
    SubLSymbol IS_PASSIVE = makeSymbol("IS-PASSIVE");
    SubLSymbol IS_PROPOSAL_AUTO_GENERATED = makeSymbol("IS-PROPOSAL-AUTO-GENERATED");
    SubLSymbol IS_QUERY = makeSymbol("IS-QUERY");
    SubLSymbol IS_VALID = makeSymbol("IS-VALID");
    SubLSymbol ITEM = makeSymbol("ITEM");
    SubLSymbol ITEM2 = makeSymbol("ITEM2");
    SubLSymbol ITEM_TO_INDEX = makeSymbol("ITEM-TO-INDEX");
    SubLSymbol ITERATE_OVER_ALL_POSTING_DAEMONS = makeSymbol("ITERATE-OVER-ALL-POSTING-DAEMONS");
    SubLSymbol ITERATE_OVER_ALL_POSTINGS = makeSymbol("ITERATE-OVER-ALL-POSTINGS");
    SubLSymbol ITERATOR = makeSymbol("ITERATOR");
    SubLSymbol ITERATOR_VAR = makeSymbol("ITERATOR-VAR");
    SubLSymbol J = makeSymbol("J");
    SubLSymbol JAVAFIED_NOUN = makeSymbol("JAVAFIED-NOUN");
    SubLSymbol JUSTIFICATION = makeSymbol("JUSTIFICATION");
    SubLSymbol JUSTIFICATIONS = makeSymbol("JUSTIFICATIONS");
    SubLSymbol KB = makeSymbol("KB");
    SubLSymbol KB_HL_SUPPORT = makeSymbol("KB-HL-SUPPORT");
    SubLSymbol KB_HL_SUPPORT_P = makeSymbol("KB-HL-SUPPORT-P");
    SubLSymbol KBI_DONE_IF_ANY_RESULT = makeSymbol("KBI-DONE-IF-ANY-RESULT");
    SubLSymbol KB_SPEC = makeSymbol("KB-SPEC");
    SubLSymbol qKCT = makeSymbol("?KCT");
    SubLSymbol aKEY = makeSymbol("&KEY");
    SubLSymbol KEY = makeSymbol("KEY");
    SubLSymbol KEY_ACCESSOR_FUNCTION = makeSymbol("KEY-ACCESSOR-FUNCTION");
    SubLSymbol KEY_EXPRESSION = makeSymbol("KEY-EXPRESSION");
    SubLSymbol KEYS = makeSymbol("KEYS");
    SubLSymbol KEY_VALUE = makeSymbol("KEY-VALUE");
    SubLSymbol KEYWORD = makeSymbol("KEYWORD");
    SubLSymbol KEYWORDP = makeSymbol("KEYWORDP");
    SubLSymbol KEYWORD_PACKAGE = makeSymbol("KEYWORD-PACKAGE");
    SubLSymbol KEYWORDS = makeSymbol("KEYWORDS");
    SubLSymbol KILL_PROCESS = makeSymbol("KILL-PROCESS");
    SubLSymbol KMG = makeSymbol("KMG");
    SubLSymbol KMG_P = makeSymbol("KMG-P");
    SubLSymbol KNOWLEDGE_SOURCE = makeSymbol("KNOWLEDGE-SOURCE");
    SubLSymbol KNOWLEDGE_SOURCE_BATTERY = makeSymbol("KNOWLEDGE-SOURCE-BATTERY");
    SubLSymbol KNOWLEDGE_SOURCE_CLASS = makeSymbol("KNOWLEDGE-SOURCE-CLASS");
    SubLSymbol KNOWLEDGE_SOURCES = makeSymbol("KNOWLEDGE-SOURCES");
    SubLSymbol qKS = makeSymbol("?KS");
    SubLSymbol KS = makeSymbol("KS");
    SubLSymbol KS_ARGS = makeSymbol("KS-ARGS");
    SubLSymbol KS_ASSISTANT = makeSymbol("KS-ASSISTANT");
    SubLSymbol KSB = makeSymbol("KSB");
    SubLSymbol KSB_BODY = makeSymbol("KSB-BODY");
    SubLSymbol KSB_EXPRESSION = makeSymbol("KSB-EXPRESSION");
    SubLSymbol KSB_IDENTIFIER = makeSymbol("KSB-IDENTIFIER");
    SubLSymbol KSB_INFO = makeSymbol("KSB-INFO");
    SubLSymbol KS_CLASS = makeSymbol("KS-CLASS");
    SubLSymbol KSI = makeSymbol("KSI");
    SubLSymbol KSI_CLASS = makeSymbol("KSI-CLASS");
    SubLSymbol KSI_INDEX = makeSymbol("KSI-INDEX");
    SubLSymbol KSI_NAME = makeSymbol("KSI-NAME");
    SubLSymbol KS_INSTANCE = makeSymbol("KS-INSTANCE");
    SubLSymbol KS_NAME = makeSymbol("KS-NAME");
    SubLSymbol KS_VISITOR = makeSymbol("KS-VISITOR");
    SubLSymbol L = makeSymbol("L");
    SubLSymbol LABEL = makeSymbol("LABEL");
    SubLSymbol LAMBDA_LIST = makeSymbol("LAMBDA-LIST");
    SubLSymbol LANGUAGE = makeSymbol("LANGUAGE");
    SubLSymbol LANGUAGE_MT = makeSymbol("LANGUAGE-MT");
    SubLSymbol LARGEST_INDEX = makeSymbol("LARGEST-INDEX");
    SubLSymbol LAST = makeSymbol("LAST");
    SubLSymbol LAST_CONS = makeSymbol("LAST-CONS");
    SubLSymbol LAST_CONTENTS = makeSymbol("LAST-CONTENTS");
    SubLSymbol LAST_CYCLE_TIMESTAMP = makeSymbol("LAST-CYCLE-TIMESTAMP");
    SubLSymbol LAST_LINK = makeSymbol("LAST-LINK");
    SubLSymbol LAST_P = makeSymbol("LAST-P");
    SubLSymbol qLAT = makeSymbol("?LAT");
    SubLSymbol LAT = makeSymbol("LAT");
    SubLSymbol qLAT1 = makeSymbol("?LAT1");
    SubLSymbol qLAT2 = makeSymbol("?LAT2");
    SubLSymbol qLATER = makeSymbol("?LATER");
    SubLSymbol LEARN = makeSymbol("LEARN");
    SubLSymbol LEARNABLE_TYPES = makeSymbol("LEARNABLE-TYPES");
    SubLSymbol LEARNED = makeSymbol("LEARNED");
    SubLSymbol LEFT_LINKS = makeSymbol("LEFT-LINKS");
    SubLSymbol LEMMA = makeSymbol("LEMMA");
    SubLSymbol LENGTH = makeSymbol("LENGTH");
    SubLSymbol LEVEL = makeSymbol("LEVEL");
    SubLSymbol LEX = makeSymbol("LEX");
    SubLSymbol LEX_DEBUG_OUT = makeSymbol("LEX-DEBUG-OUT");
    SubLSymbol LEX_DESCRIBE_TERM = makeSymbol("LEX-DESCRIBE-TERM");
    SubLSymbol LEXEME = makeSymbol("LEXEME");
    SubLSymbol LEXEME_CLASS = makeSymbol("LEXEME-CLASS");
    SubLSymbol LEX_ENTRIES = makeSymbol("LEX-ENTRIES");
    SubLSymbol LEX_ENTRY = makeSymbol("LEX-ENTRY");
    SubLSymbol LEX_ENTRY_P = makeSymbol("LEX-ENTRY-P");
    SubLSymbol LEXES = makeSymbol("LEXES");
    SubLSymbol LEXICAL_MT = makeSymbol("LEXICAL-MT");
    SubLSymbol LEXICON = makeSymbol("LEXICON");
    SubLSymbol LEXICON_ITERATOR = makeSymbol("LEXICON-ITERATOR");
    SubLSymbol $LEXICON_LOOKUP_MT$ = makeSymbol("*LEXICON-LOOKUP-MT*");
    SubLSymbol LEXIFIED = makeSymbol("LEXIFIED");
    SubLSymbol LEXIFIER = makeSymbol("LEXIFIER");
    SubLSymbol LEXIFY = makeSymbol("LEXIFY");
    SubLSymbol LEXIFY_INT = makeSymbol("LEXIFY-INT");
    SubLSymbol LEXIFY_SENTENCE = makeSymbol("LEXIFY-SENTENCE");
    SubLSymbol LEX_SCORE = makeSymbol("LEX-SCORE");
    SubLSymbol LEX_SCORES = makeSymbol("LEX-SCORES");
    SubLSymbol LEX_STRING_TOKENIZE = makeSymbol("LEX-STRING-TOKENIZE");
    SubLSymbol LEX_TRACE = makeSymbol("LEX-TRACE");
    SubLSymbol LEX_WARN = makeSymbol("LEX-WARN");
    SubLSymbol LEXWIZ_ERROR_MESSAGE = makeSymbol("LEXWIZ-ERROR-MESSAGE");
    SubLSymbol LEXWIZ_HEADWORD_POSITION = makeSymbol("LEXWIZ-HEADWORD-POSITION");
    SubLSymbol LEXWIZ_MT = makeSymbol("LEXWIZ-MT");
    SubLSymbol LEXWIZ_PARAMETERS = makeSymbol("LEXWIZ-PARAMETERS");
    SubLSymbol LEXWIZ_PHRASE = makeSymbol("LEXWIZ-PHRASE");
    SubLSymbol LEXWIZ_SETTINGS = makeSymbol("LEXWIZ-SETTINGS");
    SubLSymbol LEXWIZ_TERM = makeSymbol("LEXWIZ-TERM");
    SubLSymbol qLF = makeSymbol("?LF");
    SubLSymbol LF = makeSymbol("LF");
    SubLSymbol qLFI = makeSymbol("?LFI");
    SubLSymbol LFI = makeSymbol("LFI");
    SubLSymbol LINE = makeSymbol("LINE");
    SubLSymbol LINK = makeSymbol("LINK");
    SubLSymbol LINK1 = makeSymbol("LINK1");
    SubLSymbol LINK2 = makeSymbol("LINK2");
    SubLSymbol LINKAGE = makeSymbol("LINKAGE");
    SubLSymbol LINK_BODY = makeSymbol("LINK-BODY");
    SubLSymbol LINKED_TO_PANELS = makeSymbol("LINKED-TO-PANELS");
    SubLSymbol LINK_KSI = makeSymbol("LINK-KSI");
    SubLSymbol LINK_NAME = makeSymbol("LINK-NAME");
    SubLSymbol LINK_NODES_VAR = makeSymbol("LINK-NODES-VAR");
    SubLSymbol LINK_NODE_VAR = makeSymbol("LINK-NODE-VAR");
    SubLSymbol LINK_PATH = makeSymbol("LINK-PATH");
    SubLSymbol LINK_PATTERN = makeSymbol("LINK-PATTERN");
    SubLSymbol LINKS = makeSymbol("LINKS");
    SubLSymbol LINK_TO_PANELS = makeSymbol("LINK-TO-PANELS");
    SubLSymbol LINK_VAR = makeSymbol("LINK-VAR");
    SubLSymbol qLIST = makeSymbol("?LIST");
    SubLSymbol LIST = makeSymbol("LIST");
    SubLSymbol LIST$ = makeSymbol("LIST*");
    SubLSymbol LIST1 = makeSymbol("LIST1");
    SubLSymbol LISTED_SLOTS = makeSymbol("LISTED-SLOTS");
    SubLSymbol LIST_ELEMENT_TEMPLATE = makeSymbol("LIST-ELEMENT-TEMPLATE");
    SubLSymbol LIST_ELEMENT_TEMPLATE_P = makeSymbol("LIST-ELEMENT-TEMPLATE-P");
    SubLSymbol LISTFORM = makeSymbol("LISTFORM");
    SubLSymbol LISTIFIED_RESULT = makeSymbol("LISTIFIED-RESULT");
    SubLSymbol LISTIFY = makeSymbol("LISTIFY");
    SubLSymbol LISTIFY_LOCAL_BINDINGS = makeSymbol("LISTIFY-LOCAL-BINDINGS");
    SubLSymbol LIST_LENGTH = makeSymbol("LIST-LENGTH");
    SubLSymbol LIST_OF_MARKS = makeSymbol("LIST-OF-MARKS");
    SubLSymbol LIST_OF_STRINGS = makeSymbol("LIST-OF-STRINGS");
    SubLSymbol LISTP = makeSymbol("LISTP");
    SubLSymbol LIT = makeSymbol("LIT");
    SubLSymbol LITERAL = makeSymbol("LITERAL");
    SubLSymbol LITERALS = makeSymbol("LITERALS");
    SubLSymbol LITERAL_VALUE = makeSymbol("LITERAL-VALUE");
    SubLSymbol LITTLE_STRING = makeSymbol("LITTLE-STRING");
    SubLSymbol LOCAL_ARGS = makeSymbol("LOCAL-ARGS");
    SubLSymbol LOCAL_BINDINGS = makeSymbol("LOCAL-BINDINGS");
    SubLSymbol LOCAL_ENVIRONMENT = makeSymbol("LOCAL-ENVIRONMENT");
    SubLSymbol LOCALS = makeSymbol("LOCALS");
    SubLSymbol LOCK = makeSymbol("LOCK");
    SubLSymbol LOCK_HISTORY = makeSymbol("LOCK-HISTORY");
    SubLSymbol LOG = makeSymbol("LOG");
    SubLSymbol LOG_ENTRY = makeSymbol("LOG-ENTRY");
    SubLSymbol LOG_FANCY_ENTRY = makeSymbol("LOG-FANCY-ENTRY");
    SubLSymbol LOGICAL_EXPRESSION = makeSymbol("LOGICAL-EXPRESSION");
    SubLSymbol LOGICAL_FORM = makeSymbol("LOGICAL-FORM");
    SubLSymbol LOGICAL_FORM_INT = makeSymbol("LOGICAL-FORM-INT");
    SubLSymbol qLOGICAL_SCHEMA = makeSymbol("?LOGICAL-SCHEMA");
    SubLSymbol LOGICAL_SCHEMA = makeSymbol("LOGICAL-SCHEMA");
    SubLSymbol LOG_NEWLINE = makeSymbol("LOG-NEWLINE");
    SubLSymbol qLONG = makeSymbol("?LONG");
    SubLSymbol LONG = makeSymbol("LONG");
    SubLSymbol LOOKUP = makeSymbol("LOOKUP");
    SubLSymbol LOOKUP_MT = makeSymbol("LOOKUP-MT");
    SubLSymbol LOW = makeSymbol("LOW");
    SubLSymbol qLS = makeSymbol("?LS");
    SubLSymbol qM = makeSymbol("?M");
    SubLSymbol M = makeSymbol("M");
    SubLSymbol MACHINE = makeSymbol("MACHINE");
    SubLSymbol MAIN = makeSymbol("MAIN");
    SubLSymbol MAIN_PARSER = makeSymbol("MAIN-PARSER");
    SubLSymbol MAIN_VERB = makeSymbol("MAIN-VERB");
    SubLSymbol MAIN_VERB_LINK_WORD = makeSymbol("MAIN-VERB-LINK-WORD");
    SubLSymbol MAKE_BINARY_FORMULA = makeSymbol("MAKE-BINARY-FORMULA");
    SubLSymbol MAKE_DOUBLE_LINK_CELL = makeSymbol("MAKE-DOUBLE-LINK-CELL");
    SubLSymbol MAKE_HASH_TABLE = makeSymbol("MAKE-HASH-TABLE");
    SubLSymbol MAKE_LIST = makeSymbol("MAKE-LIST");
    SubLSymbol MAKE_LOCK = makeSymbol("MAKE-LOCK");
    SubLSymbol MAKE_STRING_OUTPUT_STREAM = makeSymbol("MAKE-STRING-OUTPUT-STREAM");
    SubLSymbol MAKE_SYMBOL = makeSymbol("MAKE-SYMBOL");
    SubLSymbol MAKE_VECTOR = makeSymbol("MAKE-VECTOR");
    SubLSymbol qMANAGEMENT_ENCOUNTER = makeSymbol("?MANAGEMENT-ENCOUNTER");
    SubLSymbol MAP = makeSymbol("MAP");
    SubLSymbol MAPCAR = makeSymbol("MAPCAR");
    SubLSymbol MAPPED_PROBLEM_P = makeSymbol("MAPPED-PROBLEM-P");
    SubLSymbol MAPPING_MT = makeSymbol("MAPPING-MT");
    SubLSymbol MARK = makeSymbol("MARK");
    SubLSymbol MARKS = makeSymbol("MARKS");
    SubLSymbol MATCH = makeSymbol("MATCH");
    SubLSymbol MATRIX = makeSymbol("MATRIX");
    SubLSymbol MATRIX_HEAD = makeSymbol("MATRIX-HEAD");
    SubLSymbol MAX = makeSymbol("MAX");
    SubLSymbol MAX_CANDIDATES = makeSymbol("MAX-CANDIDATES");
    SubLSymbol MAX_CONFIDENCE = makeSymbol("MAX-CONFIDENCE");
    SubLSymbol MAXIMUM_ACCELERATION = makeSymbol("MAXIMUM-ACCELERATION");
    SubLSymbol MAX_NUMBER = makeSymbol("MAX-NUMBER");
    SubLSymbol MAX_RANKING_LENGTH = makeSymbol("MAX-RANKING-LENGTH");
    SubLSymbol MAX_SCORE = makeSymbol("MAX-SCORE");
    SubLSymbol MBIND = makeSymbol("MBIND");
    SubLSymbol MBINDING = makeSymbol("MBINDING");
    SubLSymbol MBINDINGS = makeSymbol("MBINDINGS");
    SubLSymbol MEANING = makeSymbol("MEANING");
    SubLSymbol MEANINGS = makeSymbol("MEANINGS");
    SubLSymbol qMEDICAL_DIAGNOSIS_OR_FINDING = makeSymbol("?MEDICAL-DIAGNOSIS-OR-FINDING");
    SubLSymbol qMEDICAL_EVALUATION = makeSymbol("?MEDICAL-EVALUATION");
    SubLSymbol qMEDICALLY_RELATED_EVENT = makeSymbol("?MEDICALLY-RELATED-EVENT");
    SubLSymbol qMEDICAL_TEST = makeSymbol("?MEDICAL-TEST");
    SubLSymbol qMEMBER = makeSymbol("?MEMBER");
    SubLSymbol MEMBER = makeSymbol("MEMBER");
    SubLSymbol MEMBERq = makeSymbol("MEMBER?");
    SubLSymbol MEMBER_P = makeSymbol("MEMBER-P");
    SubLSymbol MEMOIZATION_STATE = makeSymbol("MEMOIZATION-STATE");
    SubLSymbol MEMOIZATION_STATE_P = makeSymbol("MEMOIZATION-STATE-P");
    SubLSymbol MESSAGE = makeSymbol("MESSAGE");
    SubLSymbol MESSAGE_ARGS = makeSymbol("MESSAGE-ARGS");
    SubLSymbol MESSAGE_AS_STRING = makeSymbol("MESSAGE-AS-STRING");
    SubLSymbol MESSAGE_BROKER = makeSymbol("MESSAGE-BROKER");
    SubLSymbol MESSAGE_BROKER_CLASS = makeSymbol("MESSAGE-BROKER-CLASS");
    SubLSymbol MESSAGE_FROM = makeSymbol("MESSAGE-FROM");
    SubLSymbol MESSAGES = makeSymbol("MESSAGES");
    SubLSymbol MESSAGE_TO = makeSymbol("MESSAGE-TO");
    SubLSymbol qMETHOD = makeSymbol("?METHOD");
    SubLSymbol METHOD = makeSymbol("METHOD");
    SubLSymbol METHOD_DEFINITIONS = makeSymbol("METHOD-DEFINITIONS");
    SubLSymbol METHOD_NAME = makeSymbol("METHOD-NAME");
    SubLSymbol METHODS = makeSymbol("METHODS");
    SubLSymbol METRICS = makeSymbol("METRICS");
    SubLSymbol MICROTHEORY_P = makeSymbol("MICROTHEORY-P");
    SubLSymbol MIN = makeSymbol("MIN");
    SubLSymbol MIN_COLS = makeSymbol("MIN-COLS");
    SubLSymbol MIN_LIST_LENGTH = makeSymbol("MIN-LIST-LENGTH");
    SubLSymbol MINUSP = makeSymbol("MINUSP");
    SubLSymbol MISSPELLINGSq = makeSymbol("MISSPELLINGS?");
    SubLSymbol MOD = makeSymbol("MOD");
    SubLSymbol MOD_CYCL = makeSymbol("MOD-CYCL");
    SubLSymbol MOD_CYCLS = makeSymbol("MOD-CYCLS");
    SubLSymbol MODE = makeSymbol("MODE");
    SubLSymbol MODIFIED = makeSymbol("MODIFIED");
    SubLSymbol MODIFIEDS = makeSymbol("MODIFIEDS");
    SubLSymbol MODIFIER = makeSymbol("MODIFIER");
    SubLSymbol MODIFIERS = makeSymbol("MODIFIERS");
    SubLSymbol qMOD_STRING = makeSymbol("?MOD-STRING");
    SubLSymbol MODULE = makeSymbol("MODULE");
    SubLSymbol MODULES = makeSymbol("MODULES");
    SubLSymbol MONITOR = makeSymbol("MONITOR");
    SubLSymbol MONITOR_ARGS = makeSymbol("MONITOR-ARGS");
    SubLSymbol MONITOR_EXPRESSION = makeSymbol("MONITOR-EXPRESSION");
    SubLSymbol MONITORING_P = makeSymbol("MONITORING-P");
    SubLSymbol MONITORING_PATTERN = makeSymbol("MONITORING-PATTERN");
    SubLSymbol MONITOR_VISITOR = makeSymbol("MONITOR-VISITOR");
    SubLSymbol MONTH = makeSymbol("MONTH");
    SubLSymbol MORE_SPECIFIC_P = makeSymbol("MORE-SPECIFIC-P");
    SubLSymbol MOTHER = makeSymbol("MOTHER");
    SubLSymbol MOVED = makeSymbol("MOVED");
    SubLSymbol $MT$ = makeSymbol("*MT*");
    SubLSymbol qMT = makeSymbol("?MT");
    SubLSymbol MT = makeSymbol("MT");
    SubLSymbol MT1 = makeSymbol("MT1");
    SubLSymbol MT2 = makeSymbol("MT2");
    SubLSymbol MT_MT = makeSymbol("MT-MT");
    SubLSymbol MT_NODE = makeSymbol("MT-NODE");
    SubLSymbol MTS = makeSymbol("MTS");
    SubLSymbol MT_SPEC = makeSymbol("MT-SPEC");
    SubLSymbol MT_VAR = makeSymbol("MT-VAR");
    SubLSymbol MULTIPLE_VALUE_LIST = makeSymbol("MULTIPLE-VALUE-LIST");
    SubLSymbol MUMBLE = makeSymbol("MUMBLE");
    SubLSymbol MUST = makeSymbol("MUST");
    SubLSymbol MY_CYCLS0 = makeSymbol("MY-CYCLS0");
    SubLSymbol MY_CYCLS_WITH_MODS = makeSymbol("MY-CYCLS-WITH-MODS");
    SubLSymbol MY_INDEX = makeSymbol("MY-INDEX");
    SubLSymbol MY_METHOD = makeSymbol("MY-METHOD");
    SubLSymbol MY_TERM_LEXICON = makeSymbol("MY-TERM-LEXICON");
    SubLSymbol qN = makeSymbol("?N");
    SubLSymbol N = makeSymbol("N");
    SubLSymbol qNAME = makeSymbol("?NAME");
    SubLSymbol NAME = makeSymbol("NAME");
    SubLSymbol NAMENT = makeSymbol("NAMENT");
    SubLSymbol NAME_TOKENS = makeSymbol("NAME-TOKENS");
    SubLSymbol NART = makeSymbol("NART");
    SubLSymbol NART_P = makeSymbol("NART-P");
    SubLSymbol qNAT = makeSymbol("?NAT");
    SubLSymbol NAUT_P = makeSymbol("NAUT-P");
    SubLSymbol NCONC = makeSymbol("NCONC");
    SubLSymbol NDISTR_COMP_CYCLS = makeSymbol("NDISTR-COMP-CYCLS");
    SubLSymbol NEGATIVE_CHOICE = makeSymbol("NEGATIVE-CHOICE");
    SubLSymbol NEGATIVE_LITERALS = makeSymbol("NEGATIVE-LITERALS");
    SubLSymbol NEG_LITS = makeSymbol("NEG-LITS");
    SubLSymbol qNEW = makeSymbol("?NEW");
    SubLSymbol NEW = makeSymbol("NEW");
    SubLSymbol NEW_ACTION = makeSymbol("NEW-ACTION");
    SubLSymbol NEW_ACTION_QUALIFIERS = makeSymbol("NEW-ACTION-QUALIFIERS");
    SubLSymbol NEW_ACTIONS = makeSymbol("NEW-ACTIONS");
    SubLSymbol NEW_ACTIVATION_PATTERN = makeSymbol("NEW-ACTIVATION-PATTERN");
    SubLSymbol NEW_ACTIVE_PROPOSAL = makeSymbol("NEW-ACTIVE-PROPOSAL");
    SubLSymbol NEW_ACTIVE_PROPOSALS = makeSymbol("NEW-ACTIVE-PROPOSALS");
    SubLSymbol NEW_ACTIVE_STATE = makeSymbol("NEW-ACTIVE-STATE");
    SubLSymbol NEW_ACTIVE_STATUS = makeSymbol("NEW-ACTIVE-STATUS");
    SubLSymbol NEW_ADDS = makeSymbol("NEW-ADDS");
    SubLSymbol NEW_AGENDA = makeSymbol("NEW-AGENDA");
    SubLSymbol NEW_AGENDA_CLASS = makeSymbol("NEW-AGENDA-CLASS");
    SubLSymbol NEW_APPLICATION = makeSymbol("NEW-APPLICATION");
    SubLSymbol NEW_APPLICATION_NAME = makeSymbol("NEW-APPLICATION-NAME");
    SubLSymbol NEW_ARG = makeSymbol("NEW-ARG");
    SubLSymbol NEW_ARG1 = makeSymbol("NEW-ARG1");
    SubLSymbol NEW_ARGN = makeSymbol("NEW-ARGN");
    SubLSymbol NEW_ARGS = makeSymbol("NEW-ARGS");
    SubLSymbol NEW_ASSISTANT = makeSymbol("NEW-ASSISTANT");
    SubLSymbol NEW_ATTRIBUTE = makeSymbol("NEW-ATTRIBUTE");
    SubLSymbol NEW_AUTHOR_NAMES = makeSymbol("NEW-AUTHOR-NAMES");
    SubLSymbol NEW_BACKCHAIN = makeSymbol("NEW-BACKCHAIN");
    SubLSymbol NEW_BACKCHAINS = makeSymbol("NEW-BACKCHAINS");
    SubLSymbol NEW_BASE_PANEL = makeSymbol("NEW-BASE-PANEL");
    SubLSymbol NEW_BINDING = makeSymbol("NEW-BINDING");
    SubLSymbol NEW_BINDING_LIST = makeSymbol("NEW-BINDING-LIST");
    SubLSymbol NEW_BINDINGS = makeSymbol("NEW-BINDINGS");
    SubLSymbol NEW_BLACKBOARD = makeSymbol("NEW-BLACKBOARD");
    SubLSymbol NEW_BLACKBOARD_IDENTIFIER = makeSymbol("NEW-BLACKBOARD-IDENTIFIER");
    SubLSymbol NEW_CATEGORIES = makeSymbol("NEW-CATEGORIES");
    SubLSymbol NEW_CATEGORY = makeSymbol("NEW-CATEGORY");
    SubLSymbol NEW_CATEGORY_NAME = makeSymbol("NEW-CATEGORY-NAME");
    SubLSymbol NEW_CHILD = makeSymbol("NEW-CHILD");
    SubLSymbol NEW_CLASS = makeSymbol("NEW-CLASS");
    SubLSymbol NEW_CLASS_INSTANCE = makeSymbol("NEW-CLASS-INSTANCE");
    SubLSymbol NEW_COLLECTION = makeSymbol("NEW-COLLECTION");
    SubLSymbol NEW_COMPLEX_FORMULA = makeSymbol("NEW-COMPLEX-FORMULA");
    SubLSymbol NEW_CONFIDENCE = makeSymbol("NEW-CONFIDENCE");
    SubLSymbol NEW_CONSTANT = makeSymbol("NEW-CONSTANT");
    SubLSymbol NEW_CONTENTS = makeSymbol("NEW-CONTENTS");
    SubLSymbol NEW_CONTRIBUTIONS = makeSymbol("NEW-CONTRIBUTIONS");
    SubLSymbol NEW_COPY = makeSymbol("NEW-COPY");
    SubLSymbol NEW_COUNT = makeSymbol("NEW-COUNT");
    SubLSymbol NEW_CURRENT_INTERACTION = makeSymbol("NEW-CURRENT-INTERACTION");
    SubLSymbol NEW_CYC_QUERY = makeSymbol("NEW-CYC-QUERY");
    SubLSymbol NEW_DATATYPE = makeSymbol("NEW-DATATYPE");
    SubLSymbol NEW_DATATYPE_BAG = makeSymbol("NEW-DATATYPE-BAG");
    SubLSymbol NEW_DEFAULT_VALUE = makeSymbol("NEW-DEFAULT-VALUE");
    SubLSymbol NEW_DELETES = makeSymbol("NEW-DELETES");
    SubLSymbol NEW_DEPENDENT = makeSymbol("NEW-DEPENDENT");
    SubLSymbol NEW_DEPTH = makeSymbol("NEW-DEPTH");
    SubLSymbol NEW_DICTIONARY = makeSymbol("NEW-DICTIONARY");
    SubLSymbol NEW_DIRECTION = makeSymbol("NEW-DIRECTION");
    SubLSymbol NEW_EDGE = makeSymbol("NEW-EDGE");
    SubLSymbol NEW_ELEMENT = makeSymbol("NEW-ELEMENT");
    SubLSymbol NEW_ELEMENT_COUNT = makeSymbol("NEW-ELEMENT-COUNT");
    SubLSymbol NEW_END_POINTER = makeSymbol("NEW-END-POINTER");
    SubLSymbol NEW_ENUMERATOR = makeSymbol("NEW-ENUMERATOR");
    SubLSymbol NEW_ENVIRONMENT = makeSymbol("NEW-ENVIRONMENT");
    SubLSymbol NEW_EXECUTION_MODE = makeSymbol("NEW-EXECUTION-MODE");
    SubLSymbol NEW_EXPRESSION = makeSymbol("NEW-EXPRESSION");
    SubLSymbol NEW_EXTERNAL_CONNECTION = makeSymbol("NEW-EXTERNAL-CONNECTION");
    SubLSymbol NEW_EXTERNAL_MODULE_ID = makeSymbol("NEW-EXTERNAL-MODULE-ID");
    SubLSymbol NEW_EXTERNAL_MODULE_NAME = makeSymbol("NEW-EXTERNAL-MODULE-NAME");
    SubLSymbol NEW_FIRST_LINK = makeSymbol("NEW-FIRST-LINK");
    SubLSymbol NEW_FORMULA = makeSymbol("NEW-FORMULA");
    SubLSymbol NEW_FUNCTION = makeSymbol("NEW-FUNCTION");
    SubLSymbol NEW_GOAL_PATTERN = makeSymbol("NEW-GOAL-PATTERN");
    SubLSymbol NEW_GROWTH_FACTOR = makeSymbol("NEW-GROWTH-FACTOR");
    SubLSymbol NEW_GUID = makeSymbol("NEW-GUID");
    SubLSymbol NEW_HEAD = makeSymbol("NEW-HEAD");
    SubLSymbol NEW_HEURISTIC_EVALUATOR_REGISTRY = makeSymbol("NEW-HEURISTIC-EVALUATOR-REGISTRY");
    SubLSymbol NEW_INCOMING_QUEUE = makeSymbol("NEW-INCOMING-QUEUE");
    SubLSymbol NEW_INDEX = makeSymbol("NEW-INDEX");
    SubLSymbol NEW_INPUT_STREAM = makeSymbol("NEW-INPUT-STREAM");
    SubLSymbol NEW_INSTANCE = makeSymbol("NEW-INSTANCE");
    SubLSymbol NEW_INTERNAL_STORAGE = makeSymbol("NEW-INTERNAL-STORAGE");
    SubLSymbol NEW_IO_MONITOR = makeSymbol("NEW-IO-MONITOR");
    SubLSymbol NEW_KEY_FUNCTION = makeSymbol("NEW-KEY-FUNCTION");
    SubLSymbol NEW_KNOWLEDGE_SOURCE = makeSymbol("NEW-KNOWLEDGE-SOURCE");
    SubLSymbol NEW_KNOWLEDGE_SOURCE_BATTERY = makeSymbol("NEW-KNOWLEDGE-SOURCE-BATTERY");
    SubLSymbol NEW_KS = makeSymbol("NEW-KS");
    SubLSymbol NEW_KS_CLASS = makeSymbol("NEW-KS-CLASS");
    SubLSymbol NEW_KSI = makeSymbol("NEW-KSI");
    SubLSymbol NEW_KSI_CLASS = makeSymbol("NEW-KSI-CLASS");
    SubLSymbol NEW_KS_ROOT_NAME = makeSymbol("NEW-KS-ROOT-NAME");
    SubLSymbol NEW_LARGEST_INDEX = makeSymbol("NEW-LARGEST-INDEX");
    SubLSymbol NEW_LAST_LINK = makeSymbol("NEW-LAST-LINK");
    SubLSymbol NEW_LEXES = makeSymbol("NEW-LEXES");
    SubLSymbol NEW_LF_LITERAL = makeSymbol("NEW-LF-LITERAL");
    SubLSymbol $NEW_LINE_STRING$ = makeSymbol("*NEW-LINE-STRING*");
    SubLSymbol NEW_LIST = makeSymbol("NEW-LIST");
    SubLSymbol NEW_LOCAL_BINDINGS = makeSymbol("NEW-LOCAL-BINDINGS");
    SubLSymbol NEW_LOCAL_ENVIRONMENT = makeSymbol("NEW-LOCAL-ENVIRONMENT");
    SubLSymbol NEW_LOGICAL_EXPRESSION = makeSymbol("NEW-LOGICAL-EXPRESSION");
    SubLSymbol NEW_LOGICAL_FORM = makeSymbol("NEW-LOGICAL-FORM");
    SubLSymbol NEW_MARKS = makeSymbol("NEW-MARKS");
    SubLSymbol NEW_MAX = makeSymbol("NEW-MAX");
    SubLSymbol NEW_MAX_FUTILE_CYCLES = makeSymbol("NEW-MAX-FUTILE-CYCLES");
    SubLSymbol NEW_MBINDINGS = makeSymbol("NEW-MBINDINGS");
    SubLSymbol NEW_MESSAGE = makeSymbol("NEW-MESSAGE");
    SubLSymbol NEW_MESSAGE_BROKER = makeSymbol("NEW-MESSAGE-BROKER");
    SubLSymbol NEW_MESSAGES = makeSymbol("NEW-MESSAGES");
    SubLSymbol NEW_METHOD_DEFINITION = makeSymbol("NEW-METHOD-DEFINITION");
    SubLSymbol NEW_MIN = makeSymbol("NEW-MIN");
    SubLSymbol NEW_MONITORING_PATTERN = makeSymbol("NEW-MONITORING-PATTERN");
    SubLSymbol NEW_MT = makeSymbol("NEW-MT");
    SubLSymbol NEW_NAME = makeSymbol("NEW-NAME");
    SubLSymbol NEW_NODE = makeSymbol("NEW-NODE");
    SubLSymbol NEW_NODES = makeSymbol("NEW-NODES");
    SubLSymbol NEW_NUMBER = makeSymbol("NEW-NUMBER");
    SubLSymbol NEW_OBJECT_INSTANCE = makeSymbol("NEW-OBJECT-INSTANCE");
    SubLSymbol NEW_ON_SHUTDOWN_EXPRESSION = makeSymbol("NEW-ON-SHUTDOWN-EXPRESSION");
    SubLSymbol NEW_ON_STARTUP_EXPRESSION = makeSymbol("NEW-ON-STARTUP-EXPRESSION");
    SubLSymbol NEW_ORD = makeSymbol("NEW-ORD");
    SubLSymbol NEW_OUTGOING_MESSAGE_QUEUE = makeSymbol("NEW-OUTGOING-MESSAGE-QUEUE");
    SubLSymbol NEW_OUTGOING_QUEUE = makeSymbol("NEW-OUTGOING-QUEUE");
    SubLSymbol NEW_OUTPUT_STREAM = makeSymbol("NEW-OUTPUT-STREAM");
    SubLSymbol NEW_PANEL = makeSymbol("NEW-PANEL");
    SubLSymbol NEW_PANEL_CLASS = makeSymbol("NEW-PANEL-CLASS");
    SubLSymbol NEW_PANEL_TYPE = makeSymbol("NEW-PANEL-TYPE");
    SubLSymbol NEW_PARENT = makeSymbol("NEW-PARENT");
    SubLSymbol NEW_PARENT_LINK = makeSymbol("NEW-PARENT-LINK");
    SubLSymbol NEW_PARENT_LINKS = makeSymbol("NEW-PARENT-LINKS");
    SubLSymbol NEW_PARENT_SLICE = makeSymbol("NEW-PARENT-SLICE");
    SubLSymbol NEW_PARSED_BODY = makeSymbol("NEW-PARSED-BODY");
    SubLSymbol NEW_PARSER = makeSymbol("NEW-PARSER");
    SubLSymbol NEW_PARSE_TREE = makeSymbol("NEW-PARSE-TREE");
    SubLSymbol NEW_PLAN = makeSymbol("NEW-PLAN");
    SubLSymbol NEW_PLAN_STATE = makeSymbol("NEW-PLAN-STATE");
    SubLSymbol NEW_POINTER = makeSymbol("NEW-POINTER");
    SubLSymbol NEW_PORT = makeSymbol("NEW-PORT");
    SubLSymbol NEW_PORT_ID = makeSymbol("NEW-PORT-ID");
    SubLSymbol NEW_PORT_MANAGER = makeSymbol("NEW-PORT-MANAGER");
    SubLSymbol NEW_POSTING = makeSymbol("NEW-POSTING");
    SubLSymbol NEW_POSTING_CLASS = makeSymbol("NEW-POSTING-CLASS");
    SubLSymbol NEW_POSTING_DAEMON = makeSymbol("NEW-POSTING-DAEMON");
    SubLSymbol NEW_POSTING_TYPE = makeSymbol("NEW-POSTING-TYPE");
    SubLSymbol NEW_PRECONDITION_PATTERN = makeSymbol("NEW-PRECONDITION-PATTERN");
    SubLSymbol NEW_PREDICATE = makeSymbol("NEW-PREDICATE");
    SubLSymbol NEW_PREDICATOR = makeSymbol("NEW-PREDICATOR");
    SubLSymbol NEW_PRIORITIZER = makeSymbol("NEW-PRIORITIZER");
    SubLSymbol NEW_PRIORITY = makeSymbol("NEW-PRIORITY");
    SubLSymbol NEW_PROBLEM = makeSymbol("NEW-PROBLEM");
    SubLSymbol NEW_PROCESSING_STAGE = makeSymbol("NEW-PROCESSING-STAGE");
    SubLSymbol NEW_PROCESS_SCHEDULER = makeSymbol("NEW-PROCESS-SCHEDULER");
    SubLSymbol NEW_PROPERTY_VALUE = makeSymbol("NEW-PROPERTY-VALUE");
    SubLSymbol NEW_PROPID = makeSymbol("NEW-PROPID");
    SubLSymbol NEW_PROPOSAL = makeSymbol("NEW-PROPOSAL");
    SubLSymbol NEW_PROPOSAL_CLASS = makeSymbol("NEW-PROPOSAL-CLASS");
    SubLSymbol NEW_QUEUE = makeSymbol("NEW-QUEUE");
    SubLSymbol NEW_RANGE = makeSymbol("NEW-RANGE");
    SubLSymbol NEW_REASONS = makeSymbol("NEW-REASONS");
    SubLSymbol NEW_RESULT = makeSymbol("NEW-RESULT");
    SubLSymbol NEW_RM = makeSymbol("NEW-RM");
    SubLSymbol NEW_ROBOT = makeSymbol("NEW-ROBOT");
    SubLSymbol NEW_ROOT_PANELS = makeSymbol("NEW-ROOT-PANELS");
    SubLSymbol NEW_SATISFACTION_TYPE = makeSymbol("NEW-SATISFACTION-TYPE");
    SubLSymbol NEW_SCHEDULER = makeSymbol("NEW-SCHEDULER");
    SubLSymbol NEW_SENTENCE = makeSymbol("NEW-SENTENCE");
    SubLSymbol NEW_SESSION_ID = makeSymbol("NEW-SESSION-ID");
    SubLSymbol NEW_SET = makeSymbol("NEW-SET");
    SubLSymbol NEW_SLICE = makeSymbol("NEW-SLICE");
    SubLSymbol NEW_SLOT_DECLARATION = makeSymbol("NEW-SLOT-DECLARATION");
    SubLSymbol NEW_SLOTS = makeSymbol("NEW-SLOTS");
    SubLSymbol NEW_SOURCE = makeSymbol("NEW-SOURCE");
    SubLSymbol NEW_STATE = makeSymbol("NEW-STATE");
    SubLSymbol NEW_STATE1 = makeSymbol("NEW-STATE1");
    SubLSymbol NEW_STATE2 = makeSymbol("NEW-STATE2");
    SubLSymbol NEW_STATE_CHANGE_LISTENER = makeSymbol("NEW-STATE-CHANGE-LISTENER");
    SubLSymbol NEW_STATES = makeSymbol("NEW-STATES");
    SubLSymbol NEW_STATUS = makeSymbol("NEW-STATUS");
    SubLSymbol NEW_STIMULATION_TYPE = makeSymbol("NEW-STIMULATION-TYPE");
    SubLSymbol NEW_STORAGE_SIZE = makeSymbol("NEW-STORAGE-SIZE");
    SubLSymbol NEW_STRENGTH = makeSymbol("NEW-STRENGTH");
    SubLSymbol NEW_SUB_PANEL = makeSymbol("NEW-SUB-PANEL");
    SubLSymbol NEW_SUBTYPES = makeSymbol("NEW-SUBTYPES");
    SubLSymbol NEW_SUITE = makeSymbol("NEW-SUITE");
    SubLSymbol NEW_SUPER_KS_ROOT_NAME = makeSymbol("NEW-SUPER-KS-ROOT-NAME");
    SubLSymbol NEW_SUPER_PANEL = makeSymbol("NEW-SUPER-PANEL");
    SubLSymbol NEW_SUPERTYPES = makeSymbol("NEW-SUPERTYPES");
    SubLSymbol NEW_SUPPORT_TYPE = makeSymbol("NEW-SUPPORT-TYPE");
    SubLSymbol NEW_SUSPENDED_PROPOSALS = makeSymbol("NEW-SUSPENDED-PROPOSALS");
    SubLSymbol NEW_TAG = makeSymbol("NEW-TAG");
    SubLSymbol NEW_TASK = makeSymbol("NEW-TASK");
    SubLSymbol NEW_TASKS = makeSymbol("NEW-TASKS");
    SubLSymbol NEW_TERM = makeSymbol("NEW-TERM");
    SubLSymbol NEW_TEST_CASE = makeSymbol("NEW-TEST-CASE");
    SubLSymbol NEW_TEXT_ANSWER = makeSymbol("NEW-TEXT-ANSWER");
    SubLSymbol NEW_TIME = makeSymbol("NEW-TIME");
    SubLSymbol NEW_TIMESTAMP = makeSymbol("NEW-TIMESTAMP");
    SubLSymbol NEW_TOKEN = makeSymbol("NEW-TOKEN");
    SubLSymbol NEW_TRANSACTION_ID = makeSymbol("NEW-TRANSACTION-ID");
    SubLSymbol NEW_TYPE = makeSymbol("NEW-TYPE");
    SubLSymbol NEW_TYPE_STRING = makeSymbol("NEW-TYPE-STRING");
    SubLSymbol NEW_USAGE = makeSymbol("NEW-USAGE");
    SubLSymbol NEW_VAL = makeSymbol("NEW-VAL");
    SubLSymbol NEW_VALUE = makeSymbol("NEW-VALUE");
    SubLSymbol NEW_VARIABLE = makeSymbol("NEW-VARIABLE");
    SubLSymbol NEW_WORLD_STATE = makeSymbol("NEW-WORLD-STATE");
    SubLSymbol NEXT = makeSymbol("NEXT");
    SubLSymbol NEXT_INTERACTION = makeSymbol("NEXT-INTERACTION");
    SubLSymbol NEXT_STATE = makeSymbol("NEXT-STATE");
    SubLSymbol NEXT_STATES = makeSymbol("NEXT-STATES");
    SubLSymbol NEXT_TOKEN = makeSymbol("NEXT-TOKEN");
    SubLSymbol NIL_OR = makeSymbol("NIL-OR");
    SubLSymbol NL_GENERATION_CACHE_METHOD = makeSymbol("NL-GENERATION-CACHE-METHOD");
    SubLSymbol NL_MT = makeSymbol("NL-MT");
    SubLSymbol NL_PREDS = makeSymbol("NL-PREDS");
    SubLSymbol $NL_TRIE_ACCESSOR_DEFAULT_CASE_SENSITIVITY$ = makeSymbol("*NL-TRIE-ACCESSOR-DEFAULT-CASE-SENSITIVITY*");
    SubLSymbol NL_TRIE_ENTRY = makeSymbol("NL-TRIE-ENTRY");
    SubLSymbol NL_TRIE_ENTRY_DENOTS = makeSymbol("NL-TRIE-ENTRY-DENOTS");
    SubLSymbol NL_TRIE_ENTRY_SEMANTIC_PRED = makeSymbol("NL-TRIE-ENTRY-SEMANTIC-PRED");
    SubLSymbol NL_TRIE_NAME = makeSymbol("NL-TRIE-NAME");
    SubLSymbol NODE = makeSymbol("NODE");
    SubLSymbol NODE_ID = makeSymbol("NODE-ID");
    SubLSymbol NODES = makeSymbol("NODES");
    SubLSymbol NOMINAL_PHRASE_TREE_P = makeSymbol("NOMINAL-PHRASE-TREE-P");
    SubLSymbol NOMINAL_TREE_P = makeSymbol("NOMINAL-TREE-P");
    SubLSymbol NON_DISTRIBUTING = makeSymbol("NON-DISTRIBUTING");
    SubLSymbol NON_DOTTED_LIST_P = makeSymbol("NON-DOTTED-LIST-P");
    SubLSymbol qNONE = makeSymbol("?NONE");
    SubLSymbol NONE = makeSymbol("NONE");
    SubLSymbol NON_EMPTY_STRINGq = makeSymbol("NON-EMPTY-STRING?");
    SubLSymbol NON_HL_PREDICATE_P = makeSymbol("NON-HL-PREDICATE-P");
    SubLSymbol NON_NEGATIVE_INTEGER_P = makeSymbol("NON-NEGATIVE-INTEGER-P");
    SubLSymbol NON_NEGATIVE_NUMBER_P = makeSymbol("NON-NEGATIVE-NUMBER-P");
    SubLSymbol NON_NULL_ANSWER_TO_SINGLETON = makeSymbol("NON-NULL-ANSWER-TO-SINGLETON");
    SubLSymbol NO_NOTABLE_INSTANCES_OF_REFINED_TAGq = makeSymbol("NO-NOTABLE-INSTANCES-OF-REFINED-TAG?");
    SubLSymbol NOTE_PERCENT_PROGRESS = makeSymbol("NOTE-PERCENT-PROGRESS");
    SubLSymbol NOT_EQ = makeSymbol("NOT-EQ");
    SubLSymbol NOTHING_TO_DOq = makeSymbol("NOTHING-TO-DO?");
    SubLSymbol NOTIFICATION_FN = makeSymbol("NOTIFICATION-FN");
    SubLSymbol NOTIFY_CLIENT = makeSymbol("NOTIFY-CLIENT");
    SubLSymbol NOTING_PERCENT_PROGRESS = makeSymbol("NOTING-PERCENT-PROGRESS");
    SubLSymbol NOUN = makeSymbol("NOUN");
    SubLSymbol NOUN_LINK_WORD = makeSymbol("NOUN-LINK-WORD");
    SubLSymbol NOUN_OBJECT = makeSymbol("NOUN-OBJECT");
    SubLSymbol NOUN_RELEVANCE_COUNT_THRESHOLD = makeSymbol("NOUN-RELEVANCE-COUNT-THRESHOLD");
    SubLSymbol NOUNS = makeSymbol("NOUNS");
    SubLSymbol NOUN_STRING = makeSymbol("NOUN-STRING");
    SubLSymbol NP = makeSymbol("NP");
    SubLSymbol NREVERSE = makeSymbol("NREVERSE");
    SubLSymbol NTH = makeSymbol("NTH");
    SubLSymbol NTHCDR = makeSymbol("NTHCDR");
    SubLSymbol NTH_VALUE = makeSymbol("NTH-VALUE");
    SubLSymbol NULL = makeSymbol("NULL");
    SubLSymbol $NULL_OUTPUT$ = makeSymbol("*NULL-OUTPUT*");
    SubLSymbol qNUM = makeSymbol("?NUM");
    SubLSymbol NUM = makeSymbol("NUM");
    SubLSymbol NUM1 = makeSymbol("NUM1");
    SubLSymbol NUM2 = makeSymbol("NUM2");
    SubLSymbol NUM_BACKCHAINS = makeSymbol("NUM-BACKCHAINS");
    SubLSymbol NUMBER = makeSymbol("NUMBER");
    SubLSymbol NUMBER_LEARN = makeSymbol("NUMBER-LEARN");
    SubLSymbol NUMBER_OF_EXPANSIONS = makeSymbol("NUMBER-OF-EXPANSIONS");
    SubLSymbol NUMBER_OF_INFERENCES = makeSymbol("NUMBER-OF-INFERENCES");
    SubLSymbol NUMBER_OF_SLOTS = makeSymbol("NUMBER-OF-SLOTS");
    SubLSymbol NUMBERP = makeSymbol("NUMBERP");
    SubLSymbol NUMBERS = makeSymbol("NUMBERS");
    SubLSymbol NUMBER_STRING = makeSymbol("NUMBER-STRING");
    SubLSymbol NUMERATOR = makeSymbol("NUMERATOR");
    SubLSymbol NUM_INDEX = makeSymbol("NUM-INDEX");
    SubLSymbol O = makeSymbol("O");
    SubLSymbol qOBJ = makeSymbol("?OBJ");
    SubLSymbol OBJ = makeSymbol("OBJ");
    SubLSymbol OBJ1 = makeSymbol("OBJ1");
    SubLSymbol OBJ2 = makeSymbol("OBJ2");
    SubLSymbol OBJECT = makeSymbol("OBJECT");
    SubLSymbol OBJECT1 = makeSymbol("OBJECT1");
    SubLSymbol OBJECT2 = makeSymbol("OBJECT2");
    SubLSymbol OBJECT3 = makeSymbol("OBJECT3");
    SubLSymbol OBJECT_CONTROLLER_P = makeSymbol("OBJECT-CONTROLLER-P");
    SubLSymbol OBJECT_ID = makeSymbol("OBJECT-ID");
    SubLSymbol OBJECT_MONITOR = makeSymbol("OBJECT-MONITOR");
    SubLSymbol OBJECTS = makeSymbol("OBJECTS");
    SubLSymbol OBLIQUE_OBJECT = makeSymbol("OBLIQUE-OBJECT");
    SubLSymbol OBL_OBJ = makeSymbol("OBL-OBJ");
    SubLSymbol OBL_OBJ_HEAD = makeSymbol("OBL-OBJ-HEAD");
    SubLSymbol qOF = makeSymbol("?OF");
    SubLSymbol OFFSET = makeSymbol("OFFSET");
    SubLSymbol OFFSETS = makeSymbol("OFFSETS");
    SubLSymbol OLD = makeSymbol("OLD");
    SubLSymbol OLD_ACTIVE_PROPOSAL = makeSymbol("OLD-ACTIVE-PROPOSAL");
    SubLSymbol OLD_CATEGORY = makeSymbol("OLD-CATEGORY");
    SubLSymbol OLD_DEPENDENT = makeSymbol("OLD-DEPENDENT");
    SubLSymbol OLD_ELEMENT = makeSymbol("OLD-ELEMENT");
    SubLSymbol OLD_ENUMERATOR = makeSymbol("OLD-ENUMERATOR");
    SubLSymbol OLD_PANEL = makeSymbol("OLD-PANEL");
    SubLSymbol OLD_PARENT_LINK = makeSymbol("OLD-PARENT-LINK");
    SubLSymbol OLD_POSTING_DAEMON = makeSymbol("OLD-POSTING-DAEMON");
    SubLSymbol OLD_SUB_PANEL = makeSymbol("OLD-SUB-PANEL");
    SubLSymbol OLD_SUITE = makeSymbol("OLD-SUITE");
    SubLSymbol OLD_SUPER_PANEL = makeSymbol("OLD-SUPER-PANEL");
    SubLSymbol OLD_SUSPENDED_PROPOSAL = makeSymbol("OLD-SUSPENDED-PROPOSAL");
    SubLSymbol OLD_TEST_CASE = makeSymbol("OLD-TEST-CASE");
    SubLSymbol OLD_VAR = makeSymbol("OLD-VAR");
    SubLSymbol ON_ACTIVATE = makeSymbol("ON-ACTIVATE");
    SubLSymbol ON_ADD = makeSymbol("ON-ADD");
    SubLSymbol ON_ADD_FIRST_KNOWLEDGE_SOURCE = makeSymbol("ON-ADD-FIRST-KNOWLEDGE-SOURCE");
    SubLSymbol ON_DELETE = makeSymbol("ON-DELETE");
    SubLSymbol ONE = makeSymbol("ONE");
    SubLSymbol ON_EMPTY_AGENDA = makeSymbol("ON-EMPTY-AGENDA");
    SubLSymbol ON_EMPTY_AGENDA_EXPRESSION = makeSymbol("ON-EMPTY-AGENDA-EXPRESSION");
    SubLSymbol ON_ENQUEUE = makeSymbol("ON-ENQUEUE");
    SubLSymbol ON_POST = makeSymbol("ON-POST");
    SubLSymbol ON_PROPOSE_BODY = makeSymbol("ON-PROPOSE-BODY");
    SubLSymbol ON_PROPOSE_EXPRESSION = makeSymbol("ON-PROPOSE-EXPRESSION");
    SubLSymbol ON_PROPOSE_EXPRESSIONS = makeSymbol("ON-PROPOSE-EXPRESSIONS");
    SubLSymbol ON_QUIESCENCE = makeSymbol("ON-QUIESCENCE");
    SubLSymbol ON_QUIESCENCE_EXPRESSION = makeSymbol("ON-QUIESCENCE-EXPRESSION");
    SubLSymbol ON_REMOVE_LAST_KNOWLEDGE_SOURCE = makeSymbol("ON-REMOVE-LAST-KNOWLEDGE-SOURCE");
    SubLSymbol ON_SHUTDOWN = makeSymbol("ON-SHUTDOWN");
    SubLSymbol ON_SHUTDOWN_EXPRESSION = makeSymbol("ON-SHUTDOWN-EXPRESSION");
    SubLSymbol ON_STARTUP = makeSymbol("ON-STARTUP");
    SubLSymbol ON_STARTUP_EXPRESSION = makeSymbol("ON-STARTUP-EXPRESSION");
    SubLSymbol qOP = makeSymbol("?OP");
    SubLSymbol OP = makeSymbol("OP");
    SubLSymbol OPEN_NODES = makeSymbol("OPEN-NODES");
    SubLSymbol OPEN_TEXT = makeSymbol("OPEN-TEXT");
    SubLSymbol OPEN_VARIABLES = makeSymbol("OPEN-VARIABLES");
    SubLSymbol qOPERATION = makeSymbol("?OPERATION");
    SubLSymbol OPERATOR = makeSymbol("OPERATOR");
    SubLSymbol OPERATORS = makeSymbol("OPERATORS");
    SubLSymbol OPTIMIZE_FUNCALL = makeSymbol("OPTIMIZE-FUNCALL");
    SubLSymbol aOPTIONAL = makeSymbol("&OPTIONAL");
    SubLSymbol OPTIONS = makeSymbol("OPTIONS");
    SubLSymbol OR = makeSymbol("OR");
    SubLSymbol ORD = makeSymbol("ORD");
    SubLSymbol ORDER = makeSymbol("ORDER");
    SubLSymbol ORDERED_CONTENTS = makeSymbol("ORDERED-CONTENTS");
    SubLSymbol ORDERED_INDICES = makeSymbol("ORDERED-INDICES");
    SubLSymbol ORDERED_SUB_SLICES = makeSymbol("ORDERED-SUB-SLICES");
    SubLSymbol OTHER = makeSymbol("OTHER");
    SubLSymbol OTHER_DATATYPE = makeSymbol("OTHER-DATATYPE");
    SubLSymbol OTHER_ENVIRONMENT = makeSymbol("OTHER-ENVIRONMENT");
    SubLSymbol OTHER_INDEX = makeSymbol("OTHER-INDEX");
    SubLSymbol OTHER_LIST = makeSymbol("OTHER-LIST");
    SubLSymbol OTHER_RANGE = makeSymbol("OTHER-RANGE");
    SubLSymbol OTHER_UNIT = makeSymbol("OTHER-UNIT");
    SubLSymbol OTHERWISE = makeSymbol("OTHERWISE");
    SubLSymbol OUT_CYCL = makeSymbol("OUT-CYCL");
    SubLSymbol OUTER_SCOPE = makeSymbol("OUTER-SCOPE");
    SubLSymbol OUTGOING_MESSAGE_QUEUE = makeSymbol("OUTGOING-MESSAGE-QUEUE");
    SubLSymbol OUTGOING_POSTING_P = makeSymbol("OUTGOING-POSTING-P");
    SubLSymbol OUTGOING_POSTING_QUEUE = makeSymbol("OUTGOING-POSTING-QUEUE");
    SubLSymbol OUTGOING_RAW_QUEUE = makeSymbol("OUTGOING-RAW-QUEUE");
    SubLSymbol OUT_OF_RANGE_VALUE = makeSymbol("OUT-OF-RANGE-VALUE");
    SubLSymbol OUTPUT = makeSymbol("OUTPUT");
    SubLSymbol OUTPUT_FORMAT = makeSymbol("OUTPUT-FORMAT");
    SubLSymbol OUTPUT_MESSAGE = makeSymbol("OUTPUT-MESSAGE");
    SubLSymbol OUTPUT_STREAM = makeSymbol("OUTPUT-STREAM");
    SubLSymbol OUTPUT_STREAM_P = makeSymbol("OUTPUT-STREAM-P");
    SubLSymbol OUT_STREAM = makeSymbol("OUT-STREAM");
    SubLSymbol OUTSTREAM = makeSymbol("OUTSTREAM");
    SubLSymbol OWNER = makeSymbol("OWNER");
    SubLSymbol OWNING_METHOD_NAME = makeSymbol("OWNING-METHOD-NAME");
    SubLSymbol P = makeSymbol("P");
    SubLSymbol PANEL = makeSymbol("PANEL");
    SubLSymbol PANEL_CLASS = makeSymbol("PANEL-CLASS");
    SubLSymbol PANEL_CLASS_ASSOCIATIONS = makeSymbol("PANEL-CLASS-ASSOCIATIONS");
    SubLSymbol PANEL_DICTIONARY = makeSymbol("PANEL-DICTIONARY");
    SubLSymbol PANEL_EXPRESSION = makeSymbol("PANEL-EXPRESSION");
    SubLSymbol PANELS = makeSymbol("PANELS");
    SubLSymbol PARAGRAPH = makeSymbol("PARAGRAPH");
    SubLSymbol PARAM = makeSymbol("PARAM");
    SubLSymbol PARAMETER = makeSymbol("PARAMETER");
    SubLSymbol PARAMETERS = makeSymbol("PARAMETERS");
    SubLSymbol PARAMS = makeSymbol("PARAMS");
    SubLSymbol PARAPHRASE = makeSymbol("PARAPHRASE");
    SubLSymbol PARENT = makeSymbol("PARENT");
    SubLSymbol PARENT_INDEX = makeSymbol("PARENT-INDEX");
    SubLSymbol PARENT_LIST = makeSymbol("PARENT-LIST");
    SubLSymbol PARENT_SLICE = makeSymbol("PARENT-SLICE");
    SubLSymbol PARSE = makeSymbol("PARSE");
    SubLSymbol PARSE_ARGS = makeSymbol("PARSE-ARGS");
    SubLSymbol PARSED_ARG1 = makeSymbol("PARSED-ARG1");
    SubLSymbol PARSED_ARG2 = makeSymbol("PARSED-ARG2");
    SubLSymbol PARSED_ARGS = makeSymbol("PARSED-ARGS");
    SubLSymbol PARSED_BINDING_LIST = makeSymbol("PARSED-BINDING-LIST");
    SubLSymbol PARSED_BODY = makeSymbol("PARSED-BODY");
    SubLSymbol PARSE_EXPRESSION = makeSymbol("PARSE-EXPRESSION");
    SubLSymbol PARSE_MORPHOLOGICALLY = makeSymbol("PARSE-MORPHOLOGICALLY");
    SubLSymbol PARSER = makeSymbol("PARSER");
    SubLSymbol PARSER_CLASS = makeSymbol("PARSER-CLASS");
    SubLSymbol PARSER_TYPE = makeSymbol("PARSER-TYPE");
    SubLSymbol PARSES = makeSymbol("PARSES");
    SubLSymbol PARSE_TREE = makeSymbol("PARSE-TREE");
    SubLSymbol PARSE_TREE_CONTEXT = makeSymbol("PARSE-TREE-CONTEXT");
    SubLSymbol PARSE_TREE_P = makeSymbol("PARSE-TREE-P");
    SubLSymbol PARSE_TREES = makeSymbol("PARSE-TREES");
    SubLSymbol PARSING_DISPATCH_TABLE = makeSymbol("PARSING-DISPATCH-TABLE");
    SubLSymbol PARSING_MT = makeSymbol("PARSING-MT");
    SubLSymbol PARTIAL_PLAN = makeSymbol("PARTIAL-PLAN");
    SubLSymbol PARTICLE_FILTER_LEXES = makeSymbol("PARTICLE-FILTER-LEXES");
    SubLSymbol PARTITION_SEMANTIC_COMPLEMENTS = makeSymbol("PARTITION-SEMANTIC-COMPLEMENTS");
    SubLSymbol PART_OF_SPEECH = makeSymbol("PART-OF-SPEECH");
    SubLSymbol qPART_TYPE = makeSymbol("?PART-TYPE");
    SubLSymbol PASSAGE = makeSymbol("PASSAGE");
    SubLSymbol PASSAGES = makeSymbol("PASSAGES");
    SubLSymbol PASSAGE_TREE = makeSymbol("PASSAGE-TREE");
    SubLSymbol PASSIVE_P = makeSymbol("PASSIVE-P");
    SubLSymbol PATH = makeSymbol("PATH");
    SubLSymbol PATHNAME = makeSymbol("PATHNAME");
    SubLSymbol qPATIENT = makeSymbol("?PATIENT");
    SubLSymbol PATTERN = makeSymbol("PATTERN");
    SubLSymbol PAYLOAD = makeSymbol("PAYLOAD");
    SubLSymbol PCASE = makeSymbol("PCASE");
    SubLSymbol PCOND = makeSymbol("PCOND");
    SubLSymbol PEEK = makeSymbol("PEEK");
    SubLSymbol qPEG = makeSymbol("?PEG");
    SubLSymbol PENDING_ACTIONS = makeSymbol("PENDING-ACTIONS");
    SubLSymbol PENN = makeSymbol("PENN");
    SubLSymbol PENN_TAGS = makeSymbol("PENN-TAGS");
    SubLSymbol PERFORM_ACTION = makeSymbol("PERFORM-ACTION");
    SubLSymbol qPERSON = makeSymbol("?PERSON");
    SubLSymbol PERSON = makeSymbol("PERSON");
    SubLSymbol PHRASE = makeSymbol("PHRASE");
    SubLSymbol PHRASES = makeSymbol("PHRASES");
    SubLSymbol PHRASE_TREE_P = makeSymbol("PHRASE-TREE-P");
    SubLSymbol PHRASE_WORDS = makeSymbol("PHRASE-WORDS");
    SubLSymbol PHYSICAL_INDEX = makeSymbol("PHYSICAL-INDEX");
    SubLSymbol PHYSICAL_SCHEMA = makeSymbol("PHYSICAL-SCHEMA");
    SubLSymbol PIF = makeSymbol("PIF");
    SubLSymbol PIF_FEATURE = makeSymbol("PIF-FEATURE");
    SubLSymbol qPLACE = makeSymbol("?PLACE");
    SubLSymbol PLACE = makeSymbol("PLACE");
    SubLSymbol PLAN = makeSymbol("PLAN");
    SubLSymbol PLAN_DISPLAYER = makeSymbol("PLAN-DISPLAYER");
    SubLSymbol PLANNER = makeSymbol("PLANNER");
    SubLSymbol PLANNER_RULE = makeSymbol("PLANNER-RULE");
    SubLSymbol PLANNER_RULES = makeSymbol("PLANNER-RULES");
    SubLSymbol PLAN_NUMBER_TO_CUTOFF = makeSymbol("PLAN-NUMBER-TO-CUTOFF");
    SubLSymbol PLANS = makeSymbol("PLANS");
    SubLSymbol PLANS_FOUND = makeSymbol("PLANS-FOUND");
    SubLSymbol PLAN_STATE = makeSymbol("PLAN-STATE");
    SubLSymbol PLIST = makeSymbol("PLIST");
    SubLSymbol PLISTIFIED_CONTENT = makeSymbol("PLISTIFIED-CONTENT");
    SubLSymbol PLISTIFY = makeSymbol("PLISTIFY");
    SubLSymbol PLURAL_P = makeSymbol("PLURAL-P");
    SubLSymbol PLUSP = makeSymbol("PLUSP");
    SubLSymbol POINT_INFO = makeSymbol("POINT-INFO");
    SubLSymbol POP = makeSymbol("POP");
    SubLSymbol PORT = makeSymbol("PORT");
    SubLSymbol PORT_ID = makeSymbol("PORT-ID");
    SubLSymbol PORT_MANAGER = makeSymbol("PORT-MANAGER");
    SubLSymbol PORTS = makeSymbol("PORTS");
    SubLSymbol qPOS = makeSymbol("?POS");
    SubLSymbol POS = makeSymbol("POS");
    SubLSymbol POS_FILTER_LEXES = makeSymbol("POS-FILTER-LEXES");
    SubLSymbol POSITION = makeSymbol("POSITION");
    SubLSymbol POSITIVE_CHOICE = makeSymbol("POSITIVE-CHOICE");
    SubLSymbol POSITIVE_INTEGER_P = makeSymbol("POSITIVE-INTEGER-P");
    SubLSymbol POSITIVE_LITERALS = makeSymbol("POSITIVE-LITERALS");
    SubLSymbol POSITIVE_NUMBER_P = makeSymbol("POSITIVE-NUMBER-P");
    SubLSymbol POS_LITS = makeSymbol("POS-LITS");
    SubLSymbol POS_PRED = makeSymbol("POS-PRED");
    SubLSymbol POSSESSED = makeSymbol("POSSESSED");
    SubLSymbol POSSESSOR = makeSymbol("POSSESSOR");
    SubLSymbol POSSIBLY_BIND_TEMPORAL_INDEXICAL_IN_OBJECT = makeSymbol("POSSIBLY-BIND-TEMPORAL-INDEXICAL-IN-OBJECT");
    SubLSymbol POSSIBLY_CYCL_FORMULA_P = makeSymbol("POSSIBLY-CYCL-FORMULA-P");
    SubLSymbol POSSIBLY_HLMT_P = makeSymbol("POSSIBLY-HLMT-P");
    SubLSymbol POSSIBLY_IN_MT = makeSymbol("POSSIBLY-IN-MT");
    SubLSymbol POSSIBLY_MT_P = makeSymbol("POSSIBLY-MT-P");
    SubLSymbol POSSIBLY_SENTENCE_P = makeSymbol("POSSIBLY-SENTENCE-P");
    SubLSymbol POSSIBLY_WITH_INFERENCE_MT_RELEVANCE = makeSymbol("POSSIBLY-WITH-INFERENCE-MT-RELEVANCE");
    SubLSymbol POSS_RM = makeSymbol("POSS-RM");
    SubLSymbol POST = makeSymbol("POST");
    SubLSymbol POST_AT_WILL = makeSymbol("POST-AT-WILL");
    SubLSymbol POSTING = makeSymbol("POSTING");
    SubLSymbol POSTING_CLASS = makeSymbol("POSTING-CLASS");
    SubLSymbol POSTING_CLASS_ASSOCIATIONS = makeSymbol("POSTING-CLASS-ASSOCIATIONS");
    SubLSymbol POSTING_DAEMON = makeSymbol("POSTING-DAEMON");
    SubLSymbol POSTING_DAEMONS = makeSymbol("POSTING-DAEMONS");
    SubLSymbol POSTING_DATATYPE = makeSymbol("POSTING-DATATYPE");
    SubLSymbol POSTING_EXPRESSION = makeSymbol("POSTING-EXPRESSION");
    SubLSymbol POSTING_EXPRESSIONS = makeSymbol("POSTING-EXPRESSIONS");
    SubLSymbol POSTING_ID = makeSymbol("POSTING-ID");
    SubLSymbol POSTING_REFERENCE_EXPRESSION = makeSymbol("POSTING-REFERENCE-EXPRESSION");
    SubLSymbol POSTINGS = makeSymbol("POSTINGS");
    SubLSymbol POSTING_TO_RAW_FUNCTION = makeSymbol("POSTING-TO-RAW-FUNCTION");
    SubLSymbol POSTING_TYPE = makeSymbol("POSTING-TYPE");
    SubLSymbol POSTING_VALUE = makeSymbol("POSTING-VALUE");
    SubLSymbol POSTING_VAR = makeSymbol("POSTING-VAR");
    SubLSymbol POSTING_VISITOR = makeSymbol("POSTING-VISITOR");
    SubLSymbol POST_ORDERING = makeSymbol("POST-ORDERING");
    SubLSymbol PP = makeSymbol("PP");
    SubLSymbol PP_COMP_FILTER_LEXES = makeSymbol("PP-COMP-FILTER-LEXES");
    SubLSymbol $PPH_DOMAIN_MT$ = makeSymbol("*PPH-DOMAIN-MT*");
    SubLSymbol PP_HEAD = makeSymbol("PP-HEAD");
    SubLSymbol PP_HEAD_STRING = makeSymbol("PP-HEAD-STRING");
    SubLSymbol $PPH_LANGUAGE_MT$ = makeSymbol("*PPH-LANGUAGE-MT*");
    SubLSymbol PPH_NOTE = makeSymbol("PPH-NOTE");
    SubLSymbol PPH_PHRASE_OUTPUT_LIST_P = makeSymbol("PPH-PHRASE-OUTPUT-LIST-P");
    SubLSymbol PPH_PRECISION_P = makeSymbol("PPH-PRECISION-P");
    SubLSymbol $PPH_VAR_TYPES$ = makeSymbol("*PPH-VAR-TYPES*");
    SubLSymbol PPS = makeSymbol("PPS");
    SubLSymbol P_QUEUE = makeSymbol("P-QUEUE");
    SubLSymbol PRAGMATICS = makeSymbol("PRAGMATICS");
    SubLSymbol PRE = makeSymbol("PRE");
    SubLSymbol PRECOND = makeSymbol("PRECOND");
    SubLSymbol PRECONDITION = makeSymbol("PRECONDITION");
    SubLSymbol PRECONDITION_DATATYPES = makeSymbol("PRECONDITION-DATATYPES");
    SubLSymbol PRECONDITION_PATTERN = makeSymbol("PRECONDITION-PATTERN");
    SubLSymbol PRECONDITIONS = makeSymbol("PRECONDITIONS");
    SubLSymbol PRECONDS = makeSymbol("PRECONDS");
    SubLSymbol qPRED = makeSymbol("?PRED");
    SubLSymbol PRED = makeSymbol("PRED");
    SubLSymbol PREDICATE = makeSymbol("PREDICATE");
    SubLSymbol PREDICATE_P = makeSymbol("PREDICATE-P");
    SubLSymbol PREDICATES = makeSymbol("PREDICATES");
    SubLSymbol PREDICATOR = makeSymbol("PREDICATOR");
    SubLSymbol PREDICATOR_IS_METHOD = makeSymbol("PREDICATOR-IS-METHOD");
    SubLSymbol PREDICATOR_METHOD = makeSymbol("PREDICATOR-METHOD");
    SubLSymbol PREDS = makeSymbol("PREDS");
    SubLSymbol PRED_SPEC = makeSymbol("PRED-SPEC");
    SubLSymbol PRED_VAR = makeSymbol("PRED-VAR");
    SubLSymbol PREFIX = makeSymbol("PREFIX");
    SubLSymbol PRE_ORDERING = makeSymbol("PRE-ORDERING");
    SubLSymbol PREPOSITION = makeSymbol("PREPOSITION");
    SubLSymbol PREPOSITION_LINK_WORD = makeSymbol("PREPOSITION-LINK-WORD");
    SubLSymbol PREP_STRING = makeSymbol("PREP-STRING");
    SubLSymbol PREVIOUS = makeSymbol("PREVIOUS");
    SubLSymbol PREV_NE = makeSymbol("PREV-NE");
    SubLSymbol PRIMITIVE_FORM = makeSymbol("PRIMITIVE-FORM");
    SubLSymbol PRIN1 = makeSymbol("PRIN1");
    SubLSymbol PRIN1_TO_STRING = makeSymbol("PRIN1-TO-STRING");
    SubLSymbol PRINC = makeSymbol("PRINC");
    SubLSymbol PRINC_TO_STRING = makeSymbol("PRINC-TO-STRING");
    SubLSymbol PRINT = makeSymbol("PRINT");
    SubLSymbol PRINT_OPERATOR = makeSymbol("PRINT-OPERATOR");
    SubLSymbol PRINT_TAIL_PART = makeSymbol("PRINT-TAIL-PART");
    SubLSymbol PRIORITIZER = makeSymbol("PRIORITIZER");
    SubLSymbol PRIORITY = makeSymbol("PRIORITY");
    SubLSymbol PRIVATE = makeSymbol("PRIVATE");
    SubLSymbol PROBABILITY = makeSymbol("PROBABILITY");
    SubLSymbol PROBE_FILE = makeSymbol("PROBE-FILE");
    SubLSymbol PROBLEM = makeSymbol("PROBLEM");
    SubLSymbol PROBLEM_CODE = makeSymbol("PROBLEM-CODE");
    SubLSymbol PROBLEM_LINK_P = makeSymbol("PROBLEM-LINK-P");
    SubLSymbol PROBLEM_NAME = makeSymbol("PROBLEM-NAME");
    SubLSymbol PROBLEM_P = makeSymbol("PROBLEM-P");
    SubLSymbol PROBLEM_STORE_ID = makeSymbol("PROBLEM-STORE-ID");
    SubLSymbol PROBLEM_STORE_P = makeSymbol("PROBLEM-STORE-P");
    SubLSymbol PROBLEM_SUID = makeSymbol("PROBLEM-SUID");
    SubLSymbol PROCESS = makeSymbol("PROCESS");
    SubLSymbol PROCESSED_ITEMS = makeSymbol("PROCESSED-ITEMS");
    SubLSymbol PROCESSING_STAGE = makeSymbol("PROCESSING-STAGE");
    SubLSymbol PROCESSP = makeSymbol("PROCESSP");
    SubLSymbol PROCESS_QUEUE = makeSymbol("PROCESS-QUEUE");
    SubLSymbol PROCESS_SCHEDULER = makeSymbol("PROCESS-SCHEDULER");
    SubLSymbol PROCESS_STATUS_UPDATE = makeSymbol("PROCESS-STATUS-UPDATE");
    SubLSymbol PRODUCT = makeSymbol("PRODUCT");
    SubLSymbol PRODUCTIVITY = makeSymbol("PRODUCTIVITY");
    SubLSymbol PRODUCT_NAME = makeSymbol("PRODUCT-NAME");
    SubLSymbol PROFILE_MT = makeSymbol("PROFILE-MT");
    SubLSymbol PROGN = makeSymbol("PROGN");
    SubLSymbol PROGRESS_MESSAGE = makeSymbol("PROGRESS-MESSAGE");
    SubLSymbol $PROGRESS_SOFAR$ = makeSymbol("*PROGRESS-SOFAR*");
    SubLSymbol $PROGRESS_TOTAL$ = makeSymbol("*PROGRESS-TOTAL*");
    SubLSymbol qPROJECT = makeSymbol("?PROJECT");
    SubLSymbol PROMPT = makeSymbol("PROMPT");
    SubLSymbol PRONOMIAL_RMS = makeSymbol("PRONOMIAL-RMS");
    SubLSymbol PROOF = makeSymbol("PROOF");
    SubLSymbol PROOF_P = makeSymbol("PROOF-P");
    SubLSymbol PROPER_LIST_P = makeSymbol("PROPER-LIST-P");
    SubLSymbol PROPER_NOUN_LINK_WORD = makeSymbol("PROPER-NOUN-LINK-WORD");
    SubLSymbol PROPERTIES = makeSymbol("PROPERTIES");
    SubLSymbol PROPERTY = makeSymbol("PROPERTY");
    SubLSymbol PROPERTY_KEYS = makeSymbol("PROPERTY-KEYS");
    SubLSymbol PROPERTY_LIST_P = makeSymbol("PROPERTY-LIST-P");
    SubLSymbol PROPID = makeSymbol("PROPID");
    SubLSymbol PROPOSAL = makeSymbol("PROPOSAL");
    SubLSymbol PROPOSAL_CLASS = makeSymbol("PROPOSAL-CLASS");
    SubLSymbol PROPOSAL_GUID = makeSymbol("PROPOSAL-GUID");
    SubLSymbol PROPOSAL_ID = makeSymbol("PROPOSAL-ID");
    SubLSymbol PROPOSAL_MESSAGE = makeSymbol("PROPOSAL-MESSAGE");
    SubLSymbol PROPOSAL_NAME = makeSymbol("PROPOSAL-NAME");
    SubLSymbol PROPOSALS_VAR = makeSymbol("PROPOSALS-VAR");
    SubLSymbol PROPOSAL_VAR = makeSymbol("PROPOSAL-VAR");
    SubLSymbol PROPOSE = makeSymbol("PROPOSE");
    SubLSymbol PROPOSED_CONTRIBUTIONS = makeSymbol("PROPOSED-CONTRIBUTIONS");
    SubLSymbol PROPOSED_REMOVALS = makeSymbol("PROPOSED-REMOVALS");
    SubLSymbol PROTECTED = makeSymbol("PROTECTED");
    SubLSymbol PROTECTED_FORM = makeSymbol("PROTECTED-FORM");
    SubLSymbol PROXY = makeSymbol("PROXY");
    SubLSymbol P_SEMAPHORE = makeSymbol("P-SEMAPHORE");
    SubLSymbol PUNCTUATION_LINK_WORD = makeSymbol("PUNCTUATION-LINK-WORD");
    SubLSymbol PUNCTUATION_WORD_TREE = makeSymbol("PUNCTUATION-WORD-TREE");
    SubLSymbol PUNLESS = makeSymbol("PUNLESS");
    SubLSymbol PUSH = makeSymbol("PUSH");
    SubLSymbol PUTF = makeSymbol("PUTF");
    SubLSymbol PWHEN = makeSymbol("PWHEN");
    SubLSymbol PWHEN_FEATURE = makeSymbol("PWHEN-FEATURE");
    SubLSymbol Q = makeSymbol("Q");
    SubLSymbol QUALIFIER = makeSymbol("QUALIFIER");
    SubLSymbol QUA_LIST_ELEMENT_PARENT_LINKS = makeSymbol("QUA-LIST-ELEMENT-PARENT-LINKS");
    SubLSymbol QUA_LIST_ELEMENT_SELF_DELETION_MODE = makeSymbol("QUA-LIST-ELEMENT-SELF-DELETION-MODE");
    SubLSymbol QUANT = makeSymbol("QUANT");
    SubLSymbol QUANTIFIER = makeSymbol("QUANTIFIER");
    SubLSymbol QUANTIFIER0 = makeSymbol("QUANTIFIER0");
    SubLSymbol QUANTIFIER_LINK_WORD = makeSymbol("QUANTIFIER-LINK-WORD");
    SubLSymbol qQUANTITY = makeSymbol("?QUANTITY");
    SubLSymbol qQUANTITY_2 = makeSymbol("?QUANTITY-2");
    SubLSymbol QUERIES = makeSymbol("QUERIES");
    SubLSymbol QUERIFY = makeSymbol("QUERIFY");
    SubLSymbol qQUERY = makeSymbol("?QUERY");
    SubLSymbol QUERY = makeSymbol("QUERY");
    SubLSymbol QUERY_LANGUAGE_ATTR = makeSymbol("QUERY-LANGUAGE-ATTR");
    SubLSymbol QUERY_POSTING = makeSymbol("QUERY-POSTING");
    SubLSymbol QUERY_PROPERTIES = makeSymbol("QUERY-PROPERTIES");
    SubLSymbol QUERY_PROPERTIES_P = makeSymbol("QUERY-PROPERTIES-P");
    SubLSymbol QUERY_PROPERTY_P = makeSymbol("QUERY-PROPERTY-P");
    SubLSymbol QUERY_SENTENCE = makeSymbol("QUERY-SENTENCE");
    SubLSymbol QUERY_SPEC = makeSymbol("QUERY-SPEC");
    SubLSymbol QUERY_TAG = makeSymbol("QUERY-TAG");
    SubLSymbol QUERY_TEMPLATE = makeSymbol("QUERY-TEMPLATE");
    SubLSymbol QUERY_TYPE_ATTR = makeSymbol("QUERY-TYPE-ATTR");
    SubLSymbol QUESTION = makeSymbol("QUESTION");
    SubLSymbol QUESTION_ANSWERING_AGENT_CLASS = makeSymbol("QUESTION-ANSWERING-AGENT-CLASS");
    SubLSymbol QUESTION_TYPE = makeSymbol("QUESTION-TYPE");
    SubLSymbol QUEUE = makeSymbol("QUEUE");
    SubLSymbol QUEUE_ELEMENT_INTERFACE_P = makeSymbol("QUEUE-ELEMENT-INTERFACE-P");
    SubLSymbol QUEUE_EMPTY_P = makeSymbol("QUEUE-EMPTY-P");
    SubLSymbol QUEUE_LIST = makeSymbol("QUEUE-LIST");
    SubLSymbol QUEUE_P = makeSymbol("QUEUE-P");
    SubLSymbol QUOTE = makeSymbol("QUOTE");
    SubLSymbol RANGE = makeSymbol("RANGE");
    SubLSymbol RANGE_TUPLE = makeSymbol("RANGE-TUPLE");
    SubLSymbol RANK = makeSymbol("RANK");
    SubLSymbol RANKING = makeSymbol("RANKING");
    SubLSymbol RAW_CYCLIFICATIONS = makeSymbol("RAW-CYCLIFICATIONS");
    SubLSymbol RAW_INPUT = makeSymbol("RAW-INPUT");
    SubLSymbol RAW_TO_POSTING_FUNCTION = makeSymbol("RAW-TO-POSTING-FUNCTION");
    SubLSymbol READ_FROM_STRING = makeSymbol("READ-FROM-STRING");
    SubLSymbol READ_FROM_STRING_IGNORING_ERRORS = makeSymbol("READ-FROM-STRING-IGNORING-ERRORS");
    SubLSymbol REASON = makeSymbol("REASON");
    SubLSymbol REASONS = makeSymbol("REASONS");
    SubLSymbol RECALCULATE_IF_EXISTSq = makeSymbol("RECALCULATE-IF-EXISTS?");
    SubLSymbol RECOMPUTE_CONFIDENCE = makeSymbol("RECOMPUTE-CONFIDENCE");
    SubLSymbol RECORD_INDEX = makeSymbol("RECORD-INDEX");
    SubLSymbol RECORD_LENGTH = makeSymbol("RECORD-LENGTH");
    SubLSymbol RECORD_USE = makeSymbol("RECORD-USE");
    SubLSymbol REF = makeSymbol("REF");
    SubLSymbol REFERENCE = makeSymbol("REFERENCE");
    SubLSymbol REFERENCE_HASHTABLE = makeSymbol("REFERENCE-HASHTABLE");
    SubLSymbol REFINED_TAG = makeSymbol("REFINED-TAG");
    SubLSymbol REFS = makeSymbol("REFS");
    SubLSymbol REGEX_PATTERN_P = makeSymbol("REGEX-PATTERN-P");
    SubLSymbol REGISTER_PARSER = makeSymbol("REGISTER-PARSER");
    SubLSymbol REGULAR_EXPRESSION = makeSymbol("REGULAR-EXPRESSION");
    SubLSymbol REJECTED = makeSymbol("REJECTED");
    SubLSymbol REL = makeSymbol("REL");
    SubLSymbol RELATION = makeSymbol("RELATION");
    SubLSymbol RELATIONAL_NOUN_P = makeSymbol("RELATIONAL-NOUN-P");
    SubLSymbol RELATIONS = makeSymbol("RELATIONS");
    SubLSymbol RELEVANT_MTq = makeSymbol("RELEVANT-MT?");
    SubLSymbol RELEVANT_MT_IS_ANY_MT = makeSymbol("RELEVANT-MT-IS-ANY-MT");
    SubLSymbol RELEVANT_MT_IS_EQ = makeSymbol("RELEVANT-MT-IS-EQ");
    SubLSymbol RELEVANT_MT_IS_EVERYTHING = makeSymbol("RELEVANT-MT-IS-EVERYTHING");
    SubLSymbol RELEVANT_MT_IS_GENL_MT = makeSymbol("RELEVANT-MT-IS-GENL-MT");
    SubLSymbol RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER = makeSymbol("RELEVANT-MT-IS-GENL-MT-OF-LIST-MEMBER");
    SubLSymbol RELEVANT_MT_IS_IN_LIST = makeSymbol("RELEVANT-MT-IS-IN-LIST");
    SubLSymbol RELEVANT_PRED_IS_EQ = makeSymbol("RELEVANT-PRED-IS-EQ");
    SubLSymbol RELEVANT_PRED_IS_SPEC_INVERSE = makeSymbol("RELEVANT-PRED-IS-SPEC-INVERSE");
    SubLSymbol RELEVANT_PRED_IS_SPEC_PRED = makeSymbol("RELEVANT-PRED-IS-SPEC-PRED");
    SubLSymbol RELEVANT_SBHL_TV_IS_GENERAL_TV = makeSymbol("RELEVANT-SBHL-TV-IS-GENERAL-TV");
    SubLSymbol RELN = makeSymbol("RELN");
    SubLSymbol REMOVAL_FRACTION_WITH_MEASURE_POS_CHECK = makeSymbol("REMOVAL-FRACTION-WITH-MEASURE-POS-CHECK");
    SubLSymbol REMOVAL_ISA_SUBCOLLECTION_UNIFY_EXPAND = makeSymbol("REMOVAL-ISA-SUBCOLLECTION-UNIFY-EXPAND");
    SubLSymbol REMOVAL_TERM_PHRASES_REQUIRED = makeSymbol("REMOVAL-TERM-PHRASES-REQUIRED");
    SubLSymbol REMOVE = makeSymbol("REMOVE");
    SubLSymbol REMOVE_ALL_DEPENDENTS = makeSymbol("REMOVE-ALL-DEPENDENTS");
    SubLSymbol REMOVE_ALL_KNOWLEDGE_SOURCES = makeSymbol("REMOVE-ALL-KNOWLEDGE-SOURCES");
    SubLSymbol REMOVE_DEPENDENT = makeSymbol("REMOVE-DEPENDENT");
    SubLSymbol REMOVE_DIRECT_KNOWLEDGE_SOURCE = makeSymbol("REMOVE-DIRECT-KNOWLEDGE-SOURCE");
    SubLSymbol REMOVE_DIRECT_KNOWLEDGE_SOURCES = makeSymbol("REMOVE-DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol REMOVE_DIRECT_POSTING = makeSymbol("REMOVE-DIRECT-POSTING");
    SubLSymbol REMOVE_DIRECT_POSTINGS = makeSymbol("REMOVE-DIRECT-POSTINGS");
    SubLSymbol REMOVE_DUPLICATES = makeSymbol("REMOVE-DUPLICATES");
    SubLSymbol REMOVE_EVENT_ROOT_POSTING_PROPOSAL = makeSymbol("REMOVE-EVENT-ROOT-POSTING-PROPOSAL");
    SubLSymbol REMOVE_MARK = makeSymbol("REMOVE-MARK");
    SubLSymbol REMOVE_NOTIFY = makeSymbol("REMOVE-NOTIFY");
    SubLSymbol REMOVE_PANELS_AT_WILL = makeSymbol("REMOVE-PANELS-AT-WILL");
    SubLSymbol REMOVE_POSTING = makeSymbol("REMOVE-POSTING");
    SubLSymbol REMOVE_POSTING_DAEMON = makeSymbol("REMOVE-POSTING-DAEMON");
    SubLSymbol REMOVE_SUB_PANEL = makeSymbol("REMOVE-SUB-PANEL");
    SubLSymbol REMOVE_SUPER_PANEL = makeSymbol("REMOVE-SUPER-PANEL");
    SubLSymbol REMOVE_SUPPORT_NOTIFY = makeSymbol("REMOVE-SUPPORT-NOTIFY");
    SubLSymbol qREMOVE_TERM = makeSymbol("?REMOVE-TERM");
    SubLSymbol RENAMED0 = makeSymbol("RENAMED0");
    SubLSymbol RENAMING = makeSymbol("RENAMING");
    SubLSymbol RENAMINGS = makeSymbol("RENAMINGS");
    SubLSymbol RENAMINGS_DISJ = makeSymbol("RENAMINGS-DISJ");
    SubLSymbol REORDER_CONTENTS = makeSymbol("REORDER-CONTENTS");
    SubLSymbol REPEAT = makeSymbol("REPEAT");
    SubLSymbol REPORT_CONTENTS_MESSAGE = makeSymbol("REPORT-CONTENTS-MESSAGE");
    SubLSymbol REQUEST = makeSymbol("REQUEST");
    SubLSymbol REQUEST_CONTENTS_MESSAGE = makeSymbol("REQUEST-CONTENTS-MESSAGE");
    SubLSymbol REQUEST_STRING = makeSymbol("REQUEST-STRING");
    SubLSymbol REQUIRED_KEYWORDS = makeSymbol("REQUIRED-KEYWORDS");
    SubLSymbol REQUIRE_PERCENTAGE = makeSymbol("REQUIRE-PERCENTAGE");
    SubLSymbol REQUIRE_SIMILARITY = makeSymbol("REQUIRE-SIMILARITY");
    SubLSymbol RES = makeSymbol("RES");
    SubLSymbol RESET = makeSymbol("RESET");
    SubLSymbol RESOLVE_METHOD = makeSymbol("RESOLVE-METHOD");
    SubLSymbol RESOLVE_TERM = makeSymbol("RESOLVE-TERM");
    SubLSymbol RESPONSE = makeSymbol("RESPONSE");
    SubLSymbol RESPONSES = makeSymbol("RESPONSES");
    SubLSymbol aREST = makeSymbol("&REST");
    SubLSymbol REST = makeSymbol("REST");
    SubLSymbol RESULT = makeSymbol("RESULT");
    SubLSymbol RESULTS = makeSymbol("RESULTS");
    SubLSymbol RESULT_VAR = makeSymbol("RESULT-VAR");
    SubLSymbol RET = makeSymbol("RET");
    SubLSymbol RETRACT = makeSymbol("RETRACT");
    SubLSymbol RETRIEVE_COLLECTION_CONTENTS = makeSymbol("RETRIEVE-COLLECTION-CONTENTS");
    SubLSymbol RETURN_VALUE = makeSymbol("RETURN-VALUE");
    SubLSymbol REVERSE = makeSymbol("REVERSE");
    SubLSymbol REVERSE_LINK = makeSymbol("REVERSE-LINK");
    SubLSymbol RIGHT_LINKS = makeSymbol("RIGHT-LINKS");
    SubLSymbol RKF_UTTRDR_USE_TEMPLATE_PARSER = makeSymbol("RKF-UTTRDR-USE-TEMPLATE-PARSER");
    SubLSymbol RLE = makeSymbol("RLE");
    SubLSymbol RLE_LEX = makeSymbol("RLE-LEX");
    SubLSymbol RLE_SET_CONFIDENCE = makeSymbol("RLE-SET-CONFIDENCE");
    SubLSymbol RM = makeSymbol("RM");
    SubLSymbol RM_FORMULA = makeSymbol("RM-FORMULA");
    SubLSymbol RM_RESULTS = makeSymbol("RM-RESULTS");
    SubLSymbol RMS = makeSymbol("RMS");
    SubLSymbol qROLE = makeSymbol("?ROLE");
    SubLSymbol ROOT_DATATYPE_NAME = makeSymbol("ROOT-DATATYPE-NAME");
    SubLSymbol ROOT_MT = makeSymbol("ROOT-MT");
    SubLSymbol ROOT_P = makeSymbol("ROOT-P");
    SubLSymbol ROOT_PANELS = makeSymbol("ROOT-PANELS");
    SubLSymbol ROOT_SLICES = makeSymbol("ROOT-SLICES");
    SubLSymbol ROOT_TERM = makeSymbol("ROOT-TERM");
    SubLSymbol RPLACA = makeSymbol("RPLACA");
    SubLSymbol RPLACD = makeSymbol("RPLACD");
    SubLSymbol RS = makeSymbol("RS");
    SubLSymbol qRULE = makeSymbol("?RULE");
    SubLSymbol RULE = makeSymbol("RULE");
    SubLSymbol RULE_ASSERTIONq = makeSymbol("RULE-ASSERTION?");
    SubLSymbol RULES = makeSymbol("RULES");
    SubLSymbol RUN = makeSymbol("RUN");
    SubLSymbol RUN_TIME = makeSymbol("RUN-TIME");
    SubLSymbol S = makeSymbol("S");
    SubLSymbol SALIENT_QUERIES = makeSymbol("SALIENT-QUERIES");
    SubLSymbol SATISFACTION_EXPRESSION = makeSymbol("SATISFACTION-EXPRESSION");
    SubLSymbol SATISFACTION_TYPE = makeSymbol("SATISFACTION-TYPE");
    SubLSymbol SATISFIED_ELEMENTS = makeSymbol("SATISFIED-ELEMENTS");
    SubLSymbol SATISFIED_P = makeSymbol("SATISFIED-P");
    SubLSymbol SBHL_MODULE_P = makeSymbol("SBHL-MODULE-P");
    SubLSymbol SBHL_TIME_INFERENCE_ARG_P = makeSymbol("SBHL-TIME-INFERENCE-ARG-P");
    SubLSymbol SBHL_TRUE_TV_P = makeSymbol("SBHL-TRUE-TV-P");
    SubLSymbol SCENARIO = makeSymbol("SCENARIO");
    SubLSymbol SCOPE = makeSymbol("SCOPE");
    SubLSymbol SCORE = makeSymbol("SCORE");
    SubLSymbol SCORE_FUNCTION = makeSymbol("SCORE-FUNCTION");
    SubLSymbol SCRATCHPAD = makeSymbol("SCRATCHPAD");
    SubLSymbol SCRIPT = makeSymbol("SCRIPT");
    SubLSymbol SCYCLS = makeSymbol("SCYCLS");
    SubLSymbol SEARCH = makeSymbol("SEARCH");
    SubLSymbol SEARCH_DIRECTIVE_TAG = makeSymbol("SEARCH-DIRECTIVE-TAG");
    SubLSymbol SEARCH_STRING = makeSymbol("SEARCH-STRING");
    SubLSymbol SEARCH_TYPE = makeSymbol("SEARCH-TYPE");
    SubLSymbol qSECOND = makeSymbol("?SECOND");
    SubLSymbol SECOND = makeSymbol("SECOND");
    SubLSymbol SELECT = makeSymbol("SELECT");
    SubLSymbol SELECTED = makeSymbol("SELECTED");
    SubLSymbol SELECTIVENESS = makeSymbol("SELECTIVENESS");
    SubLSymbol SELECT_KEYWORD = makeSymbol("SELECT-KEYWORD");
    SubLSymbol SELF = makeSymbol("SELF");
    SubLSymbol SEMANTICS = makeSymbol("SEMANTICS");
    SubLSymbol SEMAPHORE = makeSymbol("SEMAPHORE");
    SubLSymbol SEMAPHORE_NAME = makeSymbol("SEMAPHORE-NAME");
    SubLSymbol SEMTRANS = makeSymbol("SEMTRANS");
    SubLSymbol SEMTRANSES = makeSymbol("SEMTRANSES");
    SubLSymbol SEMTRANS_LEXICON = makeSymbol("SEMTRANS-LEXICON");
    SubLSymbol SENSE = makeSymbol("SENSE");
    SubLSymbol SENSE_CYCLS = makeSymbol("SENSE-CYCLS");
    SubLSymbol SENSE_P = makeSymbol("SENSE-P");
    SubLSymbol qSENTENCE = makeSymbol("?SENTENCE");
    SubLSymbol SENTENCE = makeSymbol("SENTENCE");
    SubLSymbol SENTENCE_ID = makeSymbol("SENTENCE-ID");
    SubLSymbol SENTENCE_NUMBER = makeSymbol("SENTENCE-NUMBER");
    SubLSymbol SENTENCE_P = makeSymbol("SENTENCE-P");
    SubLSymbol SENTENCE_PARTICLE = makeSymbol("SENTENCE-PARTICLE");
    SubLSymbol SENTENCE_PARTICLE_HEAD = makeSymbol("SENTENCE-PARTICLE-HEAD");
    SubLSymbol SENTENCES = makeSymbol("SENTENCES");
    SubLSymbol SEQUENCE = makeSymbol("SEQUENCE");
    SubLSymbol SEQUENCE_CLASS = makeSymbol("SEQUENCE-CLASS");
    SubLSymbol SEQUENCEP = makeSymbol("SEQUENCEP");
    SubLSymbol SEQVAR_HANDLING = makeSymbol("SEQVAR-HANDLING");
    SubLSymbol SERIALIZED_EVENT = makeSymbol("SERIALIZED-EVENT");
    SubLSymbol SERVER = makeSymbol("SERVER");
    SubLSymbol SESSION = makeSymbol("SESSION");
    SubLSymbol SESSION_CONNECTION = makeSymbol("SESSION-CONNECTION");
    SubLSymbol SESSION_ID = makeSymbol("SESSION-ID");
    SubLSymbol SESSION_MT = makeSymbol("SESSION-MT");
    SubLSymbol SESSION_PARAMETERS = makeSymbol("SESSION-PARAMETERS");
    SubLSymbol qSET = makeSymbol("?SET");
    SubLSymbol SET = makeSymbol("SET");
    SubLSymbol SET_ACTIVATION_PATTERN = makeSymbol("SET-ACTIVATION-PATTERN");
    SubLSymbol SET_ACTIVE = makeSymbol("SET-ACTIVE");
    SubLSymbol SET_ADD = makeSymbol("SET-ADD");
    SubLSymbol SET_ANSWER = makeSymbol("SET-ANSWER");
    SubLSymbol SET_APPLICATION = makeSymbol("SET-APPLICATION");
    SubLSymbol SET_APPLICATION_NAME = makeSymbol("SET-APPLICATION-NAME");
    SubLSymbol SET_AREF = makeSymbol("SET-AREF");
    SubLSymbol SET_ARG1 = makeSymbol("SET-ARG1");
    SubLSymbol SET_ARG2 = makeSymbol("SET-ARG2");
    SubLSymbol SET_ARGN = makeSymbol("SET-ARGN");
    SubLSymbol SET_ARGS = makeSymbol("SET-ARGS");
    SubLSymbol SET_BINDING_LIST = makeSymbol("SET-BINDING-LIST");
    SubLSymbol SET_CASE_SENSITIVITY = makeSymbol("SET-CASE-SENSITIVITY");
    SubLSymbol SET_CONFIDENCE = makeSymbol("SET-CONFIDENCE");
    SubLSymbol SET_CONTENTS = makeSymbol("SET-CONTENTS");
    SubLSymbol SET_CONTENTS_POINTER = makeSymbol("SET-CONTENTS-POINTER");
    SubLSymbol SET_DATATYPE = makeSymbol("SET-DATATYPE");
    SubLSymbol SET_DICTIONARY = makeSymbol("SET-DICTIONARY");
    SubLSymbol SET_DIFFERENCE = makeSymbol("SET-DIFFERENCE");
    SubLSymbol SET_DIRECTION = makeSymbol("SET-DIRECTION");
    SubLSymbol SET_DIRECT_KNOWLEDGE_SOURCES = makeSymbol("SET-DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol SET_ELEMENT_COUNT = makeSymbol("SET-ELEMENT-COUNT");
    SubLSymbol SET_ELEMENT_EQUALITY_PREDICATE = makeSymbol("SET-ELEMENT-EQUALITY-PREDICATE");
    SubLSymbol SET_END_POINTER = makeSymbol("SET-END-POINTER");
    SubLSymbol SET_EXECUTION_ERROR_MESSAGE = makeSymbol("SET-EXECUTION-ERROR-MESSAGE");
    SubLSymbol SET_EXECUTION_MODE = makeSymbol("SET-EXECUTION-MODE");
    SubLSymbol SET_EXTERNAL_MODULE_ID = makeSymbol("SET-EXTERNAL-MODULE-ID");
    SubLSymbol SET_EXTERNAL_MODULE_NAME = makeSymbol("SET-EXTERNAL-MODULE-NAME");
    SubLSymbol SET_FIRST = makeSymbol("SET-FIRST");
    SubLSymbol SET_FIRST_CONS = makeSymbol("SET-FIRST-CONS");
    SubLSymbol SET_FIRST_LINK = makeSymbol("SET-FIRST-LINK");
    SubLSymbol SETHASH = makeSymbol("SETHASH");
    SubLSymbol SET_INITIAL_STATE = makeSymbol("SET-INITIAL-STATE");
    SubLSymbol SET_INTERACTION = makeSymbol("SET-INTERACTION");
    SubLSymbol SET_INTERNAL_STORAGE = makeSymbol("SET-INTERNAL-STORAGE");
    SubLSymbol SET_KEYWORD = makeSymbol("SET-KEYWORD");
    SubLSymbol SET_KNOWLEDGE_SOURCE = makeSymbol("SET-KNOWLEDGE-SOURCE");
    SubLSymbol SET_KSI = makeSymbol("SET-KSI");
    SubLSymbol SET_KSI_INDEX = makeSymbol("SET-KSI-INDEX");
    SubLSymbol SET_LAST_LINK = makeSymbol("SET-LAST-LINK");
    SubLSymbol SET_LEXICON = makeSymbol("SET-LEXICON");
    SubLSymbol SET_LIST_INTERNAL = makeSymbol("SET-LIST-INTERNAL");
    SubLSymbol SET_LOCAL_BINDINGS = makeSymbol("SET-LOCAL-BINDINGS");
    SubLSymbol SET_LOGICAL_FORM = makeSymbol("SET-LOGICAL-FORM");
    SubLSymbol SET_MARKS_INTERNAL = makeSymbol("SET-MARKS-INTERNAL");
    SubLSymbol SET_MEMBERq = makeSymbol("SET-MEMBER?");
    SubLSymbol SET_MESSAGE_BROKER = makeSymbol("SET-MESSAGE-BROKER");
    SubLSymbol SET_MESSAGE_KEY = makeSymbol("SET-MESSAGE-KEY");
    SubLSymbol SET_MT = makeSymbol("SET-MT");
    SubLSymbol SET_NAME = makeSymbol("SET-NAME");
    SubLSymbol SET_NTH = makeSymbol("SET-NTH");
    SubLSymbol SET_OUTER_SCOPE = makeSymbol("SET-OUTER-SCOPE");
    SubLSymbol SET_P = makeSymbol("SET-P");
    SubLSymbol SET_PANEL = makeSymbol("SET-PANEL");
    SubLSymbol SET_PARENT = makeSymbol("SET-PARENT");
    SubLSymbol SET_PARENT_LINKS = makeSymbol("SET-PARENT-LINKS");
    SubLSymbol SET_PASSIVE = makeSymbol("SET-PASSIVE");
    SubLSymbol SET_PORT_ID = makeSymbol("SET-PORT-ID");
    SubLSymbol SET_POST_AT_WILL = makeSymbol("SET-POST-AT-WILL");
    SubLSymbol SET_PRECONDITION_PATTERN = makeSymbol("SET-PRECONDITION-PATTERN");
    SubLSymbol SET_PRIORITIZER = makeSymbol("SET-PRIORITIZER");
    SubLSymbol SET_PRIORITIZER_INTERNAL = makeSymbol("SET-PRIORITIZER-INTERNAL");
    SubLSymbol SET_PROPID = makeSymbol("SET-PROPID");
    SubLSymbol SET_PROPOSAL = makeSymbol("SET-PROPOSAL");
    SubLSymbol SET_PROPOSAL_CLASS = makeSymbol("SET-PROPOSAL-CLASS");
    SubLSymbol SET_PROPOSAL_INDEX = makeSymbol("SET-PROPOSAL-INDEX");
    SubLSymbol SET_PROPOSED_CONTRIBUTIONS = makeSymbol("SET-PROPOSED-CONTRIBUTIONS");
    SubLSymbol SET_REASONS = makeSymbol("SET-REASONS");
    SubLSymbol SET_RESULT = makeSymbol("SET-RESULT");
    SubLSymbol SET_SECOND = makeSymbol("SET-SECOND");
    SubLSymbol SET_SELF_DELETION_MODE = makeSymbol("SET-SELF-DELETION-MODE");
    SubLSymbol SETS_EQUALq = makeSymbol("SETS-EQUAL?");
    SubLSymbol SET_SESSION_ID = makeSymbol("SET-SESSION-ID");
    SubLSymbol SET_SLOT = makeSymbol("SET-SLOT");
    SubLSymbol SET_SOURCE = makeSymbol("SET-SOURCE");
    SubLSymbol SET_STATES = makeSymbol("SET-STATES");
    SubLSymbol SET_STREAM = makeSymbol("SET-STREAM");
    SubLSymbol SET_TIMESTAMP = makeSymbol("SET-TIMESTAMP");
    SubLSymbol SET_TRACE_STATE = makeSymbol("SET-TRACE-STATE");
    SubLSymbol SET_TRANSACTION_ID = makeSymbol("SET-TRANSACTION-ID");
    SubLSymbol SET_TYPE_STRING = makeSymbol("SET-TYPE-STRING");
    SubLSymbol SET_UNIFICATION_ROBOT_CLASS = makeSymbol("SET-UNIFICATION-ROBOT-CLASS");
    SubLSymbol SET_UNPARSED_PATTERN = makeSymbol("SET-UNPARSED-PATTERN");
    SubLSymbol SETUP = makeSymbol("SETUP");
    SubLSymbol SET_VALUE = makeSymbol("SET-VALUE");
    SubLSymbol SHARED_STORAGE = makeSymbol("SHARED-STORAGE");
    SubLSymbol SHOP_BASIC_CONDITIONAL_EFFECT = makeSymbol("SHOP-BASIC-CONDITIONAL-EFFECT");
    SubLSymbol SHOP_BASIC_OPERATOR = makeSymbol("SHOP-BASIC-OPERATOR");
    SubLSymbol SHOP_BASIC_PLANNER_THREAD = makeSymbol("SHOP-BASIC-PLANNER-THREAD");
    SubLSymbol SHOP_BASIC_PLAN_STATE = makeSymbol("SHOP-BASIC-PLAN-STATE");
    SubLSymbol SHOP_BASIC_PROBLEM = makeSymbol("SHOP-BASIC-PROBLEM");
    SubLSymbol SHOP_BASIC_WORLD_STATE = makeSymbol("SHOP-BASIC-WORLD-STATE");
    SubLSymbol SHOP_CYC_DOMAIN = makeSymbol("SHOP-CYC-DOMAIN");
    SubLSymbol SHOP_MT_WORLD_STATE = makeSymbol("SHOP-MT-WORLD-STATE");
    SubLSymbol SHOP_STATISTIC_MANAGER = makeSymbol("SHOP-STATISTIC-MANAGER");
    SubLSymbol SHOP_UNIFY = makeSymbol("SHOP-UNIFY");
    SubLSymbol SHOP_UNIFY_FAILEDq = makeSymbol("SHOP-UNIFY-FAILED?");
    SubLSymbol SHOP_VARIABLE_MANAGER = makeSymbol("SHOP-VARIABLE-MANAGER");
    SubLSymbol SHORT_DESC = makeSymbol("SHORT-DESC");
    SubLSymbol SHOW_DEBUG_INFO = makeSymbol("SHOW-DEBUG-INFO");
    SubLSymbol SIGNIFICAND = makeSymbol("SIGNIFICAND");
    SubLSymbol $SILENT_PROGRESSq$ = makeSymbol("*SILENT-PROGRESS?*");
    SubLSymbol SIMPLE_FORMULAS = makeSymbol("SIMPLE-FORMULAS");
    SubLSymbol SIMPLE_MBINDING = makeSymbol("SIMPLE-MBINDING");
    SubLSymbol SIMPLE_NOUN = makeSymbol("SIMPLE-NOUN");
    SubLSymbol SIMPLE_NOUN_STRING = makeSymbol("SIMPLE-NOUN-STRING");
    SubLSymbol SINGLETONq = makeSymbol("SINGLETON?");
    SubLSymbol SINGULAR_P = makeSymbol("SINGULAR-P");
    SubLSymbol SISTER = makeSymbol("SISTER");
    SubLSymbol SIZE = makeSymbol("SIZE");
    SubLSymbol SKIP = makeSymbol("SKIP");
    SubLSymbol SKIPq = makeSymbol("SKIP?");
    SubLSymbol SKS = makeSymbol("SKS");
    SubLSymbol SLEEP = makeSymbol("SLEEP");
    SubLSymbol SLICE = makeSymbol("SLICE");
    SubLSymbol SLOT = makeSymbol("SLOT");
    SubLSymbol SLOT_INITIALIZATIONS = makeSymbol("SLOT-INITIALIZATIONS");
    SubLSymbol SLOT_KEY = makeSymbol("SLOT-KEY");
    SubLSymbol SLOT_NAME = makeSymbol("SLOT-NAME");
    SubLSymbol SLOT_NAME_LITERAL = makeSymbol("SLOT-NAME-LITERAL");
    SubLSymbol SLOTS = makeSymbol("SLOTS");
    SubLSymbol SLOT_VALUE = makeSymbol("SLOT-VALUE");
    SubLSymbol SME_LEXIFICATION_WIZARD = makeSymbol("SME-LEXIFICATION-WIZARD");
    SubLSymbol $SME_LEXWIZ_VERBOSEq$ = makeSymbol("*SME-LEXWIZ-VERBOSE?*");
    SubLSymbol SME_STATE = makeSymbol("SME-STATE");
    SubLSymbol SOLUTION = makeSymbol("SOLUTION");
    SubLSymbol SOLUTIONS = makeSymbol("SOLUTIONS");
    SubLSymbol SORT = makeSymbol("SORT");
    SubLSymbol SORT_PREDICATE = makeSymbol("SORT-PREDICATE");
    SubLSymbol SOURCE = makeSymbol("SOURCE");
    SubLSymbol SPAN = makeSymbol("SPAN");
    SubLSymbol SPARSE_SPATIAL_INDEX = makeSymbol("SPARSE-SPATIAL-INDEX");
    SubLSymbol SPARSE_SPATIAL_SLICE = makeSymbol("SPARSE-SPATIAL-SLICE");
    SubLSymbol SPATIAL_ELEMENT = makeSymbol("SPATIAL-ELEMENT");
    SubLSymbol SPATIAL_INDEX = makeSymbol("SPATIAL-INDEX");
    SubLSymbol SPAWN_CONNECTION_FUNCTION = makeSymbol("SPAWN-CONNECTION-FUNCTION");
    SubLSymbol qSPEC = makeSymbol("?SPEC");
    SubLSymbol SPEC = makeSymbol("SPEC");
    SubLSymbol SPECq = makeSymbol("SPEC?");
    SubLSymbol qSPEC_MT = makeSymbol("?SPEC-MT");
    SubLSymbol SPEC_PRED = makeSymbol("SPEC-PRED");
    SubLSymbol SPECS = makeSymbol("SPECS");
    SubLSymbol SPEECH_PART = makeSymbol("SPEECH-PART");
    SubLSymbol SPEECH_PARTq = makeSymbol("SPEECH-PART?");
    SubLSymbol SPEECH_PART_PREDq = makeSymbol("SPEECH-PART-PRED?");
    SubLSymbol SPELLING_CORRECTIONS = makeSymbol("SPELLING-CORRECTIONS");
    SubLSymbol SQLRS_GET_OBJECT = makeSymbol("SQLRS-GET-OBJECT");
    SubLSymbol SRC = makeSymbol("SRC");
    SubLSymbol STACK = makeSymbol("STACK");
    SubLSymbol STACK_POP = makeSymbol("STACK-POP");
    SubLSymbol STACK_PUSH = makeSymbol("STACK-PUSH");
    SubLSymbol $STANDARD_OUTPUT$ = makeSymbol("*STANDARD-OUTPUT*");
    SubLSymbol STANFORD_NER = makeSymbol("STANFORD-NER");
    SubLSymbol STANFORD_NER_LEARN = makeSymbol("STANFORD-NER-LEARN");
    SubLSymbol START = makeSymbol("START");
    SubLSymbol START1 = makeSymbol("START1");
    SubLSymbol START2 = makeSymbol("START2");
    SubLSymbol START_INDEX = makeSymbol("START-INDEX");
    SubLSymbol STARTS_WITH_ONE_OF_BY_TEST = makeSymbol("STARTS-WITH-ONE-OF-BY-TEST");
    SubLSymbol START_TAG = makeSymbol("START-TAG");
    SubLSymbol START_TIME = makeSymbol("START-TIME");
    SubLSymbol STATE = makeSymbol("STATE");
    SubLSymbol STATE_CHANGE_LISTENER = makeSymbol("STATE-CHANGE-LISTENER");
    SubLSymbol STATE_CHANGE_LISTENER_CLASS = makeSymbol("STATE-CHANGE-LISTENER-CLASS");
    SubLSymbol STATE_CHANGE_MESSAGE = makeSymbol("STATE-CHANGE-MESSAGE");
    SubLSymbol STATE_ID_STRING = makeSymbol("STATE-ID-STRING");
    SubLSymbol STATE_SEQUENCE = makeSymbol("STATE-SEQUENCE");
    SubLSymbol STATE_STACK = makeSymbol("STATE-STACK");
    SubLSymbol STATE_UNIFIERS = makeSymbol("STATE-UNIFIERS");
    SubLSymbol STATS_MANAGER = makeSymbol("STATS-MANAGER");
    SubLSymbol STATUS = makeSymbol("STATUS");
    SubLSymbol STATUS_IN_CYC = makeSymbol("STATUS-IN-CYC");
    SubLSymbol STEP = makeSymbol("STEP");
    SubLSymbol STIMULATE = makeSymbol("STIMULATE");
    SubLSymbol STIMULATE_ALL_KNOWLEDGE_SOURCES = makeSymbol("STIMULATE-ALL-KNOWLEDGE-SOURCES");
    SubLSymbol STIMULATE_ALL_MONITORS = makeSymbol("STIMULATE-ALL-MONITORS");
    SubLSymbol STIMULATE_ALL_POSTING_DAEMONS = makeSymbol("STIMULATE-ALL-POSTING-DAEMONS");
    SubLSymbol STIMULATE_MESSAGE = makeSymbol("STIMULATE-MESSAGE");
    SubLSymbol STIMULATION_COND = makeSymbol("STIMULATION-COND");
    SubLSymbol STIMULATION_TYPE = makeSymbol("STIMULATION-TYPE");
    SubLSymbol STOP = makeSymbol("STOP");
    SubLSymbol STOP_WORDS = makeSymbol("STOP-WORDS");
    SubLSymbol STORAGE = makeSymbol("STORAGE");
    SubLSymbol STORAGE_SIZE = makeSymbol("STORAGE-SIZE");
    SubLSymbol STORE = makeSymbol("STORE");
    SubLSymbol STORE_ID_STRING = makeSymbol("STORE-ID-STRING");
    SubLSymbol STR = makeSymbol("STR");
    SubLSymbol STRATEGEM_P = makeSymbol("STRATEGEM-P");
    SubLSymbol STRATEGY = makeSymbol("STRATEGY");
    SubLSymbol STREAM = makeSymbol("STREAM");
    SubLSymbol STREAMP = makeSymbol("STREAMP");
    SubLSymbol STRENGTH = makeSymbol("STRENGTH");
    SubLSymbol qSTRING = makeSymbol("?STRING");
    SubLSymbol STRING = makeSymbol("STRING");
    SubLSymbol STRING1 = makeSymbol("STRING1");
    SubLSymbol STRING2 = makeSymbol("STRING2");
    SubLSymbol STRING_COMPARE = makeSymbol("STRING-COMPARE");
    SubLSymbol STRING_DOWNCASE = makeSymbol("STRING-DOWNCASE");
    SubLSymbol STRING_EQUAL = makeSymbol("STRING-EQUAL");
    SubLSymbol STRINGIFY_GUIDS = makeSymbol("STRINGIFY-GUIDS");
    SubLSymbol STRING_LESSP = makeSymbol("STRING-LESSP");
    SubLSymbol STRINGP = makeSymbol("STRINGP");
    SubLSymbol STRINGS = makeSymbol("STRINGS");
    SubLSymbol qSTRONG = makeSymbol("?STRONG");
    SubLSymbol STYLE = makeSymbol("STYLE");
    SubLSymbol STYLE_ARGS = makeSymbol("STYLE-ARGS");
    SubLSymbol SUBCATEGORIES = makeSymbol("SUBCATEGORIES");
    SubLSymbol SUBCLASSP = makeSymbol("SUBCLASSP");
    SubLSymbol SUBCYCLIFIER_CYCLIFY = makeSymbol("SUBCYCLIFIER-CYCLIFY");
    SubLSymbol SUBCYCLIFIER_POOL = makeSymbol("SUBCYCLIFIER-POOL");
    SubLSymbol SUBDRS = makeSymbol("SUBDRS");
    SubLSymbol SUBFORMULA = makeSymbol("SUBFORMULA");
    SubLSymbol SUBINDEX = makeSymbol("SUBINDEX");
    SubLSymbol SUBJ_CYCLS = makeSymbol("SUBJ-CYCLS");
    SubLSymbol SUBJECT = makeSymbol("SUBJECT");
    SubLSymbol SUBJECT_CONTROLLER_P = makeSymbol("SUBJECT-CONTROLLER-P");
    SubLSymbol SUBJECTS = makeSymbol("SUBJECTS");
    SubLSymbol SUBJ_VP_CYCLS = makeSymbol("SUBJ-VP-CYCLS");
    SubLSymbol qSUB_KS = makeSymbol("?SUB-KS");
    SubLSymbol SUBL = makeSymbol("SUBL");
    SubLSymbol SUBL_DIRECTIVE_TAG = makeSymbol("SUBL-DIRECTIVE-TAG");
    SubLSymbol SUBLIS = makeSymbol("SUBLIS");
    SubLSymbol SUB_LIST = makeSymbol("SUB-LIST");
    SubLSymbol SUBLOOP_PRIVATE_PAIR = makeSymbol("SUBLOOP-PRIVATE-PAIR");
    SubLSymbol SUBLOOP_PRIVATE_PAIR_P = makeSymbol("SUBLOOP-PRIVATE-PAIR-P");
    SubLSymbol SUBLOOP_PROCESS = makeSymbol("SUBLOOP-PROCESS");
    SubLSymbol SUBLOOP_PROCESS_NAME = makeSymbol("SUBLOOP-PROCESS-NAME");
    SubLSymbol SUBPANEL = makeSymbol("SUBPANEL");
    SubLSymbol SUB_PANELS = makeSymbol("SUB-PANELS");
    SubLSymbol SUBPROTOCOL = makeSymbol("SUBPROTOCOL");
    SubLSymbol SUBSET = makeSymbol("SUBSET");
    SubLSymbol SUBSETP = makeSymbol("SUBSETP");
    SubLSymbol SUBST_BINDINGS = makeSymbol("SUBST-BINDINGS");
    SubLSymbol SUBSTITUTE = makeSymbol("SUBSTITUTE");
    SubLSymbol SUBSTRING = makeSymbol("SUBSTRING");
    SubLSymbol SUBSTRINGq = makeSymbol("SUBSTRING?");
    SubLSymbol SUBTREE = makeSymbol("SUBTREE");
    SubLSymbol SUBTYPE = makeSymbol("SUBTYPE");
    SubLSymbol SUBTYPE_P = makeSymbol("SUBTYPE-P");
    SubLSymbol SUBTYPE_RELATION_TREE = makeSymbol("SUBTYPE-RELATION-TREE");
    SubLSymbol SUBTYPES = makeSymbol("SUBTYPES");
    SubLSymbol SUCCESS = makeSymbol("SUCCESS");
    SubLSymbol SUCCESSq = makeSymbol("SUCCESS?");
    SubLSymbol SUFFICIENCIES = makeSymbol("SUFFICIENCIES");
    SubLSymbol SUFFIX = makeSymbol("SUFFIX");
    SubLSymbol SUID = makeSymbol("SUID");
    SubLSymbol SUITES = makeSymbol("SUITES");
    SubLSymbol SUPER = makeSymbol("SUPER");
    SubLSymbol SUPERCATEGORIES = makeSymbol("SUPERCATEGORIES");
    SubLSymbol SUPER_CLASS = makeSymbol("SUPER-CLASS");
    SubLSymbol SUPER_DRS = makeSymbol("SUPER-DRS");
    SubLSymbol SUPERIOR = makeSymbol("SUPERIOR");
    SubLSymbol SUPER_KSI_NAME = makeSymbol("SUPER-KSI-NAME");
    SubLSymbol SUPER_KS_NAME = makeSymbol("SUPER-KS-NAME");
    SubLSymbol SUPERPANEL = makeSymbol("SUPERPANEL");
    SubLSymbol SUPER_PANELS = makeSymbol("SUPER-PANELS");
    SubLSymbol SUPERTYPE = makeSymbol("SUPERTYPE");
    SubLSymbol SUPERTYPES = makeSymbol("SUPERTYPES");
    SubLSymbol SUPPORT = makeSymbol("SUPPORT");
    SubLSymbol SUPPORT_MT = makeSymbol("SUPPORT-MT");
    SubLSymbol SUPPORT_P = makeSymbol("SUPPORT-P");
    SubLSymbol SUPPORTS = makeSymbol("SUPPORTS");
    SubLSymbol SUPPORT_SENTENCE = makeSymbol("SUPPORT-SENTENCE");
    SubLSymbol SUPPORT_TYPE = makeSymbol("SUPPORT-TYPE");
    SubLSymbol qSURGICAL_PROCEDURE = makeSymbol("?SURGICAL-PROCEDURE");
    SubLSymbol qSURG_PROC = makeSymbol("?SURG-PROC");
    SubLSymbol SUSPENDED_PROPOSALS = makeSymbol("SUSPENDED-PROPOSALS");
    SubLSymbol SWAP = makeSymbol("SWAP");
    SubLSymbol SYMBOL = makeSymbol("SYMBOL");
    SubLSymbol SYMBOL_FUNCTION = makeSymbol("SYMBOL-FUNCTION");
    SubLSymbol SYMBOLIC_CLASS_NAME = makeSymbol("SYMBOLIC-CLASS-NAME");
    SubLSymbol SYMBOLIC_EXPRESSIONS = makeSymbol("SYMBOLIC-EXPRESSIONS");
    SubLSymbol SYMBOLIC_REP = makeSymbol("SYMBOLIC-REP");
    SubLSymbol SYMBOL_NAME = makeSymbol("SYMBOL-NAME");
    SubLSymbol SYMBOLP = makeSymbol("SYMBOLP");
    SubLSymbol qSYMPTOM = makeSymbol("?SYMPTOM");
    SubLSymbol SYNSET = makeSymbol("SYNSET");
    SubLSymbol SYNSETS = makeSymbol("SYNSETS");
    SubLSymbol SYSTEM = makeSymbol("SYSTEM");
    SubLSymbol TAB = makeSymbol("TAB");
    SubLSymbol TABLE = makeSymbol("TABLE");
    SubLSymbol TACTIC = makeSymbol("TACTIC");
    SubLSymbol TACTIC_P = makeSymbol("TACTIC-P");
    SubLSymbol TAG = makeSymbol("TAG");
    SubLSymbol TAGGER = makeSymbol("TAGGER");
    SubLSymbol TARGET = makeSymbol("TARGET");
    SubLSymbol TARGET_BINDING = makeSymbol("TARGET-BINDING");
    SubLSymbol TARGET_INSTANCE = makeSymbol("TARGET-INSTANCE");
    SubLSymbol TARGET_METHOD = makeSymbol("TARGET-METHOD");
    SubLSymbol TARGET_MT = makeSymbol("TARGET-MT");
    SubLSymbol TARGET_PANEL = makeSymbol("TARGET-PANEL");
    SubLSymbol qTARGET_POSTING = makeSymbol("?TARGET-POSTING");
    SubLSymbol TARGET_POSTING = makeSymbol("TARGET-POSTING");
    SubLSymbol TARGET_SLOT = makeSymbol("TARGET-SLOT");
    SubLSymbol TARGET_TERM = makeSymbol("TARGET-TERM");
    SubLSymbol TARGET_TYPE = makeSymbol("TARGET-TYPE");
    SubLSymbol TARGET_VAR = makeSymbol("TARGET-VAR");
    SubLSymbol TASK = makeSymbol("TASK");
    SubLSymbol TASK_LIST = makeSymbol("TASK-LIST");
    SubLSymbol TASKLIST = makeSymbol("TASKLIST");
    SubLSymbol TASK_MT = makeSymbol("TASK-MT");
    SubLSymbol TASKS = makeSymbol("TASKS");
    SubLSymbol TASK_STRUC = makeSymbol("TASK-STRUC");
    SubLSymbol TASK_STRUCS = makeSymbol("TASK-STRUCS");
    SubLSymbol TASK_UNIFIER = makeSymbol("TASK-UNIFIER");
    SubLSymbol qTEMPLATE = makeSymbol("?TEMPLATE");
    SubLSymbol TEMPLATE = makeSymbol("TEMPLATE");
    SubLSymbol TEMPLATE_ACTIVATE_PROPOSALS = makeSymbol("TEMPLATE-ACTIVATE-PROPOSALS");
    SubLSymbol TEMPLATE_ACTIVE_PROPOSALS = makeSymbol("TEMPLATE-ACTIVE-PROPOSALS");
    SubLSymbol TEMPLATE_AFTER_LINK = makeSymbol("TEMPLATE-AFTER-LINK");
    SubLSymbol TEMPLATE_AGENDA = makeSymbol("TEMPLATE-AGENDA");
    SubLSymbol TEMPLATE_ALL_ACTIVE_POSTINGS = makeSymbol("TEMPLATE-ALL-ACTIVE-POSTINGS");
    SubLSymbol TEMPLATE_ALL_KNOWLEDGE_SOURCES = makeSymbol("TEMPLATE-ALL-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_ALL_POSTINGS = makeSymbol("TEMPLATE-ALL-POSTINGS");
    SubLSymbol TEMPLATE_APPLICATION = makeSymbol("TEMPLATE-APPLICATION");
    SubLSymbol TEMPLATE_BAG_LIST = makeSymbol("TEMPLATE-BAG-LIST");
    SubLSymbol TEMPLATE_BASE_PANEL = makeSymbol("TEMPLATE-BASE-PANEL");
    SubLSymbol TEMPLATE_BEFORE_LINK = makeSymbol("TEMPLATE-BEFORE-LINK");
    SubLSymbol TEMPLATE_BINDING = makeSymbol("TEMPLATE-BINDING");
    SubLSymbol TEMPLATE_BLACKBOARD = makeSymbol("TEMPLATE-BLACKBOARD");
    SubLSymbol TEMPLATE_COLLECTIONS = makeSymbol("TEMPLATE-COLLECTIONS");
    SubLSymbol TEMPLATE_CONTENT = makeSymbol("TEMPLATE-CONTENT");
    SubLSymbol TEMPLATE_CONTENTS = makeSymbol("TEMPLATE-CONTENTS");
    SubLSymbol TEMPLATE_CONTENTS_POINTER = makeSymbol("TEMPLATE-CONTENTS-POINTER");
    SubLSymbol TEMPLATE_CONTENTS_SUBLIST = makeSymbol("TEMPLATE-CONTENTS-SUBLIST");
    SubLSymbol TEMPLATE_COUNT = makeSymbol("TEMPLATE-COUNT");
    SubLSymbol TEMPLATE_CURRENT_CONS = makeSymbol("TEMPLATE-CURRENT-CONS");
    SubLSymbol TEMPLATE_CURRENT_ELEMENT = makeSymbol("TEMPLATE-CURRENT-ELEMENT");
    SubLSymbol TEMPLATE_CURRENT_ITEM = makeSymbol("TEMPLATE-CURRENT-ITEM");
    SubLSymbol TEMPLATE_CURRENT_LINK = makeSymbol("TEMPLATE-CURRENT-LINK");
    SubLSymbol TEMPLATE_CURRENT_PANEL = makeSymbol("TEMPLATE-CURRENT-PANEL");
    SubLSymbol TEMPLATE_DAEMON = makeSymbol("TEMPLATE-DAEMON");
    SubLSymbol TEMPLATE_DATATYPE = makeSymbol("TEMPLATE-DATATYPE");
    SubLSymbol TEMPLATE_DATATYPE_DICTIONARY = makeSymbol("TEMPLATE-DATATYPE-DICTIONARY");
    SubLSymbol TEMPLATE_DATATYPES = makeSymbol("TEMPLATE-DATATYPES");
    SubLSymbol TEMPLATE_DEFAULT_VALUE = makeSymbol("TEMPLATE-DEFAULT-VALUE");
    SubLSymbol TEMPLATE_DICTIONARY = makeSymbol("TEMPLATE-DICTIONARY");
    SubLSymbol TEMPLATE_DIRECT_KNOWLEDGE_SOURCES = makeSymbol("TEMPLATE-DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_ELEMENT = makeSymbol("TEMPLATE-ELEMENT");
    SubLSymbol TEMPLATE_END_POINTER = makeSymbol("TEMPLATE-END-POINTER");
    SubLSymbol TEMPLATE_ENUMERATOR = makeSymbol("TEMPLATE-ENUMERATOR");
    SubLSymbol TEMPLATE_FIRST_LINK = makeSymbol("TEMPLATE-FIRST-LINK");
    SubLSymbol TEMPLATE_INDEX = makeSymbol("TEMPLATE-INDEX");
    SubLSymbol TEMPLATE_INSTANCE = makeSymbol("TEMPLATE-INSTANCE");
    SubLSymbol TEMPLATE_INTERNAL_STORAGE = makeSymbol("TEMPLATE-INTERNAL-STORAGE");
    SubLSymbol TEMPLATE_KNOWLEDGE_SOURCE = makeSymbol("TEMPLATE-KNOWLEDGE-SOURCE");
    SubLSymbol TEMPLATE_KNOWLEDGE_SOURCES = makeSymbol("TEMPLATE-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_KS = makeSymbol("TEMPLATE-KS");
    SubLSymbol TEMPLATE_KSB = makeSymbol("TEMPLATE-KSB");
    SubLSymbol TEMPLATE_LAST_LINK = makeSymbol("TEMPLATE-LAST-LINK");
    SubLSymbol TEMPLATE_LENGTH = makeSymbol("TEMPLATE-LENGTH");
    SubLSymbol TEMPLATE_LINK = makeSymbol("TEMPLATE-LINK");
    SubLSymbol TEMPLATE_LINKS = makeSymbol("TEMPLATE-LINKS");
    SubLSymbol TEMPLATE_LIST = makeSymbol("TEMPLATE-LIST");
    SubLSymbol TEMPLATE_LOCK = makeSymbol("TEMPLATE-LOCK");
    SubLSymbol TEMPLATE_MATCHES = makeSymbol("TEMPLATE-MATCHES");
    SubLSymbol TEMPLATE_MONITORS = makeSymbol("TEMPLATE-MONITORS");
    SubLSymbol TEMPLATE_NEW_KNOWLEDGE_SOURCES = makeSymbol("TEMPLATE-NEW-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_NEW_LINK = makeSymbol("TEMPLATE-NEW-LINK");
    SubLSymbol TEMPLATE_NEW_STORAGE = makeSymbol("TEMPLATE-NEW-STORAGE");
    SubLSymbol TEMPLATE_NEXT = makeSymbol("TEMPLATE-NEXT");
    SubLSymbol TEMPLATE_NEXT_LINK = makeSymbol("TEMPLATE-NEXT-LINK");
    SubLSymbol TEMPLATE_NOT_FINISHED = makeSymbol("TEMPLATE-NOT-FINISHED");
    SubLSymbol TEMPLATE_ORD = makeSymbol("TEMPLATE-ORD");
    SubLSymbol TEMPLATE_PANEL = makeSymbol("TEMPLATE-PANEL");
    SubLSymbol TEMPLATE_PANEL_QUEUE = makeSymbol("TEMPLATE-PANEL-QUEUE");
    SubLSymbol TEMPLATE_PANELS = makeSymbol("TEMPLATE-PANELS");
    SubLSymbol TEMPLATE_PANEL_TYPE = makeSymbol("TEMPLATE-PANEL-TYPE");
    SubLSymbol TEMPLATE_PARENT_LINK = makeSymbol("TEMPLATE-PARENT-LINK");
    SubLSymbol TEMPLATE_PARENT_LINKS = makeSymbol("TEMPLATE-PARENT-LINKS");
    SubLSymbol TEMPLATE_PARSER = makeSymbol("TEMPLATE-PARSER");
    SubLSymbol TEMPLATE_POSTING = makeSymbol("TEMPLATE-POSTING");
    SubLSymbol TEMPLATE_POSTING_DAEMONS = makeSymbol("TEMPLATE-POSTING-DAEMONS");
    SubLSymbol TEMPLATE_PREVIOUS = makeSymbol("TEMPLATE-PREVIOUS");
    SubLSymbol TEMPLATE_PREVIOUS_CONS = makeSymbol("TEMPLATE-PREVIOUS-CONS");
    SubLSymbol TEMPLATE_PRIORITIZER = makeSymbol("TEMPLATE-PRIORITIZER");
    SubLSymbol TEMPLATE_QUEUE = makeSymbol("TEMPLATE-QUEUE");
    SubLSymbol TEMPLATE_RESOLVED_LIST = makeSymbol("TEMPLATE-RESOLVED-LIST");
    SubLSymbol TEMPLATE_RESULT = makeSymbol("TEMPLATE-RESULT");
    SubLSymbol TEMPLATE_RESULTS = makeSymbol("TEMPLATE-RESULTS");
    SubLSymbol TEMPLATE_SECOND_LINK = makeSymbol("TEMPLATE-SECOND-LINK");
    SubLSymbol TEMPLATE_STORAGE = makeSymbol("TEMPLATE-STORAGE");
    SubLSymbol TEMPLATE_SUBLINKS = makeSymbol("TEMPLATE-SUBLINKS");
    SubLSymbol TEMPLATE_SUBLIST = makeSymbol("TEMPLATE-SUBLIST");
    SubLSymbol TEMPLATE_SUPER_PANELS = makeSymbol("TEMPLATE-SUPER-PANELS");
    SubLSymbol TEMPLATE_SUSPENDED_PROPOSALS = makeSymbol("TEMPLATE-SUSPENDED-PROPOSALS");
    SubLSymbol TEMPLATE_TARGET_LINK = makeSymbol("TEMPLATE-TARGET-LINK");
    SubLSymbol TEMPLATE_THE_POSTING = makeSymbol("TEMPLATE-THE-POSTING");
    SubLSymbol TEMPLATE_TYPES_BAG = makeSymbol("TEMPLATE-TYPES-BAG");
    SubLSymbol TEMPLATE_UNLINKED_KNOWLEDGE_SOURCES = makeSymbol("TEMPLATE-UNLINKED-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_VISITED_PANEL = makeSymbol("TEMPLATE-VISITED-PANEL");
    SubLSymbol TEMPLATE_VISITED_PANELS = makeSymbol("TEMPLATE-VISITED-PANELS");
    SubLSymbol TEMPLATE_VISITOR = makeSymbol("TEMPLATE-VISITOR");
    SubLSymbol TEMPORAL_THING = makeSymbol("TEMPORAL-THING");
    SubLSymbol TEMPORAL_THING1 = makeSymbol("TEMPORAL-THING1");
    SubLSymbol TEMPORAL_THING2 = makeSymbol("TEMPORAL-THING2");
    SubLSymbol TEMPORAL_TREE_P = makeSymbol("TEMPORAL-TREE-P");
    SubLSymbol qTERM = makeSymbol("?TERM");
    SubLSymbol TERM = makeSymbol("TERM");
    SubLSymbol TERM1 = makeSymbol("TERM1");
    SubLSymbol TERM2 = makeSymbol("TERM2");
    SubLSymbol TERM_DESC = makeSymbol("TERM-DESC");
    SubLSymbol TERMINATE = makeSymbol("TERMINATE");
    SubLSymbol TERM_LABEL = makeSymbol("TERM-LABEL");
    SubLSymbol TERM_LEXICON = makeSymbol("TERM-LEXICON");
    SubLSymbol TERMS = makeSymbol("TERMS");
    SubLSymbol TERN_PRED = makeSymbol("TERN-PRED");
    SubLSymbol TERPRI = makeSymbol("TERPRI");
    SubLSymbol TEST = makeSymbol("TEST");
    SubLSymbol TEST1 = makeSymbol("TEST1");
    SubLSymbol TEST2 = makeSymbol("TEST2");
    SubLSymbol TEST3 = makeSymbol("TEST3");
    SubLSymbol TEST4 = makeSymbol("TEST4");
    SubLSymbol TEST5 = makeSymbol("TEST5");
    SubLSymbol TEST6 = makeSymbol("TEST6");
    SubLSymbol TEST_CASE = makeSymbol("TEST-CASE");
    SubLSymbol TEST_CASES = makeSymbol("TEST-CASES");
    SubLSymbol TEST_METHOD = makeSymbol("TEST-METHOD");
    SubLSymbol TEST_METHODS = makeSymbol("TEST-METHODS");
    SubLSymbol TEST_SUITE_P = makeSymbol("TEST-SUITE-P");
    SubLSymbol qTEXT = makeSymbol("?TEXT");
    SubLSymbol TEXT = makeSymbol("TEXT");
    SubLSymbol TEXT_LINES = makeSymbol("TEXT-LINES");
    SubLSymbol TEXTRACT_LEMMA_STRING = makeSymbol("TEXTRACT-LEMMA-STRING");
    SubLSymbol THE = makeSymbol("THE");
    SubLSymbol $THE_CYCLIST$ = makeSymbol("*THE-CYCLIST*");
    SubLSymbol qTHE_POSTING = makeSymbol("?THE-POSTING");
    SubLSymbol THE_POSTING = makeSymbol("THE-POSTING");
    SubLSymbol THESAURUS = makeSymbol("THESAURUS");
    SubLSymbol THESAURUS_NAME = makeSymbol("THESAURUS-NAME");
    SubLSymbol qTHING = makeSymbol("?THING");
    SubLSymbol THIRD = makeSymbol("THIRD");
    SubLSymbol THIRD_ELEMENT = makeSymbol("THIRD-ELEMENT");
    SubLSymbol THIS_AND_MODS = makeSymbol("THIS-AND-MODS");
    SubLSymbol THREAD = makeSymbol("THREAD");
    SubLSymbol THRESHOLD1 = makeSymbol("THRESHOLD1");
    SubLSymbol THRESHOLD2 = makeSymbol("THRESHOLD2");
    SubLSymbol TID = makeSymbol("TID");
    SubLSymbol qTIME = makeSymbol("?TIME");
    SubLSymbol TIME = makeSymbol("TIME");
    SubLSymbol TIME_CUTOFF = makeSymbol("TIME-CUTOFF");
    SubLSymbol TIMEOUT = makeSymbol("TIMEOUT");
    SubLSymbol TIMEOUTq = makeSymbol("TIMEOUT?");
    SubLSymbol TIMESTAMP = makeSymbol("TIMESTAMP");
    SubLSymbol TIMINGq = makeSymbol("TIMING?");
    SubLSymbol TIP = makeSymbol("TIP");
    SubLSymbol qTITLE = makeSymbol("?TITLE");
    SubLSymbol TITLE = makeSymbol("TITLE");
    SubLSymbol TO = makeSymbol("TO");
    SubLSymbol TOKEN = makeSymbol("TOKEN");
    SubLSymbol TOKEN_CLASSIFIER = makeSymbol("TOKEN-CLASSIFIER");
    SubLSymbol TOKEN_READER = makeSymbol("TOKEN-READER");
    SubLSymbol TOKENS = makeSymbol("TOKENS");
    SubLSymbol TO_LIST = makeSymbol("TO-LIST");
    SubLSymbol TO_NODE = makeSymbol("TO-NODE");
    SubLSymbol TOOL = makeSymbol("TOOL");
    SubLSymbol qTOPIC = makeSymbol("?TOPIC");
    SubLSymbol TOPIC = makeSymbol("TOPIC");
    SubLSymbol TO_REVERSED_LIST = makeSymbol("TO-REVERSED-LIST");
    SubLSymbol TO_STRING = makeSymbol("TO-STRING");
    SubLSymbol TOTAL = makeSymbol("TOTAL");
    SubLSymbol TOTAL_COUNT = makeSymbol("TOTAL-COUNT");
    SubLSymbol TOTAL_COUNT_AS_WHOLE_NOUN = makeSymbol("TOTAL-COUNT-AS-WHOLE-NOUN");
    SubLSymbol TOTAL_NUM = makeSymbol("TOTAL-NUM");
    SubLSymbol TP_ENTRY = makeSymbol("TP-ENTRY");
    SubLSymbol TRACE_BASIC_METHODS = makeSymbol("TRACE-BASIC-METHODS");
    SubLSymbol TRACE_INTERFACE_METHOD = makeSymbol("TRACE-INTERFACE-METHOD");
    SubLSymbol TRACE_P = makeSymbol("TRACE-P");
    SubLSymbol TRANSACTION_ID = makeSymbol("TRANSACTION-ID");
    SubLSymbol TRANSFER_QUEUE = makeSymbol("TRANSFER-QUEUE");
    SubLSymbol TRANSFER_SELF = makeSymbol("TRANSFER-SELF");
    SubLSymbol TRANSMIT = makeSymbol("TRANSMIT");
    SubLSymbol TRANSMIT_STATE_CHANGE = makeSymbol("TRANSMIT-STATE-CHANGE");
    SubLSymbol TRANSMIT_STATE_CHANGE_INTERNAL = makeSymbol("TRANSMIT-STATE-CHANGE-INTERNAL");
    SubLSymbol TRANS_PRED = makeSymbol("TRANS-PRED");
    SubLSymbol TREE = makeSymbol("TREE");
    SubLSymbol TREE_KEYWORD_EQ_CLASSES = makeSymbol("TREE-KEYWORD-EQ-CLASSES");
    SubLSymbol TRIE = makeSymbol("TRIE");
    SubLSymbol TRIE_ENTRY = makeSymbol("TRIE-ENTRY");
    SubLSymbol TRIGGER_VALUE_LOWER_BOUND = makeSymbol("TRIGGER-VALUE-LOWER-BOUND");
    SubLSymbol TRIGGER_VALUE_UPPER_BOUND = makeSymbol("TRIGGER-VALUE-UPPER-BOUND");
    SubLSymbol TRUE = makeSymbol("TRUE");
    SubLSymbol TRUTH = makeSymbol("TRUTH");
    SubLSymbol TRUTH_P = makeSymbol("TRUTH-P");
    SubLSymbol TV = makeSymbol("TV");
    SubLSymbol TV_VAR = makeSymbol("TV-VAR");
    SubLSymbol qTYPE = makeSymbol("?TYPE");
    SubLSymbol TYPE = makeSymbol("TYPE");
    SubLSymbol TYPE_DECLARATIONS = makeSymbol("TYPE-DECLARATIONS");
    SubLSymbol TYPE_EXPRESSION = makeSymbol("TYPE-EXPRESSION");
    SubLSymbol TYPE_GRAPH_DECLS = makeSymbol("TYPE-GRAPH-DECLS");
    SubLSymbol TYPE_GRAPH_EXPRESSION = makeSymbol("TYPE-GRAPH-EXPRESSION");
    SubLSymbol TYPENAME = makeSymbol("TYPENAME");
    SubLSymbol TYPE_NAME_STRING = makeSymbol("TYPE-NAME-STRING");
    SubLSymbol qTYPE_OF_THING = makeSymbol("?TYPE-OF-THING");
    SubLSymbol TYPES = makeSymbol("TYPES");
    SubLSymbol TYPE_STRING = makeSymbol("TYPE-STRING");
    SubLSymbol TYPE_STRINGS = makeSymbol("TYPE-STRINGS");
    SubLSymbol TYPE_TO_PANEL_CLASS_MAP = makeSymbol("TYPE-TO-PANEL-CLASS-MAP");
    SubLSymbol TYPE_TO_PANEL_CLASS_MAP_DECLS = makeSymbol("TYPE-TO-PANEL-CLASS-MAP-DECLS");
    SubLSymbol TYPE_TO_POSTING_CLASS_MAP = makeSymbol("TYPE-TO-POSTING-CLASS-MAP");
    SubLSymbol TYPICAL = makeSymbol("TYPICAL");
    SubLSymbol TYPICAL_INSTANCE = makeSymbol("TYPICAL-INSTANCE");
    SubLSymbol TYPICALITY_SUM_BY_COLLECTION = makeSymbol("TYPICALITY-SUM-BY-COLLECTION");
    SubLSymbol U = makeSymbol("U");
    SubLSymbol UI_AGENDA = makeSymbol("UI-AGENDA");
    SubLSymbol UI_ID = makeSymbol("UI-ID");
    SubLSymbol UNBOUND_BINDINGS = makeSymbol("UNBOUND-BINDINGS");
    SubLSymbol UNCOMPILED_PRECONDITION_PATTERN = makeSymbol("UNCOMPILED-PRECONDITION-PATTERN");
    SubLSymbol UNIFICATION_ROBOT = makeSymbol("UNIFICATION-ROBOT");
    SubLSymbol UNIFICATION_ROBOT_CLASS = makeSymbol("UNIFICATION-ROBOT-CLASS");
    SubLSymbol UNIFICATION_TYPES = makeSymbol("UNIFICATION-TYPES");
    SubLSymbol UNIFIER = makeSymbol("UNIFIER");
    SubLSymbol UNIFY = makeSymbol("UNIFY");
    SubLSymbol UNINSTALL = makeSymbol("UNINSTALL");
    SubLSymbol UNION = makeSymbol("UNION");
    SubLSymbol UNIQUE_BINDINGS = makeSymbol("UNIQUE-BINDINGS");
    SubLSymbol UNIQUE_DATATYPES = makeSymbol("UNIQUE-DATATYPES");
    SubLSymbol UNIQUE_ELEMENTS = makeSymbol("UNIQUE-ELEMENTS");
    SubLSymbol UNIQUE_LOCAL_BINDINGS = makeSymbol("UNIQUE-LOCAL-BINDINGS");
    SubLSymbol UNIT = makeSymbol("UNIT");
    SubLSymbol UNIVERSAL_DATE = makeSymbol("UNIVERSAL-DATE");
    SubLSymbol UNIVERSAL_DATE_P = makeSymbol("UNIVERSAL-DATE-P");
    SubLSymbol UNIVERSAL_SECOND_P = makeSymbol("UNIVERSAL-SECOND-P");
    SubLSymbol UNIVERSAL_TIME = makeSymbol("UNIVERSAL-TIME");
    SubLSymbol UNIVERSAL_TIME_P = makeSymbol("UNIVERSAL-TIME-P");
    SubLSymbol UNLESS_CYBLACK_TYPE_CHECKING_ON = makeSymbol("UNLESS-CYBLACK-TYPE-CHECKING-ON");
    SubLSymbol UNMONITOR = makeSymbol("UNMONITOR");
    SubLSymbol UNTIL = makeSymbol("UNTIL");
    SubLSymbol UPDATE = makeSymbol("UPDATE");
    SubLSymbol UPPER_CASE_P = makeSymbol("UPPER-CASE-P");
    SubLSymbol URL = makeSymbol("URL");
    SubLSymbol USAGE = makeSymbol("USAGE");
    SubLSymbol USER = makeSymbol("USER");
    SubLSymbol USER_INTERACTION_P = makeSymbol("USER-INTERACTION-P");
    SubLSymbol USER_ON_SHUTDOWN = makeSymbol("USER-ON-SHUTDOWN");
    SubLSymbol USER_ON_STARTUP = makeSymbol("USER-ON-STARTUP");
    SubLSymbol USER_PROFILE_MT = makeSymbol("USER-PROFILE-MT");
    SubLSymbol UTTERANCE_PEG = makeSymbol("UTTERANCE-PEG");
    SubLSymbol qV = makeSymbol("?V");
    SubLSymbol V = makeSymbol("V");
    SubLSymbol VAL = makeSymbol("VAL");
    SubLSymbol VALID = makeSymbol("VALID");
    SubLSymbol VALID_ASSERTION = makeSymbol("VALID-ASSERTION");
    SubLSymbol VALID_CONSTANTq = makeSymbol("VALID-CONSTANT?");
    SubLSymbol VALID_CONSTANT_NAME_CHAR_P = makeSymbol("VALID-CONSTANT-NAME-CHAR-P");
    SubLSymbol VALID_CONSTANT_NAME_P = makeSymbol("VALID-CONSTANT-NAME-P");
    SubLSymbol VALID_EXTERNAL_PPH_NL_PREDSq = makeSymbol("VALID-EXTERNAL-PPH-NL-PREDS?");
    SubLSymbol VALID_FORTq = makeSymbol("VALID-FORT?");
    SubLSymbol VALID_HASH_TEST_P = makeSymbol("VALID-HASH-TEST-P");
    SubLSymbol VALID_P = makeSymbol("VALID-P");
    SubLSymbol VALID_PPH_DEMERIT_CUTOFF_P = makeSymbol("VALID-PPH-DEMERIT-CUTOFF-P");
    SubLSymbol VAL_STACK = makeSymbol("VAL-STACK");
    SubLSymbol VAL_TEST = makeSymbol("VAL-TEST");
    SubLSymbol qVALUE = makeSymbol("?VALUE");
    SubLSymbol VALUE = makeSymbol("VALUE");
    SubLSymbol VALUE1 = makeSymbol("VALUE1");
    SubLSymbol VALUE2 = makeSymbol("VALUE2");
    SubLSymbol VALUE_EXPRESSION_LIST = makeSymbol("VALUE-EXPRESSION-LIST");
    SubLSymbol VALUES = makeSymbol("VALUES");
    SubLSymbol VALUE_TEST = makeSymbol("VALUE-TEST");
    SubLSymbol qVALVE_PROSTHESIS = makeSymbol("?VALVE-PROSTHESIS");
    SubLSymbol qVAR = makeSymbol("?VAR");
    SubLSymbol VAR = makeSymbol("VAR");
    SubLSymbol qVAR0 = makeSymbol("?VAR0");
    SubLSymbol qVAR1 = makeSymbol("?VAR1");
    SubLSymbol VAR1 = makeSymbol("VAR1");
    SubLSymbol qVAR10 = makeSymbol("?VAR10");
    SubLSymbol qVAR2 = makeSymbol("?VAR2");
    SubLSymbol qVAR3 = makeSymbol("?VAR3");
    SubLSymbol qVAR4 = makeSymbol("?VAR4");
    SubLSymbol qVAR5 = makeSymbol("?VAR5");
    SubLSymbol qVAR6 = makeSymbol("?VAR6");
    SubLSymbol qVAR7 = makeSymbol("?VAR7");
    SubLSymbol qVAR8 = makeSymbol("?VAR8");
    SubLSymbol qVAR9 = makeSymbol("?VAR9");
    SubLSymbol VARIABLE = makeSymbol("VARIABLE");
    SubLSymbol VARIABLE_MANAGER = makeSymbol("VARIABLE-MANAGER");
    SubLSymbol VARIABLE_MAP = makeSymbol("VARIABLE-MAP");
    SubLSymbol VARIABLE_NAME = makeSymbol("VARIABLE-NAME");
    SubLSymbol VARIABLE_P = makeSymbol("VARIABLE-P");
    SubLSymbol VARIABLE_REFERENCE = makeSymbol("VARIABLE-REFERENCE");
    SubLSymbol VARIABLES = makeSymbol("VARIABLES");
    SubLSymbol VARIANTS = makeSymbol("VARIANTS");
    SubLSymbol VAR_MANAGER = makeSymbol("VAR-MANAGER");
    SubLSymbol VARS = makeSymbol("VARS");
    SubLSymbol VECTOR = makeSymbol("VECTOR");
    SubLSymbol VECTORP = makeSymbol("VECTORP");
    SubLSymbol VERB = makeSymbol("VERB");
    SubLSymbol VERBAL_COMPLEMENT = makeSymbol("VERBAL-COMPLEMENT");
    SubLSymbol VERBAL_PHRASE_TREE_P = makeSymbol("VERBAL-PHRASE-TREE-P");
    SubLSymbol VERBAL_TREE_P = makeSymbol("VERBAL-TREE-P");
    SubLSymbol VERBAL_WORD_P = makeSymbol("VERBAL-WORD-P");
    SubLSymbol VERB_LINK_WORD = makeSymbol("VERB-LINK-WORD");
    SubLSymbol VERB_LINK_WORD_P = makeSymbol("VERB-LINK-WORD-P");
    SubLSymbol VERBOSE = makeSymbol("VERBOSE");
    SubLSymbol VERBOSITY = makeSymbol("VERBOSITY");
    SubLSymbol VERB_WITH_SUFFIX = makeSymbol("VERB-WITH-SUFFIX");
    SubLSymbol VERIFIED = makeSymbol("VERIFIED");
    SubLSymbol VERIFY_MESSAGE = makeSymbol("VERIFY-MESSAGE");
    SubLSymbol VERSION = makeSymbol("VERSION");
    SubLSymbol VIA = makeSymbol("VIA");
    SubLSymbol VISIT = makeSymbol("VISIT");
    SubLSymbol VP = makeSymbol("VP");
    SubLSymbol VP_COORDINATE_PHRASE_P = makeSymbol("VP-COORDINATE-PHRASE-P");
    SubLSymbol VP_CYCLS = makeSymbol("VP-CYCLS");
    SubLSymbol qW = makeSymbol("?W");
    SubLSymbol WAITING_ON_LINK_CALLBACK = makeSymbol("WAITING-ON-LINK-CALLBACK");
    SubLSymbol WARN = makeSymbol("WARN");
    SubLSymbol WARNING = makeSymbol("WARNING");
    SubLSymbol WEIGHT = makeSymbol("WEIGHT");
    SubLSymbol WEIGHT_SUMMANDS_BY_SELECTIVENESSq = makeSymbol("WEIGHT-SUMMANDS-BY-SELECTIVENESS?");
    SubLSymbol WFF_CHECKq = makeSymbol("WFF-CHECK?");
    SubLSymbol qWHAT = makeSymbol("?WHAT");
    SubLSymbol WHEN = makeSymbol("WHEN");
    SubLSymbol WHEN_CYBLACK_TYPE_CHECKING_ON = makeSymbol("WHEN-CYBLACK-TYPE-CHECKING-ON");
    SubLSymbol WHEN_VERBOSE = makeSymbol("WHEN-VERBOSE");
    SubLSymbol qWHERE = makeSymbol("?WHERE");
    SubLSymbol WHERE = makeSymbol("WHERE");
    SubLSymbol WHICH_PLANS = makeSymbol("WHICH-PLANS");
    SubLSymbol WHILE = makeSymbol("WHILE");
    SubLSymbol WHITESPACEP = makeSymbol("WHITESPACEP");
    SubLSymbol qWHO = makeSymbol("?WHO");
    SubLSymbol WHOLE = makeSymbol("WHOLE");
    SubLSymbol WHOLE_NOUN_STRING = makeSymbol("WHOLE-NOUN-STRING");
    SubLSymbol qWHOLE_TYPE = makeSymbol("?WHOLE-TYPE");
    SubLSymbol WH_QUESTION = makeSymbol("WH-QUESTION");
    SubLSymbol WH_TREE_P = makeSymbol("WH-TREE-P");
    SubLSymbol WIDTH = makeSymbol("WIDTH");
    SubLSymbol WITH_ALL_MTS = makeSymbol("WITH-ALL-MTS");
    SubLSymbol WITH_CLASS = makeSymbol("WITH-CLASS");
    SubLSymbol WITH_INFERENCE_MT_RELEVANCE = makeSymbol("WITH-INFERENCE-MT-RELEVANCE");
    SubLSymbol WITH_LOCK_HELD = makeSymbol("WITH-LOCK-HELD");
    SubLSymbol WITH_MEMOIZATION_STATE = makeSymbol("WITH-MEMOIZATION-STATE");
    SubLSymbol WITH_MT = makeSymbol("WITH-MT");
    SubLSymbol WITH_MT_LIST = makeSymbol("WITH-MT-LIST");
    SubLSymbol WITHOUT_DUPLICATE_CYCLIFICATION = makeSymbol("WITHOUT-DUPLICATE-CYCLIFICATION");
    SubLSymbol WITHOUT_RECURSIVE_CYCLIFICATION = makeSymbol("WITHOUT-RECURSIVE-CYCLIFICATION");
    SubLSymbol WITH_PRIVATE_BINARY_FILE = makeSymbol("WITH-PRIVATE-BINARY-FILE");
    SubLSymbol WITH_PRIVATE_TEXT_FILE = makeSymbol("WITH-PRIVATE-TEXT-FILE");
    SubLSymbol WITH_TCP_CONNECTION = makeSymbol("WITH-TCP-CONNECTION");
    SubLSymbol WITH_TEXT_FILE = makeSymbol("WITH-TEXT-FILE");
    SubLSymbol WITH_TIMEOUT = makeSymbol("WITH-TIMEOUT");
    SubLSymbol WORD = makeSymbol("WORD");
    SubLSymbol WORDFORM = makeSymbol("WORDFORM");
    SubLSymbol WORD_LISTS = makeSymbol("WORD-LISTS");
    SubLSymbol WORD_POS_PRED = makeSymbol("WORD-POS-PRED");
    SubLSymbol WORDS = makeSymbol("WORDS");
    SubLSymbol WORD_STRING = makeSymbol("WORD-STRING");
    SubLSymbol WORD_TREE_P = makeSymbol("WORD-TREE-P");
    SubLSymbol WORD_TYPE = makeSymbol("WORD-TYPE");
    SubLSymbol WORD_UNIT = makeSymbol("WORD-UNIT");
    SubLSymbol WORKINGq = makeSymbol("WORKING?");
    SubLSymbol WORLD_STATE = makeSymbol("WORLD-STATE");
    SubLSymbol WRITE_CHAR = makeSymbol("WRITE-CHAR");
    SubLSymbol WRITE_LINE = makeSymbol("WRITE-LINE");
    SubLSymbol WRITE_STRING = makeSymbol("WRITE-STRING");
    SubLSymbol WRITE_TO_STRING = makeSymbol("WRITE-TO-STRING");
    SubLSymbol qWU = makeSymbol("?WU");
    SubLSymbol WU = makeSymbol("WU");
    SubLSymbol qX = makeSymbol("?X");
    SubLSymbol X = makeSymbol("X");
    SubLSymbol XML = makeSymbol("XML");
    SubLSymbol XML_PRINT = makeSymbol("XML-PRINT");
    SubLSymbol $XML_STREAM$ = makeSymbol("*XML-STREAM*");
    SubLSymbol XML_TAG = makeSymbol("XML-TAG");
    SubLSymbol XML_WRITER = makeSymbol("XML-WRITER");
    SubLSymbol qY = makeSymbol("?Y");
    SubLSymbol Y = makeSymbol("Y");
    SubLSymbol YEAR = makeSymbol("YEAR");
    SubLSymbol YIELD = makeSymbol("YIELD");
    SubLSymbol qZ = makeSymbol("?Z");
    SubLSymbol ZEROP = makeSymbol("ZEROP");
}
